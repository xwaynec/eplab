AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/05/09 23:31:27 PAGE     1


MACRO ASSEMBLER AX51 V3.06a
OBJECT MODULE PLACED IN .\eco_page.obj
ASSEMBLER INVOKED BY: C:\Keil\C51\BIN\AX51.exe .\eco_page.src EP DEBUG SYMBOLS OJ(.\eco_page.obj) PR(.\eco_page.ls1) 

LOC    OBJ             LINE     SOURCE

                          1     ; ./eco_page.src generated from: .\eco_page.c
                          2     ; COMPILER INVOKED BY:
                          3     ;        C:\Keil\C51\BIN\C51.exe .\eco_page.c BROWSE DEBUG CODE LISTINCLUDE SYMBOLS PREP
                               RINT INCDIR(../../Include) SRC(./eco_page.src)
                          4     
                          5     $nomod51 
                          6     
                          7     NAME    ECO_PAGE
                          8     
 00A0.7                   9     PWR_UP  BIT     0A0H.7
 0080                    10     P0      DATA    080H
 0090                    11     P1      DATA    090H
 00D0.6                  12     AC      BIT     0D0H.6
 0080.5                  13     T0      BIT     080H.5
 00B3                    14     SPI_CTRL        DATA    0B3H
 0080.6                  15     T1      BIT     080H.6
 00A8.7                  16     EA      BIT     0A8H.7
 0090.0                  17     T2      BIT     090H.0
 00A0.6                  18     CE      BIT     0A0H.6
 00BE                    19     DEV_OFFSET      DATA    0BEH
 00A0.1                  20     CLK1    BIT     0A0H.1
 0090.2                  21     DIN0    BIT     090H.2
 00A0.5                  22     CLK2    BIT     0A0H.5
 0090.0                  23     DIO0    BIT     090H.0
 0083                    24     DPH0    DATA    083H
 0090.1                  25     DIO1    BIT     090H.1
 00A8                    26     IE      DATA    0A8H
 0085                    27     DPH1    DATA    085H
 0080.0                  28     DIO2    BIT     080H.0
 0080.1                  29     DIO3    BIT     080H.1
 0080.0                  30     P0_0    BIT     080H.0
 0090.0                  31     P1_0    BIT     090H.0
 0080.2                  32     DIO4    BIT     080H.2
 0080.1                  33     P0_1    BIT     080H.1
 0082                    34     DPL0    DATA    082H
 0090.1                  35     P1_1    BIT     090H.1
 0080.3                  36     DIO5    BIT     080H.3
 0080.2                  37     P0_2    BIT     080H.2
 0084                    38     DPL1    DATA    084H
 0090.2                  39     P1_2    BIT     090H.2
 0080.4                  40     DIO6    BIT     080H.4
 0080.3                  41     P0_3    BIT     080H.3
 0080.5                  42     DIO7    BIT     080H.5
 0080.4                  43     P0_4    BIT     080H.4
 00A4                    44     ADCSTATIC       DATA    0A4H
 0080.6                  45     DIO8    BIT     080H.6
 0080.5                  46     P0_5    BIT     080H.5
 00C8.6                  47     EXF2    BIT     0C8H.6
 00A0.3                  48     CS      BIT     0A0H.3
 0080.7                  49     DIO9    BIT     080H.7
 0080.6                  50     P0_6    BIT     080H.6
 0080.7                  51     P0_7    BIT     080H.7
 00A8.4                  52     ES      BIT     0A8H.4
 00B8                    53     IP      DATA    0B8H
 00A0.0                  54     DATA?   BIT     0A0H.0
 0098.0                  55     RI      BIT     098H.0
 00D0.7                  56     CY      BIT     0D0H.7
 0098.1                  57     TI      BIT     098H.1
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/05/09 23:31:27 PAGE     2

 00BC                    58     T1_1V2  DATA    0BCH
 008F                    59     SPC_FNC DATA    08FH
 00BD                    60     T2_1V2  DATA    0BDH
 00CB                    61     RCAP2H  DATA    0CBH
 00B8.4                  62     PS      BIT     0B8H.4
 0081                    63     SP      DATA    081H
 00D0.2                  64     OV      BIT     0D0H.2
 00B6                    65     CK_CTRL DATA    0B6H
 00CA                    66     RCAP2L  DATA    0CAH
 00B5                    67     TICK_DV DATA    0B5H
 00B1                    68     RSTREAS DATA    0B1H
 00C8.1                  69     C_T2    BIT     0C8H.1
 00E8.4                  70     EWDI    BIT     0E8H.4
 00A1                    71     ADCCON  DATA    0A1H
 00C8.5                  72     RCLK    BIT     0C8H.5
 00A2                    73     ADCDATAH        DATA    0A2H
 0091                    74     EXIF    DATA    091H
 00C8.4                  75     TCLK    BIT     0C8H.4
 00A0.6                  76     DR2_CE  BIT     0A0H.6
 00A3                    77     ADCDATAL        DATA    0A3H
 0099                    78     SBUF    DATA    099H
 0087                    79     PCON    DATA    087H
 0098                    80     SCON    DATA    098H
 00F8.4                  81     PWDI    BIT     0F8H.4
 0089                    82     TMOD    DATA    089H
 0088                    83     TCON    DATA    088H
 00D8.3                  84     WDTI    BIT     0D8H.3
 00AA                    85     PWMDUTY DATA    0AAH
 0088.1                  86     IE0     BIT     088H.1
 0088.3                  87     IE1     BIT     088H.3
 0094                    88     P0_DIR  DATA    094H
 00F0                    89     B       DATA    0F0H
 0096                    90     P1_DIR  DATA    096H
 0095                    91     P0_ALT  DATA    095H
 0097                    92     P1_ALT  DATA    097H
 00C8.0                  93     CP_RL2  BIT     0C8H.0
 00A0.2                  94     DR1     BIT     0A0H.2
 00E0                    95     ACC     DATA    0E0H
 00A0.6                  96     DR2     BIT     0A0H.6
 00B7                    97     TEST_MODE       DATA    0B7H
 00B4                    98     SPICLK  DATA    0B4H
 00C8.1                  99     CT2     BIT     0C8H.1
 00A8.1                 100     ET0     BIT     0A8H.1
 00A8.3                 101     ET1     BIT     0A8H.3
 0088.5                 102     TF0     BIT     088H.5
 0080.3                 103     INT0_N  BIT     080H.3
 00A8.5                 104     ET2     BIT     0A8H.5
 0088.7                 105     TF1     BIT     088H.7
 0080.4                 106     INT1_N  BIT     080H.4
 00C8.7                 107     TF2     BIT     0C8H.7
 0098.2                 108     RB8     BIT     098H.2
 008C                   109     TH0     DATA    08CH
 00A8.0                 110     EX0     BIT     0A8H.0
 0088.0                 111     IT0     BIT     088H.0
 008D                   112     TH1     DATA    08DH
 00A8.2                 113     EX1     BIT     0A8H.2
 0098.3                 114     TB8     BIT     098H.3
 0088.2                 115     IT1     BIT     088H.2
 00CD                   116     TH2     DATA    0CDH
 00AD                   117     REGX_CTRL       DATA    0ADH
 00E8.0                 118     EX2     BIT     0E8H.0
 00D0.0                 119     P       BIT     0D0H.0
 00E8.1                 120     EX3     BIT     0E8H.1
 0098.7                 121     SM0     BIT     098H.7
 008A                   122     TL0     DATA    08AH
 00E8.2                 123     EX4     BIT     0E8H.2
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/05/09 23:31:27 PAGE     3

 0098.6                 124     SM1     BIT     098H.6
 008B                   125     TL1     DATA    08BH
 00E8.3                 126     EX5     BIT     0E8H.3
 0098.5                 127     SM2     BIT     098H.5
 00CC                   128     TL2     DATA    0CCH
 00E8                   129     EIE     DATA    0E8H
 00B8.1                 130     PT0     BIT     0B8H.1
 00D0.3                 131     RS0     BIT     0D0H.3
 00B8.3                 132     PT1     BIT     0B8H.3
 00D0.4                 133     RS1     BIT     0D0H.4
 00B8.5                 134     PT2     BIT     0B8H.5
 0088.4                 135     TR0     BIT     088H.4
 00A9                   136     PWMCON  DATA    0A9H
 0088.6                 137     TR1     BIT     088H.6
 00C8.2                 138     TR2     BIT     0C8H.2
 00B8.0                 139     PX0     BIT     0B8H.0
 00B8.2                 140     PX1     BIT     0B8H.2
 00F8.0                 141     PX2     BIT     0F8H.0
 00F8.1                 142     PX3     BIT     0F8H.1
 00F8.2                 143     PX4     BIT     0F8H.2
 0083                   144     DPH     DATA    083H
 00F8.3                 145     PX5     BIT     0F8H.3
 00F8                   146     EIP     DATA    0F8H
 0082                   147     DPL     DATA    082H
 00C8.3                 148     EXEN2   BIT     0C8H.3
 00C8.0                 149     CPRL2   BIT     0C8H.0
 0098.4                 150     REN     BIT     098H.4
 00C8                   151     T2CON   DATA    0C8H
 0086                   152     DPS     DATA    086H
 00B2                   153     SPI_DATA        DATA    0B2H
 0092                   154     MPAGE   DATA    092H
 0080.1                 155     RXD     BIT     080H.1
 00A0.4                 156     DOUT2   BIT     0A0H.4
 00D8                   157     EICON   DATA    0D8H
 008E                   158     CKCON   DATA    08EH
 0080.2                 159     TXD     BIT     080H.2
 00A0                   160     RADIO   DATA    0A0H
 0080.7                 161     PWM     BIT     080H.7
 00D0.5                 162     F0      BIT     0D0H.5
 00D0.1                 163     F1      BIT     0D0H.1
 00AC                   164     REGX_LSB        DATA    0ACH
 00D0                   165     PSW     DATA    0D0H
 00AB                   166     REGX_MSB        DATA    0ABH
------                  167     ?PR?eco_page_init?ECO_PAGE               SEGMENT CODE 
------                  168     ?PR?eco_page_manager?ECO_PAGE            SEGMENT CODE 
------                  169     ?DT?eco_page_manager?ECO_PAGE            SEGMENT DATA OVERLAYABLE 
------                  170     ?DT?ECO_PAGE         SEGMENT DATA 
------                  171     ?ID?ECO_PAGE         SEGMENT IDATA 
                        172             EXTRN   CODE (_eeprom_read)
                        173             EXTRN   CODE (eeprom_init)
                        174             PUBLIC  ECO_PAGE_TABLE_INDEX
                        175             PUBLIC  ECO_PAGE_REGISTER7
                        176             PUBLIC  ECO_PAGE_REGISTER6
                        177             PUBLIC  ECO_PAGE_REGISTER5
                        178             PUBLIC  ECO_PAGE_REGISTER4
                        179             PUBLIC  ECO_PAGE_ADDR
                        180             PUBLIC  ECO_PAGE_REGISTER3
                        181             PUBLIC  ECO_PAGE_REGISTER2
                        182             PUBLIC  ECO_PAGE_REGISTER1
                        183             PUBLIC  ECO_PAGE_PREV_VID
                        184             PUBLIC  ECO_PAGE_SPI_CONN
                        185             PUBLIC  ECO_PAGE_PREV_PID
                        186             PUBLIC  ECO_PAGE_TABLE
                        187             PUBLIC  eco_page_manager
                        188             PUBLIC  eco_page_init
                        189     
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/05/09 23:31:27 PAGE     4

------                  190             RSEG  ?DT?eco_page_manager?ECO_PAGE
000000                  191     ?eco_page_manager?BYTE:
000002                  192             ORG  2
000002                  193             seg?140:   DS   2
000004                  194             ORG  4
000004                  195               j?141:   DS   2
000000                  196             ORG  0
000000                  197               i?142:   DS   2
                        198     
------                  199             RSEG  ?DT?ECO_PAGE
000000                  200      ECO_PAGE_TABLE:   DS   10
00000A                  201     ECO_PAGE_PREV_PID:   DS   1
00000B                  202     ECO_PAGE_SPI_CONN:   DS   1
00000C                  203     ECO_PAGE_PREV_VID:   DS   1
00000D                  204       ECO_PAGE_ADDR:   DS   2
00000F                  205     ECO_PAGE_TABLE_INDEX:   DS   2
                        206     
------                  207             RSEG  ?ID?ECO_PAGE
000000                  208     ECO_PAGE_REGISTER1:   DS   1
000001                  209     ECO_PAGE_REGISTER2:   DS   1
000002                  210     ECO_PAGE_REGISTER3:   DS   1
000003                  211     ECO_PAGE_REGISTER4:   DS   1
000004                  212     ECO_PAGE_REGISTER5:   DS   1
000005                  213     ECO_PAGE_REGISTER6:   DS   1
000006                  214     ECO_PAGE_REGISTER7:   DS   1
                        215     ; /*
                        216     ;  * Author(s): Wei-Han Chen (Embedded Platform Lab, NTHU)
                        217     ;  * Copyright (c) 2009 National Tsing Hua University (NTHU) 
                        218     ;  * Permission to copy, modify, and distribute this program is granted 
                        219     ;  * for noncommercial purposes, provided the author(s) and copyright
                        220     ;  * notice are retained. All other uses require explicit written
                        221     ;  * permission from NTHU. 
                        222     ;  *
                        223     ;  * Eco Paging Library 
                        224     ;  *
                        225     ;  * Wei-Han Chen <xwaynec@gmail.com> 
                        226     ;  * 2009/2/13
                        227     ;  */
                        228     ; 
                        229     ; 
                        230     ; #include "eco_page.h"
                        231     ; #include "eeprom/eeprom.h"
                        232     ; 
                        233     ; unsigned char ECO_PAGE_TABLE[10];
                        234     ; unsigned int ECO_PAGE_TABLE_INDEX;
                        235     ; 
                        236     ; unsigned int ECO_PAGE_ADDR;
                        237     ; unsigned char ECO_PAGE_SPI_CONN;
                        238     ; 
                        239     ; //Eco page virtual address id
                        240     ; unsigned char ECO_PAGE_PREV_VID;
                        241     ; 
                        242     ; //Eco page physical address id 
                        243     ; unsigned char ECO_PAGE_PREV_PID;
                        244     ; 
                        245     ; //unsigned char ECO_PAGE_REGISTER[7];
                        246     ; 
                        247     ; unsigned char idata ECO_PAGE_REGISTER1;
                        248     ; unsigned char idata ECO_PAGE_REGISTER2;
                        249     ; unsigned char idata ECO_PAGE_REGISTER3;
                        250     ; unsigned char idata ECO_PAGE_REGISTER4;
                        251     ; unsigned char idata ECO_PAGE_REGISTER5;
                        252     ; unsigned char idata ECO_PAGE_REGISTER6;
                        253     ; unsigned char idata ECO_PAGE_REGISTER7;
                        254     ; 
                        255     ; 
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/05/09 23:31:27 PAGE     5

                        256     ; void eco_page_init()
                        257     
------                  258             RSEG  ?PR?eco_page_init?ECO_PAGE
000000                  259     eco_page_init:
                        260                             ; SOURCE LINE # 42
                        261     ; {
                        262                             ; SOURCE LINE # 43
                        263     ;       ECO_PAGE_TABLE_INDEX = 5;
                        264                             ; SOURCE LINE # 44
000000 750000     F     265             MOV     ECO_PAGE_TABLE_INDEX,#00H
000003 750005     F     266             MOV     ECO_PAGE_TABLE_INDEX+01H,#05H
                        267     ;       //ECO_PAGE_TABLE_INDEX++;       
                        268     ;       //ECO_PAGE_REGISTER5 = 0xA7;
                        269     ;       //ECO_PAGE_REGISTER3 = ECO_PAGE_TABLE_INDEX;
                        270     ;       ECO_PAGE_ADDR = 0;
                        271                             ; SOURCE LINE # 48
000006 E4               272             CLR     A
000007 F500       F     273             MOV     ECO_PAGE_ADDR,A
000009 F500       F     274             MOV     ECO_PAGE_ADDR+01H,A
                        275     ;       ECO_PAGE_PREV_VID = 0;
                        276                             ; SOURCE LINE # 49
00000B F500       F     277             MOV     ECO_PAGE_PREV_VID,A
                        278     ;       ECO_PAGE_PREV_PID = 0;
                        279                             ; SOURCE LINE # 50
00000D F500       F     280             MOV     ECO_PAGE_PREV_PID,A
                        281     ; 
                        282     ;       ECO_PAGE_TABLE[0] = -1; 
                        283                             ; SOURCE LINE # 52
00000F 7500FF     F     284             MOV     ECO_PAGE_TABLE,#0FFH
                        285     ;       ECO_PAGE_TABLE[1] = -1; 
                        286                             ; SOURCE LINE # 53
000012 7500FF     F     287             MOV     ECO_PAGE_TABLE+01H,#0FFH
                        288     ;       ECO_PAGE_TABLE[2] = 8;
                        289                             ; SOURCE LINE # 54
000015 750008     F     290             MOV     ECO_PAGE_TABLE+02H,#08H
                        291     ;       ECO_PAGE_TABLE[3] = -1; 
                        292                             ; SOURCE LINE # 55
000018 7500FF     F     293             MOV     ECO_PAGE_TABLE+03H,#0FFH
                        294     ;       ECO_PAGE_TABLE[4] = -1; 
                        295                             ; SOURCE LINE # 56
00001B 7500FF     F     296             MOV     ECO_PAGE_TABLE+04H,#0FFH
                        297     ;       ECO_PAGE_TABLE[5] = -1; 
                        298                             ; SOURCE LINE # 57
00001E 7500FF     F     299             MOV     ECO_PAGE_TABLE+05H,#0FFH
                        300     ;       ECO_PAGE_TABLE[6] = -1; 
                        301                             ; SOURCE LINE # 58
000021 7500FF     F     302             MOV     ECO_PAGE_TABLE+06H,#0FFH
                        303     ;       ECO_PAGE_TABLE[7] = -1; 
                        304                             ; SOURCE LINE # 59
000024 7500FF     F     305             MOV     ECO_PAGE_TABLE+07H,#0FFH
                        306     ;       ECO_PAGE_TABLE[8] = -1; 
                        307                             ; SOURCE LINE # 60
000027 7500FF     F     308             MOV     ECO_PAGE_TABLE+08H,#0FFH
                        309     ;       ECO_PAGE_TABLE[9] = -1; 
                        310                             ; SOURCE LINE # 61
00002A 7500FF     F     311             MOV     ECO_PAGE_TABLE+09H,#0FFH
                        312     ; }
                        313                             ; SOURCE LINE # 62
00002D 22               314             RET     
                        315     ; END OF eco_page_init
                        316     
                        317     ; 
                        318     ; //LRU page replacement
                        319     ; void eco_page_manager()
                        320     
------                  321             RSEG  ?PR?eco_page_manager?ECO_PAGE
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/05/09 23:31:27 PAGE     6

000000                  322     eco_page_manager:
                        323             USING   0
                        324                             ; SOURCE LINE # 65
                        325     ; {
                        326                             ; SOURCE LINE # 66
                        327     ;       unsigned int i;
                        328     ;       unsigned int page_index = -1;
                        329                             ; SOURCE LINE # 68
                        330     ;---- Variable 'page_index?143' assigned to Register 'R4/R5' ----
000000 74FF             331             MOV     A,#0FFH
000002 FD               332             MOV     R5,A
000003 FC               333             MOV     R4,A
                        334     ; 
                        335     ;       //check page table
                        336     ;       for(i=0;i<10;i++)
                        337                             ; SOURCE LINE # 71
000004 E4               338             CLR     A
000005 F500       F     339             MOV     i?142,A
000007 F500       F     340             MOV     i?142+01H,A
000009                  341     ?C0002:
                        342     ;       {
                        343                             ; SOURCE LINE # 72
                        344     ;               if(((ECO_PAGE_ADDR >> 8) & 0x7F) == (ECO_PAGE_TABLE[i] & 0x7F))
                        345                             ; SOURCE LINE # 73
000009 7400       F     346             MOV     A,#LOW (ECO_PAGE_TABLE)
00000B 2500       F     347             ADD     A,i?142+01H
00000D F8               348             MOV     R0,A
00000E E6               349             MOV     A,@R0
00000F F9               350             MOV     R1,A
000010 547F             351             ANL     A,#07FH
000012 FB               352             MOV     R3,A
000013 E500       F     353             MOV     A,ECO_PAGE_ADDR
000015 547F             354             ANL     A,#07FH
000017 B5030F           355             CJNE    A,AR3,?C0004
                        356     ;               {
                        357                             ; SOURCE LINE # 74
                        358     ;                       page_index = i;
                        359                             ; SOURCE LINE # 75
00001A AC00       F     360             MOV     R4,i?142
00001C AD00       F     361             MOV     R5,i?142+01H
                        362     ;                       //set LRU bit is 1
                        363     ;                       ECO_PAGE_TABLE[i] = ECO_PAGE_TABLE[i] | 0x80;
                        364                             ; SOURCE LINE # 77
00001E 7400       F     365             MOV     A,#LOW (ECO_PAGE_TABLE)
000020 2500       F     366             ADD     A,i?142+01H
000022 F8               367             MOV     R0,A
000023 E9               368             MOV     A,R1
000024 4480             369             ORL     A,#080H
000026 F6               370             MOV     @R0,A
                        371     ;                       break;
                        372                             ; SOURCE LINE # 78
000027 800E             373             SJMP    ?C0003
                        374     ;               }
                        375                             ; SOURCE LINE # 79
                        376     ;       }
                        377                             ; SOURCE LINE # 80
000029                  378     ?C0004:
000029 0500       F     379             INC     i?142+01H
00002B E500       F     380             MOV     A,i?142+01H
00002D 7002             381             JNZ     ?C0018
00002F 0500       F     382             INC     i?142
000031                  383     ?C0018:
000031 640A             384             XRL     A,#0AH
000033 4500       F     385             ORL     A,i?142
000035 70D2             386             JNZ     ?C0002
000037                  387     ?C0003:
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/05/09 23:31:27 PAGE     7

                        388     ; 
                        389     ;       if(page_index != -1)
                        390                             ; SOURCE LINE # 82
000037 ED               391             MOV     A,R5
000038 F4               392             CPL     A
000039 7002             393             JNZ     ?C0019
00003B EC               394             MOV     A,R4
00003C F4               395             CPL     A
00003D                  396     ?C0019:
00003D 6018             397             JZ      ?C0006
                        398     ;       {
                        399                             ; SOURCE LINE # 83
                        400     ;               //store function physical addres id 
                        401     ;               ECO_PAGE_PREV_PID = ECO_PAGE_ADDR >> 8;
                        402                             ; SOURCE LINE # 85
00003F E500       F     403             MOV     A,ECO_PAGE_ADDR
000041 F500       F     404             MOV     ECO_PAGE_PREV_PID,A
                        405     ;       
                        406     ;               //memory page is in ram
                        407     ;               ECO_PAGE_ADDR = ((page_index + ECO_PAGE_ADDR_OFFSET) << 8) + (ECO_PAGE_A
                               DDR & 0x00FF);
                        408                             ; SOURCE LINE # 88
000043 ED               409             MOV     A,R5
000044 2406             410             ADD     A,#06H
000046 FF               411             MOV     R7,A
000047 EF               412             MOV     A,R7
000048 FE               413             MOV     R6,A
000049 7C00             414             MOV     R4,#00H
00004B E4               415             CLR     A
00004C 2500       F     416             ADD     A,ECO_PAGE_ADDR+01H
00004E F500       F     417             MOV     ECO_PAGE_ADDR+01H,A
000050 EC               418             MOV     A,R4
000051 3E               419             ADDC    A,R6
000052 F500       F     420             MOV     ECO_PAGE_ADDR,A
                        421     ; 
                        422     ;               //cache the virtual address id
                        423     ;               ECO_PAGE_PREV_VID = ECO_PAGE_ADDR >> 8;
                        424                             ; SOURCE LINE # 91
000054 F500       F     425             MOV     ECO_PAGE_PREV_VID,A
                        426     ; 
                        427     ;               #pragma asm
                        428     ;               //eco_page_function_call
                        429               
                        430     ;               //MOV     DPH,ECO_PAGE_ADDR
                        431               
                        432     ;               //MOV     DPL,ECO_PAGE_ADDR+01H
                        433               
                        434     ;               //LCALL ?C?ICALL2
                        435               
                        436     ;               #pragma endasm
                        437     ;                               
                        438     ;       }       
                        439                             ; SOURCE LINE # 100
000056 22               440             RET     
000057                  441     ?C0006:
                        442     ;       else
                        443     ;       {
                        444                             ; SOURCE LINE # 102
                        445     ;               //printf("page fault");
                        446     ; 
                        447     ;               for(i=ECO_PAGE_TABLE_INDEX+1; ;(i++)%10)
                        448                             ; SOURCE LINE # 105
000057 E500       F     449             MOV     A,ECO_PAGE_TABLE_INDEX+01H
000059 2401             450             ADD     A,#01H
00005B F500       F     451             MOV     i?142+01H,A
00005D E4               452             CLR     A
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/05/09 23:31:27 PAGE     8

00005E 3500       F     453             ADDC    A,ECO_PAGE_TABLE_INDEX
000060 F500       F     454             MOV     i?142,A
000062                  455     ?C0008:
                        456     ;               {
                        457                             ; SOURCE LINE # 106
                        458     ;                       if((ECO_PAGE_TABLE[i] & 0x80) == 0x80)
                        459                             ; SOURCE LINE # 107
000062 7400       F     460             MOV     A,#LOW (ECO_PAGE_TABLE)
000064 2500       F     461             ADD     A,i?142+01H
000066 F8               462             MOV     R0,A
000067 E6               463             MOV     A,@R0
000068 30E722           464             JNB     ACC.7,?C0011
                        465     ;                       {
                        466                             ; SOURCE LINE # 108
                        467     ;                               //lru bit is 1
                        468     ;                               ECO_PAGE_TABLE[i] = ECO_PAGE_TABLE[i] & 0x7F;
                        469                             ; SOURCE LINE # 110
00006B 547F             470             ANL     A,#07FH
00006D F6               471             MOV     @R0,A
                        472     ;                               
                        473     ;                               //store function physical addres id 
                        474     ;                               ECO_PAGE_PREV_PID = ECO_PAGE_ADDR >> 8;
                        475                             ; SOURCE LINE # 113
00006E E500       F     476             MOV     A,ECO_PAGE_ADDR
000070 F500       F     477             MOV     ECO_PAGE_PREV_PID,A
                        478     ;       
                        479     ;                               //memory page is in ram
                        480     ;                               ECO_PAGE_ADDR = ((i + ECO_PAGE_ADDR_OFFSET) << 8) + (ECO
                               _PAGE_ADDR & 0x00FF);
                        481                             ; SOURCE LINE # 116
000072 E500       F     482             MOV     A,i?142+01H
000074 2406             483             ADD     A,#06H
000076 FF               484             MOV     R7,A
000077 EF               485             MOV     A,R7
000078 FE               486             MOV     R6,A
000079 7C00             487             MOV     R4,#00H
00007B E4               488             CLR     A
00007C 2500       F     489             ADD     A,ECO_PAGE_ADDR+01H
00007E F500       F     490             MOV     ECO_PAGE_ADDR+01H,A
000080 EC               491             MOV     A,R4
000081 3E               492             ADDC    A,R6
000082 F500       F     493             MOV     ECO_PAGE_ADDR,A
                        494     ; 
                        495     ;                               //cache the virtual address id
                        496     ;                               ECO_PAGE_PREV_VID = ECO_PAGE_ADDR >> 8;
                        497                             ; SOURCE LINE # 119
000084 F500       F     498             MOV     ECO_PAGE_PREV_VID,A
                        499     ; 
                        500     ;                               ECO_PAGE_TABLE_INDEX = i;
                        501                             ; SOURCE LINE # 121
000086 850000     F     502             MOV     ECO_PAGE_TABLE_INDEX,i?142
000089 850000     F     503             MOV     ECO_PAGE_TABLE_INDEX+01H,i?142+01H
                        504     ; 
                        505     ;                               #pragma asm
                        506     ;                               //eco_page_function_call
                        507               
                        508     ;                               //MOV     DPH,ECO_PAGE_ADDR
                        509               
                        510     ;                               //MOV     DPL,ECO_PAGE_ADDR+01H
                        511               
                        512     ;                               //LCALL ?C?ICALL2
                        513               
                        514     ;                               #pragma endasm
                        515     ; 
                        516     ;                               break;
                        517                             ; SOURCE LINE # 130
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/05/09 23:31:27 PAGE     9

00008C 22               518             RET     
                        519     ;                               
                        520     ;                       }
                        521                             ; SOURCE LINE # 132
00008D                  522     ?C0011:
                        523     ;                       else
                        524     ;                       {
                        525                             ; SOURCE LINE # 134
                        526     ;                               unsigned char xdata *seg = (unsigned char xdata *)((i + 
                               ECO_PAGE_ADDR_OFFSET)<<8);
                        527                             ; SOURCE LINE # 135
00008D E500       F     528             MOV     A,i?142+01H
00008F 2406             529             ADD     A,#06H
000091 FF               530             MOV     R7,A
000092 E4               531             CLR     A
000093 3500       F     532             ADDC    A,i?142
000095 EF               533             MOV     A,R7
000096 F500       F     534             MOV     seg?140,A
000098 750000     F     535             MOV     seg?140+01H,#00H
                        536     ;                               unsigned int j;
                        537     ;                               
                        538     ;                               //memory page is in ram
                        539     ;                               eeprom_init();
                        540                             ; SOURCE LINE # 139
00009B 120000     E     541             LCALL   eeprom_init
                        542     ; 
                        543     ;                               //mov code from eeprom to external ram
                        544     ;                               for(j=0;j<256;j++)
                        545                             ; SOURCE LINE # 142
00009E E4               546             CLR     A
00009F F500       F     547             MOV     j?141,A
0000A1 F500       F     548             MOV     j?141+01H,A
0000A3                  549     ?C0013:
                        550     ;                               {
                        551                             ; SOURCE LINE # 143
                        552     ;                                       *(seg+j) = eeprom_read(ECO_ADDR_SHIFT(ECO_PAGE_A
                               DDR) +j);
                        553                             ; SOURCE LINE # 144
0000A3 E500       F     554             MOV     A,ECO_PAGE_ADDR+01H
0000A5 2403             555             ADD     A,#03H
0000A7 CF               556             XCH     A,R7
0000A8 E4               557             CLR     A
0000A9 3500       F     558             ADDC    A,ECO_PAGE_ADDR
0000AB CF               559             XCH     A,R7
0000AC 2500       F     560             ADD     A,j?141+01H
0000AE CF               561             XCH     A,R7
0000AF 3500       F     562             ADDC    A,j?141
0000B1 FE               563             MOV     R6,A
0000B2 120000     E     564             LCALL   _eeprom_read
0000B5 E500       F     565             MOV     A,seg?140+01H
0000B7 2500       F     566             ADD     A,j?141+01H
0000B9 F582             567             MOV     DPL,A
0000BB E500       F     568             MOV     A,seg?140
0000BD 3500       F     569             ADDC    A,j?141
0000BF F583             570             MOV     DPH,A
0000C1 EF               571             MOV     A,R7
0000C2 F0               572             MOVX    @DPTR,A
                        573     ;                               }
                        574                             ; SOURCE LINE # 145
0000C3 0500       F     575             INC     j?141+01H
0000C5 E500       F     576             MOV     A,j?141+01H
0000C7 7002             577             JNZ     ?C0020
0000C9 0500       F     578             INC     j?141
0000CB                  579     ?C0020:
0000CB C3               580             CLR     C
0000CC E500       F     581             MOV     A,j?141
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/05/09 23:31:27 PAGE    10

0000CE 9401             582             SUBB    A,#01H
0000D0 40D1             583             JC      ?C0013
0000D2                  584     ?C0014:
                        585     ;                               
                        586     ;                               //update page table to connect this physical address id 
                               with virtual address id 
                        587     ;                               ECO_PAGE_TABLE[i] = ECO_PAGE_ADDR >> 8;
                        588                             ; SOURCE LINE # 148
0000D2 E500       F     589             MOV     A,ECO_PAGE_ADDR
0000D4 FF               590             MOV     R7,A
0000D5 AE00       F     591             MOV     R6,i?142+01H
0000D7 7400       F     592             MOV     A,#LOW (ECO_PAGE_TABLE)
0000D9 2E               593             ADD     A,R6
0000DA F8               594             MOV     R0,A
0000DB A607             595             MOV     @R0,AR7
                        596     ; 
                        597     ;                               //store physical address id
                        598     ;                               ECO_PAGE_PREV_PID = ECO_PAGE_TABLE[i];
                        599                             ; SOURCE LINE # 151
0000DD 7400       F     600             MOV     A,#LOW (ECO_PAGE_TABLE)
0000DF 2E               601             ADD     A,R6
0000E0 F8               602             MOV     R0,A
0000E1 E6               603             MOV     A,@R0
0000E2 F500       F     604             MOV     ECO_PAGE_PREV_PID,A
                        605     ; 
                        606     ;                               //update page address e.g.  (page_id<<8) + page_offset
                        607     ;                               ECO_PAGE_ADDR = ((i + ECO_PAGE_ADDR_OFFSET) << 8) + (ECO
                               _PAGE_ADDR &0x00FF);
                        608                             ; SOURCE LINE # 154
0000E4 E500       F     609             MOV     A,i?142+01H
0000E6 2406             610             ADD     A,#06H
0000E8 FF               611             MOV     R7,A
0000E9 EF               612             MOV     A,R7
0000EA FE               613             MOV     R6,A
0000EB 7C00             614             MOV     R4,#00H
0000ED E4               615             CLR     A
0000EE 2500       F     616             ADD     A,ECO_PAGE_ADDR+01H
0000F0 F500       F     617             MOV     ECO_PAGE_ADDR+01H,A
0000F2 EC               618             MOV     A,R4
0000F3 3E               619             ADDC    A,R6
0000F4 F500       F     620             MOV     ECO_PAGE_ADDR,A
                        621     ; 
                        622     ;                               //store virtual address id 
                        623     ;                               ECO_PAGE_PREV_VID = ECO_PAGE_ADDR >> 8; 
                        624                             ; SOURCE LINE # 157
0000F6 F500       F     625             MOV     ECO_PAGE_PREV_VID,A
                        626     ; 
                        627     ;                               //mov to the next index
                        628     ;                               ECO_PAGE_TABLE_INDEX = i;
                        629                             ; SOURCE LINE # 160
0000F8 850000     F     630             MOV     ECO_PAGE_TABLE_INDEX,i?142
0000FB 850000     F     631             MOV     ECO_PAGE_TABLE_INDEX+01H,i?142+01H
                        632     ; 
                        633     ;                               //jump  to function address
                        634     ;                               #pragma asm
                        635     ;                               //MOV     DPH,ECO_PAGE_ADDR
                        636               
                        637     ;                               //MOV     DPL,ECO_PAGE_ADDR+01H
                        638               
                        639     ;                               //LCALL        ?C?ICALL2               
                        640               
                        641     ;                               #pragma endasm
                        642     ;                               
                        643     ;                               break;
                        644                             ; SOURCE LINE # 169
0000FE 22               645             RET     
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/05/09 23:31:27 PAGE    11

                        646     ; END OF eco_page_manager
                        647     
                        648             END
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/05/09 23:31:27 PAGE    12

SYMBOL TABLE LISTING
------ ----- -------


N A M E                                    T Y P E  V A L U E     ATTRIBUTES

?C0002. . . . . . . . . . . . . . . . .    C  ADDR  0009H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0003. . . . . . . . . . . . . . . . .    C  ADDR  0037H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0004. . . . . . . . . . . . . . . . .    C  ADDR  0029H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0006. . . . . . . . . . . . . . . . .    C  ADDR  0057H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0008. . . . . . . . . . . . . . . . .    C  ADDR  0062H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0011. . . . . . . . . . . . . . . . .    C  ADDR  008DH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0013. . . . . . . . . . . . . . . . .    C  ADDR  00A3H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0014. . . . . . . . . . . . . . . . .    C  ADDR  00D2H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0018. . . . . . . . . . . . . . . . .    C  ADDR  0031H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0019. . . . . . . . . . . . . . . . .    C  ADDR  003DH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0020. . . . . . . . . . . . . . . . .    C  ADDR  00CBH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?DT?ECO_PAGE. . . . . . . . . . . . . .    D  SEG   000011H       REL=UNIT, ALN=BYTE
?DT?ECO_PAGE_MANAGER?ECO_PAGE . . . . .    D  SEG   000006H       REL=UNIT, ALN=BYTE
?ECO_PAGE_MANAGER?BYTE. . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?ECO_PAGE_MANAGER?ECO_PAGE
?ID?ECO_PAGE. . . . . . . . . . . . . .    I  SEG   000007H       REL=UNIT, ALN=BYTE
?PR?ECO_PAGE_INIT?ECO_PAGE. . . . . . .    C  SEG   00002EH       REL=UNIT, ALN=BYTE
?PR?ECO_PAGE_MANAGER?ECO_PAGE . . . . .    C  SEG   0000FFH       REL=UNIT, ALN=BYTE
_EEPROM_READ. . . . . . . . . . . . . .    C  ADDR  -------       EXT
AC. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.6   A   
ACC . . . . . . . . . . . . . . . . . .    D  ADDR  00E0H     A   
ADCCON. . . . . . . . . . . . . . . . .    D  ADDR  00A1H     A   
ADCDATAH. . . . . . . . . . . . . . . .    D  ADDR  00A2H     A   
ADCDATAL. . . . . . . . . . . . . . . .    D  ADDR  00A3H     A   
ADCSTATIC . . . . . . . . . . . . . . .    D  ADDR  00A4H     A   
AR3 . . . . . . . . . . . . . . . . . .    D  ADDR  0003H     A   
AR7 . . . . . . . . . . . . . . . . . .    D  ADDR  0007H     A   
B . . . . . . . . . . . . . . . . . . .    D  ADDR  00F0H     A   
C_T2. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.1   A   
CE. . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.6   A   
CK_CTRL . . . . . . . . . . . . . . . .    D  ADDR  00B6H     A   
CKCON . . . . . . . . . . . . . . . . .    D  ADDR  008EH     A   
CLK1. . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.1   A   
CLK2. . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.5   A   
CP_RL2. . . . . . . . . . . . . . . . .    B  ADDR  00C8H.0   A   
CPRL2 . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.0   A   
CS. . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.3   A   
CT2 . . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.1   A   
CY. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.7   A   
DATA? . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.0   A   
DEV_OFFSET. . . . . . . . . . . . . . .    D  ADDR  00BEH     A   
DIN0. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.2   A   
DIO0. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.0   A   
DIO1. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.1   A   
DIO2. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.0   A   
DIO3. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.1   A   
DIO4. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.2   A   
DIO5. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.3   A   
DIO6. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.4   A   
DIO7. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.5   A   
DIO8. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.6   A   
DIO9. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.7   A   
DOUT2 . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.4   A   
DPH . . . . . . . . . . . . . . . . . .    D  ADDR  0083H     A   
DPH0. . . . . . . . . . . . . . . . . .    D  ADDR  0083H     A   
DPH1. . . . . . . . . . . . . . . . . .    D  ADDR  0085H     A   
DPL . . . . . . . . . . . . . . . . . .    D  ADDR  0082H     A   
DPL0. . . . . . . . . . . . . . . . . .    D  ADDR  0082H     A   
DPL1. . . . . . . . . . . . . . . . . .    D  ADDR  0084H     A   
DPS . . . . . . . . . . . . . . . . . .    D  ADDR  0086H     A   
DR1 . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.2   A   
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/05/09 23:31:27 PAGE    13

DR2 . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.6   A   
DR2_CE. . . . . . . . . . . . . . . . .    B  ADDR  00A0H.6   A   
EA. . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.7   A   
ECO_PAGE. . . . . . . . . . . . . . . .    -- ----  -------       
ECO_PAGE_ADDR . . . . . . . . . . . . .    D  ADDR  000DH     R   SEG=?DT?ECO_PAGE
ECO_PAGE_INIT . . . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?ECO_PAGE_INIT?ECO_PAGE
ECO_PAGE_MANAGER. . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
ECO_PAGE_PREV_PID . . . . . . . . . . .    D  ADDR  000AH     R   SEG=?DT?ECO_PAGE
ECO_PAGE_PREV_VID . . . . . . . . . . .    D  ADDR  000CH     R   SEG=?DT?ECO_PAGE
ECO_PAGE_REGISTER1. . . . . . . . . . .    I  ADDR  0000H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER2. . . . . . . . . . .    I  ADDR  0001H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER3. . . . . . . . . . .    I  ADDR  0002H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER4. . . . . . . . . . .    I  ADDR  0003H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER5. . . . . . . . . . .    I  ADDR  0004H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER6. . . . . . . . . . .    I  ADDR  0005H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER7. . . . . . . . . . .    I  ADDR  0006H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_SPI_CONN . . . . . . . . . . .    D  ADDR  000BH     R   SEG=?DT?ECO_PAGE
ECO_PAGE_TABLE. . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?ECO_PAGE
ECO_PAGE_TABLE_INDEX. . . . . . . . . .    D  ADDR  000FH     R   SEG=?DT?ECO_PAGE
EEPROM_INIT . . . . . . . . . . . . . .    C  ADDR  -------       EXT
EICON . . . . . . . . . . . . . . . . .    D  ADDR  00D8H     A   
EIE . . . . . . . . . . . . . . . . . .    D  ADDR  00E8H     A   
EIP . . . . . . . . . . . . . . . . . .    D  ADDR  00F8H     A   
ES. . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.4   A   
ET0 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.1   A   
ET1 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.3   A   
ET2 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.5   A   
EWDI. . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.4   A   
EX0 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.0   A   
EX1 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.2   A   
EX2 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.0   A   
EX3 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.1   A   
EX4 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.2   A   
EX5 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.3   A   
EXEN2 . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.3   A   
EXF2. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.6   A   
EXIF. . . . . . . . . . . . . . . . . .    D  ADDR  0091H     A   
F0. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.5   A   
F1. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.1   A   
I?142 . . . . . . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?ECO_PAGE_MANAGER?ECO_PAGE
IE. . . . . . . . . . . . . . . . . . .    D  ADDR  00A8H     A   
IE0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.1   A   
IE1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.3   A   
INT0_N. . . . . . . . . . . . . . . . .    B  ADDR  0080H.3   A   
INT1_N. . . . . . . . . . . . . . . . .    B  ADDR  0080H.4   A   
IP. . . . . . . . . . . . . . . . . . .    D  ADDR  00B8H     A   
IT0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.0   A   
IT1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.2   A   
J?141 . . . . . . . . . . . . . . . . .    D  ADDR  0004H     R   SEG=?DT?ECO_PAGE_MANAGER?ECO_PAGE
MPAGE . . . . . . . . . . . . . . . . .    D  ADDR  0092H     A   
OV. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.2   A   
P . . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.0   A   
P0. . . . . . . . . . . . . . . . . . .    D  ADDR  0080H     A   
P0_0. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.0   A   
P0_1. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.1   A   
P0_2. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.2   A   
P0_3. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.3   A   
P0_4. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.4   A   
P0_5. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.5   A   
P0_6. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.6   A   
P0_7. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.7   A   
P0_ALT. . . . . . . . . . . . . . . . .    D  ADDR  0095H     A   
P0_DIR. . . . . . . . . . . . . . . . .    D  ADDR  0094H     A   
P1. . . . . . . . . . . . . . . . . . .    D  ADDR  0090H     A   
P1_0. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.0   A   
P1_1. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.1   A   
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/05/09 23:31:27 PAGE    14

P1_2. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.2   A   
P1_ALT. . . . . . . . . . . . . . . . .    D  ADDR  0097H     A   
P1_DIR. . . . . . . . . . . . . . . . .    D  ADDR  0096H     A   
PCON. . . . . . . . . . . . . . . . . .    D  ADDR  0087H     A   
PS. . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.4   A   
PSW . . . . . . . . . . . . . . . . . .    D  ADDR  00D0H     A   
PT0 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.1   A   
PT1 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.3   A   
PT2 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.5   A   
PWDI. . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.4   A   
PWM . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.7   A   
PWMCON. . . . . . . . . . . . . . . . .    D  ADDR  00A9H     A   
PWMDUTY . . . . . . . . . . . . . . . .    D  ADDR  00AAH     A   
PWR_UP. . . . . . . . . . . . . . . . .    B  ADDR  00A0H.7   A   
PX0 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.0   A   
PX1 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.2   A   
PX2 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.0   A   
PX3 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.1   A   
PX4 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.2   A   
PX5 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.3   A   
RADIO . . . . . . . . . . . . . . . . .    D  ADDR  00A0H     A   
RB8 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.2   A   
RCAP2H. . . . . . . . . . . . . . . . .    D  ADDR  00CBH     A   
RCAP2L. . . . . . . . . . . . . . . . .    D  ADDR  00CAH     A   
RCLK. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.5   A   
REGX_CTRL . . . . . . . . . . . . . . .    D  ADDR  00ADH     A   
REGX_LSB. . . . . . . . . . . . . . . .    D  ADDR  00ACH     A   
REGX_MSB. . . . . . . . . . . . . . . .    D  ADDR  00ABH     A   
REN . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.4   A   
RI. . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.0   A   
RS0 . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.3   A   
RS1 . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.4   A   
RSTREAS . . . . . . . . . . . . . . . .    D  ADDR  00B1H     A   
RXD . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.1   A   
SBUF. . . . . . . . . . . . . . . . . .    D  ADDR  0099H     A   
SCON. . . . . . . . . . . . . . . . . .    D  ADDR  0098H     A   
SEG?140 . . . . . . . . . . . . . . . .    D  ADDR  0002H     R   SEG=?DT?ECO_PAGE_MANAGER?ECO_PAGE
SM0 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.7   A   
SM1 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.6   A   
SM2 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.5   A   
SP. . . . . . . . . . . . . . . . . . .    D  ADDR  0081H     A   
SPC_FNC . . . . . . . . . . . . . . . .    D  ADDR  008FH     A   
SPI_CTRL. . . . . . . . . . . . . . . .    D  ADDR  00B3H     A   
SPI_DATA. . . . . . . . . . . . . . . .    D  ADDR  00B2H     A   
SPICLK. . . . . . . . . . . . . . . . .    D  ADDR  00B4H     A   
T0. . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.5   A   
T1. . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.6   A   
T1_1V2. . . . . . . . . . . . . . . . .    D  ADDR  00BCH     A   
T2. . . . . . . . . . . . . . . . . . .    B  ADDR  0090H.0   A   
T2_1V2. . . . . . . . . . . . . . . . .    D  ADDR  00BDH     A   
T2CON . . . . . . . . . . . . . . . . .    D  ADDR  00C8H     A   
TB8 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.3   A   
TCLK. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.4   A   
TCON. . . . . . . . . . . . . . . . . .    D  ADDR  0088H     A   
TEST_MODE . . . . . . . . . . . . . . .    D  ADDR  00B7H     A   
TF0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.5   A   
TF1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.7   A   
TF2 . . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.7   A   
TH0 . . . . . . . . . . . . . . . . . .    D  ADDR  008CH     A   
TH1 . . . . . . . . . . . . . . . . . .    D  ADDR  008DH     A   
TH2 . . . . . . . . . . . . . . . . . .    D  ADDR  00CDH     A   
TI. . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.1   A   
TICK_DV . . . . . . . . . . . . . . . .    D  ADDR  00B5H     A   
TL0 . . . . . . . . . . . . . . . . . .    D  ADDR  008AH     A   
TL1 . . . . . . . . . . . . . . . . . .    D  ADDR  008BH     A   
TL2 . . . . . . . . . . . . . . . . . .    D  ADDR  00CCH     A   
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/05/09 23:31:27 PAGE    15

TMOD. . . . . . . . . . . . . . . . . .    D  ADDR  0089H     A   
TR0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.4   A   
TR1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.6   A   
TR2 . . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.2   A   
TXD . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.2   A   
WDTI. . . . . . . . . . . . . . . . . .    B  ADDR  00D8H.3   A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S).
