AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/24/09 16:54:28 PAGE     1


MACRO ASSEMBLER AX51 V3.06a
OBJECT MODULE PLACED IN .\eco_page.obj
ASSEMBLER INVOKED BY: C:\Keil\C51\BIN\AX51.exe .\eco_page.src EP DEBUG SYMBOLS OJ(.\eco_page.obj) PR(.\eco_page.ls1) 

LOC    OBJ             LINE     SOURCE

                          1     ; ./eco_page.src generated from: .\eco_page.c
                          2     ; COMPILER INVOKED BY:
                          3     ;        C:\Keil\C51\BIN\C51.exe .\eco_page.c BROWSE DEBUG CODE LISTINCLUDE SYMBOLS PREP
                               RINT ROM(LARGE) INCDIR(../../Include) SRC(./eco_page.src)
                          4     
                          5     $nomod51 
                          6     
                          7     NAME    ECO_PAGE
                          8     
 00A0.7                   9     PWR_UP  BIT     0A0H.7
 0080                    10     P0      DATA    080H
 0090                    11     P1      DATA    090H
 00D0.6                  12     AC      BIT     0D0H.6
 0080.5                  13     T0      BIT     080H.5
 00B3                    14     SPI_CTRL        DATA    0B3H
 0080.6                  15     T1      BIT     080H.6
 00A8.7                  16     EA      BIT     0A8H.7
 0090.0                  17     T2      BIT     090H.0
 00A0.6                  18     CE      BIT     0A0H.6
 00BE                    19     DEV_OFFSET      DATA    0BEH
 00A0.1                  20     CLK1    BIT     0A0H.1
 0090.2                  21     DIN0    BIT     090H.2
 00A0.5                  22     CLK2    BIT     0A0H.5
 0090.0                  23     DIO0    BIT     090H.0
 0083                    24     DPH0    DATA    083H
 0090.1                  25     DIO1    BIT     090H.1
 00A8                    26     IE      DATA    0A8H
 0085                    27     DPH1    DATA    085H
 0080.0                  28     DIO2    BIT     080H.0
 0080.1                  29     DIO3    BIT     080H.1
 0080.0                  30     P0_0    BIT     080H.0
 0090.0                  31     P1_0    BIT     090H.0
 0080.2                  32     DIO4    BIT     080H.2
 0080.1                  33     P0_1    BIT     080H.1
 0082                    34     DPL0    DATA    082H
 0090.1                  35     P1_1    BIT     090H.1
 0080.3                  36     DIO5    BIT     080H.3
 0080.2                  37     P0_2    BIT     080H.2
 0084                    38     DPL1    DATA    084H
 0090.2                  39     P1_2    BIT     090H.2
 0080.4                  40     DIO6    BIT     080H.4
 0080.3                  41     P0_3    BIT     080H.3
 0080.5                  42     DIO7    BIT     080H.5
 0080.4                  43     P0_4    BIT     080H.4
 00A4                    44     ADCSTATIC       DATA    0A4H
 0080.6                  45     DIO8    BIT     080H.6
 0080.5                  46     P0_5    BIT     080H.5
 00C8.6                  47     EXF2    BIT     0C8H.6
 00A0.3                  48     CS      BIT     0A0H.3
 0080.7                  49     DIO9    BIT     080H.7
 0080.6                  50     P0_6    BIT     080H.6
 0080.7                  51     P0_7    BIT     080H.7
 00A8.4                  52     ES      BIT     0A8H.4
 00B8                    53     IP      DATA    0B8H
 00A0.0                  54     DATA?   BIT     0A0H.0
 0098.0                  55     RI      BIT     098H.0
 00D0.7                  56     CY      BIT     0D0H.7
 0098.1                  57     TI      BIT     098H.1
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/24/09 16:54:28 PAGE     2

 00BC                    58     T1_1V2  DATA    0BCH
 008F                    59     SPC_FNC DATA    08FH
 00BD                    60     T2_1V2  DATA    0BDH
 00CB                    61     RCAP2H  DATA    0CBH
 00B8.4                  62     PS      BIT     0B8H.4
 0081                    63     SP      DATA    081H
 00D0.2                  64     OV      BIT     0D0H.2
 00B6                    65     CK_CTRL DATA    0B6H
 00CA                    66     RCAP2L  DATA    0CAH
 00B5                    67     TICK_DV DATA    0B5H
 00B1                    68     RSTREAS DATA    0B1H
 00C8.1                  69     C_T2    BIT     0C8H.1
 00E8.4                  70     EWDI    BIT     0E8H.4
 00A1                    71     ADCCON  DATA    0A1H
 00C8.5                  72     RCLK    BIT     0C8H.5
 00A2                    73     ADCDATAH        DATA    0A2H
 0091                    74     EXIF    DATA    091H
 00C8.4                  75     TCLK    BIT     0C8H.4
 00A0.6                  76     DR2_CE  BIT     0A0H.6
 00A3                    77     ADCDATAL        DATA    0A3H
 0099                    78     SBUF    DATA    099H
 0087                    79     PCON    DATA    087H
 0098                    80     SCON    DATA    098H
 00F8.4                  81     PWDI    BIT     0F8H.4
 0089                    82     TMOD    DATA    089H
 0088                    83     TCON    DATA    088H
 00D8.3                  84     WDTI    BIT     0D8H.3
 00AA                    85     PWMDUTY DATA    0AAH
 0088.1                  86     IE0     BIT     088H.1
 0088.3                  87     IE1     BIT     088H.3
 0094                    88     P0_DIR  DATA    094H
 00F0                    89     B       DATA    0F0H
 0096                    90     P1_DIR  DATA    096H
 0095                    91     P0_ALT  DATA    095H
 0097                    92     P1_ALT  DATA    097H
 00C8.0                  93     CP_RL2  BIT     0C8H.0
 00A0.2                  94     DR1     BIT     0A0H.2
 00E0                    95     ACC     DATA    0E0H
 00A0.6                  96     DR2     BIT     0A0H.6
 00B7                    97     TEST_MODE       DATA    0B7H
 00B4                    98     SPICLK  DATA    0B4H
 00C8.1                  99     CT2     BIT     0C8H.1
 00A8.1                 100     ET0     BIT     0A8H.1
 00A8.3                 101     ET1     BIT     0A8H.3
 0088.5                 102     TF0     BIT     088H.5
 0080.3                 103     INT0_N  BIT     080H.3
 00A8.5                 104     ET2     BIT     0A8H.5
 0088.7                 105     TF1     BIT     088H.7
 0080.4                 106     INT1_N  BIT     080H.4
 00C8.7                 107     TF2     BIT     0C8H.7
 0098.2                 108     RB8     BIT     098H.2
 008C                   109     TH0     DATA    08CH
 00A8.0                 110     EX0     BIT     0A8H.0
 0088.0                 111     IT0     BIT     088H.0
 008D                   112     TH1     DATA    08DH
 00A8.2                 113     EX1     BIT     0A8H.2
 0098.3                 114     TB8     BIT     098H.3
 0088.2                 115     IT1     BIT     088H.2
 00CD                   116     TH2     DATA    0CDH
 00AD                   117     REGX_CTRL       DATA    0ADH
 00E8.0                 118     EX2     BIT     0E8H.0
 00D0.0                 119     P       BIT     0D0H.0
 00E8.1                 120     EX3     BIT     0E8H.1
 0098.7                 121     SM0     BIT     098H.7
 008A                   122     TL0     DATA    08AH
 00E8.2                 123     EX4     BIT     0E8H.2
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/24/09 16:54:28 PAGE     3

 0098.6                 124     SM1     BIT     098H.6
 008B                   125     TL1     DATA    08BH
 00E8.3                 126     EX5     BIT     0E8H.3
 0098.5                 127     SM2     BIT     098H.5
 00CC                   128     TL2     DATA    0CCH
 00E8                   129     EIE     DATA    0E8H
 00B8.1                 130     PT0     BIT     0B8H.1
 00D0.3                 131     RS0     BIT     0D0H.3
 00B8.3                 132     PT1     BIT     0B8H.3
 00D0.4                 133     RS1     BIT     0D0H.4
 00B8.5                 134     PT2     BIT     0B8H.5
 0088.4                 135     TR0     BIT     088H.4
 00A9                   136     PWMCON  DATA    0A9H
 0088.6                 137     TR1     BIT     088H.6
 00C8.2                 138     TR2     BIT     0C8H.2
 00B8.0                 139     PX0     BIT     0B8H.0
 00B8.2                 140     PX1     BIT     0B8H.2
 00F8.0                 141     PX2     BIT     0F8H.0
 00F8.1                 142     PX3     BIT     0F8H.1
 00F8.2                 143     PX4     BIT     0F8H.2
 0083                   144     DPH     DATA    083H
 00F8.3                 145     PX5     BIT     0F8H.3
 00F8                   146     EIP     DATA    0F8H
 0082                   147     DPL     DATA    082H
 00C8.3                 148     EXEN2   BIT     0C8H.3
 00C8.0                 149     CPRL2   BIT     0C8H.0
 0098.4                 150     REN     BIT     098H.4
 00C8                   151     T2CON   DATA    0C8H
 0086                   152     DPS     DATA    086H
 00B2                   153     SPI_DATA        DATA    0B2H
 0092                   154     MPAGE   DATA    092H
 0080.1                 155     RXD     BIT     080H.1
 00A0.4                 156     DOUT2   BIT     0A0H.4
 00D8                   157     EICON   DATA    0D8H
 008E                   158     CKCON   DATA    08EH
 0080.2                 159     TXD     BIT     080H.2
 00A0                   160     RADIO   DATA    0A0H
 0080.7                 161     PWM     BIT     080H.7
 00D0.5                 162     F0      BIT     0D0H.5
 00D0.1                 163     F1      BIT     0D0H.1
 00AC                   164     REGX_LSB        DATA    0ACH
 00D0                   165     PSW     DATA    0D0H
 00AB                   166     REGX_MSB        DATA    0ABH
------                  167     ?PR?eco_page_init?ECO_PAGE               SEGMENT CODE 
------                  168     ?PR?eco_page_manager?ECO_PAGE            SEGMENT CODE 
------                  169     ?DT?eco_page_manager?ECO_PAGE            SEGMENT DATA OVERLAYABLE 
------                  170     ?ID?ECO_PAGE         SEGMENT IDATA 
------                  171     ?DT?ECO_PAGE         SEGMENT DATA 
                        172             EXTRN   CODE (_eeprom_read)
                        173             EXTRN   CODE (eeprom_init)
                        174             PUBLIC  ECO_PAGE_TABLE_INDEX
                        175             PUBLIC  ECO_PAGE_REGISTER7
                        176             PUBLIC  ECO_PAGE_REGISTER6
                        177             PUBLIC  ECO_PAGE_REGISTER5
                        178             PUBLIC  ECO_PAGE_REGISTER4
                        179             PUBLIC  ECO_PAGE_ADDR
                        180             PUBLIC  ECO_PAGE_REGISTER3
                        181             PUBLIC  ECO_PAGE_REGISTER2
                        182             PUBLIC  ECO_PAGE_REGISTER1
                        183             PUBLIC  ECO_PAGE_PREV_VID
                        184             PUBLIC  ECO_PAGE_PREV_PID
                        185             PUBLIC  ECO_PAGE_SPI_CONN
                        186             PUBLIC  ECO_PAGE_TABLE
                        187             PUBLIC  eco_page_manager
                        188             PUBLIC  eco_page_init
                        189     
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/24/09 16:54:28 PAGE     4

------                  190             RSEG  ?DT?eco_page_manager?ECO_PAGE
000000                  191     ?eco_page_manager?BYTE:
000004                  192             ORG  4
000004                  193             seg?140:   DS   2
000000                  194             ORG  0
000000                  195               i?141:   DS   2
000002                  196             ORG  2
000002                  197      page_index?142:   DS   2
                        198     
------                  199             RSEG  ?ID?ECO_PAGE
000000                  200      ECO_PAGE_TABLE:   DS   16
000010                  201     ECO_PAGE_REGISTER1:   DS   1
000011                  202     ECO_PAGE_REGISTER2:   DS   1
000012                  203     ECO_PAGE_REGISTER3:   DS   1
000013                  204     ECO_PAGE_REGISTER4:   DS   1
000014                  205     ECO_PAGE_REGISTER5:   DS   1
000015                  206     ECO_PAGE_REGISTER6:   DS   1
000016                  207     ECO_PAGE_REGISTER7:   DS   1
                        208     
------                  209             RSEG  ?DT?ECO_PAGE
000000                  210     ECO_PAGE_SPI_CONN:   DS   1
000001                  211     ECO_PAGE_PREV_PID:   DS   2
000003                  212     ECO_PAGE_PREV_VID:   DS   2
000005                  213       ECO_PAGE_ADDR:   DS   2
000007                  214     ECO_PAGE_TABLE_INDEX:   DS   1
                        215     ; /*
                        216     ;  * Author(s): Wei-Han Chen (Embedded Platform Lab, NTHU)
                        217     ;  * Copyright (c) 2009 National Tsing Hua University (NTHU) 
                        218     ;  * Permission to copy, modify, and distribute this program is granted 
                        219     ;  * for noncommercial purposes, provided the author(s) and copyright
                        220     ;  * notice are retained. All other uses require explicit written
                        221     ;  * permission from NTHU. 
                        222     ;  *
                        223     ;  * Eco Paging Library 
                        224     ;  *
                        225     ;  * Wei-Han Chen <xwaynec@gmail.com> 
                        226     ;  * 2009/2/13
                        227     ;  */
                        228     ; 
                        229     ; #include "eco_page.h"
                        230     ; #include "eeprom/eeprom.h"
                        231     ; 
                        232     ; //#define ECO_PAGE_SIZE 256
                        233     ; #define ECO_PAGE_SIZE 128
                        234     ; //#define ECO_PAGE_SIZE 64
                        235     ; 
                        236     ; //#define ECO_PAGE_ADDR_OFFSET 47
                        237     ; #define ECO_PAGE_ADDR_OFFSET 23
                        238     ; //#define ECO_PAGE_ADDR_OFFSET 11 
                        239     ; 
                        240     ; #if ECO_PAGE_SIZE == 64
                        241     ;       
                        242     ;       #define ECO_PAGE_ENTRY  (63-ECO_PAGE_ADDR_OFFSET)
                        243     ;       #define ECO_PAGE_SHIFT  6
                        244     ;       #define ECO_PAGE_MASK   0x003F
                        245     ;       #define ECO_PAGE_MOV_MASK       0xFFC0
                        246     ; 
                        247     ;       unsigned int idata ECO_PAGE_TABLE[ECO_PAGE_ENTRY];
                        248     ;       //Eco page virtual address id
                        249     ;       unsigned int ECO_PAGE_PREV_VID;
                        250     ;       //Eco page physical address id 
                        251     ;       unsigned int ECO_PAGE_PREV_PID;
                        252     ; 
                        253     ; #elif ECO_PAGE_SIZE == 128
                        254     ;       
                        255     ;       #define ECO_PAGE_ENTRY (31-ECO_PAGE_ADDR_OFFSET)
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/24/09 16:54:28 PAGE     5

                        256     ;       #define ECO_PAGE_SHIFT  7
                        257     ;       #define ECO_PAGE_MASK   0x007F
                        258     ;       #define ECO_PAGE_MOV_MASK       0xFF80
                        259     ; 
                        260     ;       unsigned int idata ECO_PAGE_TABLE[ECO_PAGE_ENTRY];
                        261     ;       //Eco page virtual address id
                        262     ;       unsigned int ECO_PAGE_PREV_VID;
                        263     ;       //Eco page physical address id 
                        264     ;       unsigned int ECO_PAGE_PREV_PID;
                        265     ; 
                        266     ; #elif ECO_PAGE_SIZE == 256
                        267     ;       
                        268     ;       #define ECO_PAGE_ENTRY  (15-ECO_PAGE_ADDR_OFFSET)
                        269     ;       #define ECO_PAGE_SHIFT  8       
                        270     ;       #define ECO_PAGE_MASK   0x00FF
                        271     ;       #define ECO_PAGE_MOV_MASK       0xFF00
                        272     ; 
                        273     ;       unsigned int ECO_PAGE_TABLE[ECO_PAGE_ENTRY];
                        274     ;       //Eco page virtual address id
                        275     ;       unsigned char ECO_PAGE_PREV_VID;
                        276     ;       //Eco page physical address id 
                        277     ;       unsigned char ECO_PAGE_PREV_PID;
                        278     ; 
                        279     ; #endif
                        280     ; 
                        281     ; unsigned char ECO_PAGE_TABLE_INDEX;
                        282     ; unsigned int ECO_PAGE_ADDR;
                        283     ; unsigned char ECO_PAGE_SPI_CONN;
                        284     ; 
                        285     ; unsigned char idata ECO_PAGE_REGISTER1;
                        286     ; unsigned char idata ECO_PAGE_REGISTER2;
                        287     ; unsigned char idata ECO_PAGE_REGISTER3;
                        288     ; unsigned char idata ECO_PAGE_REGISTER4;
                        289     ; unsigned char idata ECO_PAGE_REGISTER5;
                        290     ; unsigned char idata ECO_PAGE_REGISTER6;
                        291     ; unsigned char idata ECO_PAGE_REGISTER7;
                        292     ; 
                        293     ; 
                        294     ; void eco_page_init()
                        295     
------                  296             RSEG  ?PR?eco_page_init?ECO_PAGE
000000                  297     eco_page_init:
                        298                             ; SOURCE LINE # 80
                        299     ; {
                        300                             ; SOURCE LINE # 81
                        301     ;       ECO_PAGE_TABLE_INDEX = ECO_PAGE_ENTRY - 1;
                        302                             ; SOURCE LINE # 82
000000 750007     F     303             MOV     ECO_PAGE_TABLE_INDEX,#07H
                        304     ;       
                        305     ;       ECO_PAGE_ADDR = 0;
                        306                             ; SOURCE LINE # 84
000003 E4               307             CLR     A
000004 F500       F     308             MOV     ECO_PAGE_ADDR,A
000006 F500       F     309             MOV     ECO_PAGE_ADDR+01H,A
                        310     ;       ECO_PAGE_PREV_VID = 0;
                        311                             ; SOURCE LINE # 85
000008 F500       F     312             MOV     ECO_PAGE_PREV_VID,A
00000A F500       F     313             MOV     ECO_PAGE_PREV_VID+01H,A
                        314     ;       ECO_PAGE_PREV_PID = 0;
                        315                             ; SOURCE LINE # 86
00000C F500       F     316             MOV     ECO_PAGE_PREV_PID,A
00000E F500       F     317             MOV     ECO_PAGE_PREV_PID+01H,A
                        318     ; 
                        319     ; }
                        320                             ; SOURCE LINE # 88
000010 22               321             RET     
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/24/09 16:54:28 PAGE     6

                        322     ; END OF eco_page_init
                        323     
                        324     ; 
                        325     ; //LRU page replacement
                        326     ; /*void eco_page_manager()
                        327     ; {
                        328     ;       unsigned int i;
                        329     ;       unsigned int page_index = -1;
                        330     ; 
                        331     ;       //if page id is the same with the last page id
                        332     ;       if(((ECO_PAGE_ADDR >> 8) & 0x7F) == (ECO_PAGE_PREV_PID & 0x7F))
                        333     ;       {
                        334     ;               //virtual address id + function offset
                        335     ;               ECO_PAGE_ADDR = (ECO_PAGE_PREV_VID << 8) + (ECO_PAGE_ADDR & 0x00FF);
                        336     ;               #pragma asm
                        337     ;               //eco_page_function_call        
                        338     ;               //MOV     DPH,ECO_PAGE_ADDR
                        339     ;               //MOV     DPL,ECO_PAGE_ADDR+01H
                        340     ;               //LCALL ?C?ICALL2
                        341     ;               #pragma endasm
                        342     ;               return ;
                        343     ;       }       
                        344     ;       
                        345     ;       //check page table
                        346     ;       for(i=0;i<ECO_PAGE_ENTRY;i++)
                        347     ;       {
                        348     ;               if((ECO_PAGE_ADDR >> 8) == ECO_PAGE_TABLE[i])
                        349     ;               {
                        350     ;                       page_index = i;
                        351     ;                       
                        352     ;                       //set LRU bit is 1
                        353     ;                       ECO_PAGE_TABLE[i] = ECO_PAGE_TABLE[i] | 0x80;
                        354     ;                       break;
                        355     ;               }
                        356     ;       }
                        357     ; 
                        358     ;       if(page_index != -1)
                        359     ;       {
                        360     ;               //store function physical addres id 
                        361     ;               ECO_PAGE_PREV_PID = ECO_PAGE_ADDR >> 8;
                        362     ;       
                        363     ;               //memory page is in ram
                        364     ;               ECO_PAGE_ADDR = ((page_index + ECO_PAGE_ADDR_OFFSET) << 8) + (ECO_PAGE_A
                               DDR & 0x00FF);
                        365     ; 
                        366     ;               //cache the virtual address id
                        367     ;               ECO_PAGE_PREV_VID = ECO_PAGE_ADDR >> 8;
                        368     ; 
                        369     ;               #pragma asm
                        370     ;               //eco_page_function_call
                        371     ;               //MOV     DPH,ECO_PAGE_ADDR
                        372     ;               //MOV     DPL,ECO_PAGE_ADDR+01H
                        373     ;               //LCALL ?C?ICALL2
                        374     ;               #pragma endasm
                        375     ; 
                        376     ;               return ;
                        377     ;       }       
                        378     ;       else
                        379     ;       {
                        380     ;               //page fault
                        381     ;               for(i=ECO_PAGE_TABLE_INDEX+1; ;i=(i+1)%10)
                        382     ;               {
                        383     ;                       if((ECO_PAGE_TABLE[i] & 0x80) == 0x80)
                        384     ;                       {
                        385     ;                               //LRU bit is 1 and then set this bit is 0
                        386     ;                               ECO_PAGE_TABLE[i] = ECO_PAGE_TABLE[i] & 0x7F;
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/24/09 16:54:28 PAGE     7

                        387     ;                       }
                        388     ;                       else
                        389     ;                       {
                        390     ;                               unsigned char xdata *seg = (unsigned char xdata *)((i + 
                               ECO_PAGE_ADDR_OFFSET)<<8);
                        391     ;                               unsigned int j;
                        392     ;                               
                        393     ;                               //memory page is in ram
                        394     ;                               eeprom_init();
                        395     ; 
                        396     ;                               //mov code from eeprom to external ram
                        397     ;                               for(j=0;j<256;j++)
                        398     ;                               {
                        399     ;                                       *(seg+j) = eeprom_read(ECO_ADDR_SHIFT(ECO_PAGE_A
                               DDR & 0xFF00 ) +j);
                        400     ;                               }
                        401     ;                               
                        402     ;                               //update page table to connect this physical address id 
                               with virtual address id 
                        403     ;                               ECO_PAGE_TABLE[i] = ECO_PAGE_ADDR >> 8;
                        404     ; 
                        405     ;                               //store physical address id
                        406     ;                               ECO_PAGE_PREV_PID = ECO_PAGE_TABLE[i];
                        407     ; 
                        408     ;                               //update page address e.g.  (page_id<<8) + page_offset
                        409     ;                               ECO_PAGE_ADDR = ((i + ECO_PAGE_ADDR_OFFSET) << 8) + (ECO
                               _PAGE_ADDR & 0x00FF);
                        410     ; 
                        411     ;                               //store virtual address id 
                        412     ;                               ECO_PAGE_PREV_VID = ECO_PAGE_ADDR >> 8; 
                        413     ; 
                        414     ;                               //mov to the next index
                        415     ;                               ECO_PAGE_TABLE_INDEX = i;
                        416     ; 
                        417     ;                               //jump  to function address
                        418     ;                               #pragma asm
                        419     ;                               //eco_page_function_call
                        420     ;                               //MOV     DPH,ECO_PAGE_ADDR
                        421     ;                               //MOV     DPL,ECO_PAGE_ADDR+01H
                        422     ;                               //LCALL        ?C?ICALL2               
                        423     ;                               #pragma endasm
                        424     ;                               
                        425     ;                               return ;
                        426     ;                               
                        427     ;                       }
                        428     ;               }
                        429     ;                       
                        430     ;       }
                        431     ;                               
                        432     ; }
                        433     ; */
                        434     ; 
                        435     ; void eco_page_manager()
                        436     
------                  437             RSEG  ?PR?eco_page_manager?ECO_PAGE
000000                  438     eco_page_manager:
                        439             USING   0
                        440                             ; SOURCE LINE # 200
                        441     ; {
                        442                             ; SOURCE LINE # 201
                        443     ;       unsigned int i;
                        444     ;       unsigned int page_index = -1; 
                        445                             ; SOURCE LINE # 203
000000 74FF             446             MOV     A,#0FFH
000002 F500       F     447             MOV     page_index?142,A
000004 F500       F     448             MOV     page_index?142+01H,A
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/24/09 16:54:28 PAGE     8

                        449     ; 
                        450     ;       //Check POP instruction 
                        451     ;       //for(i=0;i<10;i++)
                        452     ;       //{    
                        453     ;       //      blink_led();
                        454     ;       //      mdelay(200);
                        455     ;       //}    
                        456     ;       //mdelay(1000);
                        457     ;       
                        458     ;       //if page id is the same with the last page id
                        459     ;       if((ECO_PAGE_ADDR >> ECO_PAGE_SHIFT) == ECO_PAGE_PREV_PID)
                        460                             ; SOURCE LINE # 214
000006 E500       F     461             MOV     A,ECO_PAGE_ADDR+01H
000008 AE00       F     462             MOV     R6,ECO_PAGE_ADDR
00000A 7807             463             MOV     R0,#07H
00000C                  464     ?C0013:
00000C CE               465             XCH     A,R6
00000D C3               466             CLR     C
00000E 13               467             RRC     A
00000F CE               468             XCH     A,R6
000010 13               469             RRC     A
000011 D8F9             470             DJNZ    R0,?C0013
000013 B50020           471             CJNE    A,ECO_PAGE_PREV_PID+01H,?C0002
000016 EE               472             MOV     A,R6
000017 B5001C           473             CJNE    A,ECO_PAGE_PREV_PID,?C0002
                        474     ;       {
                        475                             ; SOURCE LINE # 215
                        476     ;               //virtual address id + function offset
                        477     ;               ECO_PAGE_ADDR = (ECO_PAGE_PREV_VID << ECO_PAGE_SHIFT) + (ECO_PAGE_ADDR &
                                ECO_PAGE_MASK);
                        478                             ; SOURCE LINE # 217
00001A E500       F     479             MOV     A,ECO_PAGE_PREV_VID+01H
00001C AE00       F     480             MOV     R6,ECO_PAGE_PREV_VID
00001E 7807             481             MOV     R0,#07H
000020                  482     ?C0015:
000020 C3               483             CLR     C
000021 33               484             RLC     A
000022 CE               485             XCH     A,R6
000023 33               486             RLC     A
000024 CE               487             XCH     A,R6
000025 D8F9             488             DJNZ    R0,?C0015
000027 FF               489             MOV     R7,A
000028 7C00             490             MOV     R4,#00H
00002A E500       F     491             MOV     A,ECO_PAGE_ADDR+01H
00002C 547F             492             ANL     A,#07FH
00002E 2F               493             ADD     A,R7
00002F F500       F     494             MOV     ECO_PAGE_ADDR+01H,A
000031 EC               495             MOV     A,R4
000032 3E               496             ADDC    A,R6
000033 F500       F     497             MOV     ECO_PAGE_ADDR,A
                        498     ;               #pragma asm
                        499     ;               //eco_page_function_call
                        500               
000035 22               501             RET     
                        502     ;               #pragma endasm
                        503     ;               return ;
                        504     ;       }       
                        505                             ; SOURCE LINE # 222
000036                  506     ?C0002:
                        507     ;                               
                        508     ;       //Check Table   
                        509     ;       for(i=0;i<ECO_PAGE_ENTRY;i++)
                        510                             ; SOURCE LINE # 225
000036 E4               511             CLR     A
000037 F500       F     512             MOV     i?141,A
000039 F500       F     513             MOV     i?141+01H,A
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/24/09 16:54:28 PAGE     9

00003B                  514     ?C0004:
                        515     ;       {   
                        516                             ; SOURCE LINE # 226
                        517     ;               if((ECO_PAGE_ADDR >> ECO_PAGE_SHIFT) == ECO_PAGE_TABLE[i])
                        518                             ; SOURCE LINE # 227
00003B E500       F     519             MOV     A,i?141+01H
00003D 25E0             520             ADD     A,ACC
00003F 2400       F     521             ADD     A,#LOW (ECO_PAGE_TABLE+01H)
000041 F9               522             MOV     R1,A
000042 E500       F     523             MOV     A,ECO_PAGE_ADDR+01H
000044 AE00       F     524             MOV     R6,ECO_PAGE_ADDR
000046 7807             525             MOV     R0,#07H
000048                  526     ?C0016:
000048 CE               527             XCH     A,R6
000049 C3               528             CLR     C
00004A 13               529             RRC     A
00004B CE               530             XCH     A,R6
00004C 13               531             RRC     A
00004D D8F9             532             DJNZ    R0,?C0016
00004F 67               533             XRL     A,@R1
000050 7003             534             JNZ     ?C0017
000052 EE               535             MOV     A,R6
000053 19               536             DEC     R1
000054 67               537             XRL     A,@R1
000055                  538     ?C0017:
000055 7008             539             JNZ     ?C0006
                        540     ;               {
                        541                             ; SOURCE LINE # 228
                        542     ;                       page_index = i;
                        543                             ; SOURCE LINE # 229
000057 850000     F     544             MOV     page_index?142,i?141
00005A 850000     F     545             MOV     page_index?142+01H,i?141+01H
                        546     ;                       break;
                        547                             ; SOURCE LINE # 230
00005D 800E             548             SJMP    ?C0005
                        549     ;               }
                        550                             ; SOURCE LINE # 231
                        551     ;       }
                        552                             ; SOURCE LINE # 232
00005F                  553     ?C0006:
00005F 0500       F     554             INC     i?141+01H
000061 E500       F     555             MOV     A,i?141+01H
000063 7002             556             JNZ     ?C0018
000065 0500       F     557             INC     i?141
000067                  558     ?C0018:
000067 6408             559             XRL     A,#08H
000069 4500       F     560             ORL     A,i?141
00006B 70CE             561             JNZ     ?C0004
00006D                  562     ?C0005:
                        563     ; 
                        564     ;       if(page_index != -1) 
                        565                             ; SOURCE LINE # 234
00006D E500       F     566             MOV     A,page_index?142+01H
00006F F4               567             CPL     A
000070 7003             568             JNZ     ?C0019
000072 E500       F     569             MOV     A,page_index?142
000074 F4               570             CPL     A
000075                  571     ?C0019:
000075 6044             572             JZ      ?C0008
                        573     ;       {  
                        574                             ; SOURCE LINE # 235
                        575     ;               //store function physical addres id 
                        576     ;               ECO_PAGE_PREV_PID = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;
                        577                             ; SOURCE LINE # 237
000077 E500       F     578             MOV     A,ECO_PAGE_ADDR+01H
000079 AE00       F     579             MOV     R6,ECO_PAGE_ADDR
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/24/09 16:54:28 PAGE    10

00007B 7807             580             MOV     R0,#07H
00007D                  581     ?C0020:
00007D CE               582             XCH     A,R6
00007E C3               583             CLR     C
00007F 13               584             RRC     A
000080 CE               585             XCH     A,R6
000081 13               586             RRC     A
000082 D8F9             587             DJNZ    R0,?C0020
000084 F500       F     588             MOV     ECO_PAGE_PREV_PID+01H,A
000086 8E00       F     589             MOV     ECO_PAGE_PREV_PID,R6
                        590     ;       
                        591     ;               //memory page is in ram
                        592     ;               ECO_PAGE_ADDR = ((page_index + ECO_PAGE_ADDR_OFFSET) << ECO_PAGE_SHIFT) 
                               + (ECO_PAGE_ADDR & ECO_PAGE_MASK);
                        593                             ; SOURCE LINE # 240
000088 E500       F     594             MOV     A,page_index?142+01H
00008A 2417             595             ADD     A,#017H
00008C FF               596             MOV     R7,A
00008D E4               597             CLR     A
00008E 3500       F     598             ADDC    A,page_index?142
000090 FE               599             MOV     R6,A
000091 EF               600             MOV     A,R7
000092 7807             601             MOV     R0,#07H
000094                  602     ?C0021:
000094 C3               603             CLR     C
000095 33               604             RLC     A
000096 CE               605             XCH     A,R6
000097 33               606             RLC     A
000098 CE               607             XCH     A,R6
000099 D8F9             608             DJNZ    R0,?C0021
00009B FF               609             MOV     R7,A
00009C 7C00             610             MOV     R4,#00H
00009E E500       F     611             MOV     A,ECO_PAGE_ADDR+01H
0000A0 547F             612             ANL     A,#07FH
0000A2 2F               613             ADD     A,R7
0000A3 F500       F     614             MOV     ECO_PAGE_ADDR+01H,A
0000A5 EC               615             MOV     A,R4
0000A6 3E               616             ADDC    A,R6
0000A7 F500       F     617             MOV     ECO_PAGE_ADDR,A
                        618     ; 
                        619     ;               //cache the virtual address id
                        620     ;               ECO_PAGE_PREV_VID = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;
                        621                             ; SOURCE LINE # 243
0000A9 E500       F     622             MOV     A,ECO_PAGE_ADDR+01H
0000AB AE00       F     623             MOV     R6,ECO_PAGE_ADDR
0000AD 7807             624             MOV     R0,#07H
0000AF                  625     ?C0022:
0000AF CE               626             XCH     A,R6
0000B0 C3               627             CLR     C
0000B1 13               628             RRC     A
0000B2 CE               629             XCH     A,R6
0000B3 13               630             RRC     A
0000B4 D8F9             631             DJNZ    R0,?C0022
0000B6 F500       F     632             MOV     ECO_PAGE_PREV_VID+01H,A
0000B8 8E00       F     633             MOV     ECO_PAGE_PREV_VID,R6
                        634     ; 
                        635     ;               #pragma asm
                        636     ;               //eco_page_function_call
                        637               
                        638     ;               //MOV     DPH,ECO_PAGE_ADDR
                        639               
                        640     ;               //MOV     DPL,ECO_PAGE_ADDR+01H
                        641               
                        642     ;               //LCALL ?C?ICALL2
                        643               
                        644     ;               #pragma endasm
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/24/09 16:54:28 PAGE    11

                        645     ;       }   
                        646                             ; SOURCE LINE # 251
0000BA 22               647             RET     
0000BB                  648     ?C0008:
                        649     ;       else
                        650     ;       {
                        651                             ; SOURCE LINE # 253
                        652     ;               //page fault
                        653     ;               // Move Data from EEPROM to iRAM 
                        654     ;               unsigned char xdata *seg = (unsigned char xdata *)((ECO_PAGE_TABLE_INDEX
                                + ECO_PAGE_ADDR_OFFSET) << ECO_PAGE_SHIFT);
                        655                             ; SOURCE LINE # 256
0000BB E500       F     656             MOV     A,ECO_PAGE_TABLE_INDEX
0000BD 2417             657             ADD     A,#017H
0000BF FF               658             MOV     R7,A
0000C0 E4               659             CLR     A
0000C1 33               660             RLC     A
0000C2 FE               661             MOV     R6,A
0000C3 EF               662             MOV     A,R7
0000C4 7807             663             MOV     R0,#07H
0000C6                  664     ?C0023:
0000C6 C3               665             CLR     C
0000C7 33               666             RLC     A
0000C8 CE               667             XCH     A,R6
0000C9 33               668             RLC     A
0000CA CE               669             XCH     A,R6
0000CB D8F9             670             DJNZ    R0,?C0023
0000CD 8E00       F     671             MOV     seg?140,R6
0000CF F500       F     672             MOV     seg?140+01H,A
                        673     ;               
                        674     ;               //memory page is in ram
                        675     ;               eeprom_init();
                        676                             ; SOURCE LINE # 259
0000D1 120000     E     677             LCALL   eeprom_init
                        678     ; 
                        679     ;               //mov code from eeprom to external ram
                        680     ;               for(i=0;i<ECO_PAGE_SIZE;i++)
                        681                             ; SOURCE LINE # 262
0000D4 E4               682             CLR     A
0000D5 F500       F     683             MOV     i?141,A
0000D7 F500       F     684             MOV     i?141+01H,A
0000D9                  685     ?C0010:
                        686     ;               {
                        687                             ; SOURCE LINE # 263
                        688     ;                       *(seg+i) = eeprom_read(ECO_ADDR_SHIFT(ECO_PAGE_ADDR & ECO_PAGE_M
                               OV_MASK) +i);
                        689                             ; SOURCE LINE # 264
0000D9 E500       F     690             MOV     A,ECO_PAGE_ADDR+01H
0000DB 5480             691             ANL     A,#080H
0000DD 2403             692             ADD     A,#03H
0000DF FF               693             MOV     R7,A
0000E0 E4               694             CLR     A
0000E1 3500       F     695             ADDC    A,ECO_PAGE_ADDR
0000E3 CF               696             XCH     A,R7
0000E4 2500       F     697             ADD     A,i?141+01H
0000E6 CF               698             XCH     A,R7
0000E7 3500       F     699             ADDC    A,i?141
0000E9 FE               700             MOV     R6,A
0000EA 120000     E     701             LCALL   _eeprom_read
0000ED E500       F     702             MOV     A,seg?140+01H
0000EF 2500       F     703             ADD     A,i?141+01H
0000F1 F582             704             MOV     DPL,A
0000F3 E500       F     705             MOV     A,seg?140
0000F5 3500       F     706             ADDC    A,i?141
0000F7 F583             707             MOV     DPH,A
0000F9 EF               708             MOV     A,R7
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/24/09 16:54:28 PAGE    12

0000FA F0               709             MOVX    @DPTR,A
                        710     ;               }
                        711                             ; SOURCE LINE # 265
0000FB 0500       F     712             INC     i?141+01H
0000FD E500       F     713             MOV     A,i?141+01H
0000FF 7002             714             JNZ     ?C0024
000101 0500       F     715             INC     i?141
000103                  716     ?C0024:
000103 C3               717             CLR     C
000104 9480             718             SUBB    A,#080H
000106 E500       F     719             MOV     A,i?141
000108 9400             720             SUBB    A,#00H
00010A 40CD             721             JC      ?C0010
00010C                  722     ?C0011:
                        723     ;               
                        724     ;               //update page table to connect this physical address id with virtual add
                               ress id 
                        725     ;               ECO_PAGE_TABLE[ECO_PAGE_TABLE_INDEX] = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;
                        726                             ; SOURCE LINE # 268
00010C E500       F     727             MOV     A,ECO_PAGE_ADDR+01H
00010E AE00       F     728             MOV     R6,ECO_PAGE_ADDR
000110 7807             729             MOV     R0,#07H
000112                  730     ?C0025:
000112 CE               731             XCH     A,R6
000113 C3               732             CLR     C
000114 13               733             RRC     A
000115 CE               734             XCH     A,R6
000116 13               735             RRC     A
000117 D8F9             736             DJNZ    R0,?C0025
000119 FF               737             MOV     R7,A
00011A E500       F     738             MOV     A,ECO_PAGE_TABLE_INDEX
00011C 25E0             739             ADD     A,ACC
00011E 2400       F     740             ADD     A,#LOW (ECO_PAGE_TABLE)
000120 F8               741             MOV     R0,A
000121 A606             742             MOV     @R0,AR6
000123 08               743             INC     R0
000124 A607             744             MOV     @R0,AR7
                        745     ; 
                        746     ;               //store physical address id
                        747     ;               //ECO_PAGE_PREV_PID = ECO_PAGE_TABLE[ECO_PAGE_TABLE_INDEX];
                        748     ;               ECO_PAGE_PREV_PID = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;
                        749                             ; SOURCE LINE # 272
000126 8E00       F     750             MOV     ECO_PAGE_PREV_PID,R6
000128 8F00       F     751             MOV     ECO_PAGE_PREV_PID+01H,R7
                        752     ; 
                        753     ;               //update page address
                        754     ;               ECO_PAGE_ADDR = ((ECO_PAGE_TABLE_INDEX + ECO_PAGE_ADDR_OFFSET) << ECO_PA
                               GE_SHIFT) + (ECO_PAGE_ADDR & ECO_PAGE_MASK);
                        755                             ; SOURCE LINE # 275
00012A E500       F     756             MOV     A,ECO_PAGE_TABLE_INDEX
00012C 2417             757             ADD     A,#017H
00012E FF               758             MOV     R7,A
00012F E4               759             CLR     A
000130 33               760             RLC     A
000131 FE               761             MOV     R6,A
000132 EF               762             MOV     A,R7
000133 7807             763             MOV     R0,#07H
000135                  764     ?C0026:
000135 C3               765             CLR     C
000136 33               766             RLC     A
000137 CE               767             XCH     A,R6
000138 33               768             RLC     A
000139 CE               769             XCH     A,R6
00013A D8F9             770             DJNZ    R0,?C0026
00013C FF               771             MOV     R7,A
00013D 7C00             772             MOV     R4,#00H
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/24/09 16:54:28 PAGE    13

00013F E500       F     773             MOV     A,ECO_PAGE_ADDR+01H
000141 547F             774             ANL     A,#07FH
000143 2F               775             ADD     A,R7
000144 F500       F     776             MOV     ECO_PAGE_ADDR+01H,A
000146 EC               777             MOV     A,R4
000147 3E               778             ADDC    A,R6
000148 F500       F     779             MOV     ECO_PAGE_ADDR,A
                        780     ; 
                        781     ;               //store virtual address id 
                        782     ;               ECO_PAGE_PREV_VID = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;    
                        783                             ; SOURCE LINE # 278
00014A E500       F     784             MOV     A,ECO_PAGE_ADDR+01H
00014C AE00       F     785             MOV     R6,ECO_PAGE_ADDR
00014E 7807             786             MOV     R0,#07H
000150                  787     ?C0027:
000150 CE               788             XCH     A,R6
000151 C3               789             CLR     C
000152 13               790             RRC     A
000153 CE               791             XCH     A,R6
000154 13               792             RRC     A
000155 D8F9             793             DJNZ    R0,?C0027
000157 F500       F     794             MOV     ECO_PAGE_PREV_VID+01H,A
000159 8E00       F     795             MOV     ECO_PAGE_PREV_VID,R6
                        796     ; 
                        797     ;               //mov to the next index
                        798     ;               ECO_PAGE_TABLE_INDEX = (ECO_PAGE_TABLE_INDEX + 1) % ECO_PAGE_ENTRY;
                        799                             ; SOURCE LINE # 281
00015B E500       F     800             MOV     A,ECO_PAGE_TABLE_INDEX
00015D 04               801             INC     A
00015E 5407             802             ANL     A,#07H
000160 F500       F     803             MOV     ECO_PAGE_TABLE_INDEX,A
                        804     ;                       
                        805     ;               //jump  to function address
                        806     ;               #pragma asm
                        807     ;               //eco_page_function_call
                        808               
                        809     ;               //MOV     DPH,ECO_PAGE_ADDR
                        810               
                        811     ;               //MOV     DPL,ECO_PAGE_ADDR+01H
                        812               
                        813     ;               //LCALL        ?C?ICALL2               
                        814               
                        815     ;               #pragma endasm
                        816     ; 
                        817     ;       }
                        818                             ; SOURCE LINE # 291
                        819     ; 
                        820     ; }
                        821                             ; SOURCE LINE # 293
000162                  822     ?C0003:
000162 22               823             RET     
                        824     ; END OF eco_page_manager
                        825     
                        826             END
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/24/09 16:54:28 PAGE    14

SYMBOL TABLE LISTING
------ ----- -------


N A M E                                    T Y P E  V A L U E     ATTRIBUTES

?C0002. . . . . . . . . . . . . . . . .    C  ADDR  0036H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0003. . . . . . . . . . . . . . . . .    C  ADDR  0162H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0004. . . . . . . . . . . . . . . . .    C  ADDR  003BH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0005. . . . . . . . . . . . . . . . .    C  ADDR  006DH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0006. . . . . . . . . . . . . . . . .    C  ADDR  005FH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0008. . . . . . . . . . . . . . . . .    C  ADDR  00BBH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0010. . . . . . . . . . . . . . . . .    C  ADDR  00D9H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0011. . . . . . . . . . . . . . . . .    C  ADDR  010CH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0013. . . . . . . . . . . . . . . . .    C  ADDR  000CH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0015. . . . . . . . . . . . . . . . .    C  ADDR  0020H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0016. . . . . . . . . . . . . . . . .    C  ADDR  0048H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0017. . . . . . . . . . . . . . . . .    C  ADDR  0055H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0018. . . . . . . . . . . . . . . . .    C  ADDR  0067H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0019. . . . . . . . . . . . . . . . .    C  ADDR  0075H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0020. . . . . . . . . . . . . . . . .    C  ADDR  007DH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0021. . . . . . . . . . . . . . . . .    C  ADDR  0094H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0022. . . . . . . . . . . . . . . . .    C  ADDR  00AFH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0023. . . . . . . . . . . . . . . . .    C  ADDR  00C6H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0024. . . . . . . . . . . . . . . . .    C  ADDR  0103H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0025. . . . . . . . . . . . . . . . .    C  ADDR  0112H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0026. . . . . . . . . . . . . . . . .    C  ADDR  0135H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0027. . . . . . . . . . . . . . . . .    C  ADDR  0150H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?DT?ECO_PAGE. . . . . . . . . . . . . .    D  SEG   000008H       REL=UNIT, ALN=BYTE
?DT?ECO_PAGE_MANAGER?ECO_PAGE . . . . .    D  SEG   000006H       REL=UNIT, ALN=BYTE
?ECO_PAGE_MANAGER?BYTE. . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?ECO_PAGE_MANAGER?ECO_PAGE
?ID?ECO_PAGE. . . . . . . . . . . . . .    I  SEG   000017H       REL=UNIT, ALN=BYTE
?PR?ECO_PAGE_INIT?ECO_PAGE. . . . . . .    C  SEG   000011H       REL=UNIT, ALN=BYTE
?PR?ECO_PAGE_MANAGER?ECO_PAGE . . . . .    C  SEG   000163H       REL=UNIT, ALN=BYTE
_EEPROM_READ. . . . . . . . . . . . . .    C  ADDR  -------       EXT
AC. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.6   A   
ACC . . . . . . . . . . . . . . . . . .    D  ADDR  00E0H     A   
ADCCON. . . . . . . . . . . . . . . . .    D  ADDR  00A1H     A   
ADCDATAH. . . . . . . . . . . . . . . .    D  ADDR  00A2H     A   
ADCDATAL. . . . . . . . . . . . . . . .    D  ADDR  00A3H     A   
ADCSTATIC . . . . . . . . . . . . . . .    D  ADDR  00A4H     A   
AR6 . . . . . . . . . . . . . . . . . .    D  ADDR  0006H     A   
AR7 . . . . . . . . . . . . . . . . . .    D  ADDR  0007H     A   
B . . . . . . . . . . . . . . . . . . .    D  ADDR  00F0H     A   
C_T2. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.1   A   
CE. . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.6   A   
CK_CTRL . . . . . . . . . . . . . . . .    D  ADDR  00B6H     A   
CKCON . . . . . . . . . . . . . . . . .    D  ADDR  008EH     A   
CLK1. . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.1   A   
CLK2. . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.5   A   
CP_RL2. . . . . . . . . . . . . . . . .    B  ADDR  00C8H.0   A   
CPRL2 . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.0   A   
CS. . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.3   A   
CT2 . . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.1   A   
CY. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.7   A   
DATA? . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.0   A   
DEV_OFFSET. . . . . . . . . . . . . . .    D  ADDR  00BEH     A   
DIN0. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.2   A   
DIO0. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.0   A   
DIO1. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.1   A   
DIO2. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.0   A   
DIO3. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.1   A   
DIO4. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.2   A   
DIO5. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.3   A   
DIO6. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.4   A   
DIO7. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.5   A   
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/24/09 16:54:28 PAGE    15

DIO8. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.6   A   
DIO9. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.7   A   
DOUT2 . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.4   A   
DPH . . . . . . . . . . . . . . . . . .    D  ADDR  0083H     A   
DPH0. . . . . . . . . . . . . . . . . .    D  ADDR  0083H     A   
DPH1. . . . . . . . . . . . . . . . . .    D  ADDR  0085H     A   
DPL . . . . . . . . . . . . . . . . . .    D  ADDR  0082H     A   
DPL0. . . . . . . . . . . . . . . . . .    D  ADDR  0082H     A   
DPL1. . . . . . . . . . . . . . . . . .    D  ADDR  0084H     A   
DPS . . . . . . . . . . . . . . . . . .    D  ADDR  0086H     A   
DR1 . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.2   A   
DR2 . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.6   A   
DR2_CE. . . . . . . . . . . . . . . . .    B  ADDR  00A0H.6   A   
EA. . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.7   A   
ECO_PAGE. . . . . . . . . . . . . . . .    -- ----  -------       
ECO_PAGE_ADDR . . . . . . . . . . . . .    D  ADDR  0005H     R   SEG=?DT?ECO_PAGE
ECO_PAGE_INIT . . . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?ECO_PAGE_INIT?ECO_PAGE
ECO_PAGE_MANAGER. . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
ECO_PAGE_PREV_PID . . . . . . . . . . .    D  ADDR  0001H     R   SEG=?DT?ECO_PAGE
ECO_PAGE_PREV_VID . . . . . . . . . . .    D  ADDR  0003H     R   SEG=?DT?ECO_PAGE
ECO_PAGE_REGISTER1. . . . . . . . . . .    I  ADDR  0010H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER2. . . . . . . . . . .    I  ADDR  0011H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER3. . . . . . . . . . .    I  ADDR  0012H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER4. . . . . . . . . . .    I  ADDR  0013H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER5. . . . . . . . . . .    I  ADDR  0014H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER6. . . . . . . . . . .    I  ADDR  0015H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER7. . . . . . . . . . .    I  ADDR  0016H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_SPI_CONN . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?ECO_PAGE
ECO_PAGE_TABLE. . . . . . . . . . . . .    I  ADDR  0000H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_TABLE_INDEX. . . . . . . . . .    D  ADDR  0007H     R   SEG=?DT?ECO_PAGE
EEPROM_INIT . . . . . . . . . . . . . .    C  ADDR  -------       EXT
EICON . . . . . . . . . . . . . . . . .    D  ADDR  00D8H     A   
EIE . . . . . . . . . . . . . . . . . .    D  ADDR  00E8H     A   
EIP . . . . . . . . . . . . . . . . . .    D  ADDR  00F8H     A   
ES. . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.4   A   
ET0 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.1   A   
ET1 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.3   A   
ET2 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.5   A   
EWDI. . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.4   A   
EX0 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.0   A   
EX1 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.2   A   
EX2 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.0   A   
EX3 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.1   A   
EX4 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.2   A   
EX5 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.3   A   
EXEN2 . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.3   A   
EXF2. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.6   A   
EXIF. . . . . . . . . . . . . . . . . .    D  ADDR  0091H     A   
F0. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.5   A   
F1. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.1   A   
I?141 . . . . . . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?ECO_PAGE_MANAGER?ECO_PAGE
IE. . . . . . . . . . . . . . . . . . .    D  ADDR  00A8H     A   
IE0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.1   A   
IE1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.3   A   
INT0_N. . . . . . . . . . . . . . . . .    B  ADDR  0080H.3   A   
INT1_N. . . . . . . . . . . . . . . . .    B  ADDR  0080H.4   A   
IP. . . . . . . . . . . . . . . . . . .    D  ADDR  00B8H     A   
IT0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.0   A   
IT1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.2   A   
MPAGE . . . . . . . . . . . . . . . . .    D  ADDR  0092H     A   
OV. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.2   A   
P . . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.0   A   
P0. . . . . . . . . . . . . . . . . . .    D  ADDR  0080H     A   
P0_0. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.0   A   
P0_1. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.1   A   
P0_2. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.2   A   
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/24/09 16:54:28 PAGE    16

P0_3. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.3   A   
P0_4. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.4   A   
P0_5. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.5   A   
P0_6. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.6   A   
P0_7. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.7   A   
P0_ALT. . . . . . . . . . . . . . . . .    D  ADDR  0095H     A   
P0_DIR. . . . . . . . . . . . . . . . .    D  ADDR  0094H     A   
P1. . . . . . . . . . . . . . . . . . .    D  ADDR  0090H     A   
P1_0. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.0   A   
P1_1. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.1   A   
P1_2. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.2   A   
P1_ALT. . . . . . . . . . . . . . . . .    D  ADDR  0097H     A   
P1_DIR. . . . . . . . . . . . . . . . .    D  ADDR  0096H     A   
PAGE_INDEX?142. . . . . . . . . . . . .    D  ADDR  0002H     R   SEG=?DT?ECO_PAGE_MANAGER?ECO_PAGE
PCON. . . . . . . . . . . . . . . . . .    D  ADDR  0087H     A   
PS. . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.4   A   
PSW . . . . . . . . . . . . . . . . . .    D  ADDR  00D0H     A   
PT0 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.1   A   
PT1 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.3   A   
PT2 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.5   A   
PWDI. . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.4   A   
PWM . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.7   A   
PWMCON. . . . . . . . . . . . . . . . .    D  ADDR  00A9H     A   
PWMDUTY . . . . . . . . . . . . . . . .    D  ADDR  00AAH     A   
PWR_UP. . . . . . . . . . . . . . . . .    B  ADDR  00A0H.7   A   
PX0 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.0   A   
PX1 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.2   A   
PX2 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.0   A   
PX3 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.1   A   
PX4 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.2   A   
PX5 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.3   A   
RADIO . . . . . . . . . . . . . . . . .    D  ADDR  00A0H     A   
RB8 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.2   A   
RCAP2H. . . . . . . . . . . . . . . . .    D  ADDR  00CBH     A   
RCAP2L. . . . . . . . . . . . . . . . .    D  ADDR  00CAH     A   
RCLK. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.5   A   
REGX_CTRL . . . . . . . . . . . . . . .    D  ADDR  00ADH     A   
REGX_LSB. . . . . . . . . . . . . . . .    D  ADDR  00ACH     A   
REGX_MSB. . . . . . . . . . . . . . . .    D  ADDR  00ABH     A   
REN . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.4   A   
RI. . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.0   A   
RS0 . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.3   A   
RS1 . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.4   A   
RSTREAS . . . . . . . . . . . . . . . .    D  ADDR  00B1H     A   
RXD . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.1   A   
SBUF. . . . . . . . . . . . . . . . . .    D  ADDR  0099H     A   
SCON. . . . . . . . . . . . . . . . . .    D  ADDR  0098H     A   
SEG?140 . . . . . . . . . . . . . . . .    D  ADDR  0004H     R   SEG=?DT?ECO_PAGE_MANAGER?ECO_PAGE
SM0 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.7   A   
SM1 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.6   A   
SM2 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.5   A   
SP. . . . . . . . . . . . . . . . . . .    D  ADDR  0081H     A   
SPC_FNC . . . . . . . . . . . . . . . .    D  ADDR  008FH     A   
SPI_CTRL. . . . . . . . . . . . . . . .    D  ADDR  00B3H     A   
SPI_DATA. . . . . . . . . . . . . . . .    D  ADDR  00B2H     A   
SPICLK. . . . . . . . . . . . . . . . .    D  ADDR  00B4H     A   
T0. . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.5   A   
T1. . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.6   A   
T1_1V2. . . . . . . . . . . . . . . . .    D  ADDR  00BCH     A   
T2. . . . . . . . . . . . . . . . . . .    B  ADDR  0090H.0   A   
T2_1V2. . . . . . . . . . . . . . . . .    D  ADDR  00BDH     A   
T2CON . . . . . . . . . . . . . . . . .    D  ADDR  00C8H     A   
TB8 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.3   A   
TCLK. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.4   A   
TCON. . . . . . . . . . . . . . . . . .    D  ADDR  0088H     A   
TEST_MODE . . . . . . . . . . . . . . .    D  ADDR  00B7H     A   
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/24/09 16:54:28 PAGE    17

TF0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.5   A   
TF1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.7   A   
TF2 . . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.7   A   
TH0 . . . . . . . . . . . . . . . . . .    D  ADDR  008CH     A   
TH1 . . . . . . . . . . . . . . . . . .    D  ADDR  008DH     A   
TH2 . . . . . . . . . . . . . . . . . .    D  ADDR  00CDH     A   
TI. . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.1   A   
TICK_DV . . . . . . . . . . . . . . . .    D  ADDR  00B5H     A   
TL0 . . . . . . . . . . . . . . . . . .    D  ADDR  008AH     A   
TL1 . . . . . . . . . . . . . . . . . .    D  ADDR  008BH     A   
TL2 . . . . . . . . . . . . . . . . . .    D  ADDR  00CCH     A   
TMOD. . . . . . . . . . . . . . . . . .    D  ADDR  0089H     A   
TR0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.4   A   
TR1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.6   A   
TR2 . . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.2   A   
TXD . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.2   A   
WDTI. . . . . . . . . . . . . . . . . .    B  ADDR  00D8H.3   A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S).
