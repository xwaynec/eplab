; ./main.src generated from: .\main.c
; COMPILER INVOKED BY:
;        C:\Keil\C51\BIN\C51.exe .\main.c BROWSE DEBUG CODE LISTINCLUDE SYMBOLS PREPRINT ROM(LARGE) INCDIR(../../Include) SRC(./main.src)

$NOMOD51

NAME	MAIN

PWR_UP	BIT	0A0H.7
P0	DATA	080H
P1	DATA	090H
AC	BIT	0D0H.6
T0	BIT	080H.5
SPI_CTRL	DATA	0B3H
T1	BIT	080H.6
EA	BIT	0A8H.7
T2	BIT	090H.0
CE	BIT	0A0H.6
DEV_OFFSET	DATA	0BEH
CLK1	BIT	0A0H.1
DIN0	BIT	090H.2
CLK2	BIT	0A0H.5
DIO0	BIT	090H.0
DPH0	DATA	083H
DIO1	BIT	090H.1
IE	DATA	0A8H
DPH1	DATA	085H
DIO2	BIT	080H.0
DIO3	BIT	080H.1
P0_0	BIT	080H.0
P1_0	BIT	090H.0
DIO4	BIT	080H.2
P0_1	BIT	080H.1
DPL0	DATA	082H
P1_1	BIT	090H.1
DIO5	BIT	080H.3
P0_2	BIT	080H.2
DPL1	DATA	084H
P1_2	BIT	090H.2
DIO6	BIT	080H.4
P0_3	BIT	080H.3
DIO7	BIT	080H.5
P0_4	BIT	080H.4
ADCSTATIC	DATA	0A4H
DIO8	BIT	080H.6
P0_5	BIT	080H.5
EXF2	BIT	0C8H.6
CS	BIT	0A0H.3
DIO9	BIT	080H.7
P0_6	BIT	080H.6
P0_7	BIT	080H.7
ES	BIT	0A8H.4
IP	DATA	0B8H
DATA?	BIT	0A0H.0
RI	BIT	098H.0
CY	BIT	0D0H.7
TI	BIT	098H.1
T1_1V2	DATA	0BCH
SPC_FNC	DATA	08FH
T2_1V2	DATA	0BDH
RCAP2H	DATA	0CBH
PS	BIT	0B8H.4
SP	DATA	081H
OV	BIT	0D0H.2
CK_CTRL	DATA	0B6H
RCAP2L	DATA	0CAH
TICK_DV	DATA	0B5H
RSTREAS	DATA	0B1H
C_T2	BIT	0C8H.1
EWDI	BIT	0E8H.4
ADCCON	DATA	0A1H
RCLK	BIT	0C8H.5
ADCDATAH	DATA	0A2H
EXIF	DATA	091H
TCLK	BIT	0C8H.4
DR2_CE	BIT	0A0H.6
ADCDATAL	DATA	0A3H
SBUF	DATA	099H
PCON	DATA	087H
SCON	DATA	098H
PWDI	BIT	0F8H.4
TMOD	DATA	089H
TCON	DATA	088H
WDTI	BIT	0D8H.3
PWMDUTY	DATA	0AAH
IE0	BIT	088H.1
IE1	BIT	088H.3
P0_DIR	DATA	094H
B	DATA	0F0H
P1_DIR	DATA	096H
P0_ALT	DATA	095H
P1_ALT	DATA	097H
CP_RL2	BIT	0C8H.0
DR1	BIT	0A0H.2
ACC	DATA	0E0H
DR2	BIT	0A0H.6
TEST_MODE	DATA	0B7H
SPICLK	DATA	0B4H
CT2	BIT	0C8H.1
ET0	BIT	0A8H.1
ET1	BIT	0A8H.3
TF0	BIT	088H.5
INT0_N	BIT	080H.3
ET2	BIT	0A8H.5
TF1	BIT	088H.7
INT1_N	BIT	080H.4
TF2	BIT	0C8H.7
RB8	BIT	098H.2
TH0	DATA	08CH
EX0	BIT	0A8H.0
IT0	BIT	088H.0
TH1	DATA	08DH
EX1	BIT	0A8H.2
TB8	BIT	098H.3
IT1	BIT	088H.2
TH2	DATA	0CDH
REGX_CTRL	DATA	0ADH
EX2	BIT	0E8H.0
P	BIT	0D0H.0
EX3	BIT	0E8H.1
SM0	BIT	098H.7
TL0	DATA	08AH
EX4	BIT	0E8H.2
SM1	BIT	098H.6
TL1	DATA	08BH
EX5	BIT	0E8H.3
SM2	BIT	098H.5
TL2	DATA	0CCH
EIE	DATA	0E8H
PT0	BIT	0B8H.1
RS0	BIT	0D0H.3
PT1	BIT	0B8H.3
RS1	BIT	0D0H.4
PT2	BIT	0B8H.5
TR0	BIT	088H.4
PWMCON	DATA	0A9H
TR1	BIT	088H.6
TR2	BIT	0C8H.2
PX0	BIT	0B8H.0
PX1	BIT	0B8H.2
PX2	BIT	0F8H.0
PX3	BIT	0F8H.1
PX4	BIT	0F8H.2
DPH	DATA	083H
PX5	BIT	0F8H.3
EIP	DATA	0F8H
DPL	DATA	082H
EXEN2	BIT	0C8H.3
CPRL2	BIT	0C8H.0
REN	BIT	098H.4
T2CON	DATA	0C8H
DPS	DATA	086H
SPI_DATA	DATA	0B2H
MPAGE	DATA	092H
RXD	BIT	080H.1
DOUT2	BIT	0A0H.4
EICON	DATA	0D8H
CKCON	DATA	08EH
TXD	BIT	080H.2
RADIO	DATA	0A0H
PWM	BIT	080H.7
F0	BIT	0D0H.5
F1	BIT	0D0H.1
REGX_LSB	DATA	0ACH
PSW	DATA	0D0H
REGX_MSB	DATA	0ABH
?PR?main?MAIN        SEGMENT CODE 
?DT?main?MAIN        SEGMENT DATA OVERLAYABLE 
?C_INITSEG           SEGMENT CODE 
?DT?MAIN             SEGMENT DATA 
?ID?MAIN             SEGMENT IDATA 
	EXTRN	CODE (_mdelay)
	EXTRN	CODE (_rf_configure)
	EXTRN	CODE (_adc_read)
	EXTRN	CODE (_adc_init)
	EXTRN	CODE (eco_page_init)
	EXTRN	CODE (_rf_send)
	EXTRN	DATA (?_rf_send?BYTE)
	EXTRN	CODE (_store_cpu_rate)
	EXTRN	CODE (rf_init)
	EXTRN	CODE (?C_STARTUP)
	PUBLIC	rf_data
	PUBLIC	dst_addr
	PUBLIC	msg
	PUBLIC	cfg
	PUBLIC	main
	EXTRN   CODE (eco_page_manager)
    EXTRN   DATA (ECO_PAGE_ADDR)
    EXTRN   DATA (ECO_PAGE_SPI_CONN)
    EXTRN   IDATA (ECO_PAGE_REGISTER1)
    EXTRN   IDATA (ECO_PAGE_REGISTER2)
    EXTRN   IDATA (ECO_PAGE_REGISTER3)
    EXTRN   IDATA (ECO_PAGE_REGISTER4)
    EXTRN   IDATA (ECO_PAGE_REGISTER5)
    EXTRN   IDATA (ECO_PAGE_REGISTER6)
    EXTRN   IDATA (ECO_PAGE_REGISTER7)

	RSEG  ?DT?main?MAIN
?main?BYTE:
	ORG  2
      acc_x?040:   DS   2
	ORG  4
      acc_y?041:   DS   2
	ORG  6
      acc_z?042:   DS   2
	ORG  0
          i?043:   DS   2

	RSEG  ?DT?MAIN
            cfg:   DS   3
       dst_addr:   DS   3
        rf_data:   DS   15

	RSEG  ?ID?MAIN
            msg:   DS   20

	RSEG  ?C_INITSEG
	DB	00FH
	DB	rf_data
	DB	000H
	DB	0A0H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	000H
	DB	0F2H
	DB	0F2H
	DB	0F2H
	DB	0F2H
	DB	0F2H
	DB	063H
	DB	06FH
	DB	0ECH

	DB	003H
	DB	cfg
	DB	000H
	DW	rf_data + 0

	DB	003H
	DB	dst_addr
	DB	0F1H
	DB	0F1H
	DB	0F1H

; #include "Eco/reg24e1.h"
; #include "Eco/eco_sys.h"
; #include "utils/utils.h"
; #include "serial/serial.h"
; #include "isr/isr_rf.h"
; #include "eeprom/eeprom.h"
; #include "eco_page.h"
; #include "adc/adc.h"
; 
; 
; //#include <math.h> /* for log */
; 
; 
; 
; struct rf_config rf_data = { {0x00}, /* data2 width */
; 	{0xA0}, /* data1 width */ 
; 	{0x00, 0x00, 0x00, 0x00, 0x00}, /* addr2 */
; 	{0xF2, 0xF2, 0xF2, 0xF2, 0xF2}, /* addr1, host addr */
; 	{0x63}, /* 24-bit address, 16-bit CRC */
; 	{0x6f, 0xEC} };
; struct rf_config *cfg = &rf_data;
; char dst_addr[3] = {0xF1, 0xF1, 0xF1};
; char idata msg[20];
; 
; 
; /*void blink2()
; {
; 	int i;
; 	for(i=0;i<4;i++)
; 	{
; 		blink_led();
; 		mdelay(400);
; 	}
; 	mdelay(1000);
; 
; }
; 
; void blink4()
; {
; 	int i;
; 	for(i=0;i<8;i++)
; 	{
; 		blink_led();
; 		mdelay(400);
; 	}	
; 	mdelay(1000);	
; }
; 
; void blink6()
; {
; 	int i;
; 	for(i=0;i<12;i++)
; 	{
; 		blink_led();
; 		mdelay(400);
; 	}	
; 	mdelay(1000);
; 	
; }
; */
; 
; int main()

	RSEG  ?PR?main?MAIN
main:
	USING	0
			; SOURCE LINE # 62
; {
			; SOURCE LINE # 63
; 	unsigned int i = 0;
			; SOURCE LINE # 64
	CLR  	A
	MOV  	i?043,A
	MOV  	i?043+01H,A
; 	store_cpu_rate(16);
			; SOURCE LINE # 65
	MOV  	R7,#010H
	MOV  	R6,A
	LCALL	_store_cpu_rate
; 	P0_DIR &= ~0x20;
			; SOURCE LINE # 66
	ANL  	P0_DIR,#0DFH
; 	P0_ALT &= ~0x20;
			; SOURCE LINE # 67
	ANL  	P0_ALT,#0DFH
; 
; 	adc_init(ADC_CLK_D8,ADC_RES_12,EXTREF);
			; SOURCE LINE # 69
	;----------start----------
	;	MOV  	R3,#010H

	MOV	R0,#LOW (ECO_PAGE_REGISTER3)
	MOV	@R0,#010H
	;----------end----------
	;----------start----------
	;	MOV  	R5,#03H

	MOV	R0,#LOW (ECO_PAGE_REGISTER5)
	MOV	@R0,#03H
	;----------end----------
	;----------start----------
	;	MOV  	R7,#020H

	MOV	R0,#LOW (ECO_PAGE_REGISTER7)
	MOV	@R0,#020H
	;----------end----------
	;LCALL----------start----------
;	LCALL	_adc_init

	MOV	ECO_PAGE_SPI_CONN,SPI_CTRL
	MOV	ECO_PAGE_ADDR,#HIGH (_adc_init)
	MOV	ECO_PAGE_ADDR+01H,#LOW (_adc_init)
	LCALL	eco_page_manager
	;LCALL----------end----------

; 
; 	rf_init();
			; SOURCE LINE # 71
	LCALL	rf_init
; 	rf_configure(cfg);
			; SOURCE LINE # 72
	MOV  	R3,cfg
	MOV  	R2,cfg+01H
	MOV  	R1,cfg+02H
	LCALL	_rf_configure
; 	//serial_init(19200);	
; 	eco_page_init();
			; SOURCE LINE # 74
	LCALL	eco_page_init
; 
; 	for(i=0;i<6;i++)
			; SOURCE LINE # 76
	CLR  	A
	MOV  	i?043,A
	MOV  	i?043+01H,A
?C0001:
; 	{
			; SOURCE LINE # 77
; 		blink_led();
			; SOURCE LINE # 78
	XRL  	P0,#020H
; 		mdelay(300);
			; SOURCE LINE # 79
	MOV  	R7,#02CH
	MOV  	R6,#01H
	LCALL	_mdelay
; 	}
			; SOURCE LINE # 80
	INC  	i?043+01H
	MOV  	A,i?043+01H
	JNZ  	?C0007
	INC  	i?043
?C0007:
	CLR  	C
	SUBB 	A,#06H
	MOV  	A,i?043
	SUBB 	A,#00H
	JC   	?C0001
?C0002:
; 	
; 	mdelay(1000);
			; SOURCE LINE # 82
	MOV  	R7,#0E8H
	MOV  	R6,#03H
	LCALL	_mdelay
?C0004:
; 
; 	while(1)
			; SOURCE LINE # 84
; 	{
			; SOURCE LINE # 85
; 		//blink4();
; 		int acc_x,acc_y,acc_z;
; 		acc_x = adc_read(X_AXIS);
			; SOURCE LINE # 88
	;----------start----------
	;	MOV  	R7,#03H

	MOV	R0,#LOW (ECO_PAGE_REGISTER7)
	MOV	@R0,#03H
	;----------end----------
	;LCALL----------start----------
;	LCALL	_adc_read

	MOV	ECO_PAGE_SPI_CONN,SPI_CTRL
	MOV	ECO_PAGE_ADDR,#HIGH (_adc_read)
	MOV	ECO_PAGE_ADDR+01H,#LOW (_adc_read)
	LCALL	eco_page_manager
	;LCALL----------end----------

	MOV  	acc_x?040,R6
	MOV  	acc_x?040+01H,R7
; 		acc_y = adc_read(Y_AXIS);
			; SOURCE LINE # 89
	;----------start----------
	;	MOV  	R7,#04H

	MOV	R0,#LOW (ECO_PAGE_REGISTER7)
	MOV	@R0,#04H
	;----------end----------
	;LCALL----------start----------
;	LCALL	_adc_read

	MOV	ECO_PAGE_SPI_CONN,SPI_CTRL
	MOV	ECO_PAGE_ADDR,#HIGH (_adc_read)
	MOV	ECO_PAGE_ADDR+01H,#LOW (_adc_read)
	LCALL	eco_page_manager
	;LCALL----------end----------

	MOV  	acc_y?041,R6
	MOV  	acc_y?041+01H,R7
; 		acc_z = adc_read(Z_AXIS);
			; SOURCE LINE # 90
	;----------start----------
	;	MOV  	R7,#06H

	MOV	R0,#LOW (ECO_PAGE_REGISTER7)
	MOV	@R0,#06H
	;----------end----------
	;LCALL----------start----------
;	LCALL	_adc_read

	MOV	ECO_PAGE_SPI_CONN,SPI_CTRL
	MOV	ECO_PAGE_ADDR,#HIGH (_adc_read)
	MOV	ECO_PAGE_ADDR+01H,#LOW (_adc_read)
	LCALL	eco_page_manager
	;LCALL----------end----------

	MOV  	acc_z?042,R6
	MOV  	acc_z?042+01H,R7
; 		
; 		msg[0] = acc_x & 0x00FF;
			; SOURCE LINE # 92
	MOV  	A,acc_x?040+01H
	MOV  	R0,#LOW (msg)
	MOV  	@R0,A
; 		msg[1] = acc_x >> 8;
			; SOURCE LINE # 93
	MOV  	A,acc_x?040
	MOV  	R7,A
	RLC  	A
	SUBB 	A,ACC
	INC  	R0
	MOV  	@R0,AR7
; 
; 		msg[2] = acc_y & 0x00FF;
			; SOURCE LINE # 95
	MOV  	A,acc_y?041+01H
	INC  	R0
	MOV  	@R0,A
; 		msg[3] = acc_y >> 8;
			; SOURCE LINE # 96
	MOV  	A,acc_y?041
	MOV  	R7,A
	RLC  	A
	SUBB 	A,ACC
	INC  	R0
	MOV  	@R0,AR7
; 		
; 		msg[4] = acc_z & 0x00FF;
			; SOURCE LINE # 98
	MOV  	A,acc_z?042+01H
	INC  	R0
	MOV  	@R0,A
; 		msg[5] = acc_z >> 8;
			; SOURCE LINE # 99
	MOV  	A,acc_z?042
	MOV  	R7,A
	RLC  	A
	SUBB 	A,ACC
	INC  	R0
	MOV  	@R0,AR7
; 	
; 		rf_send(dst_addr, 3, msg, 20);
			; SOURCE LINE # 101
	MOV  	?_rf_send?BYTE+04H,#00H
	MOV  	?_rf_send?BYTE+05H,#HIGH (msg)
	MOV  	?_rf_send?BYTE+06H,#LOW (msg)
	MOV  	?_rf_send?BYTE+07H,#014H
	;----------start----------
	;	MOV  	R3,#00H

	MOV	R0,#LOW (ECO_PAGE_REGISTER3)
	MOV	@R0,#00H
	;----------end----------
	;----------start----------
	;	MOV  	R2,#HIGH (dst_addr)

	MOV	R0,#LOW (ECO_PAGE_REGISTER2)
	MOV	@R0,#HIGH (dst_addr)
	;----------end----------
	;----------start----------
	;	MOV  	R1,#LOW (dst_addr)

	MOV	R0,#LOW (ECO_PAGE_REGISTER1)
	MOV	@R0,#LOW (dst_addr)
	;----------end----------
	;----------start----------
	;	MOV  	R5,#03H

	MOV	R0,#LOW (ECO_PAGE_REGISTER5)
	MOV	@R0,#03H
	;----------end----------
	;LCALL----------start----------
;	LCALL	_rf_send

	MOV	ECO_PAGE_SPI_CONN,SPI_CTRL
	MOV	ECO_PAGE_ADDR,#HIGH (_rf_send)
	MOV	ECO_PAGE_ADDR+01H,#LOW (_rf_send)
	LCALL	eco_page_manager
	;LCALL----------end----------

; 
; 		//blink2();
; 		mdelay(200);
			; SOURCE LINE # 104
	MOV  	R7,#0C8H
	MOV  	R6,#00H
	LCALL	_mdelay
; 		blink_led();
			; SOURCE LINE # 105
	XRL  	P0,#020H
; 		//mdelay(200);
; 	}
			; SOURCE LINE # 107
	LJMP 	?C0004
; END OF main

	END
