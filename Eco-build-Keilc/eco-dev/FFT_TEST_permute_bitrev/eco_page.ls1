AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/06/09 14:53:36 PAGE     1


MACRO ASSEMBLER AX51 V3.06a
OBJECT MODULE PLACED IN .\eco_page.obj
ASSEMBLER INVOKED BY: C:\Keil\C51\BIN\AX51.exe .\eco_page.src EP DEBUG SYMBOLS OJ(.\eco_page.obj) PR(.\eco_page.ls1) 

LOC    OBJ             LINE     SOURCE

                          1     ; ./eco_page.src generated from: .\eco_page.c
                          2     ; COMPILER INVOKED BY:
                          3     ;        C:\Keil\C51\BIN\C51.exe .\eco_page.c BROWSE DEBUG CODE LISTINCLUDE SYMBOLS PREP
                               RINT ROM(LARGE) INCDIR(../../Include) SRC(./eco_page.src)
                          4     
                          5     $nomod51 
                          6     
                          7     NAME    ECO_PAGE
                          8     
 00A0.7                   9     PWR_UP  BIT     0A0H.7
 0080                    10     P0      DATA    080H
 0090                    11     P1      DATA    090H
 00D0.6                  12     AC      BIT     0D0H.6
 0080.5                  13     T0      BIT     080H.5
 00B3                    14     SPI_CTRL        DATA    0B3H
 0080.6                  15     T1      BIT     080H.6
 00A8.7                  16     EA      BIT     0A8H.7
 0090.0                  17     T2      BIT     090H.0
 00A0.6                  18     CE      BIT     0A0H.6
 00BE                    19     DEV_OFFSET      DATA    0BEH
 00A0.1                  20     CLK1    BIT     0A0H.1
 0090.2                  21     DIN0    BIT     090H.2
 00A0.5                  22     CLK2    BIT     0A0H.5
 0090.0                  23     DIO0    BIT     090H.0
 0083                    24     DPH0    DATA    083H
 0090.1                  25     DIO1    BIT     090H.1
 00A8                    26     IE      DATA    0A8H
 0085                    27     DPH1    DATA    085H
 0080.0                  28     DIO2    BIT     080H.0
 0080.1                  29     DIO3    BIT     080H.1
 0080.0                  30     P0_0    BIT     080H.0
 0090.0                  31     P1_0    BIT     090H.0
 0080.2                  32     DIO4    BIT     080H.2
 0080.1                  33     P0_1    BIT     080H.1
 0082                    34     DPL0    DATA    082H
 0090.1                  35     P1_1    BIT     090H.1
 0080.3                  36     DIO5    BIT     080H.3
 0080.2                  37     P0_2    BIT     080H.2
 0084                    38     DPL1    DATA    084H
 0090.2                  39     P1_2    BIT     090H.2
 0080.4                  40     DIO6    BIT     080H.4
 0080.3                  41     P0_3    BIT     080H.3
 0080.5                  42     DIO7    BIT     080H.5
 0080.4                  43     P0_4    BIT     080H.4
 00A4                    44     ADCSTATIC       DATA    0A4H
 0080.6                  45     DIO8    BIT     080H.6
 0080.5                  46     P0_5    BIT     080H.5
 00C8.6                  47     EXF2    BIT     0C8H.6
 00A0.3                  48     CS      BIT     0A0H.3
 0080.7                  49     DIO9    BIT     080H.7
 0080.6                  50     P0_6    BIT     080H.6
 0080.7                  51     P0_7    BIT     080H.7
 00A8.4                  52     ES      BIT     0A8H.4
 00B8                    53     IP      DATA    0B8H
 00A0.0                  54     DATA?   BIT     0A0H.0
 0098.0                  55     RI      BIT     098H.0
 00D0.7                  56     CY      BIT     0D0H.7
 0098.1                  57     TI      BIT     098H.1
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/06/09 14:53:36 PAGE     2

 00BC                    58     T1_1V2  DATA    0BCH
 008F                    59     SPC_FNC DATA    08FH
 00BD                    60     T2_1V2  DATA    0BDH
 00CB                    61     RCAP2H  DATA    0CBH
 00B8.4                  62     PS      BIT     0B8H.4
 0081                    63     SP      DATA    081H
 00D0.2                  64     OV      BIT     0D0H.2
 00B6                    65     CK_CTRL DATA    0B6H
 00CA                    66     RCAP2L  DATA    0CAH
 00B5                    67     TICK_DV DATA    0B5H
 00B1                    68     RSTREAS DATA    0B1H
 00C8.1                  69     C_T2    BIT     0C8H.1
 00E8.4                  70     EWDI    BIT     0E8H.4
 00A1                    71     ADCCON  DATA    0A1H
 00C8.5                  72     RCLK    BIT     0C8H.5
 00A2                    73     ADCDATAH        DATA    0A2H
 0091                    74     EXIF    DATA    091H
 00C8.4                  75     TCLK    BIT     0C8H.4
 00A0.6                  76     DR2_CE  BIT     0A0H.6
 00A3                    77     ADCDATAL        DATA    0A3H
 0099                    78     SBUF    DATA    099H
 0087                    79     PCON    DATA    087H
 0098                    80     SCON    DATA    098H
 00F8.4                  81     PWDI    BIT     0F8H.4
 0089                    82     TMOD    DATA    089H
 0088                    83     TCON    DATA    088H
 00D8.3                  84     WDTI    BIT     0D8H.3
 00AA                    85     PWMDUTY DATA    0AAH
 0088.1                  86     IE0     BIT     088H.1
 0088.3                  87     IE1     BIT     088H.3
 0094                    88     P0_DIR  DATA    094H
 00F0                    89     B       DATA    0F0H
 0096                    90     P1_DIR  DATA    096H
 0095                    91     P0_ALT  DATA    095H
 0097                    92     P1_ALT  DATA    097H
 00C8.0                  93     CP_RL2  BIT     0C8H.0
 00A0.2                  94     DR1     BIT     0A0H.2
 00E0                    95     ACC     DATA    0E0H
 00A0.6                  96     DR2     BIT     0A0H.6
 00B7                    97     TEST_MODE       DATA    0B7H
 00B4                    98     SPICLK  DATA    0B4H
 00C8.1                  99     CT2     BIT     0C8H.1
 00A8.1                 100     ET0     BIT     0A8H.1
 00A8.3                 101     ET1     BIT     0A8H.3
 0088.5                 102     TF0     BIT     088H.5
 0080.3                 103     INT0_N  BIT     080H.3
 00A8.5                 104     ET2     BIT     0A8H.5
 0088.7                 105     TF1     BIT     088H.7
 0080.4                 106     INT1_N  BIT     080H.4
 00C8.7                 107     TF2     BIT     0C8H.7
 0098.2                 108     RB8     BIT     098H.2
 008C                   109     TH0     DATA    08CH
 00A8.0                 110     EX0     BIT     0A8H.0
 0088.0                 111     IT0     BIT     088H.0
 008D                   112     TH1     DATA    08DH
 00A8.2                 113     EX1     BIT     0A8H.2
 0098.3                 114     TB8     BIT     098H.3
 0088.2                 115     IT1     BIT     088H.2
 00CD                   116     TH2     DATA    0CDH
 00AD                   117     REGX_CTRL       DATA    0ADH
 00E8.0                 118     EX2     BIT     0E8H.0
 00D0.0                 119     P       BIT     0D0H.0
 00E8.1                 120     EX3     BIT     0E8H.1
 0098.7                 121     SM0     BIT     098H.7
 008A                   122     TL0     DATA    08AH
 00E8.2                 123     EX4     BIT     0E8H.2
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/06/09 14:53:36 PAGE     3

 0098.6                 124     SM1     BIT     098H.6
 008B                   125     TL1     DATA    08BH
 00E8.3                 126     EX5     BIT     0E8H.3
 0098.5                 127     SM2     BIT     098H.5
 00CC                   128     TL2     DATA    0CCH
 00E8                   129     EIE     DATA    0E8H
 00B8.1                 130     PT0     BIT     0B8H.1
 00D0.3                 131     RS0     BIT     0D0H.3
 00B8.3                 132     PT1     BIT     0B8H.3
 00D0.4                 133     RS1     BIT     0D0H.4
 00B8.5                 134     PT2     BIT     0B8H.5
 0088.4                 135     TR0     BIT     088H.4
 00A9                   136     PWMCON  DATA    0A9H
 0088.6                 137     TR1     BIT     088H.6
 00C8.2                 138     TR2     BIT     0C8H.2
 00B8.0                 139     PX0     BIT     0B8H.0
 00B8.2                 140     PX1     BIT     0B8H.2
 00F8.0                 141     PX2     BIT     0F8H.0
 00F8.1                 142     PX3     BIT     0F8H.1
 00F8.2                 143     PX4     BIT     0F8H.2
 0083                   144     DPH     DATA    083H
 00F8.3                 145     PX5     BIT     0F8H.3
 00F8                   146     EIP     DATA    0F8H
 0082                   147     DPL     DATA    082H
 00C8.3                 148     EXEN2   BIT     0C8H.3
 00C8.0                 149     CPRL2   BIT     0C8H.0
 0098.4                 150     REN     BIT     098H.4
 00C8                   151     T2CON   DATA    0C8H
 0086                   152     DPS     DATA    086H
 00B2                   153     SPI_DATA        DATA    0B2H
 0092                   154     MPAGE   DATA    092H
 0080.1                 155     RXD     BIT     080H.1
 00A0.4                 156     DOUT2   BIT     0A0H.4
 00D8                   157     EICON   DATA    0D8H
 008E                   158     CKCON   DATA    08EH
 0080.2                 159     TXD     BIT     080H.2
 00A0                   160     RADIO   DATA    0A0H
 0080.7                 161     PWM     BIT     080H.7
 00D0.5                 162     F0      BIT     0D0H.5
 00D0.1                 163     F1      BIT     0D0H.1
 00AC                   164     REGX_LSB        DATA    0ACH
 00D0                   165     PSW     DATA    0D0H
 00AB                   166     REGX_MSB        DATA    0ABH
------                  167     ?PR?eco_page_init?ECO_PAGE               SEGMENT CODE 
------                  168     ?PR?eco_page_manager?ECO_PAGE            SEGMENT CODE 
------                  169     ?DT?eco_page_manager?ECO_PAGE            SEGMENT DATA OVERLAYABLE 
------                  170     ?DT?ECO_PAGE         SEGMENT DATA 
------                  171     ?ID?ECO_PAGE         SEGMENT IDATA 
------                  172     ?ID?eco_page_manager?ECO_PAGE            SEGMENT IDATA OVERLAYABLE 
                        173             EXTRN   CODE (_eeprom_read)
                        174             EXTRN   CODE (eeprom_init)
                        175             PUBLIC  ECO_PAGE_TABLE_INDEX
                        176             PUBLIC  ECO_PAGE_REGISTER7
                        177             PUBLIC  ECO_PAGE_REGISTER6
                        178             PUBLIC  ECO_PAGE_REGISTER5
                        179             PUBLIC  ECO_PAGE_REGISTER4
                        180             PUBLIC  ECO_PAGE_ADDR
                        181             PUBLIC  ECO_PAGE_REGISTER3
                        182             PUBLIC  ECO_PAGE_REGISTER2
                        183             PUBLIC  ECO_PAGE_REGISTER1
                        184             PUBLIC  ECO_PAGE_PREV_VID
                        185             PUBLIC  ECO_PAGE_PREV_PID
                        186             PUBLIC  ECO_PAGE_SPI_CONN
                        187             PUBLIC  ECO_PAGE_TABLE
                        188             PUBLIC  eco_page_manager
                        189             PUBLIC  eco_page_init
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/06/09 14:53:36 PAGE     4

                        190     
------                  191             RSEG  ?DT?eco_page_manager?ECO_PAGE
000000                  192     ?eco_page_manager?BYTE:
000000                  193             seg?140:   DS   2
                        194     
------                  195             RSEG  ?DT?ECO_PAGE
000000                  196      ECO_PAGE_TABLE:   DS   4
000004                  197     ECO_PAGE_SPI_CONN:   DS   1
000005                  198     ECO_PAGE_PREV_PID:   DS   1
000006                  199     ECO_PAGE_PREV_VID:   DS   1
000007                  200       ECO_PAGE_ADDR:   DS   2
000009                  201     ECO_PAGE_TABLE_INDEX:   DS   1
                        202     
------                  203             RSEG  ?ID?ECO_PAGE
000000                  204     ECO_PAGE_REGISTER1:   DS   1
000001                  205     ECO_PAGE_REGISTER2:   DS   1
000002                  206     ECO_PAGE_REGISTER3:   DS   1
000003                  207     ECO_PAGE_REGISTER4:   DS   1
000004                  208     ECO_PAGE_REGISTER5:   DS   1
000005                  209     ECO_PAGE_REGISTER6:   DS   1
000006                  210     ECO_PAGE_REGISTER7:   DS   1
                        211     
------                  212             RSEG  ?ID?eco_page_manager?ECO_PAGE
000000                  213               i?141:   DS   2
                        214     
------                  215             RSEG  ?ID?eco_page_manager?ECO_PAGE
000002                  216      page_index?142:   DS   2
                        217     ; /*
                        218     ;  * Author(s): Wei-Han Chen (Embedded Platform Lab, NTHU)
                        219     ;  * Copyright (c) 2009 National Tsing Hua University (NTHU) 
                        220     ;  * Permission to copy, modify, and distribute this program is granted 
                        221     ;  * for noncommercial purposes, provided the author(s) and copyright
                        222     ;  * notice are retained. All other uses require explicit written
                        223     ;  * permission from NTHU. 
                        224     ;  *
                        225     ;  * Eco Paging Library 
                        226     ;  *
                        227     ;  * Wei-Han Chen <xwaynec@gmail.com> 
                        228     ;  * 2009/2/13
                        229     ;  */
                        230     ; 
                        231     ; #include "eco_page.h"
                        232     ; #include "eeprom/eeprom.h"
                        233     ; 
                        234     ; //control page replacement policy is LRU or Round-Robin
                        235     ; #define PAGE_REPLACEMENT 1
                        236     ; 
                        237     ; //#define ECO_PAGE_SIZE 256
                        238     ; //#define ECO_PAGE_ADDR_OFFSET 11 
                        239     ; 
                        240     ; 
                        241     ; //#define ECO_PAGE_SIZE 128
                        242     ; //#define ECO_PAGE_ADDR_OFFSET 23
                        243     ; 
                        244     ; 
                        245     ; 
                        246     ; //#define ECO_PAGE_SIZE 64
                        247     ; //#define ECO_PAGE_ADDR_OFFSET 47
                        248     ; 
                        249     ; 
                        250     ; #define ECO_PAGE_SIZE 256
                        251     ; #define ECO_PAGE_ADDR_OFFSET 14
                        252     ; 
                        253     ; 
                        254     ; #if ECO_PAGE_SIZE == 64
                        255     ;       
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/06/09 14:53:36 PAGE     5

                        256     ;       #define ECO_PAGE_ENTRY  (64-ECO_PAGE_ADDR_OFFSET)
                        257     ;       #define ECO_PAGE_SHIFT  6
                        258     ;       #define ECO_PAGE_MASK   0x003F
                        259     ;       #define ECO_PAGE_MOV_MASK       0xFFC0
                        260     ; 
                        261     ;       unsigned int idata ECO_PAGE_TABLE[ECO_PAGE_ENTRY];
                        262     ;       //Eco page virtual address id
                        263     ;       unsigned int ECO_PAGE_PREV_VID;
                        264     ;       //Eco page physical address id 
                        265     ;       unsigned int ECO_PAGE_PREV_PID;
                        266     ; 
                        267     ; #elif ECO_PAGE_SIZE == 128
                        268     ;       
                        269     ;       #define ECO_PAGE_ENTRY (32-ECO_PAGE_ADDR_OFFSET)
                        270     ;       #define ECO_PAGE_SHIFT  7
                        271     ;       #define ECO_PAGE_MASK   0x007F
                        272     ;       #define ECO_PAGE_MOV_MASK       0xFF80
                        273     ; 
                        274     ;       unsigned int idata ECO_PAGE_TABLE[ECO_PAGE_ENTRY];
                        275     ;       //Eco page virtual address id
                        276     ;       unsigned int ECO_PAGE_PREV_VID;
                        277     ;       //Eco page physical address id 
                        278     ;       unsigned int ECO_PAGE_PREV_PID;
                        279     ; 
                        280     ; #elif ECO_PAGE_SIZE == 256
                        281     ;       
                        282     ;       #define ECO_PAGE_ENTRY  (16-ECO_PAGE_ADDR_OFFSET)
                        283     ;       #define ECO_PAGE_SHIFT  8       
                        284     ;       #define ECO_PAGE_MASK   0x00FF
                        285     ;       #define ECO_PAGE_MOV_MASK       0xFF00
                        286     ; 
                        287     ;       unsigned int ECO_PAGE_TABLE[ECO_PAGE_ENTRY];
                        288     ;       //Eco page virtual address id
                        289     ;       unsigned char ECO_PAGE_PREV_VID;
                        290     ;       //Eco page physical address id 
                        291     ;       unsigned char ECO_PAGE_PREV_PID;
                        292     ; 
                        293     ; #endif
                        294     ; 
                        295     ; unsigned char ECO_PAGE_TABLE_INDEX;
                        296     ; unsigned int ECO_PAGE_ADDR;
                        297     ; unsigned char ECO_PAGE_SPI_CONN;
                        298     ; 
                        299     ; unsigned char idata ECO_PAGE_REGISTER1;
                        300     ; unsigned char idata ECO_PAGE_REGISTER2;
                        301     ; unsigned char idata ECO_PAGE_REGISTER3;
                        302     ; unsigned char idata ECO_PAGE_REGISTER4;
                        303     ; unsigned char idata ECO_PAGE_REGISTER5;
                        304     ; unsigned char idata ECO_PAGE_REGISTER6;
                        305     ; unsigned char idata ECO_PAGE_REGISTER7;
                        306     ; 
                        307     ; 
                        308     ; void eco_page_init()
                        309     
------                  310             RSEG  ?PR?eco_page_init?ECO_PAGE
000000                  311     eco_page_init:
                        312                             ; SOURCE LINE # 92
                        313     ; {
                        314                             ; SOURCE LINE # 93
                        315     ;       //ECO_PAGE_TABLE_INDEX = ECO_PAGE_ENTRY - 1;
                        316     ;       ECO_PAGE_TABLE_INDEX = 0;       
                        317                             ; SOURCE LINE # 95
000000 E4               318             CLR     A
000001 F500       F     319             MOV     ECO_PAGE_TABLE_INDEX,A
                        320     ;       ECO_PAGE_ADDR = 0;
                        321                             ; SOURCE LINE # 96
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/06/09 14:53:36 PAGE     6

000003 F500       F     322             MOV     ECO_PAGE_ADDR,A
000005 F500       F     323             MOV     ECO_PAGE_ADDR+01H,A
                        324     ;       ECO_PAGE_PREV_VID = 0;
                        325                             ; SOURCE LINE # 97
000007 F500       F     326             MOV     ECO_PAGE_PREV_VID,A
                        327     ;       ECO_PAGE_PREV_PID = 0;
                        328                             ; SOURCE LINE # 98
000009 F500       F     329             MOV     ECO_PAGE_PREV_PID,A
                        330     ; }
                        331                             ; SOURCE LINE # 99
00000B 22               332             RET     
                        333     ; END OF eco_page_init
                        334     
                        335     ; 
                        336     ; 
                        337     ; #if PAGE_REPLACEMENT == 0 
                        338     ; //LRU page replacement
                        339     ; void eco_page_manager()
                        340     ; {
                        341     ;       unsigned int i;
                        342     ;       unsigned int page_index = -1;
                        343     ; 
                        344     ;       //if page id is the same with the last page id
                        345     ;       if((ECO_PAGE_ADDR >> ECO_PAGE_SHIFT) == ECO_PAGE_PREV_PID)
                        346     ;       {
                        347     ;               //virtual address id + function offset
                        348     ;               ECO_PAGE_ADDR = (ECO_PAGE_PREV_VID << ECO_PAGE_SHIFT) + (ECO_PAGE_ADDR &
                                ECO_PAGE_MASK);
                        349     ;               #pragma asm
                        350     ; 
                        351     ;               MOV R0,#LOW (ECO_PAGE_REGISTER1)
                        352     ;               MOV A,@R0
                        353     ;               MOV R0,#LOW (ECO_PAGE_REGISTER2)
                        354     ;               MOV A,@R0
                        355     ;               MOV R0,#LOW (ECO_PAGE_REGISTER3)
                        356     ;               MOV A,@R0
                        357     ;               MOV R0,#LOW (ECO_PAGE_REGISTER4)
                        358     ;               MOV A,@R0
                        359     ;               MOV R0,#LOW (ECO_PAGE_REGISTER5)
                        360     ;               MOV A,@R0
                        361     ;               MOV R0,#LOW (ECO_PAGE_REGISTER6)
                        362     ;               MOV A,@R0
                        363     ;               MOV R0,#LOW (ECO_PAGE_REGISTER7)
                        364     ;               MOV A,@R0
                        365     ;       
                        366     ;               MOV     SPI_CTRL,ECO_PAGE_SPI_CONN
                        367     ;               MOV     DPH,ECO_PAGE_ADDR
                        368     ;               MOV     DPL,ECO_PAGE_ADDR+01H
                        369     ;                               
                        370     ;               CLR     A
                        371     ;               JMP     @A+DPTR
                        372     ;               #pragma endasm
                        373     ;       }
                        374     ; 
                        375     ;       //Check Table   
                        376     ;       for(i=0;i<ECO_PAGE_ENTRY;i++)
                        377     ;       {   
                        378     ;               if((ECO_PAGE_ADDR >> ECO_PAGE_SHIFT) == (ECO_PAGE_TABLE[i] & 0x7FFF))
                        379     ;               {
                        380     ;                       page_index = i;
                        381     ; 
                        382     ;                       //set LRU bit is 1
                        383     ;                       ECO_PAGE_TABLE[i] = ECO_PAGE_TABLE[i] | 0x8000;
                        384     ;                       break;
                        385     ;               }
                        386     ;       }
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/06/09 14:53:36 PAGE     7

                        387     ; 
                        388     ;       if(page_index != -1)
                        389     ;       {
                        390     ;               //store function physical addres id 
                        391     ;               ECO_PAGE_PREV_PID = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;
                        392     ;       
                        393     ;               //memory page is in ram
                        394     ;               ECO_PAGE_ADDR = ((page_index + ECO_PAGE_ADDR_OFFSET) << ECO_PAGE_SHIFT) 
                               + (ECO_PAGE_ADDR & ECO_PAGE_MASK);
                        395     ; 
                        396     ;               //cache the virtual address id
                        397     ;               ECO_PAGE_PREV_VID = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;
                        398     ; 
                        399     ; 
                        400     ;               #pragma asm
                        401     ; 
                        402     ;               MOV R0,#LOW (ECO_PAGE_REGISTER1)
                        403     ;               MOV A,@R0
                        404     ;               MOV R0,#LOW (ECO_PAGE_REGISTER2)
                        405     ;               MOV A,@R0
                        406     ;               MOV R0,#LOW (ECO_PAGE_REGISTER3)
                        407     ;               MOV A,@R0
                        408     ;               MOV R0,#LOW (ECO_PAGE_REGISTER4)
                        409     ;               MOV A,@R0
                        410     ;               MOV R0,#LOW (ECO_PAGE_REGISTER5)
                        411     ;               MOV A,@R0
                        412     ;               MOV R0,#LOW (ECO_PAGE_REGISTER6)
                        413     ;               MOV A,@R0
                        414     ;               MOV R0,#LOW (ECO_PAGE_REGISTER7)
                        415     ;               MOV A,@R0
                        416     ;       
                        417     ;               MOV     SPI_CTRL,ECO_PAGE_SPI_CONN
                        418     ;               MOV     DPH,ECO_PAGE_ADDR
                        419     ;               MOV     DPL,ECO_PAGE_ADDR+01H
                        420     ;                               
                        421     ;               CLR     A
                        422     ;               JMP     @A+DPTR
                        423     ;               #pragma endasm
                        424     ; 
                        425     ;       }       
                        426     ;       else
                        427     ;       {
                        428     ;               //page fault
                        429     ;               for(i=(ECO_PAGE_TABLE_INDEX+1)%ECO_PAGE_ENTRY; ;i=(i+1)%ECO_PAGE_ENTRY)
                        430     ;               {
                        431     ;                       if((ECO_PAGE_TABLE[i] & 0x8000) == 0x8000)
                        432     ;                       {
                        433     ;                               //LRU bit is 1 and then set this bit is 0
                        434     ;                               ECO_PAGE_TABLE[i] = ECO_PAGE_TABLE[i] & 0x7FFF;
                        435     ;                       }
                        436     ;                       else
                        437     ;                       {
                        438     ;                               unsigned char xdata *seg = (unsigned char xdata *)((i + 
                               ECO_PAGE_ADDR_OFFSET) << ECO_PAGE_SHIFT);
                        439     ;                               unsigned int j;
                        440     ;                               
                        441     ;                               //memory page is in ram
                        442     ;                               eeprom_init();
                        443     ; 
                        444     ;                               //mov code from eeprom to external ram
                        445     ;                               for(j=0;j<ECO_PAGE_SIZE;j++)
                        446     ;                               {
                        447     ;                                       *(seg+j) = eeprom_read(ECO_ADDR_SHIFT(ECO_PAGE_A
                               DDR & ECO_PAGE_MOV_MASK ) +j);
                        448     ;                               }
                        449     ;                               
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/06/09 14:53:36 PAGE     8

                        450     ;                               //update page table to connect this physical address id 
                               with virtual address id 
                        451     ;                               ECO_PAGE_TABLE[i] = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;
                        452     ; 
                        453     ;                               //store physical address id
                        454     ;                               ECO_PAGE_PREV_PID = ECO_PAGE_TABLE[i];
                        455     ; 
                        456     ;                               //update page address e.g.  (page_id<<8) + page_offset
                        457     ;                               ECO_PAGE_ADDR = ((i + ECO_PAGE_ADDR_OFFSET) << ECO_PAGE_
                               SHIFT) + (ECO_PAGE_ADDR & ECO_PAGE_MASK);
                        458     ; 
                        459     ;                               //store virtual address id 
                        460     ;                               ECO_PAGE_PREV_VID = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;    
                        461     ; 
                        462     ;                               //mov to the next index
                        463     ;                               ECO_PAGE_TABLE_INDEX = i;
                        464     ;                               #pragma asm
                        465     ; 
                        466     ;                               MOV R0,#LOW (ECO_PAGE_REGISTER1)
                        467     ;                       MOV A,@R0
                        468     ;                               MOV R0,#LOW (ECO_PAGE_REGISTER2)
                        469     ;                       MOV A,@R0
                        470     ;                               MOV R0,#LOW (ECO_PAGE_REGISTER3)
                        471     ;                       MOV A,@R0
                        472     ;                               MOV R0,#LOW (ECO_PAGE_REGISTER4)
                        473     ;                       MOV A,@R0
                        474     ;                               MOV R0,#LOW (ECO_PAGE_REGISTER5)
                        475     ;                       MOV A,@R0
                        476     ;                               MOV R0,#LOW (ECO_PAGE_REGISTER6)
                        477     ;                       MOV A,@R0
                        478     ;                               MOV R0,#LOW (ECO_PAGE_REGISTER7)
                        479     ;                       MOV A,@R0
                        480     ;       
                        481     ;                               MOV     SPI_CTRL,ECO_PAGE_SPI_CONN
                        482     ;                               MOV     DPH,ECO_PAGE_ADDR
                        483     ;                               MOV     DPL,ECO_PAGE_ADDR+01H
                        484     ;                               
                        485     ;                               CLR     A
                        486     ;                               JMP     @A+DPTR
                        487     ;                               #pragma endasm
                        488     ; 
                        489     ;                       }
                        490     ;               }
                        491     ;                       
                        492     ;       }
                        493     ;                               
                        494     ; }
                        495     ; 
                        496     ; #else
                        497     ; 
                        498     ; void eco_page_manager()
                        499     
------                  500             RSEG  ?PR?eco_page_manager?ECO_PAGE
000000                  501     eco_page_manager:
                        502             USING   0
                        503                             ; SOURCE LINE # 263
                        504     ; {
                        505                             ; SOURCE LINE # 264
                        506     ;       unsigned int idata i;
                        507     ;       unsigned int idata page_index = -1; 
                        508                             ; SOURCE LINE # 266
000000 74FF             509             MOV     A,#0FFH
000002 7800       F     510             MOV     R0,#LOW (page_index?142)
000004 F6               511             MOV     @R0,A
000005 08               512             INC     R0
000006 F6               513             MOV     @R0,A
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/06/09 14:53:36 PAGE     9

                        514     ; 
                        515     ;       //Check POP instruction 
                        516     ;       //for(i=0;i<10;i++)
                        517     ;       //{    
                        518     ;       //      blink_led();
                        519     ;       //      mdelay(200);
                        520     ;       //}    
                        521     ;       //mdelay(1000);
                        522     ;       
                        523     ;       //if page id is the same with the last page id
                        524     ;       if((ECO_PAGE_ADDR >> ECO_PAGE_SHIFT) == ECO_PAGE_PREV_PID)
                        525                             ; SOURCE LINE # 277
000007 E500       F     526             MOV     A,ECO_PAGE_ADDR
000009 6500       F     527             XRL     A,ECO_PAGE_PREV_PID
00000B 7001             528             JNZ     ?C0013
00000D E4               529             CLR     A
00000E                  530     ?C0013:
00000E 702E             531             JNZ     ?C0002
                        532     ;       {
                        533                             ; SOURCE LINE # 278
                        534     ;               //virtual address id + function offset
                        535     ;               ECO_PAGE_ADDR = (ECO_PAGE_PREV_VID << ECO_PAGE_SHIFT) + (ECO_PAGE_ADDR &
                                ECO_PAGE_MASK);
                        536                             ; SOURCE LINE # 280
000010 E500       F     537             MOV     A,ECO_PAGE_PREV_VID
000012 FE               538             MOV     R6,A
000013 7C00             539             MOV     R4,#00H
000015 E4               540             CLR     A
000016 2500       F     541             ADD     A,ECO_PAGE_ADDR+01H
000018 F500       F     542             MOV     ECO_PAGE_ADDR+01H,A
00001A EC               543             MOV     A,R4
00001B 3E               544             ADDC    A,R6
00001C F500       F     545             MOV     ECO_PAGE_ADDR,A
                        546     ;               #pragma asm
                        547     ; 
                        548               
                        549     ;               MOV R0,#LOW (ECO_PAGE_REGISTER1)
00001E 7800       F     550               MOV R0,#LOW (ECO_PAGE_REGISTER1)
                        551     ;       MOV A,@R0
000020 E6               552               MOV A,@R0
                        553     ;               MOV R0,#LOW (ECO_PAGE_REGISTER2)
000021 7800       F     554               MOV R0,#LOW (ECO_PAGE_REGISTER2)
                        555     ;       MOV A,@R0
000023 E6               556               MOV A,@R0
                        557     ;               MOV R0,#LOW (ECO_PAGE_REGISTER3)
000024 7800       F     558               MOV R0,#LOW (ECO_PAGE_REGISTER3)
                        559     ;       MOV A,@R0
000026 E6               560               MOV A,@R0
                        561     ;               MOV R0,#LOW (ECO_PAGE_REGISTER4)
000027 7800       F     562               MOV R0,#LOW (ECO_PAGE_REGISTER4)
                        563     ;       MOV A,@R0
000029 E6               564               MOV A,@R0
                        565     ;               MOV R0,#LOW (ECO_PAGE_REGISTER5)
00002A 7800       F     566               MOV R0,#LOW (ECO_PAGE_REGISTER5)
                        567     ;       MOV A,@R0
00002C E6               568               MOV A,@R0
                        569     ;               MOV R0,#LOW (ECO_PAGE_REGISTER6)
00002D 7800       F     570               MOV R0,#LOW (ECO_PAGE_REGISTER6)
                        571     ;       MOV A,@R0
00002F E6               572               MOV A,@R0
                        573     ;               MOV R0,#LOW (ECO_PAGE_REGISTER7)
000030 7800       F     574               MOV R0,#LOW (ECO_PAGE_REGISTER7)
                        575     ;       MOV A,@R0
000032 E6               576               MOV A,@R0
                        577     ;       
                        578               
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/06/09 14:53:36 PAGE    10

                        579     ;               MOV     SPI_CTRL,ECO_PAGE_SPI_CONN
000033 8500B3     F     580               MOV   SPI_CTRL,ECO_PAGE_SPI_CONN
                        581     ;               MOV     DPH,ECO_PAGE_ADDR
000036 850083     F     582               MOV   DPH,ECO_PAGE_ADDR
                        583     ;               MOV     DPL,ECO_PAGE_ADDR+01H
000039 850082     F     584               MOV   DPL,ECO_PAGE_ADDR+01H
                        585     ;               
                        586               
                        587     ;               CLR     A
00003C E4               588               CLR   A
                        589     ;               JMP     @A+DPTR
00003D 73               590               JMP   @A+DPTR
                        591     ;               #pragma endasm
                        592     ;       }       
                        593                             ; SOURCE LINE # 305
00003E                  594     ?C0002:
                        595     ;                               
                        596     ;       //Check Table   
                        597     ;       for(i=0;i<ECO_PAGE_ENTRY;i++)
                        598                             ; SOURCE LINE # 308
00003E E4               599             CLR     A
00003F 7800       F     600             MOV     R0,#LOW (i?141)
000041 F6               601             MOV     @R0,A
000042 08               602             INC     R0
000043 F6               603             MOV     @R0,A
000044                  604     ?C0003:
000044 7800       F     605             MOV     R0,#LOW (i?141)
000046 E6               606             MOV     A,@R0
000047 FE               607             MOV     R6,A
000048 08               608             INC     R0
000049 E6               609             MOV     A,@R0
00004A FF               610             MOV     R7,A
00004B C3               611             CLR     C
00004C 9402             612             SUBB    A,#02H
00004E EE               613             MOV     A,R6
00004F 9400             614             SUBB    A,#00H
000051 502D             615             JNC     ?C0004
                        616     ;       {   
                        617                             ; SOURCE LINE # 309
                        618     ;               if((ECO_PAGE_ADDR >> ECO_PAGE_SHIFT) == ECO_PAGE_TABLE[i])
                        619                             ; SOURCE LINE # 310
000053 EF               620             MOV     A,R7
000054 25E0             621             ADD     A,ACC
000056 2400       F     622             ADD     A,#LOW (ECO_PAGE_TABLE)
000058 F8               623             MOV     R0,A
000059 E6               624             MOV     A,@R0
00005A FC               625             MOV     R4,A
00005B 08               626             INC     R0
00005C E6               627             MOV     A,@R0
00005D FD               628             MOV     R5,A
00005E E500       F     629             MOV     A,ECO_PAGE_ADDR
000060 B50513           630             CJNE    A,AR5,?C0005
000063 E4               631             CLR     A
000064 B5040F           632             CJNE    A,AR4,?C0005
                        633     ;               {
                        634                             ; SOURCE LINE # 311
                        635     ;                       page_index = i;
                        636                             ; SOURCE LINE # 312
000067 7800       F     637             MOV     R0,#LOW (i?141)
000069 E6               638             MOV     A,@R0
00006A FE               639             MOV     R6,A
00006B 08               640             INC     R0
00006C E6               641             MOV     A,@R0
00006D FF               642             MOV     R7,A
00006E 08               643             INC     R0
00006F A606             644             MOV     @R0,AR6
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/06/09 14:53:36 PAGE    11

000071 08               645             INC     R0
000072 A607             646             MOV     @R0,AR7
                        647     ;                       break;
                        648                             ; SOURCE LINE # 313
000074 800A             649             SJMP    ?C0004
                        650     ;               }
                        651                             ; SOURCE LINE # 314
                        652     ;       }
                        653                             ; SOURCE LINE # 315
000076                  654     ?C0005:
000076 7800       F     655             MOV     R0,#LOW (i?141+01H)
000078 06               656             INC     @R0
000079 E6               657             MOV     A,@R0
00007A 18               658             DEC     R0
00007B 70C7             659             JNZ     ?C0003
00007D 06               660             INC     @R0
00007E                  661     ?C0015:
00007E 80C4             662             SJMP    ?C0003
000080                  663     ?C0004:
                        664     ; 
                        665     ;       if(page_index != -1) 
                        666                             ; SOURCE LINE # 317
000080 7800       F     667             MOV     R0,#LOW (page_index?142)
000082 E6               668             MOV     A,@R0
000083 FC               669             MOV     R4,A
000084 08               670             INC     R0
000085 E6               671             MOV     A,@R0
000086 FD               672             MOV     R5,A
000087 F4               673             CPL     A
000088 7002             674             JNZ     ?C0016
00008A EC               675             MOV     A,R4
00008B F4               676             CPL     A
00008C                  677     ?C0016:
00008C 6038             678             JZ      ?C0007
                        679     ;       {  
                        680                             ; SOURCE LINE # 318
                        681     ;               //store function physical addres id 
                        682     ;               ECO_PAGE_PREV_PID = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;
                        683                             ; SOURCE LINE # 320
00008E E500       F     684             MOV     A,ECO_PAGE_ADDR
000090 F500       F     685             MOV     ECO_PAGE_PREV_PID,A
                        686     ;       
                        687     ;               //memory page is in ram
                        688     ;               ECO_PAGE_ADDR = ((page_index + ECO_PAGE_ADDR_OFFSET) << ECO_PAGE_SHIFT) 
                               + (ECO_PAGE_ADDR & ECO_PAGE_MASK);
                        689                             ; SOURCE LINE # 323
000092 ED               690             MOV     A,R5
000093 240E             691             ADD     A,#0EH
000095 FF               692             MOV     R7,A
000096 EF               693             MOV     A,R7
000097 FE               694             MOV     R6,A
000098 7C00             695             MOV     R4,#00H
00009A E4               696             CLR     A
00009B 2500       F     697             ADD     A,ECO_PAGE_ADDR+01H
00009D F500       F     698             MOV     ECO_PAGE_ADDR+01H,A
00009F EC               699             MOV     A,R4
0000A0 3E               700             ADDC    A,R6
0000A1 F500       F     701             MOV     ECO_PAGE_ADDR,A
                        702     ; 
                        703     ;               //cache the virtual address id
                        704     ;               ECO_PAGE_PREV_VID = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;
                        705                             ; SOURCE LINE # 326
0000A3 F500       F     706             MOV     ECO_PAGE_PREV_VID,A
                        707     ; 
                        708     ;               #pragma asm
                        709     ;               MOV R0,#LOW (ECO_PAGE_REGISTER1)
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/06/09 14:53:36 PAGE    12

0000A5 7800       F     710               MOV R0,#LOW (ECO_PAGE_REGISTER1)
                        711     ;       MOV A,@R0
0000A7 E6               712               MOV A,@R0
                        713     ;               MOV R0,#LOW (ECO_PAGE_REGISTER2)
0000A8 7800       F     714               MOV R0,#LOW (ECO_PAGE_REGISTER2)
                        715     ;       MOV A,@R0
0000AA E6               716               MOV A,@R0
                        717     ;               MOV R0,#LOW (ECO_PAGE_REGISTER3)
0000AB 7800       F     718               MOV R0,#LOW (ECO_PAGE_REGISTER3)
                        719     ;       MOV A,@R0
0000AD E6               720               MOV A,@R0
                        721     ;               MOV R0,#LOW (ECO_PAGE_REGISTER4)
0000AE 7800       F     722               MOV R0,#LOW (ECO_PAGE_REGISTER4)
                        723     ;       MOV A,@R0
0000B0 E6               724               MOV A,@R0
                        725     ;               MOV R0,#LOW (ECO_PAGE_REGISTER5)
0000B1 7800       F     726               MOV R0,#LOW (ECO_PAGE_REGISTER5)
                        727     ;       MOV A,@R0
0000B3 E6               728               MOV A,@R0
                        729     ;               MOV R0,#LOW (ECO_PAGE_REGISTER6)
0000B4 7800       F     730               MOV R0,#LOW (ECO_PAGE_REGISTER6)
                        731     ;       MOV A,@R0
0000B6 E6               732               MOV A,@R0
                        733     ;               MOV R0,#LOW (ECO_PAGE_REGISTER7)
0000B7 7800       F     734               MOV R0,#LOW (ECO_PAGE_REGISTER7)
                        735     ;       MOV A,@R0
0000B9 E6               736               MOV A,@R0
                        737     ;       
                        738               
                        739     ;               MOV     SPI_CTRL,ECO_PAGE_SPI_CONN
0000BA 8500B3     F     740               MOV   SPI_CTRL,ECO_PAGE_SPI_CONN
                        741     ;               MOV     DPH,ECO_PAGE_ADDR
0000BD 850083     F     742               MOV   DPH,ECO_PAGE_ADDR
                        743     ;               MOV     DPL,ECO_PAGE_ADDR+01H
0000C0 850082     F     744               MOV   DPL,ECO_PAGE_ADDR+01H
                        745     ;               
                        746               
                        747     ;               CLR     A
0000C3 E4               748               CLR   A
                        749     ;               JMP     @A+DPTR
0000C4 73               750               JMP   @A+DPTR
                        751     ;               #pragma endasm
                        752     ;       }   
                        753                             ; SOURCE LINE # 351
0000C5 22               754             RET     
0000C6                  755     ?C0007:
                        756     ;       else
                        757     ;       {
                        758                             ; SOURCE LINE # 353
                        759     ;               //page fault
                        760     ;               // Move Data from EEPROM to iRAM 
                        761     ;               unsigned char xdata *seg = (unsigned char xdata *)((ECO_PAGE_TABLE_INDEX
                                + ECO_PAGE_ADDR_OFFSET) << ECO_PAGE_SHIFT);
                        762                             ; SOURCE LINE # 356
0000C6 E500       F     763             MOV     A,ECO_PAGE_TABLE_INDEX
0000C8 240E             764             ADD     A,#0EH
0000CA FF               765             MOV     R7,A
0000CB E4               766             CLR     A
0000CC 33               767             RLC     A
0000CD EF               768             MOV     A,R7
0000CE F500       F     769             MOV     seg?140,A
0000D0 750000     F     770             MOV     seg?140+01H,#00H
                        771     ;               
                        772     ;               //memory page is in ram
                        773     ;               eeprom_init();
                        774                             ; SOURCE LINE # 359
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/06/09 14:53:36 PAGE    13

0000D3 120000     E     775             LCALL   eeprom_init
                        776     ; 
                        777     ;               //mov code from eeprom to external ram
                        778     ;               for(i=0;i<ECO_PAGE_SIZE;i++)
                        779                             ; SOURCE LINE # 362
0000D6 E4               780             CLR     A
0000D7 7800       F     781             MOV     R0,#LOW (i?141)
0000D9 F6               782             MOV     @R0,A
0000DA 08               783             INC     R0
0000DB F6               784             MOV     @R0,A
0000DC                  785     ?C0009:
0000DC 7800       F     786             MOV     R0,#LOW (i?141)
0000DE E6               787             MOV     A,@R0
0000DF FE               788             MOV     R6,A
0000E0 08               789             INC     R0
0000E1 E6               790             MOV     A,@R0
0000E2 FF               791             MOV     R7,A
0000E3 C3               792             CLR     C
0000E4 EE               793             MOV     A,R6
0000E5 9401             794             SUBB    A,#01H
0000E7 5029             795             JNC     ?C0010
                        796     ;               {
                        797                             ; SOURCE LINE # 363
                        798     ;                       *(seg+i) = eeprom_read(ECO_ADDR_SHIFT(ECO_PAGE_ADDR & ECO_PAGE_M
                               OV_MASK) +i);
                        799                             ; SOURCE LINE # 364
0000E9 E4               800             CLR     A
0000EA 2403             801             ADD     A,#03H
0000EC FD               802             MOV     R5,A
0000ED E4               803             CLR     A
0000EE 3500       F     804             ADDC    A,ECO_PAGE_ADDR
0000F0 CD               805             XCH     A,R5
0000F1 2F               806             ADD     A,R7
0000F2 FF               807             MOV     R7,A
0000F3 ED               808             MOV     A,R5
0000F4 3E               809             ADDC    A,R6
0000F5 FE               810             MOV     R6,A
0000F6 120000     E     811             LCALL   _eeprom_read
0000F9 7800       F     812             MOV     R0,#LOW (i?141)
0000FB E6               813             MOV     A,@R0
0000FC FC               814             MOV     R4,A
0000FD 08               815             INC     R0
0000FE E6               816             MOV     A,@R0
0000FF 2500       F     817             ADD     A,seg?140+01H
000101 F582             818             MOV     DPL,A
000103 E500       F     819             MOV     A,seg?140
000105 3C               820             ADDC    A,R4
000106 F583             821             MOV     DPH,A
000108 EF               822             MOV     A,R7
000109 F0               823             MOVX    @DPTR,A
                        824     ;               }
                        825                             ; SOURCE LINE # 365
00010A 06               826             INC     @R0
00010B E6               827             MOV     A,@R0
00010C 18               828             DEC     R0
00010D 70CD             829             JNZ     ?C0009
00010F 06               830             INC     @R0
000110                  831     ?C0017:
000110 80CA             832             SJMP    ?C0009
000112                  833     ?C0010:
                        834     ;               
                        835     ;               //update page table to connect this physical address id with virtual add
                               ress id 
                        836     ;               ECO_PAGE_TABLE[ECO_PAGE_TABLE_INDEX] = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;
                        837                             ; SOURCE LINE # 368
000112 E500       F     838             MOV     A,ECO_PAGE_ADDR
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/06/09 14:53:36 PAGE    14

000114 FF               839             MOV     R7,A
000115 7E00             840             MOV     R6,#00H
000117 E500       F     841             MOV     A,ECO_PAGE_TABLE_INDEX
000119 25E0             842             ADD     A,ACC
00011B 2400       F     843             ADD     A,#LOW (ECO_PAGE_TABLE)
00011D F8               844             MOV     R0,A
00011E A606             845             MOV     @R0,AR6
000120 08               846             INC     R0
000121 A607             847             MOV     @R0,AR7
                        848     ; 
                        849     ;               //store physical address id
                        850     ;               //ECO_PAGE_PREV_PID = ECO_PAGE_TABLE[ECO_PAGE_TABLE_INDEX];
                        851     ;               ECO_PAGE_PREV_PID = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;
                        852                             ; SOURCE LINE # 372
000123 8F00       F     853             MOV     ECO_PAGE_PREV_PID,R7
                        854     ; 
                        855     ;               //update page address
                        856     ;               ECO_PAGE_ADDR = ((ECO_PAGE_TABLE_INDEX + ECO_PAGE_ADDR_OFFSET) << ECO_PA
                               GE_SHIFT) + (ECO_PAGE_ADDR & ECO_PAGE_MASK);
                        857                             ; SOURCE LINE # 375
000125 E500       F     858             MOV     A,ECO_PAGE_TABLE_INDEX
000127 240E             859             ADD     A,#0EH
000129 FF               860             MOV     R7,A
00012A EF               861             MOV     A,R7
00012B FE               862             MOV     R6,A
00012C 7C00             863             MOV     R4,#00H
00012E E4               864             CLR     A
00012F 2500       F     865             ADD     A,ECO_PAGE_ADDR+01H
000131 F500       F     866             MOV     ECO_PAGE_ADDR+01H,A
000133 EC               867             MOV     A,R4
000134 3E               868             ADDC    A,R6
000135 F500       F     869             MOV     ECO_PAGE_ADDR,A
                        870     ; 
                        871     ;               //store virtual address id 
                        872     ;               ECO_PAGE_PREV_VID = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;    
                        873                             ; SOURCE LINE # 378
000137 F500       F     874             MOV     ECO_PAGE_PREV_VID,A
                        875     ; 
                        876     ;               //mov to the next index
                        877     ;               ECO_PAGE_TABLE_INDEX = (ECO_PAGE_TABLE_INDEX + 1) % ECO_PAGE_ENTRY;
                        878                             ; SOURCE LINE # 381
000139 E500       F     879             MOV     A,ECO_PAGE_TABLE_INDEX
00013B 04               880             INC     A
00013C 5401             881             ANL     A,#01H
00013E F500       F     882             MOV     ECO_PAGE_TABLE_INDEX,A
                        883     ;                       
                        884     ;               //jump  to function address
                        885     ;               #pragma asm
                        886     ; 
                        887               
                        888     ;               MOV R0,#LOW (ECO_PAGE_REGISTER1)
000140 7800       F     889               MOV R0,#LOW (ECO_PAGE_REGISTER1)
                        890     ;       MOV A,@R0
000142 E6               891               MOV A,@R0
                        892     ;               MOV R0,#LOW (ECO_PAGE_REGISTER2)
000143 7800       F     893               MOV R0,#LOW (ECO_PAGE_REGISTER2)
                        894     ;       MOV A,@R0
000145 E6               895               MOV A,@R0
                        896     ;               MOV R0,#LOW (ECO_PAGE_REGISTER3)
000146 7800       F     897               MOV R0,#LOW (ECO_PAGE_REGISTER3)
                        898     ;       MOV A,@R0
000148 E6               899               MOV A,@R0
                        900     ;               MOV R0,#LOW (ECO_PAGE_REGISTER4)
000149 7800       F     901               MOV R0,#LOW (ECO_PAGE_REGISTER4)
                        902     ;       MOV A,@R0
00014B E6               903               MOV A,@R0
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/06/09 14:53:36 PAGE    15

                        904     ;               MOV R0,#LOW (ECO_PAGE_REGISTER5)
00014C 7800       F     905               MOV R0,#LOW (ECO_PAGE_REGISTER5)
                        906     ;       MOV A,@R0
00014E E6               907               MOV A,@R0
                        908     ;               MOV R0,#LOW (ECO_PAGE_REGISTER6)
00014F 7800       F     909               MOV R0,#LOW (ECO_PAGE_REGISTER6)
                        910     ;       MOV A,@R0
000151 E6               911               MOV A,@R0
                        912     ;               MOV R0,#LOW (ECO_PAGE_REGISTER7)
000152 7800       F     913               MOV R0,#LOW (ECO_PAGE_REGISTER7)
                        914     ;       MOV A,@R0
000154 E6               915               MOV A,@R0
                        916     ;       
                        917               
                        918     ;               MOV     SPI_CTRL,ECO_PAGE_SPI_CONN
000155 8500B3     F     919               MOV   SPI_CTRL,ECO_PAGE_SPI_CONN
                        920     ;               MOV     DPH,ECO_PAGE_ADDR
000158 850083     F     921               MOV   DPH,ECO_PAGE_ADDR
                        922     ;               MOV     DPL,ECO_PAGE_ADDR+01H
00015B 850082     F     923               MOV   DPL,ECO_PAGE_ADDR+01H
                        924     ;               
                        925               
                        926     ;               CLR     A
00015E E4               927               CLR   A
                        928     ;               JMP     @A+DPTR
00015F 73               929               JMP   @A+DPTR
                        930     ;               #pragma endasm
                        931     ; 
                        932     ;       }
                        933                             ; SOURCE LINE # 409
                        934     ; 
                        935     ; }
                        936                             ; SOURCE LINE # 411
000160                  937     ?C0012:
000160 22               938             RET     
                        939     ; END OF eco_page_manager
                        940     
                        941             END
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/06/09 14:53:36 PAGE    16

SYMBOL TABLE LISTING
------ ----- -------


N A M E                                    T Y P E  V A L U E     ATTRIBUTES

?C0002. . . . . . . . . . . . . . . . .    C  ADDR  003EH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0003. . . . . . . . . . . . . . . . .    C  ADDR  0044H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0004. . . . . . . . . . . . . . . . .    C  ADDR  0080H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0005. . . . . . . . . . . . . . . . .    C  ADDR  0076H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0007. . . . . . . . . . . . . . . . .    C  ADDR  00C6H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0009. . . . . . . . . . . . . . . . .    C  ADDR  00DCH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0010. . . . . . . . . . . . . . . . .    C  ADDR  0112H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0012. . . . . . . . . . . . . . . . .    C  ADDR  0160H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0013. . . . . . . . . . . . . . . . .    C  ADDR  000EH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0015. . . . . . . . . . . . . . . . .    C  ADDR  007EH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0016. . . . . . . . . . . . . . . . .    C  ADDR  008CH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0017. . . . . . . . . . . . . . . . .    C  ADDR  0110H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?DT?ECO_PAGE. . . . . . . . . . . . . .    D  SEG   00000AH       REL=UNIT, ALN=BYTE
?DT?ECO_PAGE_MANAGER?ECO_PAGE . . . . .    D  SEG   000002H       REL=UNIT, ALN=BYTE
?ECO_PAGE_MANAGER?BYTE. . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?ECO_PAGE_MANAGER?ECO_PAGE
?ID?ECO_PAGE. . . . . . . . . . . . . .    I  SEG   000007H       REL=UNIT, ALN=BYTE
?ID?ECO_PAGE_MANAGER?ECO_PAGE . . . . .    I  SEG   000004H       REL=UNIT, ALN=BYTE
?PR?ECO_PAGE_INIT?ECO_PAGE. . . . . . .    C  SEG   00000CH       REL=UNIT, ALN=BYTE
?PR?ECO_PAGE_MANAGER?ECO_PAGE . . . . .    C  SEG   000161H       REL=UNIT, ALN=BYTE
_EEPROM_READ. . . . . . . . . . . . . .    C  ADDR  -------       EXT
AC. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.6   A   
ACC . . . . . . . . . . . . . . . . . .    D  ADDR  00E0H     A   
ADCCON. . . . . . . . . . . . . . . . .    D  ADDR  00A1H     A   
ADCDATAH. . . . . . . . . . . . . . . .    D  ADDR  00A2H     A   
ADCDATAL. . . . . . . . . . . . . . . .    D  ADDR  00A3H     A   
ADCSTATIC . . . . . . . . . . . . . . .    D  ADDR  00A4H     A   
AR4 . . . . . . . . . . . . . . . . . .    D  ADDR  0004H     A   
AR5 . . . . . . . . . . . . . . . . . .    D  ADDR  0005H     A   
AR6 . . . . . . . . . . . . . . . . . .    D  ADDR  0006H     A   
AR7 . . . . . . . . . . . . . . . . . .    D  ADDR  0007H     A   
B . . . . . . . . . . . . . . . . . . .    D  ADDR  00F0H     A   
C_T2. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.1   A   
CE. . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.6   A   
CK_CTRL . . . . . . . . . . . . . . . .    D  ADDR  00B6H     A   
CKCON . . . . . . . . . . . . . . . . .    D  ADDR  008EH     A   
CLK1. . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.1   A   
CLK2. . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.5   A   
CP_RL2. . . . . . . . . . . . . . . . .    B  ADDR  00C8H.0   A   
CPRL2 . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.0   A   
CS. . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.3   A   
CT2 . . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.1   A   
CY. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.7   A   
DATA? . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.0   A   
DEV_OFFSET. . . . . . . . . . . . . . .    D  ADDR  00BEH     A   
DIN0. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.2   A   
DIO0. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.0   A   
DIO1. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.1   A   
DIO2. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.0   A   
DIO3. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.1   A   
DIO4. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.2   A   
DIO5. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.3   A   
DIO6. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.4   A   
DIO7. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.5   A   
DIO8. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.6   A   
DIO9. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.7   A   
DOUT2 . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.4   A   
DPH . . . . . . . . . . . . . . . . . .    D  ADDR  0083H     A   
DPH0. . . . . . . . . . . . . . . . . .    D  ADDR  0083H     A   
DPH1. . . . . . . . . . . . . . . . . .    D  ADDR  0085H     A   
DPL . . . . . . . . . . . . . . . . . .    D  ADDR  0082H     A   
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/06/09 14:53:36 PAGE    17

DPL0. . . . . . . . . . . . . . . . . .    D  ADDR  0082H     A   
DPL1. . . . . . . . . . . . . . . . . .    D  ADDR  0084H     A   
DPS . . . . . . . . . . . . . . . . . .    D  ADDR  0086H     A   
DR1 . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.2   A   
DR2 . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.6   A   
DR2_CE. . . . . . . . . . . . . . . . .    B  ADDR  00A0H.6   A   
EA. . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.7   A   
ECO_PAGE. . . . . . . . . . . . . . . .    -- ----  -------       
ECO_PAGE_ADDR . . . . . . . . . . . . .    D  ADDR  0007H     R   SEG=?DT?ECO_PAGE
ECO_PAGE_INIT . . . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?ECO_PAGE_INIT?ECO_PAGE
ECO_PAGE_MANAGER. . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
ECO_PAGE_PREV_PID . . . . . . . . . . .    D  ADDR  0005H     R   SEG=?DT?ECO_PAGE
ECO_PAGE_PREV_VID . . . . . . . . . . .    D  ADDR  0006H     R   SEG=?DT?ECO_PAGE
ECO_PAGE_REGISTER1. . . . . . . . . . .    I  ADDR  0000H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER2. . . . . . . . . . .    I  ADDR  0001H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER3. . . . . . . . . . .    I  ADDR  0002H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER4. . . . . . . . . . .    I  ADDR  0003H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER5. . . . . . . . . . .    I  ADDR  0004H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER6. . . . . . . . . . .    I  ADDR  0005H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER7. . . . . . . . . . .    I  ADDR  0006H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_SPI_CONN . . . . . . . . . . .    D  ADDR  0004H     R   SEG=?DT?ECO_PAGE
ECO_PAGE_TABLE. . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?ECO_PAGE
ECO_PAGE_TABLE_INDEX. . . . . . . . . .    D  ADDR  0009H     R   SEG=?DT?ECO_PAGE
EEPROM_INIT . . . . . . . . . . . . . .    C  ADDR  -------       EXT
EICON . . . . . . . . . . . . . . . . .    D  ADDR  00D8H     A   
EIE . . . . . . . . . . . . . . . . . .    D  ADDR  00E8H     A   
EIP . . . . . . . . . . . . . . . . . .    D  ADDR  00F8H     A   
ES. . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.4   A   
ET0 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.1   A   
ET1 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.3   A   
ET2 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.5   A   
EWDI. . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.4   A   
EX0 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.0   A   
EX1 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.2   A   
EX2 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.0   A   
EX3 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.1   A   
EX4 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.2   A   
EX5 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.3   A   
EXEN2 . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.3   A   
EXF2. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.6   A   
EXIF. . . . . . . . . . . . . . . . . .    D  ADDR  0091H     A   
F0. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.5   A   
F1. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.1   A   
I?141 . . . . . . . . . . . . . . . . .    I  ADDR  0000H     R   SEG=?ID?ECO_PAGE_MANAGER?ECO_PAGE
IE. . . . . . . . . . . . . . . . . . .    D  ADDR  00A8H     A   
IE0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.1   A   
IE1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.3   A   
INT0_N. . . . . . . . . . . . . . . . .    B  ADDR  0080H.3   A   
INT1_N. . . . . . . . . . . . . . . . .    B  ADDR  0080H.4   A   
IP. . . . . . . . . . . . . . . . . . .    D  ADDR  00B8H     A   
IT0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.0   A   
IT1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.2   A   
MPAGE . . . . . . . . . . . . . . . . .    D  ADDR  0092H     A   
OV. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.2   A   
P . . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.0   A   
P0. . . . . . . . . . . . . . . . . . .    D  ADDR  0080H     A   
P0_0. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.0   A   
P0_1. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.1   A   
P0_2. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.2   A   
P0_3. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.3   A   
P0_4. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.4   A   
P0_5. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.5   A   
P0_6. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.6   A   
P0_7. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.7   A   
P0_ALT. . . . . . . . . . . . . . . . .    D  ADDR  0095H     A   
P0_DIR. . . . . . . . . . . . . . . . .    D  ADDR  0094H     A   
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/06/09 14:53:36 PAGE    18

P1. . . . . . . . . . . . . . . . . . .    D  ADDR  0090H     A   
P1_0. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.0   A   
P1_1. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.1   A   
P1_2. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.2   A   
P1_ALT. . . . . . . . . . . . . . . . .    D  ADDR  0097H     A   
P1_DIR. . . . . . . . . . . . . . . . .    D  ADDR  0096H     A   
PAGE_INDEX?142. . . . . . . . . . . . .    I  ADDR  0002H     R   SEG=?ID?ECO_PAGE_MANAGER?ECO_PAGE
PCON. . . . . . . . . . . . . . . . . .    D  ADDR  0087H     A   
PS. . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.4   A   
PSW . . . . . . . . . . . . . . . . . .    D  ADDR  00D0H     A   
PT0 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.1   A   
PT1 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.3   A   
PT2 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.5   A   
PWDI. . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.4   A   
PWM . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.7   A   
PWMCON. . . . . . . . . . . . . . . . .    D  ADDR  00A9H     A   
PWMDUTY . . . . . . . . . . . . . . . .    D  ADDR  00AAH     A   
PWR_UP. . . . . . . . . . . . . . . . .    B  ADDR  00A0H.7   A   
PX0 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.0   A   
PX1 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.2   A   
PX2 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.0   A   
PX3 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.1   A   
PX4 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.2   A   
PX5 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.3   A   
RADIO . . . . . . . . . . . . . . . . .    D  ADDR  00A0H     A   
RB8 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.2   A   
RCAP2H. . . . . . . . . . . . . . . . .    D  ADDR  00CBH     A   
RCAP2L. . . . . . . . . . . . . . . . .    D  ADDR  00CAH     A   
RCLK. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.5   A   
REGX_CTRL . . . . . . . . . . . . . . .    D  ADDR  00ADH     A   
REGX_LSB. . . . . . . . . . . . . . . .    D  ADDR  00ACH     A   
REGX_MSB. . . . . . . . . . . . . . . .    D  ADDR  00ABH     A   
REN . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.4   A   
RI. . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.0   A   
RS0 . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.3   A   
RS1 . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.4   A   
RSTREAS . . . . . . . . . . . . . . . .    D  ADDR  00B1H     A   
RXD . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.1   A   
SBUF. . . . . . . . . . . . . . . . . .    D  ADDR  0099H     A   
SCON. . . . . . . . . . . . . . . . . .    D  ADDR  0098H     A   
SEG?140 . . . . . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?ECO_PAGE_MANAGER?ECO_PAGE
SM0 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.7   A   
SM1 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.6   A   
SM2 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.5   A   
SP. . . . . . . . . . . . . . . . . . .    D  ADDR  0081H     A   
SPC_FNC . . . . . . . . . . . . . . . .    D  ADDR  008FH     A   
SPI_CTRL. . . . . . . . . . . . . . . .    D  ADDR  00B3H     A   
SPI_DATA. . . . . . . . . . . . . . . .    D  ADDR  00B2H     A   
SPICLK. . . . . . . . . . . . . . . . .    D  ADDR  00B4H     A   
T0. . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.5   A   
T1. . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.6   A   
T1_1V2. . . . . . . . . . . . . . . . .    D  ADDR  00BCH     A   
T2. . . . . . . . . . . . . . . . . . .    B  ADDR  0090H.0   A   
T2_1V2. . . . . . . . . . . . . . . . .    D  ADDR  00BDH     A   
T2CON . . . . . . . . . . . . . . . . .    D  ADDR  00C8H     A   
TB8 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.3   A   
TCLK. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.4   A   
TCON. . . . . . . . . . . . . . . . . .    D  ADDR  0088H     A   
TEST_MODE . . . . . . . . . . . . . . .    D  ADDR  00B7H     A   
TF0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.5   A   
TF1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.7   A   
TF2 . . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.7   A   
TH0 . . . . . . . . . . . . . . . . . .    D  ADDR  008CH     A   
TH1 . . . . . . . . . . . . . . . . . .    D  ADDR  008DH     A   
TH2 . . . . . . . . . . . . . . . . . .    D  ADDR  00CDH     A   
TI. . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.1   A   
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/06/09 14:53:36 PAGE    19

TICK_DV . . . . . . . . . . . . . . . .    D  ADDR  00B5H     A   
TL0 . . . . . . . . . . . . . . . . . .    D  ADDR  008AH     A   
TL1 . . . . . . . . . . . . . . . . . .    D  ADDR  008BH     A   
TL2 . . . . . . . . . . . . . . . . . .    D  ADDR  00CCH     A   
TMOD. . . . . . . . . . . . . . . . . .    D  ADDR  0089H     A   
TR0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.4   A   
TR1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.6   A   
TR2 . . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.2   A   
TXD . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.2   A   
WDTI. . . . . . . . . . . . . . . . . .    B  ADDR  00D8H.3   A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S).
