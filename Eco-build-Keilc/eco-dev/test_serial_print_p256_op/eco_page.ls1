AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/03/09 22:43:55 PAGE     1


MACRO ASSEMBLER AX51 V3.06a
OBJECT MODULE PLACED IN .\eco_page.obj
ASSEMBLER INVOKED BY: C:\Keil\C51\BIN\AX51.exe .\eco_page.src EP DEBUG SYMBOLS OJ(.\eco_page.obj) PR(.\eco_page.ls1) 

LOC    OBJ             LINE     SOURCE

                          1     ; ./eco_page.src generated from: .\eco_page.c
                          2     ; COMPILER INVOKED BY:
                          3     ;        C:\Keil\C51\BIN\C51.exe .\eco_page.c BROWSE DEBUG CODE LISTINCLUDE SYMBOLS PREP
                               RINT ROM(LARGE) INCDIR(../../Include) SRC(./eco_page.src)
                          4     
                          5     $nomod51 
                          6     
                          7     NAME    ECO_PAGE
                          8     
 00A0.7                   9     PWR_UP  BIT     0A0H.7
 0080                    10     P0      DATA    080H
 0090                    11     P1      DATA    090H
 00D0.6                  12     AC      BIT     0D0H.6
 0080.5                  13     T0      BIT     080H.5
 00B3                    14     SPI_CTRL        DATA    0B3H
 0080.6                  15     T1      BIT     080H.6
 00A8.7                  16     EA      BIT     0A8H.7
 0090.0                  17     T2      BIT     090H.0
 00A0.6                  18     CE      BIT     0A0H.6
 00BE                    19     DEV_OFFSET      DATA    0BEH
 00A0.1                  20     CLK1    BIT     0A0H.1
 0090.2                  21     DIN0    BIT     090H.2
 00A0.5                  22     CLK2    BIT     0A0H.5
 0090.0                  23     DIO0    BIT     090H.0
 0083                    24     DPH0    DATA    083H
 0090.1                  25     DIO1    BIT     090H.1
 00A8                    26     IE      DATA    0A8H
 0085                    27     DPH1    DATA    085H
 0080.0                  28     DIO2    BIT     080H.0
 0080.1                  29     DIO3    BIT     080H.1
 0080.0                  30     P0_0    BIT     080H.0
 0090.0                  31     P1_0    BIT     090H.0
 0080.2                  32     DIO4    BIT     080H.2
 0080.1                  33     P0_1    BIT     080H.1
 0082                    34     DPL0    DATA    082H
 0090.1                  35     P1_1    BIT     090H.1
 0080.3                  36     DIO5    BIT     080H.3
 0080.2                  37     P0_2    BIT     080H.2
 0084                    38     DPL1    DATA    084H
 0090.2                  39     P1_2    BIT     090H.2
 0080.4                  40     DIO6    BIT     080H.4
 0080.3                  41     P0_3    BIT     080H.3
 0080.5                  42     DIO7    BIT     080H.5
 0080.4                  43     P0_4    BIT     080H.4
 00A4                    44     ADCSTATIC       DATA    0A4H
 0080.6                  45     DIO8    BIT     080H.6
 0080.5                  46     P0_5    BIT     080H.5
 00C8.6                  47     EXF2    BIT     0C8H.6
 00A0.3                  48     CS      BIT     0A0H.3
 0080.7                  49     DIO9    BIT     080H.7
 0080.6                  50     P0_6    BIT     080H.6
 0080.7                  51     P0_7    BIT     080H.7
 00A8.4                  52     ES      BIT     0A8H.4
 00B8                    53     IP      DATA    0B8H
 00A0.0                  54     DATA?   BIT     0A0H.0
 0098.0                  55     RI      BIT     098H.0
 00D0.7                  56     CY      BIT     0D0H.7
 0098.1                  57     TI      BIT     098H.1
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/03/09 22:43:55 PAGE     2

 00BC                    58     T1_1V2  DATA    0BCH
 008F                    59     SPC_FNC DATA    08FH
 00BD                    60     T2_1V2  DATA    0BDH
 00CB                    61     RCAP2H  DATA    0CBH
 00B8.4                  62     PS      BIT     0B8H.4
 0081                    63     SP      DATA    081H
 00D0.2                  64     OV      BIT     0D0H.2
 00B6                    65     CK_CTRL DATA    0B6H
 00CA                    66     RCAP2L  DATA    0CAH
 00B5                    67     TICK_DV DATA    0B5H
 00B1                    68     RSTREAS DATA    0B1H
 00C8.1                  69     C_T2    BIT     0C8H.1
 00E8.4                  70     EWDI    BIT     0E8H.4
 00A1                    71     ADCCON  DATA    0A1H
 00C8.5                  72     RCLK    BIT     0C8H.5
 00A2                    73     ADCDATAH        DATA    0A2H
 0091                    74     EXIF    DATA    091H
 00C8.4                  75     TCLK    BIT     0C8H.4
 00A0.6                  76     DR2_CE  BIT     0A0H.6
 00A3                    77     ADCDATAL        DATA    0A3H
 0099                    78     SBUF    DATA    099H
 0087                    79     PCON    DATA    087H
 0098                    80     SCON    DATA    098H
 00F8.4                  81     PWDI    BIT     0F8H.4
 0089                    82     TMOD    DATA    089H
 0088                    83     TCON    DATA    088H
 00D8.3                  84     WDTI    BIT     0D8H.3
 00AA                    85     PWMDUTY DATA    0AAH
 0088.1                  86     IE0     BIT     088H.1
 0088.3                  87     IE1     BIT     088H.3
 0094                    88     P0_DIR  DATA    094H
 00F0                    89     B       DATA    0F0H
 0096                    90     P1_DIR  DATA    096H
 0095                    91     P0_ALT  DATA    095H
 0097                    92     P1_ALT  DATA    097H
 00C8.0                  93     CP_RL2  BIT     0C8H.0
 00A0.2                  94     DR1     BIT     0A0H.2
 00E0                    95     ACC     DATA    0E0H
 00A0.6                  96     DR2     BIT     0A0H.6
 00B7                    97     TEST_MODE       DATA    0B7H
 00B4                    98     SPICLK  DATA    0B4H
 00C8.1                  99     CT2     BIT     0C8H.1
 00A8.1                 100     ET0     BIT     0A8H.1
 00A8.3                 101     ET1     BIT     0A8H.3
 0088.5                 102     TF0     BIT     088H.5
 0080.3                 103     INT0_N  BIT     080H.3
 00A8.5                 104     ET2     BIT     0A8H.5
 0088.7                 105     TF1     BIT     088H.7
 0080.4                 106     INT1_N  BIT     080H.4
 00C8.7                 107     TF2     BIT     0C8H.7
 0098.2                 108     RB8     BIT     098H.2
 008C                   109     TH0     DATA    08CH
 00A8.0                 110     EX0     BIT     0A8H.0
 0088.0                 111     IT0     BIT     088H.0
 008D                   112     TH1     DATA    08DH
 00A8.2                 113     EX1     BIT     0A8H.2
 0098.3                 114     TB8     BIT     098H.3
 0088.2                 115     IT1     BIT     088H.2
 00CD                   116     TH2     DATA    0CDH
 00AD                   117     REGX_CTRL       DATA    0ADH
 00E8.0                 118     EX2     BIT     0E8H.0
 00D0.0                 119     P       BIT     0D0H.0
 00E8.1                 120     EX3     BIT     0E8H.1
 0098.7                 121     SM0     BIT     098H.7
 008A                   122     TL0     DATA    08AH
 00E8.2                 123     EX4     BIT     0E8H.2
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/03/09 22:43:55 PAGE     3

 0098.6                 124     SM1     BIT     098H.6
 008B                   125     TL1     DATA    08BH
 00E8.3                 126     EX5     BIT     0E8H.3
 0098.5                 127     SM2     BIT     098H.5
 00CC                   128     TL2     DATA    0CCH
 00E8                   129     EIE     DATA    0E8H
 00B8.1                 130     PT0     BIT     0B8H.1
 00D0.3                 131     RS0     BIT     0D0H.3
 00B8.3                 132     PT1     BIT     0B8H.3
 00D0.4                 133     RS1     BIT     0D0H.4
 00B8.5                 134     PT2     BIT     0B8H.5
 0088.4                 135     TR0     BIT     088H.4
 00A9                   136     PWMCON  DATA    0A9H
 0088.6                 137     TR1     BIT     088H.6
 00C8.2                 138     TR2     BIT     0C8H.2
 00B8.0                 139     PX0     BIT     0B8H.0
 00B8.2                 140     PX1     BIT     0B8H.2
 00F8.0                 141     PX2     BIT     0F8H.0
 00F8.1                 142     PX3     BIT     0F8H.1
 00F8.2                 143     PX4     BIT     0F8H.2
 0083                   144     DPH     DATA    083H
 00F8.3                 145     PX5     BIT     0F8H.3
 00F8                   146     EIP     DATA    0F8H
 0082                   147     DPL     DATA    082H
 00C8.3                 148     EXEN2   BIT     0C8H.3
 00C8.0                 149     CPRL2   BIT     0C8H.0
 0098.4                 150     REN     BIT     098H.4
 00C8                   151     T2CON   DATA    0C8H
 0086                   152     DPS     DATA    086H
 00B2                   153     SPI_DATA        DATA    0B2H
 0092                   154     MPAGE   DATA    092H
 0080.1                 155     RXD     BIT     080H.1
 00A0.4                 156     DOUT2   BIT     0A0H.4
 00D8                   157     EICON   DATA    0D8H
 008E                   158     CKCON   DATA    08EH
 0080.2                 159     TXD     BIT     080H.2
 00A0                   160     RADIO   DATA    0A0H
 0080.7                 161     PWM     BIT     080H.7
 00D0.5                 162     F0      BIT     0D0H.5
 00D0.1                 163     F1      BIT     0D0H.1
 00AC                   164     REGX_LSB        DATA    0ACH
 00D0                   165     PSW     DATA    0D0H
 00AB                   166     REGX_MSB        DATA    0ABH
------                  167     ?PR?eco_page_init?ECO_PAGE               SEGMENT CODE 
------                  168     ?PR?eco_page_manager?ECO_PAGE            SEGMENT CODE 
------                  169     ?DT?eco_page_manager?ECO_PAGE            SEGMENT DATA OVERLAYABLE 
------                  170     ?DT?ECO_PAGE         SEGMENT DATA 
------                  171     ?ID?ECO_PAGE         SEGMENT IDATA 
                        172             EXTRN   CODE (_eeprom_read)
                        173             EXTRN   CODE (?C?ICALL2)
                        174             EXTRN   CODE (eeprom_init)
                        175             PUBLIC  ECO_PAGE_TABLE_INDEX
                        176             PUBLIC  ECO_PAGE_REGISTER7
                        177             PUBLIC  ECO_PAGE_REGISTER6
                        178             PUBLIC  ECO_PAGE_REGISTER5
                        179             PUBLIC  ECO_PAGE_REGISTER4
                        180             PUBLIC  ECO_PAGE_ADDR
                        181             PUBLIC  ECO_PAGE_REGISTER3
                        182             PUBLIC  ECO_PAGE_REGISTER2
                        183             PUBLIC  ECO_PAGE_REGISTER1
                        184             PUBLIC  ECO_PAGE_PREV_VID
                        185             PUBLIC  ECO_PAGE_PREV_PID
                        186             PUBLIC  ECO_PAGE_SPI_CONN
                        187             PUBLIC  ECO_PAGE_TABLE
                        188             PUBLIC  eco_page_manager
                        189             PUBLIC  eco_page_init
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/03/09 22:43:55 PAGE     4

                        190     
------                  191             RSEG  ?DT?eco_page_manager?ECO_PAGE
000000                  192     ?eco_page_manager?BYTE:
000004                  193             ORG  4
000004                  194             seg?140:   DS   2
000000                  195             ORG  0
000000                  196               i?141:   DS   2
000002                  197             ORG  2
000002                  198      page_index?142:   DS   2
                        199     
------                  200             RSEG  ?DT?ECO_PAGE
000000                  201      ECO_PAGE_TABLE:   DS   4
000004                  202     ECO_PAGE_SPI_CONN:   DS   1
000005                  203     ECO_PAGE_PREV_PID:   DS   1
000006                  204     ECO_PAGE_PREV_VID:   DS   1
000007                  205       ECO_PAGE_ADDR:   DS   2
000009                  206     ECO_PAGE_TABLE_INDEX:   DS   1
                        207     
------                  208             RSEG  ?ID?ECO_PAGE
000000                  209     ECO_PAGE_REGISTER1:   DS   1
000001                  210     ECO_PAGE_REGISTER2:   DS   1
000002                  211     ECO_PAGE_REGISTER3:   DS   1
000003                  212     ECO_PAGE_REGISTER4:   DS   1
000004                  213     ECO_PAGE_REGISTER5:   DS   1
000005                  214     ECO_PAGE_REGISTER6:   DS   1
000006                  215     ECO_PAGE_REGISTER7:   DS   1
                        216     ; /*
                        217     ;  * Author(s): Wei-Han Chen (Embedded Platform Lab, NTHU)
                        218     ;  * Copyright (c) 2009 National Tsing Hua University (NTHU) 
                        219     ;  * Permission to copy, modify, and distribute this program is granted 
                        220     ;  * for noncommercial purposes, provided the author(s) and copyright
                        221     ;  * notice are retained. All other uses require explicit written
                        222     ;  * permission from NTHU. 
                        223     ;  *
                        224     ;  * Eco Paging Library 
                        225     ;  *
                        226     ;  * Wei-Han Chen <xwaynec@gmail.com> 
                        227     ;  * 2009/2/13
                        228     ;  */
                        229     ; 
                        230     ; #include "eco_page.h"
                        231     ; #include "eeprom/eeprom.h"
                        232     ; 
                        233     ; //control page replacement policy is LRU or Round-Robin
                        234     ; #define PAGE_REPLACEMENT 1
                        235     ; 
                        236     ; //#define ECO_PAGE_SIZE 256
                        237     ; //#define ECO_PAGE_ADDR_OFFSET 11 
                        238     ; 
                        239     ; 
                        240     ; //#define ECO_PAGE_SIZE 128
                        241     ; //#define ECO_PAGE_ADDR_OFFSET 23
                        242     ; 
                        243     ; 
                        244     ; 
                        245     ; //#define ECO_PAGE_SIZE 64
                        246     ; //#define ECO_PAGE_ADDR_OFFSET 47
                        247     ; 
                        248     ; 
                        249     ; #define ECO_PAGE_SIZE 256
                        250     ; #define ECO_PAGE_ADDR_OFFSET 14
                        251     ; 
                        252     ; 
                        253     ; #if ECO_PAGE_SIZE == 64
                        254     ;       
                        255     ;       #define ECO_PAGE_ENTRY  (64-ECO_PAGE_ADDR_OFFSET)
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/03/09 22:43:55 PAGE     5

                        256     ;       #define ECO_PAGE_SHIFT  6
                        257     ;       #define ECO_PAGE_MASK   0x003F
                        258     ;       #define ECO_PAGE_MOV_MASK       0xFFC0
                        259     ; 
                        260     ;       unsigned int idata ECO_PAGE_TABLE[ECO_PAGE_ENTRY];
                        261     ;       //Eco page virtual address id
                        262     ;       unsigned int ECO_PAGE_PREV_VID;
                        263     ;       //Eco page physical address id 
                        264     ;       unsigned int ECO_PAGE_PREV_PID;
                        265     ; 
                        266     ; #elif ECO_PAGE_SIZE == 128
                        267     ;       
                        268     ;       #define ECO_PAGE_ENTRY (32-ECO_PAGE_ADDR_OFFSET)
                        269     ;       #define ECO_PAGE_SHIFT  7
                        270     ;       #define ECO_PAGE_MASK   0x007F
                        271     ;       #define ECO_PAGE_MOV_MASK       0xFF80
                        272     ; 
                        273     ;       unsigned int idata ECO_PAGE_TABLE[ECO_PAGE_ENTRY];
                        274     ;       //Eco page virtual address id
                        275     ;       unsigned int ECO_PAGE_PREV_VID;
                        276     ;       //Eco page physical address id 
                        277     ;       unsigned int ECO_PAGE_PREV_PID;
                        278     ; 
                        279     ; #elif ECO_PAGE_SIZE == 256
                        280     ;       
                        281     ;       #define ECO_PAGE_ENTRY  (16-ECO_PAGE_ADDR_OFFSET)
                        282     ;       #define ECO_PAGE_SHIFT  8       
                        283     ;       #define ECO_PAGE_MASK   0x00FF
                        284     ;       #define ECO_PAGE_MOV_MASK       0xFF00
                        285     ; 
                        286     ;       unsigned int ECO_PAGE_TABLE[ECO_PAGE_ENTRY];
                        287     ;       //Eco page virtual address id
                        288     ;       unsigned char ECO_PAGE_PREV_VID;
                        289     ;       //Eco page physical address id 
                        290     ;       unsigned char ECO_PAGE_PREV_PID;
                        291     ; 
                        292     ; #endif
                        293     ; 
                        294     ; unsigned char ECO_PAGE_TABLE_INDEX;
                        295     ; unsigned int ECO_PAGE_ADDR;
                        296     ; unsigned char ECO_PAGE_SPI_CONN;
                        297     ; 
                        298     ; unsigned char idata ECO_PAGE_REGISTER1;
                        299     ; unsigned char idata ECO_PAGE_REGISTER2;
                        300     ; unsigned char idata ECO_PAGE_REGISTER3;
                        301     ; unsigned char idata ECO_PAGE_REGISTER4;
                        302     ; unsigned char idata ECO_PAGE_REGISTER5;
                        303     ; unsigned char idata ECO_PAGE_REGISTER6;
                        304     ; unsigned char idata ECO_PAGE_REGISTER7;
                        305     ; 
                        306     ; 
                        307     ; void eco_page_init()
                        308     
------                  309             RSEG  ?PR?eco_page_init?ECO_PAGE
000000                  310     eco_page_init:
                        311                             ; SOURCE LINE # 92
                        312     ; {
                        313                             ; SOURCE LINE # 93
                        314     ;       //ECO_PAGE_TABLE_INDEX = ECO_PAGE_ENTRY - 1;
                        315     ;       ECO_PAGE_TABLE_INDEX = 0;       
                        316                             ; SOURCE LINE # 95
000000 E4               317             CLR     A
000001 F500       F     318             MOV     ECO_PAGE_TABLE_INDEX,A
                        319     ;       ECO_PAGE_ADDR = 0;
                        320                             ; SOURCE LINE # 96
000003 F500       F     321             MOV     ECO_PAGE_ADDR,A
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/03/09 22:43:55 PAGE     6

000005 F500       F     322             MOV     ECO_PAGE_ADDR+01H,A
                        323     ;       ECO_PAGE_PREV_VID = 0;
                        324                             ; SOURCE LINE # 97
000007 F500       F     325             MOV     ECO_PAGE_PREV_VID,A
                        326     ;       ECO_PAGE_PREV_PID = 0;
                        327                             ; SOURCE LINE # 98
000009 F500       F     328             MOV     ECO_PAGE_PREV_PID,A
                        329     ; }
                        330                             ; SOURCE LINE # 99
00000B 22               331             RET     
                        332     ; END OF eco_page_init
                        333     
                        334     ; 
                        335     ; 
                        336     ; #if PAGE_REPLACEMENT == 0 
                        337     ; //LRU page replacement
                        338     ; void eco_page_manager()
                        339     ; {
                        340     ;       unsigned int i;
                        341     ;       unsigned int page_index = -1;
                        342     ; 
                        343     ;       //if page id is the same with the last page id
                        344     ;       if((ECO_PAGE_ADDR >> ECO_PAGE_SHIFT) == ECO_PAGE_PREV_PID)
                        345     ;       {
                        346     ;               //virtual address id + function offset
                        347     ;               ECO_PAGE_ADDR = (ECO_PAGE_PREV_VID << ECO_PAGE_SHIFT) + (ECO_PAGE_ADDR &
                                ECO_PAGE_MASK);
                        348     ;               #pragma asm
                        349     ;               //eco_page_function_call
                        350     ;               #pragma endasm
                        351     ;               return ;
                        352     ;       }
                        353     ; 
                        354     ;       //Check Table   
                        355     ;       for(i=0;i<ECO_PAGE_ENTRY;i++)
                        356     ;       {   
                        357     ;               if((ECO_PAGE_ADDR >> ECO_PAGE_SHIFT) == (ECO_PAGE_TABLE[i] & 0x7FFF))
                        358     ;               {
                        359     ;                       page_index = i;
                        360     ; 
                        361     ;                       //set LRU bit is 1
                        362     ;                       ECO_PAGE_TABLE[i] = ECO_PAGE_TABLE[i] | 0x8000;
                        363     ;                       break;
                        364     ;               }
                        365     ;       }
                        366     ; 
                        367     ;       if(page_index != -1)
                        368     ;       {
                        369     ;               //store function physical addres id 
                        370     ;               ECO_PAGE_PREV_PID = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;
                        371     ;       
                        372     ;               //memory page is in ram
                        373     ;               ECO_PAGE_ADDR = ((page_index + ECO_PAGE_ADDR_OFFSET) << ECO_PAGE_SHIFT) 
                               + (ECO_PAGE_ADDR & ECO_PAGE_MASK);
                        374     ; 
                        375     ;               //cache the virtual address id
                        376     ;               ECO_PAGE_PREV_VID = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;
                        377     ; 
                        378     ; 
                        379     ;               
                        380     ;               #pragma asm
                        381     ;               //eco_page_function_call
                        382     ;               //MOV     DPH,ECO_PAGE_ADDR
                        383     ;               //MOV     DPL,ECO_PAGE_ADDR+01H
                        384     ;               //LCALL ?C?ICALL2
                        385     ;               #pragma endasm
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/03/09 22:43:55 PAGE     7

                        386     ; 
                        387     ;               return ;
                        388     ;       }       
                        389     ;       else
                        390     ;       {
                        391     ;               //page fault
                        392     ;               for(i=(ECO_PAGE_TABLE_INDEX+1)%ECO_PAGE_ENTRY; ;i=(i+1)%ECO_PAGE_ENTRY)
                        393     ;               {
                        394     ;                       if((ECO_PAGE_TABLE[i] & 0x8000) == 0x8000)
                        395     ;                       {
                        396     ;                               //LRU bit is 1 and then set this bit is 0
                        397     ;                               ECO_PAGE_TABLE[i] = ECO_PAGE_TABLE[i] & 0x7FFF;
                        398     ;                       }
                        399     ;                       else
                        400     ;                       {
                        401     ;                               unsigned char xdata *seg = (unsigned char xdata *)((i + 
                               ECO_PAGE_ADDR_OFFSET) << ECO_PAGE_SHIFT);
                        402     ;                               unsigned int j;
                        403     ;                               
                        404     ;                               //memory page is in ram
                        405     ;                               eeprom_init();
                        406     ; 
                        407     ;                               //mov code from eeprom to external ram
                        408     ;                               for(j=0;j<ECO_PAGE_SIZE;j++)
                        409     ;                               {
                        410     ;                                       *(seg+j) = eeprom_read(ECO_ADDR_SHIFT(ECO_PAGE_A
                               DDR & ECO_PAGE_MOV_MASK ) +j);
                        411     ;                               }
                        412     ;                               
                        413     ;                               //update page table to connect this physical address id 
                               with virtual address id 
                        414     ;                               ECO_PAGE_TABLE[i] = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;
                        415     ; 
                        416     ;                               //store physical address id
                        417     ;                               ECO_PAGE_PREV_PID = ECO_PAGE_TABLE[i];
                        418     ; 
                        419     ;                               //update page address e.g.  (page_id<<8) + page_offset
                        420     ;                               ECO_PAGE_ADDR = ((i + ECO_PAGE_ADDR_OFFSET) << ECO_PAGE_
                               SHIFT) + (ECO_PAGE_ADDR & ECO_PAGE_MASK);
                        421     ; 
                        422     ;                               //store virtual address id 
                        423     ;                               ECO_PAGE_PREV_VID = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;    
                        424     ; 
                        425     ;                               //mov to the next index
                        426     ;                               ECO_PAGE_TABLE_INDEX = i;
                        427     ; 
                        428     ;                               //jump  to function address
                        429     ;                               #pragma asm
                        430     ;                               //eco_page_function_call
                        431     ;                               //MOV     DPH,ECO_PAGE_ADDR
                        432     ;                               //MOV     DPL,ECO_PAGE_ADDR+01H
                        433     ;                               //LCALL        ?C?ICALL2               
                        434     ;                               #pragma endasm
                        435     ;                               
                        436     ;                               return ;
                        437     ;                               
                        438     ;                       }
                        439     ;               }
                        440     ;                       
                        441     ;       }
                        442     ;                               
                        443     ; }
                        444     ; 
                        445     ; #else
                        446     ; 
                        447     ; void eco_page_manager()
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/03/09 22:43:55 PAGE     8

                        448     
------                  449             RSEG  ?PR?eco_page_manager?ECO_PAGE
000000                  450     eco_page_manager:
                        451             USING   0
                        452                             ; SOURCE LINE # 213
                        453     ; {
                        454                             ; SOURCE LINE # 214
                        455     ;       unsigned int i;
                        456     ;       unsigned int page_index = -1; 
                        457                             ; SOURCE LINE # 216
000000 74FF             458             MOV     A,#0FFH
000002 F500       F     459             MOV     page_index?142,A
000004 F500       F     460             MOV     page_index?142+01H,A
                        461     ; 
                        462     ;       //Check POP instruction 
                        463     ;       //for(i=0;i<10;i++)
                        464     ;       //{    
                        465     ;       //      blink_led();
                        466     ;       //      mdelay(200);
                        467     ;       //}    
                        468     ;       //mdelay(1000);
                        469     ;       
                        470     ;       //if page id is the same with the last page id
                        471     ;       if((ECO_PAGE_ADDR >> ECO_PAGE_SHIFT) == ECO_PAGE_PREV_PID)
                        472                             ; SOURCE LINE # 227
000006 E500       F     473             MOV     A,ECO_PAGE_ADDR
000008 B50037           474             CJNE    A,ECO_PAGE_PREV_PID,?C0002
                        475     ;       {
                        476                             ; SOURCE LINE # 228
                        477     ;               //virtual address id + function offset
                        478     ;               ECO_PAGE_ADDR = (ECO_PAGE_PREV_VID << ECO_PAGE_SHIFT) + (ECO_PAGE_ADDR &
                                ECO_PAGE_MASK);
                        479                             ; SOURCE LINE # 230
00000B E500       F     480             MOV     A,ECO_PAGE_PREV_VID
00000D FE               481             MOV     R6,A
00000E 7C00             482             MOV     R4,#00H
000010 E4               483             CLR     A
000011 2500       F     484             ADD     A,ECO_PAGE_ADDR+01H
000013 F500       F     485             MOV     ECO_PAGE_ADDR+01H,A
000015 EC               486             MOV     A,R4
000016 3E               487             ADDC    A,R6
000017 F500       F     488             MOV     ECO_PAGE_ADDR,A
                        489     ;               #pragma asm
000019 7800       F     490             MOV     R0,#LOW (ECO_PAGE_REGISTER1)
00001B E6               491             MOV     A,@R0
00001C F9               492             MOV     R1,A
00001D 7800       F     493             MOV     R0,#LOW (ECO_PAGE_REGISTER2)
00001F E6               494             MOV     A,@R0
000020 FA               495             MOV     R2,A
000021 7800       F     496             MOV     R0,#LOW (ECO_PAGE_REGISTER3)
000023 E6               497             MOV     A,@R0
000024 FB               498             MOV     R3,A
000025 7800       F     499             MOV     R0,#LOW (ECO_PAGE_REGISTER4)
000027 E6               500             MOV     A,@R0
000028 FC               501             MOV     R4,A
000029 7800       F     502             MOV     R0,#LOW (ECO_PAGE_REGISTER5)
00002B E6               503             MOV     A,@R0
00002C FD               504             MOV     R5,A
00002D 7800       F     505             MOV     R0,#LOW (ECO_PAGE_REGISTER6)
00002F E6               506             MOV     A,@R0
000030 FE               507             MOV     R6,A
000031 7800       F     508             MOV     R0,#LOW (ECO_PAGE_REGISTER7)
000033 E6               509             MOV     A,@R0
000034 FF               510             MOV     R7,A
000035 8500B3     F     511             MOV     SPI_CTRL,ECO_PAGE_SPI_CONN
000038 850083     F     512             MOV     DPH,ECO_PAGE_ADDR
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/03/09 22:43:55 PAGE     9

00003B 850082     F     513             MOV     DPL,ECO_PAGE_ADDR+01H
00003E 120000     E     514             LCALL   ?C?ICALL2
                        515     ;               //eco_page_function_call
                        516               
000041 22               517             RET     
                        518     ;               #pragma endasm
                        519     ;               return ;
                        520     ;       }       
                        521                             ; SOURCE LINE # 235
000042                  522     ?C0002:
                        523     ;                               
                        524     ;       //Check Table   
                        525     ;       for(i=0;i<ECO_PAGE_ENTRY;i++)
                        526                             ; SOURCE LINE # 238
000042 E4               527             CLR     A
000043 F500       F     528             MOV     i?141,A
000045 F500       F     529             MOV     i?141+01H,A
000047                  530     ?C0004:
                        531     ;       {   
                        532                             ; SOURCE LINE # 239
                        533     ;               if((ECO_PAGE_ADDR >> ECO_PAGE_SHIFT) == ECO_PAGE_TABLE[i])
                        534                             ; SOURCE LINE # 240
000047 E500       F     535             MOV     A,i?141+01H
000049 25E0             536             ADD     A,ACC
00004B 2400       F     537             ADD     A,#LOW (ECO_PAGE_TABLE)
00004D F8               538             MOV     R0,A
00004E E6               539             MOV     A,@R0
00004F FC               540             MOV     R4,A
000050 08               541             INC     R0
000051 E6               542             MOV     A,@R0
000052 FD               543             MOV     R5,A
000053 E500       F     544             MOV     A,ECO_PAGE_ADDR
000055 B5050C           545             CJNE    A,AR5,?C0006
000058 E4               546             CLR     A
000059 B50408           547             CJNE    A,AR4,?C0006
                        548     ;               {
                        549                             ; SOURCE LINE # 241
                        550     ;                       page_index = i;
                        551                             ; SOURCE LINE # 242
00005C 850000     F     552             MOV     page_index?142,i?141
00005F 850000     F     553             MOV     page_index?142+01H,i?141+01H
                        554     ;                       break;
                        555                             ; SOURCE LINE # 243
000062 800E             556             SJMP    ?C0005
                        557     ;               }
                        558                             ; SOURCE LINE # 244
                        559     ;       }
                        560                             ; SOURCE LINE # 245
000064                  561     ?C0006:
000064 0500       F     562             INC     i?141+01H
000066 E500       F     563             MOV     A,i?141+01H
000068 7002             564             JNZ     ?C0015
00006A 0500       F     565             INC     i?141
00006C                  566     ?C0015:
00006C 6402             567             XRL     A,#02H
00006E 4500       F     568             ORL     A,i?141
000070 70D5             569             JNZ     ?C0004
000072                  570     ?C0005:
                        571     ; 
                        572     ;       if(page_index != -1) 
                        573                             ; SOURCE LINE # 247
000072 E500       F     574             MOV     A,page_index?142+01H
000074 F4               575             CPL     A
000075 7003             576             JNZ     ?C0016
000077 E500       F     577             MOV     A,page_index?142
000079 F4               578             CPL     A
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/03/09 22:43:55 PAGE    10

00007A                  579     ?C0016:
00007A 6041             580             JZ      ?C0008
                        581     ;       {  
                        582                             ; SOURCE LINE # 248
                        583     ;               //store function physical addres id 
                        584     ;               ECO_PAGE_PREV_PID = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;
                        585                             ; SOURCE LINE # 250
00007C E500       F     586             MOV     A,ECO_PAGE_ADDR
00007E F500       F     587             MOV     ECO_PAGE_PREV_PID,A
                        588     ;       
                        589     ;               //memory page is in ram
                        590     ;               ECO_PAGE_ADDR = ((page_index + ECO_PAGE_ADDR_OFFSET) << ECO_PAGE_SHIFT) 
                               + (ECO_PAGE_ADDR & ECO_PAGE_MASK);
                        591                             ; SOURCE LINE # 253
000080 E500       F     592             MOV     A,page_index?142+01H
000082 240E             593             ADD     A,#0EH
000084 FF               594             MOV     R7,A
000085 EF               595             MOV     A,R7
000086 FE               596             MOV     R6,A
000087 7C00             597             MOV     R4,#00H
000089 E4               598             CLR     A
00008A 2500       F     599             ADD     A,ECO_PAGE_ADDR+01H
00008C F500       F     600             MOV     ECO_PAGE_ADDR+01H,A
00008E EC               601             MOV     A,R4
00008F 3E               602             ADDC    A,R6
000090 F500       F     603             MOV     ECO_PAGE_ADDR,A
                        604     ; 
                        605     ;               //cache the virtual address id
                        606     ;               ECO_PAGE_PREV_VID = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;
                        607                             ; SOURCE LINE # 256
000092 F500       F     608             MOV     ECO_PAGE_PREV_VID,A
                        609     ; 
                        610     ;               #pragma asm
000094 7800       F     611             MOV     R0,#LOW (ECO_PAGE_REGISTER1)
000096 E6               612             MOV     A,@R0
000097 F9               613             MOV     R1,A
000098 7800       F     614             MOV     R0,#LOW (ECO_PAGE_REGISTER2)
00009A E6               615             MOV     A,@R0
00009B FA               616             MOV     R2,A
00009C 7800       F     617             MOV     R0,#LOW (ECO_PAGE_REGISTER3)
00009E E6               618             MOV     A,@R0
00009F FB               619             MOV     R3,A
0000A0 7800       F     620             MOV     R0,#LOW (ECO_PAGE_REGISTER4)
0000A2 E6               621             MOV     A,@R0
0000A3 FC               622             MOV     R4,A
0000A4 7800       F     623             MOV     R0,#LOW (ECO_PAGE_REGISTER5)
0000A6 E6               624             MOV     A,@R0
0000A7 FD               625             MOV     R5,A
0000A8 7800       F     626             MOV     R0,#LOW (ECO_PAGE_REGISTER6)
0000AA E6               627             MOV     A,@R0
0000AB FE               628             MOV     R6,A
0000AC 7800       F     629             MOV     R0,#LOW (ECO_PAGE_REGISTER7)
0000AE E6               630             MOV     A,@R0
0000AF FF               631             MOV     R7,A
0000B0 8500B3     F     632             MOV     SPI_CTRL,ECO_PAGE_SPI_CONN
0000B3 850083     F     633             MOV     DPH,ECO_PAGE_ADDR
0000B6 850082     F     634             MOV     DPL,ECO_PAGE_ADDR+01H
0000B9 120000     E     635             LCALL   ?C?ICALL2
                        636     ;               //eco_page_function_call
                        637               
                        638     ;               //MOV     DPH,ECO_PAGE_ADDR
                        639               
                        640     ;               //MOV     DPL,ECO_PAGE_ADDR+01H
                        641               
                        642     ;               //LCALL ?C?ICALL2
                        643               
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/03/09 22:43:55 PAGE    11

                        644     ;               #pragma endasm
                        645     ;       }   
                        646                             ; SOURCE LINE # 264
0000BC 22               647             RET     
0000BD                  648     ?C0008:
                        649     ;       else
                        650     ;       {
                        651                             ; SOURCE LINE # 266
                        652     ;               //page fault
                        653     ;               // Move Data from EEPROM to iRAM 
                        654     ;               unsigned char xdata *seg = (unsigned char xdata *)((ECO_PAGE_TABLE_INDEX
                                + ECO_PAGE_ADDR_OFFSET) << ECO_PAGE_SHIFT);
                        655                             ; SOURCE LINE # 269
0000BD E500       F     656             MOV     A,ECO_PAGE_TABLE_INDEX
0000BF 240E             657             ADD     A,#0EH
0000C1 FF               658             MOV     R7,A
0000C2 E4               659             CLR     A
0000C3 33               660             RLC     A
0000C4 EF               661             MOV     A,R7
0000C5 F500       F     662             MOV     seg?140,A
0000C7 750000     F     663             MOV     seg?140+01H,#00H
                        664     ;               
                        665     ;               //memory page is in ram
                        666     ;               eeprom_init();
                        667                             ; SOURCE LINE # 272
0000CA 120000     E     668             LCALL   eeprom_init
                        669     ; 
                        670     ;               //mov code from eeprom to external ram
                        671     ;               for(i=0;i<ECO_PAGE_SIZE;i++)
                        672                             ; SOURCE LINE # 275
0000CD E4               673             CLR     A
0000CE F500       F     674             MOV     i?141,A
0000D0 F500       F     675             MOV     i?141+01H,A
0000D2                  676     ?C0010:
                        677     ;               {
                        678                             ; SOURCE LINE # 276
                        679     ;                       *(seg+i) = eeprom_read(ECO_ADDR_SHIFT(ECO_PAGE_ADDR & ECO_PAGE_M
                               OV_MASK) +i);
                        680                             ; SOURCE LINE # 277
0000D2 E4               681             CLR     A
0000D3 2403             682             ADD     A,#03H
0000D5 FF               683             MOV     R7,A
0000D6 E4               684             CLR     A
0000D7 3500       F     685             ADDC    A,ECO_PAGE_ADDR
0000D9 CF               686             XCH     A,R7
0000DA 2500       F     687             ADD     A,i?141+01H
0000DC CF               688             XCH     A,R7
0000DD 3500       F     689             ADDC    A,i?141
0000DF FE               690             MOV     R6,A
0000E0 120000     E     691             LCALL   _eeprom_read
0000E3 E500       F     692             MOV     A,seg?140+01H
0000E5 2500       F     693             ADD     A,i?141+01H
0000E7 F582             694             MOV     DPL,A
0000E9 E500       F     695             MOV     A,seg?140
0000EB 3500       F     696             ADDC    A,i?141
0000ED F583             697             MOV     DPH,A
0000EF EF               698             MOV     A,R7
0000F0 F0               699             MOVX    @DPTR,A
                        700     ;               }
                        701                             ; SOURCE LINE # 278
0000F1 0500       F     702             INC     i?141+01H
0000F3 E500       F     703             MOV     A,i?141+01H
0000F5 7002             704             JNZ     ?C0017
0000F7 0500       F     705             INC     i?141
0000F9                  706     ?C0017:
0000F9 C3               707             CLR     C
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/03/09 22:43:55 PAGE    12

0000FA E500       F     708             MOV     A,i?141
0000FC 9401             709             SUBB    A,#01H
0000FE 40D2             710             JC      ?C0010
000100                  711     ?C0011:
                        712     ;               
                        713     ;               //update page table to connect this physical address id with virtual add
                               ress id 
                        714     ;               ECO_PAGE_TABLE[ECO_PAGE_TABLE_INDEX] = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;
                        715                             ; SOURCE LINE # 281
000100 E500       F     716             MOV     A,ECO_PAGE_ADDR
000102 FF               717             MOV     R7,A
000103 7E00             718             MOV     R6,#00H
000105 E500       F     719             MOV     A,ECO_PAGE_TABLE_INDEX
000107 25E0             720             ADD     A,ACC
000109 2400       F     721             ADD     A,#LOW (ECO_PAGE_TABLE)
00010B F8               722             MOV     R0,A
00010C A606             723             MOV     @R0,AR6
00010E 08               724             INC     R0
00010F A607             725             MOV     @R0,AR7
                        726     ; 
                        727     ;               //store physical address id
                        728     ;               //ECO_PAGE_PREV_PID = ECO_PAGE_TABLE[ECO_PAGE_TABLE_INDEX];
                        729     ;               ECO_PAGE_PREV_PID = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;
                        730                             ; SOURCE LINE # 285
000111 8F00       F     731             MOV     ECO_PAGE_PREV_PID,R7
                        732     ; 
                        733     ;               //update page address
                        734     ;               ECO_PAGE_ADDR = ((ECO_PAGE_TABLE_INDEX + ECO_PAGE_ADDR_OFFSET) << ECO_PA
                               GE_SHIFT) + (ECO_PAGE_ADDR & ECO_PAGE_MASK);
                        735                             ; SOURCE LINE # 288
000113 E500       F     736             MOV     A,ECO_PAGE_TABLE_INDEX
000115 240E             737             ADD     A,#0EH
000117 FF               738             MOV     R7,A
000118 EF               739             MOV     A,R7
000119 FE               740             MOV     R6,A
00011A 7C00             741             MOV     R4,#00H
00011C E4               742             CLR     A
00011D 2500       F     743             ADD     A,ECO_PAGE_ADDR+01H
00011F F500       F     744             MOV     ECO_PAGE_ADDR+01H,A
000121 EC               745             MOV     A,R4
000122 3E               746             ADDC    A,R6
000123 F500       F     747             MOV     ECO_PAGE_ADDR,A
                        748     ; 
                        749     ;               //store virtual address id 
                        750     ;               ECO_PAGE_PREV_VID = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;    
                        751                             ; SOURCE LINE # 291
000125 F500       F     752             MOV     ECO_PAGE_PREV_VID,A
                        753     ; 
                        754     ;               //mov to the next index
                        755     ;               ECO_PAGE_TABLE_INDEX = (ECO_PAGE_TABLE_INDEX + 1) % ECO_PAGE_ENTRY;
                        756                             ; SOURCE LINE # 294
000127 E500       F     757             MOV     A,ECO_PAGE_TABLE_INDEX
000129 04               758             INC     A
00012A 5401             759             ANL     A,#01H
00012C F500       F     760             MOV     ECO_PAGE_TABLE_INDEX,A
                        761     ;                       
                        762     ;               //jump  to function address
                        763     ;               #pragma asm
00012E 7800       F     764             MOV     R0,#LOW (ECO_PAGE_REGISTER1)
000130 E6               765             MOV     A,@R0
000131 F9               766             MOV     R1,A
000132 7800       F     767             MOV     R0,#LOW (ECO_PAGE_REGISTER2)
000134 E6               768             MOV     A,@R0
000135 FA               769             MOV     R2,A
000136 7800       F     770             MOV     R0,#LOW (ECO_PAGE_REGISTER3)
000138 E6               771             MOV     A,@R0
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/03/09 22:43:55 PAGE    13

000139 FB               772             MOV     R3,A
00013A 7800       F     773             MOV     R0,#LOW (ECO_PAGE_REGISTER4)
00013C E6               774             MOV     A,@R0
00013D FC               775             MOV     R4,A
00013E 7800       F     776             MOV     R0,#LOW (ECO_PAGE_REGISTER5)
000140 E6               777             MOV     A,@R0
000141 FD               778             MOV     R5,A
000142 7800       F     779             MOV     R0,#LOW (ECO_PAGE_REGISTER6)
000144 E6               780             MOV     A,@R0
000145 FE               781             MOV     R6,A
000146 7800       F     782             MOV     R0,#LOW (ECO_PAGE_REGISTER7)
000148 E6               783             MOV     A,@R0
000149 FF               784             MOV     R7,A
00014A 8500B3     F     785             MOV     SPI_CTRL,ECO_PAGE_SPI_CONN
00014D 850083     F     786             MOV     DPH,ECO_PAGE_ADDR
000150 850082     F     787             MOV     DPL,ECO_PAGE_ADDR+01H
000153 120000     E     788             LCALL   ?C?ICALL2
                        789     ;               //eco_page_function_call
                        790               
                        791     ;               //MOV     DPH,ECO_PAGE_ADDR
                        792               
                        793     ;               //MOV     DPL,ECO_PAGE_ADDR+01H
                        794               
                        795     ;               //LCALL        ?C?ICALL2               
                        796               
                        797     ;               #pragma endasm
                        798     ; 
                        799     ;       }
                        800                             ; SOURCE LINE # 304
                        801     ; 
                        802     ; }
                        803                             ; SOURCE LINE # 306
000156                  804     ?C0003:
000156 22               805             RET     
                        806     ; END OF eco_page_manager
                        807     
                        808             END
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/03/09 22:43:55 PAGE    14

SYMBOL TABLE LISTING
------ ----- -------


N A M E                                    T Y P E  V A L U E     ATTRIBUTES

?C0002. . . . . . . . . . . . . . . . .    C  ADDR  0042H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0003. . . . . . . . . . . . . . . . .    C  ADDR  0156H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0004. . . . . . . . . . . . . . . . .    C  ADDR  0047H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0005. . . . . . . . . . . . . . . . .    C  ADDR  0072H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0006. . . . . . . . . . . . . . . . .    C  ADDR  0064H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0008. . . . . . . . . . . . . . . . .    C  ADDR  00BDH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0010. . . . . . . . . . . . . . . . .    C  ADDR  00D2H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0011. . . . . . . . . . . . . . . . .    C  ADDR  0100H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0015. . . . . . . . . . . . . . . . .    C  ADDR  006CH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0016. . . . . . . . . . . . . . . . .    C  ADDR  007AH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0017. . . . . . . . . . . . . . . . .    C  ADDR  00F9H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C?ICALL2 . . . . . . . . . . . . . . .    C  ADDR  -------       EXT
?DT?ECO_PAGE. . . . . . . . . . . . . .    D  SEG   00000AH       REL=UNIT, ALN=BYTE
?DT?ECO_PAGE_MANAGER?ECO_PAGE . . . . .    D  SEG   000006H       REL=UNIT, ALN=BYTE
?ECO_PAGE_MANAGER?BYTE. . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?ECO_PAGE_MANAGER?ECO_PAGE
?ID?ECO_PAGE. . . . . . . . . . . . . .    I  SEG   000007H       REL=UNIT, ALN=BYTE
?PR?ECO_PAGE_INIT?ECO_PAGE. . . . . . .    C  SEG   00000CH       REL=UNIT, ALN=BYTE
?PR?ECO_PAGE_MANAGER?ECO_PAGE . . . . .    C  SEG   000157H       REL=UNIT, ALN=BYTE
_EEPROM_READ. . . . . . . . . . . . . .    C  ADDR  -------       EXT
AC. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.6   A   
ACC . . . . . . . . . . . . . . . . . .    D  ADDR  00E0H     A   
ADCCON. . . . . . . . . . . . . . . . .    D  ADDR  00A1H     A   
ADCDATAH. . . . . . . . . . . . . . . .    D  ADDR  00A2H     A   
ADCDATAL. . . . . . . . . . . . . . . .    D  ADDR  00A3H     A   
ADCSTATIC . . . . . . . . . . . . . . .    D  ADDR  00A4H     A   
AR4 . . . . . . . . . . . . . . . . . .    D  ADDR  0004H     A   
AR5 . . . . . . . . . . . . . . . . . .    D  ADDR  0005H     A   
AR6 . . . . . . . . . . . . . . . . . .    D  ADDR  0006H     A   
AR7 . . . . . . . . . . . . . . . . . .    D  ADDR  0007H     A   
B . . . . . . . . . . . . . . . . . . .    D  ADDR  00F0H     A   
C_T2. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.1   A   
CE. . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.6   A   
CK_CTRL . . . . . . . . . . . . . . . .    D  ADDR  00B6H     A   
CKCON . . . . . . . . . . . . . . . . .    D  ADDR  008EH     A   
CLK1. . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.1   A   
CLK2. . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.5   A   
CP_RL2. . . . . . . . . . . . . . . . .    B  ADDR  00C8H.0   A   
CPRL2 . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.0   A   
CS. . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.3   A   
CT2 . . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.1   A   
CY. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.7   A   
DATA? . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.0   A   
DEV_OFFSET. . . . . . . . . . . . . . .    D  ADDR  00BEH     A   
DIN0. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.2   A   
DIO0. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.0   A   
DIO1. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.1   A   
DIO2. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.0   A   
DIO3. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.1   A   
DIO4. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.2   A   
DIO5. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.3   A   
DIO6. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.4   A   
DIO7. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.5   A   
DIO8. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.6   A   
DIO9. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.7   A   
DOUT2 . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.4   A   
DPH . . . . . . . . . . . . . . . . . .    D  ADDR  0083H     A   
DPH0. . . . . . . . . . . . . . . . . .    D  ADDR  0083H     A   
DPH1. . . . . . . . . . . . . . . . . .    D  ADDR  0085H     A   
DPL . . . . . . . . . . . . . . . . . .    D  ADDR  0082H     A   
DPL0. . . . . . . . . . . . . . . . . .    D  ADDR  0082H     A   
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/03/09 22:43:55 PAGE    15

DPL1. . . . . . . . . . . . . . . . . .    D  ADDR  0084H     A   
DPS . . . . . . . . . . . . . . . . . .    D  ADDR  0086H     A   
DR1 . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.2   A   
DR2 . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.6   A   
DR2_CE. . . . . . . . . . . . . . . . .    B  ADDR  00A0H.6   A   
EA. . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.7   A   
ECO_PAGE. . . . . . . . . . . . . . . .    -- ----  -------       
ECO_PAGE_ADDR . . . . . . . . . . . . .    D  ADDR  0007H     R   SEG=?DT?ECO_PAGE
ECO_PAGE_INIT . . . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?ECO_PAGE_INIT?ECO_PAGE
ECO_PAGE_MANAGER. . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
ECO_PAGE_PREV_PID . . . . . . . . . . .    D  ADDR  0005H     R   SEG=?DT?ECO_PAGE
ECO_PAGE_PREV_VID . . . . . . . . . . .    D  ADDR  0006H     R   SEG=?DT?ECO_PAGE
ECO_PAGE_REGISTER1. . . . . . . . . . .    I  ADDR  0000H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER2. . . . . . . . . . .    I  ADDR  0001H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER3. . . . . . . . . . .    I  ADDR  0002H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER4. . . . . . . . . . .    I  ADDR  0003H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER5. . . . . . . . . . .    I  ADDR  0004H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER6. . . . . . . . . . .    I  ADDR  0005H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER7. . . . . . . . . . .    I  ADDR  0006H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_SPI_CONN . . . . . . . . . . .    D  ADDR  0004H     R   SEG=?DT?ECO_PAGE
ECO_PAGE_TABLE. . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?ECO_PAGE
ECO_PAGE_TABLE_INDEX. . . . . . . . . .    D  ADDR  0009H     R   SEG=?DT?ECO_PAGE
EEPROM_INIT . . . . . . . . . . . . . .    C  ADDR  -------       EXT
EICON . . . . . . . . . . . . . . . . .    D  ADDR  00D8H     A   
EIE . . . . . . . . . . . . . . . . . .    D  ADDR  00E8H     A   
EIP . . . . . . . . . . . . . . . . . .    D  ADDR  00F8H     A   
ES. . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.4   A   
ET0 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.1   A   
ET1 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.3   A   
ET2 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.5   A   
EWDI. . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.4   A   
EX0 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.0   A   
EX1 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.2   A   
EX2 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.0   A   
EX3 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.1   A   
EX4 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.2   A   
EX5 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.3   A   
EXEN2 . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.3   A   
EXF2. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.6   A   
EXIF. . . . . . . . . . . . . . . . . .    D  ADDR  0091H     A   
F0. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.5   A   
F1. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.1   A   
I?141 . . . . . . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?ECO_PAGE_MANAGER?ECO_PAGE
IE. . . . . . . . . . . . . . . . . . .    D  ADDR  00A8H     A   
IE0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.1   A   
IE1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.3   A   
INT0_N. . . . . . . . . . . . . . . . .    B  ADDR  0080H.3   A   
INT1_N. . . . . . . . . . . . . . . . .    B  ADDR  0080H.4   A   
IP. . . . . . . . . . . . . . . . . . .    D  ADDR  00B8H     A   
IT0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.0   A   
IT1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.2   A   
MPAGE . . . . . . . . . . . . . . . . .    D  ADDR  0092H     A   
OV. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.2   A   
P . . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.0   A   
P0. . . . . . . . . . . . . . . . . . .    D  ADDR  0080H     A   
P0_0. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.0   A   
P0_1. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.1   A   
P0_2. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.2   A   
P0_3. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.3   A   
P0_4. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.4   A   
P0_5. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.5   A   
P0_6. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.6   A   
P0_7. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.7   A   
P0_ALT. . . . . . . . . . . . . . . . .    D  ADDR  0095H     A   
P0_DIR. . . . . . . . . . . . . . . . .    D  ADDR  0094H     A   
P1. . . . . . . . . . . . . . . . . . .    D  ADDR  0090H     A   
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/03/09 22:43:55 PAGE    16

P1_0. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.0   A   
P1_1. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.1   A   
P1_2. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.2   A   
P1_ALT. . . . . . . . . . . . . . . . .    D  ADDR  0097H     A   
P1_DIR. . . . . . . . . . . . . . . . .    D  ADDR  0096H     A   
PAGE_INDEX?142. . . . . . . . . . . . .    D  ADDR  0002H     R   SEG=?DT?ECO_PAGE_MANAGER?ECO_PAGE
PCON. . . . . . . . . . . . . . . . . .    D  ADDR  0087H     A   
PS. . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.4   A   
PSW . . . . . . . . . . . . . . . . . .    D  ADDR  00D0H     A   
PT0 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.1   A   
PT1 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.3   A   
PT2 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.5   A   
PWDI. . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.4   A   
PWM . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.7   A   
PWMCON. . . . . . . . . . . . . . . . .    D  ADDR  00A9H     A   
PWMDUTY . . . . . . . . . . . . . . . .    D  ADDR  00AAH     A   
PWR_UP. . . . . . . . . . . . . . . . .    B  ADDR  00A0H.7   A   
PX0 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.0   A   
PX1 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.2   A   
PX2 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.0   A   
PX3 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.1   A   
PX4 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.2   A   
PX5 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.3   A   
RADIO . . . . . . . . . . . . . . . . .    D  ADDR  00A0H     A   
RB8 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.2   A   
RCAP2H. . . . . . . . . . . . . . . . .    D  ADDR  00CBH     A   
RCAP2L. . . . . . . . . . . . . . . . .    D  ADDR  00CAH     A   
RCLK. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.5   A   
REGX_CTRL . . . . . . . . . . . . . . .    D  ADDR  00ADH     A   
REGX_LSB. . . . . . . . . . . . . . . .    D  ADDR  00ACH     A   
REGX_MSB. . . . . . . . . . . . . . . .    D  ADDR  00ABH     A   
REN . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.4   A   
RI. . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.0   A   
RS0 . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.3   A   
RS1 . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.4   A   
RSTREAS . . . . . . . . . . . . . . . .    D  ADDR  00B1H     A   
RXD . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.1   A   
SBUF. . . . . . . . . . . . . . . . . .    D  ADDR  0099H     A   
SCON. . . . . . . . . . . . . . . . . .    D  ADDR  0098H     A   
SEG?140 . . . . . . . . . . . . . . . .    D  ADDR  0004H     R   SEG=?DT?ECO_PAGE_MANAGER?ECO_PAGE
SM0 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.7   A   
SM1 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.6   A   
SM2 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.5   A   
SP. . . . . . . . . . . . . . . . . . .    D  ADDR  0081H     A   
SPC_FNC . . . . . . . . . . . . . . . .    D  ADDR  008FH     A   
SPI_CTRL. . . . . . . . . . . . . . . .    D  ADDR  00B3H     A   
SPI_DATA. . . . . . . . . . . . . . . .    D  ADDR  00B2H     A   
SPICLK. . . . . . . . . . . . . . . . .    D  ADDR  00B4H     A   
T0. . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.5   A   
T1. . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.6   A   
T1_1V2. . . . . . . . . . . . . . . . .    D  ADDR  00BCH     A   
T2. . . . . . . . . . . . . . . . . . .    B  ADDR  0090H.0   A   
T2_1V2. . . . . . . . . . . . . . . . .    D  ADDR  00BDH     A   
T2CON . . . . . . . . . . . . . . . . .    D  ADDR  00C8H     A   
TB8 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.3   A   
TCLK. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.4   A   
TCON. . . . . . . . . . . . . . . . . .    D  ADDR  0088H     A   
TEST_MODE . . . . . . . . . . . . . . .    D  ADDR  00B7H     A   
TF0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.5   A   
TF1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.7   A   
TF2 . . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.7   A   
TH0 . . . . . . . . . . . . . . . . . .    D  ADDR  008CH     A   
TH1 . . . . . . . . . . . . . . . . . .    D  ADDR  008DH     A   
TH2 . . . . . . . . . . . . . . . . . .    D  ADDR  00CDH     A   
TI. . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.1   A   
TICK_DV . . . . . . . . . . . . . . . .    D  ADDR  00B5H     A   
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/03/09 22:43:55 PAGE    17

TL0 . . . . . . . . . . . . . . . . . .    D  ADDR  008AH     A   
TL1 . . . . . . . . . . . . . . . . . .    D  ADDR  008BH     A   
TL2 . . . . . . . . . . . . . . . . . .    D  ADDR  00CCH     A   
TMOD. . . . . . . . . . . . . . . . . .    D  ADDR  0089H     A   
TR0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.4   A   
TR1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.6   A   
TR2 . . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.2   A   
TXD . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.2   A   
WDTI. . . . . . . . . . . . . . . . . .    B  ADDR  00D8H.3   A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S).
