A51 MACRO ASSEMBLER  PAGING                                                               01/06/2009 17:10:23 PAGE     1


MACRO ASSEMBLER A51 V8.01
OBJECT MODULE PLACED IN Y:\Desktop\EPLab\Eco-build-Keilc\eco-dev\fptr_test\paging.OBJ
ASSEMBLER INVOKED BY: C:\Keil\C51\BIN\A51.exe Y:\Desktop\EPLab\Eco-build-Keilc\eco-dev\fptr_test\paging.src

LOC  OBJ            LINE     SOURCE

                       1     ; ./paging.src generated from: ./paging.c
                       2     ; COMPILER INVOKED BY:
                       3     ;        c:\Keil\C51\BIN\C51.exe ./paging.c BROWSE DEBUG CODE LISTINCLUDE SYMBOLS PREPRINT 
                             INCDIR(../../Include) SRC(./paging.src)
                       4     
                       5     $nomod51 
                       6     
                       7     NAME    __PAGING
                       8     
  00A7                 9     PWR_UP  BIT     0A0H.7
  0080                10     P0      DATA    080H
  0090                11     P1      DATA    090H
  00D6                12     AC      BIT     0D0H.6
  0085                13     T0      BIT     080H.5
  00B3                14     SPI_CTRL        DATA    0B3H
  0086                15     T1      BIT     080H.6
  00AF                16     EA      BIT     0A8H.7
  0090                17     T2      BIT     090H.0
  00A6                18     CE      BIT     0A0H.6
  00BE                19     DEV_OFFSET      DATA    0BEH
  00A1                20     CLK1    BIT     0A0H.1
  0092                21     DIN0    BIT     090H.2
  00A5                22     CLK2    BIT     0A0H.5
  0090                23     DIO0    BIT     090H.0
  0083                24     DPH0    DATA    083H
  0091                25     DIO1    BIT     090H.1
  00A8                26     IE      DATA    0A8H
  0085                27     DPH1    DATA    085H
  0080                28     DIO2    BIT     080H.0
  0081                29     DIO3    BIT     080H.1
  0080                30     P0_0    BIT     080H.0
  0090                31     P1_0    BIT     090H.0
  0082                32     DIO4    BIT     080H.2
  0081                33     P0_1    BIT     080H.1
  0082                34     DPL0    DATA    082H
  0091                35     P1_1    BIT     090H.1
  0083                36     DIO5    BIT     080H.3
  0082                37     P0_2    BIT     080H.2
  0084                38     DPL1    DATA    084H
  0092                39     P1_2    BIT     090H.2
  0084                40     DIO6    BIT     080H.4
  0083                41     P0_3    BIT     080H.3
  0085                42     DIO7    BIT     080H.5
  0084                43     P0_4    BIT     080H.4
  00A4                44     ADCSTATIC       DATA    0A4H
  0086                45     DIO8    BIT     080H.6
  0085                46     P0_5    BIT     080H.5
  00CE                47     EXF2    BIT     0C8H.6
  00A3                48     CS      BIT     0A0H.3
  0087                49     DIO9    BIT     080H.7
  0086                50     P0_6    BIT     080H.6
  0087                51     P0_7    BIT     080H.7
  00AC                52     ES      BIT     0A8H.4
  00B8                53     IP      DATA    0B8H
  00A0                54     DATA?   BIT     0A0H.0
  0098                55     RI      BIT     098H.0
  00D7                56     CY      BIT     0D0H.7
  0099                57     TI      BIT     098H.1
A51 MACRO ASSEMBLER  PAGING                                                               01/06/2009 17:10:23 PAGE     2

  00BC                58     T1_1V2  DATA    0BCH
  008F                59     SPC_FNC DATA    08FH
  00BD                60     T2_1V2  DATA    0BDH
  00CB                61     RCAP2H  DATA    0CBH
  00BC                62     PS      BIT     0B8H.4
  0081                63     SP      DATA    081H
  00D2                64     OV      BIT     0D0H.2
  00B6                65     CK_CTRL DATA    0B6H
  00CA                66     RCAP2L  DATA    0CAH
  00B5                67     TICK_DV DATA    0B5H
  00B1                68     RSTREAS DATA    0B1H
  00C9                69     C_T2    BIT     0C8H.1
  00EC                70     EWDI    BIT     0E8H.4
  00A1                71     ADCCON  DATA    0A1H
  00CD                72     RCLK    BIT     0C8H.5
  00A2                73     ADCDATAH        DATA    0A2H
  0091                74     EXIF    DATA    091H
  00CC                75     TCLK    BIT     0C8H.4
  00A6                76     DR2_CE  BIT     0A0H.6
  00A3                77     ADCDATAL        DATA    0A3H
  0099                78     SBUF    DATA    099H
  0087                79     PCON    DATA    087H
  0098                80     SCON    DATA    098H
  00FC                81     PWDI    BIT     0F8H.4
  0089                82     TMOD    DATA    089H
  0088                83     TCON    DATA    088H
  00DB                84     WDTI    BIT     0D8H.3
  00AA                85     PWMDUTY DATA    0AAH
  0089                86     IE0     BIT     088H.1
  008B                87     IE1     BIT     088H.3
  0094                88     P0_DIR  DATA    094H
  00F0                89     B       DATA    0F0H
  0096                90     P1_DIR  DATA    096H
  0095                91     P0_ALT  DATA    095H
  0097                92     P1_ALT  DATA    097H
  00C8                93     CP_RL2  BIT     0C8H.0
  00A2                94     DR1     BIT     0A0H.2
  00E0                95     ACC     DATA    0E0H
  00A6                96     DR2     BIT     0A0H.6
  00B7                97     TEST_MODE       DATA    0B7H
  00B4                98     SPICLK  DATA    0B4H
  00C9                99     CT2     BIT     0C8H.1
  00A9               100     ET0     BIT     0A8H.1
  00AB               101     ET1     BIT     0A8H.3
  008D               102     TF0     BIT     088H.5
  0083               103     INT0_N  BIT     080H.3
  00AD               104     ET2     BIT     0A8H.5
  008F               105     TF1     BIT     088H.7
  0084               106     INT1_N  BIT     080H.4
  00CF               107     TF2     BIT     0C8H.7
  009A               108     RB8     BIT     098H.2
  008C               109     TH0     DATA    08CH
  00A8               110     EX0     BIT     0A8H.0
  0088               111     IT0     BIT     088H.0
  008D               112     TH1     DATA    08DH
  00AA               113     EX1     BIT     0A8H.2
  009B               114     TB8     BIT     098H.3
  008A               115     IT1     BIT     088H.2
  00CD               116     TH2     DATA    0CDH
  00AD               117     REGX_CTRL       DATA    0ADH
  00E8               118     EX2     BIT     0E8H.0
  00D0               119     P       BIT     0D0H.0
  00E9               120     EX3     BIT     0E8H.1
  009F               121     SM0     BIT     098H.7
  008A               122     TL0     DATA    08AH
  00EA               123     EX4     BIT     0E8H.2
A51 MACRO ASSEMBLER  PAGING                                                               01/06/2009 17:10:23 PAGE     3

  009E               124     SM1     BIT     098H.6
  008B               125     TL1     DATA    08BH
  00EB               126     EX5     BIT     0E8H.3
  009D               127     SM2     BIT     098H.5
  00CC               128     TL2     DATA    0CCH
  00E8               129     EIE     DATA    0E8H
  00B9               130     PT0     BIT     0B8H.1
  00D3               131     RS0     BIT     0D0H.3
  00BB               132     PT1     BIT     0B8H.3
  00D4               133     RS1     BIT     0D0H.4
  00BD               134     PT2     BIT     0B8H.5
  008C               135     TR0     BIT     088H.4
  00A9               136     PWMCON  DATA    0A9H
  008E               137     TR1     BIT     088H.6
  00CA               138     TR2     BIT     0C8H.2
  00B8               139     PX0     BIT     0B8H.0
  00BA               140     PX1     BIT     0B8H.2
  00F8               141     PX2     BIT     0F8H.0
  00F9               142     PX3     BIT     0F8H.1
  00FA               143     PX4     BIT     0F8H.2
  0083               144     DPH     DATA    083H
  00FB               145     PX5     BIT     0F8H.3
  00F8               146     EIP     DATA    0F8H
  0082               147     DPL     DATA    082H
  00CB               148     EXEN2   BIT     0C8H.3
  00C8               149     CPRL2   BIT     0C8H.0
  009C               150     REN     BIT     098H.4
  00C8               151     T2CON   DATA    0C8H
  0086               152     DPS     DATA    086H
  00B2               153     SPI_DATA        DATA    0B2H
  0092               154     MPAGE   DATA    092H
  0081               155     RXD     BIT     080H.1
  00A4               156     DOUT2   BIT     0A0H.4
  00D8               157     EICON   DATA    0D8H
  008E               158     CKCON   DATA    08EH
  0082               159     TXD     BIT     080H.2
  00A0               160     RADIO   DATA    0A0H
  0087               161     PWM     BIT     080H.7
  00D5               162     F0      BIT     0D0H.5
  00D1               163     F1      BIT     0D0H.1
  00AC               164     REGX_LSB        DATA    0ACH
  00D0               165     PSW     DATA    0D0H
  00AB               166     REGX_MSB        DATA    0ABH
                     167     ?PR?ECO_PAGE_MANAGER?__PAGING            SEGMENT CODE 
                     168     ?DT?ECO_PAGE_MANAGER?__PAGING            SEGMENT DATA OVERLAYABLE 
                     169     ?PR?blink_fast?__PAGING                  SEGMENT CODE 
                     170     ?DT?blink_fast?__PAGING                  SEGMENT DATA OVERLAYABLE 
                     171     ?PR?main?__PAGING    SEGMENT CODE 
                     172     ?DT?main?__PAGING    SEGMENT DATA OVERLAYABLE 
                     173     ?DT?__PAGING         SEGMENT DATA 
                     174             EXTRN   CODE (_mdelay)
                     175             EXTRN   CODE (_eeprom_read)
                     176             EXTRN   CODE (eeprom_init)
                     177             EXTRN   CODE (_store_cpu_rate)
                     178             EXTRN   CODE (?C_STARTUP)
                     179             EXTRN   CODE (?C?ICALL)
                     180             PUBLIC  main
                     181             PUBLIC  blink_fast
                     182             PUBLIC  ECO_PAGE_MANAGER
                     183     
----                 184             RSEG  ?DT?blink_fast?__PAGING
0000                 185     ?blink_fast?BYTE:
0000                 186               i?141:   DS   2
                     187     
----                 188             RSEG  ?DT?main?__PAGING
0000                 189     ?main?BYTE:
A51 MACRO ASSEMBLER  PAGING                                                               01/06/2009 17:10:23 PAGE     4

0000                 190               i?242:   DS   2
0002                 191             ORG  2
0002                 192             seg?243:   DS   2
                     193     
----                 194             RSEG  ?DT?ECO_PAGE_MANAGER?__PAGING
0000                 195     ?ECO_PAGE_MANAGER?BYTE:
0000                 196               i?040:   DS   2
                     197     
----                 198             RSEG  ?DT?__PAGING
0000                 199      ECO_PAGE_TABLE:   DS   10
000A                 200         PAGE_ADDR_H:   DS   2
000C                 201         PAGE_ADDR_L:   DS   2
000E                 202           SP_ADDR_H:   DS   2
0010                 203           SP_ADDR_L:   DS   2
0012                 204       ECO_PAGE_ADDR:   DS   1
0013                 205     ECO_PAGE_TABLE_INDEX:   DS   2
                     206     ; #include "Eco/reg24e1.h"
                     207     ; #include "Eco/eco_sys.h"
                     208     ; #include "utils/utils.h"
                     209     ; #include "eeprom/eeprom.h"
                     210     ; 
                     211     ; #include "eco_page.h"
                     212     ; #define EEPROM_HEADER 3
                     213     ; #define ECO_ADDR_SHIFT(x)     ((unsigned int)(x) + 3)
                     214     ; 
                     215     ; static unsigned int PAGE_ADDR_L,PAGE_ADDR_H;
                     216     ; static unsigned int SP_ADDR_L,SP_ADDR_H;
                     217     ; static unsigned char ECO_PAGE_TABLE[10];
                     218     ; 
                     219     ; 
                     220     ; void ECO_PAGE_MANAGER()
                     221     
----                 222             RSEG  ?PR?ECO_PAGE_MANAGER?__PAGING
0000                 223     ECO_PAGE_MANAGER:
                     224             USING   0
                     225                             ; SOURCE LINE # 15
                     226     ; {
                     227                             ; SOURCE LINE # 16
                     228     ;       unsigned int i; 
                     229     ; 
                     230     ;       #pragma asm
                     231     ;               ;POP LCALL ADDR_HIGHT
                     232               ;POP LCALL ADDR_HIGHT
                     233     ;               POP     SP_ADDR_H+01H
0000 D000     F      234               POP   SP_ADDR_H+01H
                     235     ;               MOV     SP_ADDR_H,#00H
0002 750000   F      236               MOV   SP_ADDR_H,#00H
                     237     ; 
                     238               
                     239     ;               ;POP LCALL ADDR_LOW     
                     240               ;POP LCALL ADDR_LOW   
                     241     ;               POP     SP_ADDR_L+01H
0005 D000     F      242               POP   SP_ADDR_L+01H
                     243     ;               MOV     SP_ADDR_L,#00H
0007 750000   F      244               MOV   SP_ADDR_L,#00H
                     245     ;               
                     246               
                     247     ;               ;POP Function Address
                     248               ;POP Function Address
                     249     ;               POP     PAGE_ADDR_H+01H
000A D000     F      250               POP   PAGE_ADDR_H+01H
                     251     ;               MOV     PAGE_ADDR_H,#00H
000C 750000   F      252               MOV   PAGE_ADDR_H,#00H
                     253     ; 
                     254               
                     255     ;               POP     PAGE_ADDR_L+01H
A51 MACRO ASSEMBLER  PAGING                                                               01/06/2009 17:10:23 PAGE     5

000F D000     F      256               POP   PAGE_ADDR_L+01H
                     257     ;               MOV     PAGE_ADDR_L,#00H
0011 750000   F      258               MOV   PAGE_ADDR_L,#00H
                     259     ; 
                     260               
                     261     ;       #pragma endasm  
                     262     ;       
                     263     ;       //Check POP instruction 
                     264     ;       for(i=0;i<PAGE_ADDR_H;i++)
                     265                             ; SOURCE LINE # 38
0014 E4              266             CLR     A
0015 F500     F      267             MOV     i?040,A
0017 F500     F      268             MOV     i?040+01H,A
0019                 269     ?C0001:
0019 C3              270             CLR     C
001A E500     F      271             MOV     A,i?040+01H
001C 9500     F      272             SUBB    A,PAGE_ADDR_H+01H
001E E500     F      273             MOV     A,i?040
0020 9500     F      274             SUBB    A,PAGE_ADDR_H
0022 5014            275             JNC     ?C0002
                     276     ;       {       
                     277                             ; SOURCE LINE # 39
                     278     ;               blink_led();
                     279                             ; SOURCE LINE # 40
0024 638020          280             XRL     P0,#020H
                     281     ;               mdelay(400);
                     282                             ; SOURCE LINE # 41
0027 7F90            283             MOV     R7,#090H
0029 7E01            284             MOV     R6,#01H
002B 120000   F      285             LCALL   _mdelay
                     286     ;       }       
                     287                             ; SOURCE LINE # 42
002E 0500     F      288             INC     i?040+01H
0030 E500     F      289             MOV     A,i?040+01H
0032 70E5            290             JNZ     ?C0001
0034 0500     F      291             INC     i?040
0036                 292     ?C0019:
0036 80E1            293             SJMP    ?C0001
0038                 294     ?C0002:
                     295     ;       
                     296     ;       //Check Table   
                     297     ;               
                     298     ; 
                     299     ;       
                     300     ;       //Set Return Address Back
                     301     ;       #pragma asm
                     302     ; 
                     303               
                     304     ;               CLR     A
0038 E4              305               CLR   A
                     306     ;               MOV     A,SP_ADDR_L     
0039 E500     F      307               MOV   A,SP_ADDR_L     
                     308     ;               PUSH    ACC     
003B C0E0            309               PUSH  ACC     
                     310     ; 
                     311               
                     312     ;               CLR     A
003D E4              313               CLR   A
                     314     ;               MOV     A,SP_ADDR_H
003E E500     F      315               MOV   A,SP_ADDR_H
                     316     ;               PUSH    ACC
0040 C0E0            317               PUSH  ACC
                     318     ; 
                     319               
                     320     ;               RET     
0042 22              321               RET   
A51 MACRO ASSEMBLER  PAGING                                                               01/06/2009 17:10:23 PAGE     6

                     322     ;       #pragma endasm
                     323     ;       
                     324     ; }
                     325                             ; SOURCE LINE # 62
0043 22              326             RET     
                     327     ; END OF ECO_PAGE_MANAGER
                     328     
                     329     ; 
                     330     ; void blink_fast()
                     331     
----                 332             RSEG  ?PR?blink_fast?__PAGING
0000                 333     blink_fast:
                     334             USING   0
                     335                             ; SOURCE LINE # 64
                     336     ; {
                     337                             ; SOURCE LINE # 65
                     338     ;       int i;
                     339     ;       mdelay(400);
                     340                             ; SOURCE LINE # 67
0000 7F90            341             MOV     R7,#090H
0002 7E01            342             MOV     R6,#01H
0004 120000   F      343             LCALL   _mdelay
                     344     ;       for(i=0;i<12;i++)       
                     345                             ; SOURCE LINE # 68
0007 E4              346             CLR     A
0008 F500     F      347             MOV     i?141,A
000A F500     F      348             MOV     i?141+01H,A
000C                 349     ?C0005:
                     350     ;       {
                     351                             ; SOURCE LINE # 69
                     352     ;               blink_led();    
                     353                             ; SOURCE LINE # 70
000C 638020          354             XRL     P0,#020H
                     355     ;               mdelay(400);
                     356                             ; SOURCE LINE # 71
000F 7F90            357             MOV     R7,#090H
0011 7E01            358             MOV     R6,#01H
0013 120000   F      359             LCALL   _mdelay
                     360     ;       }
                     361                             ; SOURCE LINE # 72
0016 0500     F      362             INC     i?141+01H
0018 E500     F      363             MOV     A,i?141+01H
001A 7002            364             JNZ     ?C0020
001C 0500     F      365             INC     i?141
001E                 366     ?C0020:
001E C3              367             CLR     C
001F 940C            368             SUBB    A,#0CH
0021 E500     F      369             MOV     A,i?141
0023 6480            370             XRL     A,#080H
0025 9480            371             SUBB    A,#080H
0027 40E3            372             JC      ?C0005
0029                 373     ?C0006:
                     374     ;       mdelay(400);
                     375                             ; SOURCE LINE # 73
0029 7F90            376             MOV     R7,#090H
002B 7E01            377             MOV     R6,#01H
002D 020000   F      378             LJMP    _mdelay
                     379     ; END OF blink_fast
                     380     
                     381     ; }
                     382     ; 
                     383     ; 
                     384     ; void main(void)
                     385     
----                 386             RSEG  ?PR?main?__PAGING
0000                 387     main:
A51 MACRO ASSEMBLER  PAGING                                                               01/06/2009 17:10:23 PAGE     7

                     388             USING   0
                     389                             ; SOURCE LINE # 77
                     390     ; {
                     391                             ; SOURCE LINE # 78
                     392     ;       int i;
                     393     ;       unsigned char xdata *seg = (unsigned char xdata *)(0x500);
                     394                             ; SOURCE LINE # 80
0000 750005   F      395             MOV     seg?243,#05H
0003 750000   F      396             MOV     seg?243+01H,#00H
                     397     ;       
                     398     ;       unsigned char xdata *jump_fp;
                     399     ; 
                     400     ;       //void(code *fp)();
                     401     ; 
                     402     ;       ECO_PAGE_TABLE[0] = 2; 
                     403                             ; SOURCE LINE # 86
0006 750002   F      404             MOV     ECO_PAGE_TABLE,#02H
                     405     ;       
                     406     ;       
                     407     ;       PAGE_ADDR_L = 10;
                     408                             ; SOURCE LINE # 89
0009 750000   F      409             MOV     PAGE_ADDR_L,#00H
000C 75000A   F      410             MOV     PAGE_ADDR_L+01H,#0AH
                     411     ;       PAGE_ADDR_H = 11;
                     412                             ; SOURCE LINE # 90
000F 750000   F      413             MOV     PAGE_ADDR_H,#00H
0012 75000B   F      414             MOV     PAGE_ADDR_H+01H,#0BH
                     415     ;       
                     416     ;       //init LED
                     417     ;       P0_DIR &= ~0x28;
                     418                             ; SOURCE LINE # 93
0015 5394D7          419             ANL     P0_DIR,#0D7H
                     420     ;       P0_ALT &= ~0x28;
                     421                             ; SOURCE LINE # 94
0018 5395D7          422             ANL     P0_ALT,#0D7H
                     423     ; 
                     424     ;       store_cpu_rate(16);
                     425                             ; SOURCE LINE # 96
001B 7F10            426             MOV     R7,#010H
001D 7E00            427             MOV     R6,#00H
001F 120000   F      428             LCALL   _store_cpu_rate
                     429     ; 
                     430     ;       for(i=0;i<6;i++)
                     431                             ; SOURCE LINE # 98
0022 E4              432             CLR     A
0023 F500     F      433             MOV     i?242,A
0025 F500     F      434             MOV     i?242+01H,A
0027                 435     ?C0009:
                     436     ;       {
                     437                             ; SOURCE LINE # 99
                     438     ;               //LED blink
                     439     ;               blink_led();
                     440                             ; SOURCE LINE # 101
0027 638020          441             XRL     P0,#020H
                     442     ;               mdelay(200);
                     443                             ; SOURCE LINE # 102
002A 7FC8            444             MOV     R7,#0C8H
002C 7E00            445             MOV     R6,#00H
002E 120000   F      446             LCALL   _mdelay
                     447     ;       }
                     448                             ; SOURCE LINE # 103
0031 0500     F      449             INC     i?242+01H
0033 E500     F      450             MOV     A,i?242+01H
0035 7002            451             JNZ     ?C0021
0037 0500     F      452             INC     i?242
0039                 453     ?C0021:
A51 MACRO ASSEMBLER  PAGING                                                               01/06/2009 17:10:23 PAGE     8

0039 C3              454             CLR     C
003A 9406            455             SUBB    A,#06H
003C E500     F      456             MOV     A,i?242
003E 6480            457             XRL     A,#080H
0040 9480            458             SUBB    A,#080H
0042 40E3            459             JC      ?C0009
0044                 460     ?C0010:
                     461     ; 
                     462     ;       mdelay(800);    
                     463                             ; SOURCE LINE # 105
0044 7F20            464             MOV     R7,#020H
0046 7E03            465             MOV     R6,#03H
0048 120000   F      466             LCALL   _mdelay
                     467     ;               
                     468     ;       eeprom_init();
                     469                             ; SOURCE LINE # 107
004B 120000   F      470             LCALL   eeprom_init
                     471     ;       
                     472     ;       //Get data from 0x1000 address
                     473     ;       for(i=0;i<64;i++)
                     474                             ; SOURCE LINE # 110
004E E4              475             CLR     A
004F F500     F      476             MOV     i?242,A
0051 F500     F      477             MOV     i?242+01H,A
0053                 478     ?C0012:
                     479     ;       {
                     480                             ; SOURCE LINE # 111
                     481     ;               *(seg+i) = eeprom_read(ECO_ADDR_SHIFT(4096) +i);
                     482                             ; SOURCE LINE # 112
0053 E500     F      483             MOV     A,i?242+01H
0055 2403            484             ADD     A,#03H
0057 FF              485             MOV     R7,A
0058 E500     F      486             MOV     A,i?242
005A 3410            487             ADDC    A,#010H
005C FE              488             MOV     R6,A
005D 120000   F      489             LCALL   _eeprom_read
0060 E500     F      490             MOV     A,seg?243+01H
0062 2500     F      491             ADD     A,i?242+01H
0064 F582            492             MOV     DPL,A
0066 E500     F      493             MOV     A,seg?243
0068 3500     F      494             ADDC    A,i?242
006A F583            495             MOV     DPH,A
006C EF              496             MOV     A,R7
006D F0              497             MOVX    @DPTR,A
                     498     ;       }       
                     499                             ; SOURCE LINE # 113
006E 0500     F      500             INC     i?242+01H
0070 E500     F      501             MOV     A,i?242+01H
0072 7002            502             JNZ     ?C0022
0074 0500     F      503             INC     i?242
0076                 504     ?C0022:
0076 C3              505             CLR     C
0077 9440            506             SUBB    A,#040H
0079 E500     F      507             MOV     A,i?242
007B 6480            508             XRL     A,#080H
007D 9480            509             SUBB    A,#080H
007F 40D2            510             JC      ?C0012
0081                 511     ?C0013:
                     512     ;       mdelay(400);
                     513                             ; SOURCE LINE # 114
0081 7F90            514             MOV     R7,#090H
0083 7E01            515             MOV     R6,#01H
0085 120000   F      516             LCALL   _mdelay
                     517     ; 
                     518     ; 
                     519     ;       //function pointer to blink_fast() 
A51 MACRO ASSEMBLER  PAGING                                                               01/06/2009 17:10:23 PAGE     9

                     520     ;       jump_fp = (unsigned char xdata *)((1280));      
                     521                             ; SOURCE LINE # 118
                     522     ;---- Variable 'jump_fp?244' assigned to Register 'R6/R7' ----
                     523     ;       ((void (code *)(void))jump_fp)();       
                     524                             ; SOURCE LINE # 119
0088 7A05            525             MOV     R2,#05H
008A 7900            526             MOV     R1,#00H
008C 120000   F      527             LCALL   ?C?ICALL
                     528     ; 
                     529     ;       
                     530     ;       
                     531     ;       /*for(i=0;i<8;i++)
                     532     ;       {
                     533     ;               blink_led();
                     534     ;               mdelay(200);
                     535     ;       }
                     536     ;       mdelay(800);    
                     537     ;       */
                     538     ;       
                     539     ; 
                     540     ;       //blink_fast(); 
                     541     ;       
                     542     ;       /*
                     543     ;       #pragma asm
                     544     ;               //LCALL 0x500
                     545     ; 
                     546     ;               CLR     A       
                     547     ;               ;ADDR_LOW
                     548     ;               MOV     A,#0CH
                     549     ;               PUSH    ACC     
                     550     ;       
                     551     ;               CLR     A
                     552     ;               ;ADDR_HIGH      
                     553     ;               MOV     A,#0AH
                     554     ;               PUSH    ACC     
                     555     ;       #pragma endasm
                     556     ;       */
                     557     ; 
                     558     ;       //ECO_PAGE_MANAGER();
                     559     ;       
                     560     ;       mdelay(800);
                     561                             ; SOURCE LINE # 152
008F 7F20            562             MOV     R7,#020H
0091 7E03            563             MOV     R6,#03H
0093 120000   F      564             LCALL   _mdelay
                     565     ;       for(i=0;i<10;i++)
                     566                             ; SOURCE LINE # 153
0096 E4              567             CLR     A
0097 F500     F      568             MOV     i?242,A
0099 F500     F      569             MOV     i?242+01H,A
009B                 570     ?C0015:
                     571     ;       {
                     572                             ; SOURCE LINE # 154
                     573     ;               blink_led();
                     574                             ; SOURCE LINE # 155
009B 638020          575             XRL     P0,#020H
                     576     ;               mdelay(200);
                     577                             ; SOURCE LINE # 156
009E 7FC8            578             MOV     R7,#0C8H
00A0 7E00            579             MOV     R6,#00H
00A2 120000   F      580             LCALL   _mdelay
                     581     ;       }
                     582                             ; SOURCE LINE # 157
00A5 0500     F      583             INC     i?242+01H
00A7 E500     F      584             MOV     A,i?242+01H
00A9 7002            585             JNZ     ?C0023
A51 MACRO ASSEMBLER  PAGING                                                               01/06/2009 17:10:23 PAGE    10

00AB 0500     F      586             INC     i?242
00AD                 587     ?C0023:
00AD C3              588             CLR     C
00AE 940A            589             SUBB    A,#0AH
00B0 E500     F      590             MOV     A,i?242
00B2 6480            591             XRL     A,#080H
00B4 9480            592             SUBB    A,#080H
00B6 40E3            593             JC      ?C0015
00B8                 594     ?C0016:
                     595     ;       mdelay(200);
                     596                             ; SOURCE LINE # 158
00B8 7FC8            597             MOV     R7,#0C8H
00BA 7E00            598             MOV     R6,#00H
00BC 020000   F      599             LJMP    _mdelay
                     600     ; END OF main
                     601     
                     602             END
A51 MACRO ASSEMBLER  PAGING                                                               01/06/2009 17:10:23 PAGE    11

SYMBOL TABLE LISTING
------ ----- -------


N A M E                        T Y P E  V A L U E   ATTRIBUTES

?BLINK_FAST?BYTE. . . . . . .  D ADDR   0000H   R   SEG=?DT?BLINK_FAST?__PAGING
?C0001. . . . . . . . . . . .  C ADDR   0019H   R   SEG=?PR?ECO_PAGE_MANAGER?__PAGING
?C0002. . . . . . . . . . . .  C ADDR   0038H   R   SEG=?PR?ECO_PAGE_MANAGER?__PAGING
?C0005. . . . . . . . . . . .  C ADDR   000CH   R   SEG=?PR?BLINK_FAST?__PAGING
?C0006. . . . . . . . . . . .  C ADDR   0029H   R   SEG=?PR?BLINK_FAST?__PAGING
?C0009. . . . . . . . . . . .  C ADDR   0027H   R   SEG=?PR?MAIN?__PAGING
?C0010. . . . . . . . . . . .  C ADDR   0044H   R   SEG=?PR?MAIN?__PAGING
?C0012. . . . . . . . . . . .  C ADDR   0053H   R   SEG=?PR?MAIN?__PAGING
?C0013. . . . . . . . . . . .  C ADDR   0081H   R   SEG=?PR?MAIN?__PAGING
?C0015. . . . . . . . . . . .  C ADDR   009BH   R   SEG=?PR?MAIN?__PAGING
?C0016. . . . . . . . . . . .  C ADDR   00B8H   R   SEG=?PR?MAIN?__PAGING
?C0019. . . . . . . . . . . .  C ADDR   0036H   R   SEG=?PR?ECO_PAGE_MANAGER?__PAGING
?C0020. . . . . . . . . . . .  C ADDR   001EH   R   SEG=?PR?BLINK_FAST?__PAGING
?C0021. . . . . . . . . . . .  C ADDR   0039H   R   SEG=?PR?MAIN?__PAGING
?C0022. . . . . . . . . . . .  C ADDR   0076H   R   SEG=?PR?MAIN?__PAGING
?C0023. . . . . . . . . . . .  C ADDR   00ADH   R   SEG=?PR?MAIN?__PAGING
?C?ICALL. . . . . . . . . . .  C ADDR   -----       EXT
?C_STARTUP. . . . . . . . . .  C ADDR   -----       EXT
?DT?BLINK_FAST?__PAGING . . .  D SEG    0002H       REL=UNIT
?DT?ECO_PAGE_MANAGER?__PAGING  D SEG    0002H       REL=UNIT
?DT?MAIN?__PAGING . . . . . .  D SEG    0004H       REL=UNIT
?DT?__PAGING. . . . . . . . .  D SEG    0015H       REL=UNIT
?ECO_PAGE_MANAGER?BYTE. . . .  D ADDR   0000H   R   SEG=?DT?ECO_PAGE_MANAGER?__PAGING
?MAIN?BYTE. . . . . . . . . .  D ADDR   0000H   R   SEG=?DT?MAIN?__PAGING
?PR?BLINK_FAST?__PAGING . . .  C SEG    0030H       REL=UNIT
?PR?ECO_PAGE_MANAGER?__PAGING  C SEG    0044H       REL=UNIT
?PR?MAIN?__PAGING . . . . . .  C SEG    00BFH       REL=UNIT
AC. . . . . . . . . . . . . .  B ADDR   00D0H.6 A   
ACC . . . . . . . . . . . . .  D ADDR   00E0H   A   
ADCCON. . . . . . . . . . . .  D ADDR   00A1H   A   
ADCDATAH. . . . . . . . . . .  D ADDR   00A2H   A   
ADCDATAL. . . . . . . . . . .  D ADDR   00A3H   A   
ADCSTATIC . . . . . . . . . .  D ADDR   00A4H   A   
B . . . . . . . . . . . . . .  D ADDR   00F0H   A   
BLINK_FAST. . . . . . . . . .  C ADDR   0000H   R   SEG=?PR?BLINK_FAST?__PAGING
CE. . . . . . . . . . . . . .  B ADDR   00A0H.6 A   
CKCON . . . . . . . . . . . .  D ADDR   008EH   A   
CK_CTRL . . . . . . . . . . .  D ADDR   00B6H   A   
CLK1. . . . . . . . . . . . .  B ADDR   00A0H.1 A   
CLK2. . . . . . . . . . . . .  B ADDR   00A0H.5 A   
CPRL2 . . . . . . . . . . . .  B ADDR   00C8H.0 A   
CP_RL2. . . . . . . . . . . .  B ADDR   00C8H.0 A   
CS. . . . . . . . . . . . . .  B ADDR   00A0H.3 A   
CT2 . . . . . . . . . . . . .  B ADDR   00C8H.1 A   
CY. . . . . . . . . . . . . .  B ADDR   00D0H.7 A   
C_T2. . . . . . . . . . . . .  B ADDR   00C8H.1 A   
DATA? . . . . . . . . . . . .  B ADDR   00A0H.0 A   
DEV_OFFSET. . . . . . . . . .  D ADDR   00BEH   A   
DIN0. . . . . . . . . . . . .  B ADDR   0090H.2 A   
DIO0. . . . . . . . . . . . .  B ADDR   0090H.0 A   
DIO1. . . . . . . . . . . . .  B ADDR   0090H.1 A   
DIO2. . . . . . . . . . . . .  B ADDR   0080H.0 A   
DIO3. . . . . . . . . . . . .  B ADDR   0080H.1 A   
DIO4. . . . . . . . . . . . .  B ADDR   0080H.2 A   
DIO5. . . . . . . . . . . . .  B ADDR   0080H.3 A   
DIO6. . . . . . . . . . . . .  B ADDR   0080H.4 A   
DIO7. . . . . . . . . . . . .  B ADDR   0080H.5 A   
DIO8. . . . . . . . . . . . .  B ADDR   0080H.6 A   
DIO9. . . . . . . . . . . . .  B ADDR   0080H.7 A   
DOUT2 . . . . . . . . . . . .  B ADDR   00A0H.4 A   
A51 MACRO ASSEMBLER  PAGING                                                               01/06/2009 17:10:23 PAGE    12

DPH . . . . . . . . . . . . .  D ADDR   0083H   A   
DPH0. . . . . . . . . . . . .  D ADDR   0083H   A   
DPH1. . . . . . . . . . . . .  D ADDR   0085H   A   
DPL . . . . . . . . . . . . .  D ADDR   0082H   A   
DPL0. . . . . . . . . . . . .  D ADDR   0082H   A   
DPL1. . . . . . . . . . . . .  D ADDR   0084H   A   
DPS . . . . . . . . . . . . .  D ADDR   0086H   A   
DR1 . . . . . . . . . . . . .  B ADDR   00A0H.2 A   
DR2 . . . . . . . . . . . . .  B ADDR   00A0H.6 A   
DR2_CE. . . . . . . . . . . .  B ADDR   00A0H.6 A   
EA. . . . . . . . . . . . . .  B ADDR   00A8H.7 A   
ECO_PAGE_ADDR . . . . . . . .  D ADDR   0012H   R   SEG=?DT?__PAGING
ECO_PAGE_MANAGER. . . . . . .  C ADDR   0000H   R   SEG=?PR?ECO_PAGE_MANAGER?__PAGING
ECO_PAGE_TABLE. . . . . . . .  D ADDR   0000H   R   SEG=?DT?__PAGING
ECO_PAGE_TABLE_INDEX. . . . .  D ADDR   0013H   R   SEG=?DT?__PAGING
EEPROM_INIT . . . . . . . . .  C ADDR   -----       EXT
EICON . . . . . . . . . . . .  D ADDR   00D8H   A   
EIE . . . . . . . . . . . . .  D ADDR   00E8H   A   
EIP . . . . . . . . . . . . .  D ADDR   00F8H   A   
ES. . . . . . . . . . . . . .  B ADDR   00A8H.4 A   
ET0 . . . . . . . . . . . . .  B ADDR   00A8H.1 A   
ET1 . . . . . . . . . . . . .  B ADDR   00A8H.3 A   
ET2 . . . . . . . . . . . . .  B ADDR   00A8H.5 A   
EWDI. . . . . . . . . . . . .  B ADDR   00E8H.4 A   
EX0 . . . . . . . . . . . . .  B ADDR   00A8H.0 A   
EX1 . . . . . . . . . . . . .  B ADDR   00A8H.2 A   
EX2 . . . . . . . . . . . . .  B ADDR   00E8H.0 A   
EX3 . . . . . . . . . . . . .  B ADDR   00E8H.1 A   
EX4 . . . . . . . . . . . . .  B ADDR   00E8H.2 A   
EX5 . . . . . . . . . . . . .  B ADDR   00E8H.3 A   
EXEN2 . . . . . . . . . . . .  B ADDR   00C8H.3 A   
EXF2. . . . . . . . . . . . .  B ADDR   00C8H.6 A   
EXIF. . . . . . . . . . . . .  D ADDR   0091H   A   
F0. . . . . . . . . . . . . .  B ADDR   00D0H.5 A   
F1. . . . . . . . . . . . . .  B ADDR   00D0H.1 A   
I?040 . . . . . . . . . . . .  D ADDR   0000H   R   SEG=?DT?ECO_PAGE_MANAGER?__PAGING
I?141 . . . . . . . . . . . .  D ADDR   0000H   R   SEG=?DT?BLINK_FAST?__PAGING
I?242 . . . . . . . . . . . .  D ADDR   0000H   R   SEG=?DT?MAIN?__PAGING
IE. . . . . . . . . . . . . .  D ADDR   00A8H   A   
IE0 . . . . . . . . . . . . .  B ADDR   0088H.1 A   
IE1 . . . . . . . . . . . . .  B ADDR   0088H.3 A   
INT0_N. . . . . . . . . . . .  B ADDR   0080H.3 A   
INT1_N. . . . . . . . . . . .  B ADDR   0080H.4 A   
IP. . . . . . . . . . . . . .  D ADDR   00B8H   A   
IT0 . . . . . . . . . . . . .  B ADDR   0088H.0 A   
IT1 . . . . . . . . . . . . .  B ADDR   0088H.2 A   
MAIN. . . . . . . . . . . . .  C ADDR   0000H   R   SEG=?PR?MAIN?__PAGING
MPAGE . . . . . . . . . . . .  D ADDR   0092H   A   
OV. . . . . . . . . . . . . .  B ADDR   00D0H.2 A   
P . . . . . . . . . . . . . .  B ADDR   00D0H.0 A   
P0. . . . . . . . . . . . . .  D ADDR   0080H   A   
P0_0. . . . . . . . . . . . .  B ADDR   0080H.0 A   
P0_1. . . . . . . . . . . . .  B ADDR   0080H.1 A   
P0_2. . . . . . . . . . . . .  B ADDR   0080H.2 A   
P0_3. . . . . . . . . . . . .  B ADDR   0080H.3 A   
P0_4. . . . . . . . . . . . .  B ADDR   0080H.4 A   
P0_5. . . . . . . . . . . . .  B ADDR   0080H.5 A   
P0_6. . . . . . . . . . . . .  B ADDR   0080H.6 A   
P0_7. . . . . . . . . . . . .  B ADDR   0080H.7 A   
P0_ALT. . . . . . . . . . . .  D ADDR   0095H   A   
P0_DIR. . . . . . . . . . . .  D ADDR   0094H   A   
P1. . . . . . . . . . . . . .  D ADDR   0090H   A   
P1_0. . . . . . . . . . . . .  B ADDR   0090H.0 A   
P1_1. . . . . . . . . . . . .  B ADDR   0090H.1 A   
P1_2. . . . . . . . . . . . .  B ADDR   0090H.2 A   
P1_ALT. . . . . . . . . . . .  D ADDR   0097H   A   
A51 MACRO ASSEMBLER  PAGING                                                               01/06/2009 17:10:23 PAGE    13

P1_DIR. . . . . . . . . . . .  D ADDR   0096H   A   
PAGE_ADDR_H . . . . . . . . .  D ADDR   000AH   R   SEG=?DT?__PAGING
PAGE_ADDR_L . . . . . . . . .  D ADDR   000CH   R   SEG=?DT?__PAGING
PCON. . . . . . . . . . . . .  D ADDR   0087H   A   
PS. . . . . . . . . . . . . .  B ADDR   00B8H.4 A   
PSW . . . . . . . . . . . . .  D ADDR   00D0H   A   
PT0 . . . . . . . . . . . . .  B ADDR   00B8H.1 A   
PT1 . . . . . . . . . . . . .  B ADDR   00B8H.3 A   
PT2 . . . . . . . . . . . . .  B ADDR   00B8H.5 A   
PWDI. . . . . . . . . . . . .  B ADDR   00F8H.4 A   
PWM . . . . . . . . . . . . .  B ADDR   0080H.7 A   
PWMCON. . . . . . . . . . . .  D ADDR   00A9H   A   
PWMDUTY . . . . . . . . . . .  D ADDR   00AAH   A   
PWR_UP. . . . . . . . . . . .  B ADDR   00A0H.7 A   
PX0 . . . . . . . . . . . . .  B ADDR   00B8H.0 A   
PX1 . . . . . . . . . . . . .  B ADDR   00B8H.2 A   
PX2 . . . . . . . . . . . . .  B ADDR   00F8H.0 A   
PX3 . . . . . . . . . . . . .  B ADDR   00F8H.1 A   
PX4 . . . . . . . . . . . . .  B ADDR   00F8H.2 A   
PX5 . . . . . . . . . . . . .  B ADDR   00F8H.3 A   
RADIO . . . . . . . . . . . .  D ADDR   00A0H   A   
RB8 . . . . . . . . . . . . .  B ADDR   0098H.2 A   
RCAP2H. . . . . . . . . . . .  D ADDR   00CBH   A   
RCAP2L. . . . . . . . . . . .  D ADDR   00CAH   A   
RCLK. . . . . . . . . . . . .  B ADDR   00C8H.5 A   
REGX_CTRL . . . . . . . . . .  D ADDR   00ADH   A   
REGX_LSB. . . . . . . . . . .  D ADDR   00ACH   A   
REGX_MSB. . . . . . . . . . .  D ADDR   00ABH   A   
REN . . . . . . . . . . . . .  B ADDR   0098H.4 A   
RI. . . . . . . . . . . . . .  B ADDR   0098H.0 A   
RS0 . . . . . . . . . . . . .  B ADDR   00D0H.3 A   
RS1 . . . . . . . . . . . . .  B ADDR   00D0H.4 A   
RSTREAS . . . . . . . . . . .  D ADDR   00B1H   A   
RXD . . . . . . . . . . . . .  B ADDR   0080H.1 A   
SBUF. . . . . . . . . . . . .  D ADDR   0099H   A   
SCON. . . . . . . . . . . . .  D ADDR   0098H   A   
SEG?243 . . . . . . . . . . .  D ADDR   0002H   R   SEG=?DT?MAIN?__PAGING
SM0 . . . . . . . . . . . . .  B ADDR   0098H.7 A   
SM1 . . . . . . . . . . . . .  B ADDR   0098H.6 A   
SM2 . . . . . . . . . . . . .  B ADDR   0098H.5 A   
SP. . . . . . . . . . . . . .  D ADDR   0081H   A   
SPC_FNC . . . . . . . . . . .  D ADDR   008FH   A   
SPICLK. . . . . . . . . . . .  D ADDR   00B4H   A   
SPI_CTRL. . . . . . . . . . .  D ADDR   00B3H   A   
SPI_DATA. . . . . . . . . . .  D ADDR   00B2H   A   
SP_ADDR_H . . . . . . . . . .  D ADDR   000EH   R   SEG=?DT?__PAGING
SP_ADDR_L . . . . . . . . . .  D ADDR   0010H   R   SEG=?DT?__PAGING
T0. . . . . . . . . . . . . .  B ADDR   0080H.5 A   
T1. . . . . . . . . . . . . .  B ADDR   0080H.6 A   
T1_1V2. . . . . . . . . . . .  D ADDR   00BCH   A   
T2. . . . . . . . . . . . . .  B ADDR   0090H.0 A   
T2CON . . . . . . . . . . . .  D ADDR   00C8H   A   
T2_1V2. . . . . . . . . . . .  D ADDR   00BDH   A   
TB8 . . . . . . . . . . . . .  B ADDR   0098H.3 A   
TCLK. . . . . . . . . . . . .  B ADDR   00C8H.4 A   
TCON. . . . . . . . . . . . .  D ADDR   0088H   A   
TEST_MODE . . . . . . . . . .  D ADDR   00B7H   A   
TF0 . . . . . . . . . . . . .  B ADDR   0088H.5 A   
TF1 . . . . . . . . . . . . .  B ADDR   0088H.7 A   
TF2 . . . . . . . . . . . . .  B ADDR   00C8H.7 A   
TH0 . . . . . . . . . . . . .  D ADDR   008CH   A   
TH1 . . . . . . . . . . . . .  D ADDR   008DH   A   
TH2 . . . . . . . . . . . . .  D ADDR   00CDH   A   
TI. . . . . . . . . . . . . .  B ADDR   0098H.1 A   
TICK_DV . . . . . . . . . . .  D ADDR   00B5H   A   
TL0 . . . . . . . . . . . . .  D ADDR   008AH   A   
A51 MACRO ASSEMBLER  PAGING                                                               01/06/2009 17:10:23 PAGE    14

TL1 . . . . . . . . . . . . .  D ADDR   008BH   A   
TL2 . . . . . . . . . . . . .  D ADDR   00CCH   A   
TMOD. . . . . . . . . . . . .  D ADDR   0089H   A   
TR0 . . . . . . . . . . . . .  B ADDR   0088H.4 A   
TR1 . . . . . . . . . . . . .  B ADDR   0088H.6 A   
TR2 . . . . . . . . . . . . .  B ADDR   00C8H.2 A   
TXD . . . . . . . . . . . . .  B ADDR   0080H.2 A   
WDTI. . . . . . . . . . . . .  B ADDR   00D8H.3 A   
_EEPROM_READ. . . . . . . . .  C ADDR   -----       EXT
_MDELAY . . . . . . . . . . .  C ADDR   -----       EXT
_STORE_CPU_RATE . . . . . . .  C ADDR   -----       EXT
__PAGING. . . . . . . . . . .  N NUMB   -----       


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
