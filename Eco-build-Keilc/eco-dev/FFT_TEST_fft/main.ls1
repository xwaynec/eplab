AX51 MACRO ASSEMBLER  MAIN                                                                  05/10/09 14:20:27 PAGE     1


MACRO ASSEMBLER AX51 V3.06a
OBJECT MODULE PLACED IN .\main.obj
ASSEMBLER INVOKED BY: C:\Keil\C51\BIN\AX51.exe .\main.src EP DEBUG SYMBOLS OJ(.\main.obj) PR(.\main.ls1) 

LOC    OBJ             LINE     SOURCE

                          1     ; ./main.src generated from: .\main.c
                          2     ; COMPILER INVOKED BY:
                          3     ;        C:\Keil\C51\BIN\C51.exe .\main.c BROWSE DEBUG CODE LISTINCLUDE SYMBOLS PREPRINT
                                ROM(LARGE) INCDIR(../../Include) SRC(./main.src)
                          4     
                          5     $nomod51 
                          6     
                          7     NAME    MAIN
                          8     
 00A0.7                   9     PWR_UP  BIT     0A0H.7
 0080                    10     P0      DATA    080H
 0090                    11     P1      DATA    090H
 00D0.6                  12     AC      BIT     0D0H.6
 0080.5                  13     T0      BIT     080H.5
 00B3                    14     SPI_CTRL        DATA    0B3H
 0080.6                  15     T1      BIT     080H.6
 00A8.7                  16     EA      BIT     0A8H.7
 0090.0                  17     T2      BIT     090H.0
 00A0.6                  18     CE      BIT     0A0H.6
 00BE                    19     DEV_OFFSET      DATA    0BEH
 00A0.1                  20     CLK1    BIT     0A0H.1
 0090.2                  21     DIN0    BIT     090H.2
 00A0.5                  22     CLK2    BIT     0A0H.5
 0090.0                  23     DIO0    BIT     090H.0
 0083                    24     DPH0    DATA    083H
 0090.1                  25     DIO1    BIT     090H.1
 00A8                    26     IE      DATA    0A8H
 0085                    27     DPH1    DATA    085H
 0080.0                  28     DIO2    BIT     080H.0
 0080.1                  29     DIO3    BIT     080H.1
 0080.0                  30     P0_0    BIT     080H.0
 0090.0                  31     P1_0    BIT     090H.0
 0080.2                  32     DIO4    BIT     080H.2
 0080.1                  33     P0_1    BIT     080H.1
 0082                    34     DPL0    DATA    082H
 0090.1                  35     P1_1    BIT     090H.1
 0080.3                  36     DIO5    BIT     080H.3
 0080.2                  37     P0_2    BIT     080H.2
 0084                    38     DPL1    DATA    084H
 0090.2                  39     P1_2    BIT     090H.2
 0080.4                  40     DIO6    BIT     080H.4
 0080.3                  41     P0_3    BIT     080H.3
 0080.5                  42     DIO7    BIT     080H.5
 0080.4                  43     P0_4    BIT     080H.4
 00A4                    44     ADCSTATIC       DATA    0A4H
 0080.6                  45     DIO8    BIT     080H.6
 0080.5                  46     P0_5    BIT     080H.5
 00C8.6                  47     EXF2    BIT     0C8H.6
 00A0.3                  48     CS      BIT     0A0H.3
 0080.7                  49     DIO9    BIT     080H.7
 0080.6                  50     P0_6    BIT     080H.6
 0080.7                  51     P0_7    BIT     080H.7
 00A8.4                  52     ES      BIT     0A8H.4
 00B8                    53     IP      DATA    0B8H
 00A0.0                  54     DATA?   BIT     0A0H.0
 0098.0                  55     RI      BIT     098H.0
 00D0.7                  56     CY      BIT     0D0H.7
 0098.1                  57     TI      BIT     098H.1
AX51 MACRO ASSEMBLER  MAIN                                                                  05/10/09 14:20:27 PAGE     2

 00BC                    58     T1_1V2  DATA    0BCH
 008F                    59     SPC_FNC DATA    08FH
 00BD                    60     T2_1V2  DATA    0BDH
 00CB                    61     RCAP2H  DATA    0CBH
 00B8.4                  62     PS      BIT     0B8H.4
 0081                    63     SP      DATA    081H
 00D0.2                  64     OV      BIT     0D0H.2
 00B6                    65     CK_CTRL DATA    0B6H
 00CA                    66     RCAP2L  DATA    0CAH
 00B5                    67     TICK_DV DATA    0B5H
 00B1                    68     RSTREAS DATA    0B1H
 00C8.1                  69     C_T2    BIT     0C8H.1
 00E8.4                  70     EWDI    BIT     0E8H.4
 00A1                    71     ADCCON  DATA    0A1H
 00C8.5                  72     RCLK    BIT     0C8H.5
 00A2                    73     ADCDATAH        DATA    0A2H
 0091                    74     EXIF    DATA    091H
 00C8.4                  75     TCLK    BIT     0C8H.4
 00A0.6                  76     DR2_CE  BIT     0A0H.6
 00A3                    77     ADCDATAL        DATA    0A3H
 0099                    78     SBUF    DATA    099H
 0087                    79     PCON    DATA    087H
 0098                    80     SCON    DATA    098H
 00F8.4                  81     PWDI    BIT     0F8H.4
 0089                    82     TMOD    DATA    089H
 0088                    83     TCON    DATA    088H
 00D8.3                  84     WDTI    BIT     0D8H.3
 00AA                    85     PWMDUTY DATA    0AAH
 0088.1                  86     IE0     BIT     088H.1
 0088.3                  87     IE1     BIT     088H.3
 0094                    88     P0_DIR  DATA    094H
 00F0                    89     B       DATA    0F0H
 0096                    90     P1_DIR  DATA    096H
 0095                    91     P0_ALT  DATA    095H
 0097                    92     P1_ALT  DATA    097H
 00C8.0                  93     CP_RL2  BIT     0C8H.0
 00A0.2                  94     DR1     BIT     0A0H.2
 00E0                    95     ACC     DATA    0E0H
 00A0.6                  96     DR2     BIT     0A0H.6
 00B7                    97     TEST_MODE       DATA    0B7H
 00B4                    98     SPICLK  DATA    0B4H
 00C8.1                  99     CT2     BIT     0C8H.1
 00A8.1                 100     ET0     BIT     0A8H.1
 00A8.3                 101     ET1     BIT     0A8H.3
 0088.5                 102     TF0     BIT     088H.5
 0080.3                 103     INT0_N  BIT     080H.3
 00A8.5                 104     ET2     BIT     0A8H.5
 0088.7                 105     TF1     BIT     088H.7
 0080.4                 106     INT1_N  BIT     080H.4
 00C8.7                 107     TF2     BIT     0C8H.7
 0098.2                 108     RB8     BIT     098H.2
 008C                   109     TH0     DATA    08CH
 00A8.0                 110     EX0     BIT     0A8H.0
 0088.0                 111     IT0     BIT     088H.0
 008D                   112     TH1     DATA    08DH
 00A8.2                 113     EX1     BIT     0A8H.2
 0098.3                 114     TB8     BIT     098H.3
 0088.2                 115     IT1     BIT     088H.2
 00CD                   116     TH2     DATA    0CDH
 00AD                   117     REGX_CTRL       DATA    0ADH
 00E8.0                 118     EX2     BIT     0E8H.0
 00D0.0                 119     P       BIT     0D0H.0
 00E8.1                 120     EX3     BIT     0E8H.1
 0098.7                 121     SM0     BIT     098H.7
 008A                   122     TL0     DATA    08AH
 00E8.2                 123     EX4     BIT     0E8H.2
AX51 MACRO ASSEMBLER  MAIN                                                                  05/10/09 14:20:27 PAGE     3

 0098.6                 124     SM1     BIT     098H.6
 008B                   125     TL1     DATA    08BH
 00E8.3                 126     EX5     BIT     0E8H.3
 0098.5                 127     SM2     BIT     098H.5
 00CC                   128     TL2     DATA    0CCH
 00E8                   129     EIE     DATA    0E8H
 00B8.1                 130     PT0     BIT     0B8H.1
 00D0.3                 131     RS0     BIT     0D0H.3
 00B8.3                 132     PT1     BIT     0B8H.3
 00D0.4                 133     RS1     BIT     0D0H.4
 00B8.5                 134     PT2     BIT     0B8H.5
 0088.4                 135     TR0     BIT     088H.4
 00A9                   136     PWMCON  DATA    0A9H
 0088.6                 137     TR1     BIT     088H.6
 00C8.2                 138     TR2     BIT     0C8H.2
 00B8.0                 139     PX0     BIT     0B8H.0
 00B8.2                 140     PX1     BIT     0B8H.2
 00F8.0                 141     PX2     BIT     0F8H.0
 00F8.1                 142     PX3     BIT     0F8H.1
 00F8.2                 143     PX4     BIT     0F8H.2
 0083                   144     DPH     DATA    083H
 00F8.3                 145     PX5     BIT     0F8H.3
 00F8                   146     EIP     DATA    0F8H
 0082                   147     DPL     DATA    082H
 00C8.3                 148     EXEN2   BIT     0C8H.3
 00C8.0                 149     CPRL2   BIT     0C8H.0
 0098.4                 150     REN     BIT     098H.4
 00C8                   151     T2CON   DATA    0C8H
 0086                   152     DPS     DATA    086H
 00B2                   153     SPI_DATA        DATA    0B2H
 0092                   154     MPAGE   DATA    092H
 0080.1                 155     RXD     BIT     080H.1
 00A0.4                 156     DOUT2   BIT     0A0H.4
 00D8                   157     EICON   DATA    0D8H
 008E                   158     CKCON   DATA    08EH
 0080.2                 159     TXD     BIT     080H.2
 00A0                   160     RADIO   DATA    0A0H
 0080.7                 161     PWM     BIT     080H.7
 00D0.5                 162     F0      BIT     0D0H.5
 00D0.1                 163     F1      BIT     0D0H.1
 00AC                   164     REGX_LSB        DATA    0ACH
 00D0                   165     PSW     DATA    0D0H
 00AB                   166     REGX_MSB        DATA    0ABH
------                  167     ?PR?_bitrev?MAIN     SEGMENT CODE 
------                  168     ?DT?_bitrev?MAIN     SEGMENT DATA OVERLAYABLE 
------                  169     ?PR?_log_2?MAIN      SEGMENT CODE 
------                  170     ?PR?_compute_W?MAIN  SEGMENT CODE 
------                  171     ?DT?_compute_W?MAIN  SEGMENT DATA OVERLAYABLE 
------                  172     ?PR?_permute_bitrev?MAIN                 SEGMENT CODE 
------                  173     ?DT?_permute_bitrev?MAIN                 SEGMENT DATA OVERLAYABLE 
------                  174     ?PR?_permute_bitrev_2?MAIN                 SEGMENT CODE 
------                  175     ?PR?_fft?MAIN        SEGMENT CODE 
------                  176     ?DT?_fft?MAIN        SEGMENT DATA OVERLAYABLE 
------                  177     ?PR?_fft_2?MAIN        SEGMENT CODE 
------                  178     ?PR?_fft_3?MAIN        SEGMENT CODE 
------                  179     ?PR?main?MAIN        SEGMENT CODE 
------                  180     ?CO?MAIN             SEGMENT CODE 
------                  181     ?DT?MAIN             SEGMENT DATA 
------                  182     ?ID?_bitrev?MAIN     SEGMENT IDATA OVERLAYABLE 
------                  183     ?ID?_log_2?MAIN      SEGMENT IDATA OVERLAYABLE 
------                  184     ?ID?_compute_W?MAIN  SEGMENT IDATA OVERLAYABLE 
------                  185     ?ID?_permute_bitrev?MAIN                 SEGMENT IDATA OVERLAYABLE 
------                  186     ?ID?_fft?MAIN        SEGMENT IDATA OVERLAYABLE 
------                  187     ?ID?main?MAIN        SEGMENT IDATA OVERLAYABLE 
                        188             EXTRN   CODE (_mdelay)
                        189             EXTRN   CODE (_serial_init)
AX51 MACRO ASSEMBLER  MAIN                                                                  05/10/09 14:20:27 PAGE     4

                        190             EXTRN   CODE (_cos)
                        191             EXTRN   CODE (_sin)
                        192             EXTRN   CODE (_puts)
                        193             EXTRN   CODE (_?int_print)
                        194             EXTRN   CODE (_store_cpu_rate)
                        195             EXTRN   CODE (?C?SIDIV)
                        196             EXTRN   CODE (?C?IMUL)
                        197             EXTRN   CODE (?C?FCASTI)
                        198             EXTRN   CODE (?C?CASTF)
                        199             EXTRN   CODE (?C?ISTOPTR)
                        200             EXTRN   CODE (?C?ILDOPTR)
                        201             EXTRN   CODE (?C_STARTUP)
                        202             
                        203             EXTRN   CODE (eco_page_manager)
                        204         EXTRN   DATA (ECO_PAGE_ADDR)
                        205         EXTRN   DATA (ECO_PAGE_SPI_CONN)
                        206         EXTRN   IDATA (ECO_PAGE_REGISTER1)
                        207         EXTRN   IDATA (ECO_PAGE_REGISTER2)
                        208         EXTRN   IDATA (ECO_PAGE_REGISTER3)
                        209         EXTRN   IDATA (ECO_PAGE_REGISTER4)
                        210         EXTRN   IDATA (ECO_PAGE_REGISTER5)
                        211         EXTRN   IDATA (ECO_PAGE_REGISTER6)
                        212         EXTRN   IDATA (ECO_PAGE_REGISTER7)
                        213     
                        214             PUBLIC  test_counter
                        215             PUBLIC  main
                        216             PUBLIC  ?_fft?BYTE
                        217             PUBLIC  _fft
                        218             PUBLIC  _fft_2
                        219             PUBLIC  _fft_3
                        220             PUBLIC  ?_permute_bitrev?BYTE
                        221             PUBLIC  _permute_bitrev
                        222             PUBLIC  _permute_bitrev_2
                        223             PUBLIC  ?_compute_W?BYTE
                        224             PUBLIC  _compute_W
                        225             PUBLIC  _log_2
                        226             PUBLIC  _bitrev
                        227     
------                  228             RSEG  ?DT?_bitrev?MAIN
000000                  229     ?_bitrev?BYTE:
000000                  230         numbits?041:   DS   2
                        231     
------                  232             RSEG  ?DT?_compute_W?MAIN
000000                  233     ?_compute_W?BYTE:
000000                  234               n?246:   DS   2
000002                  235             ORG  2
000002                  236            W_re?247:   DS   3
000005                  237             ORG  5
000005                  238            W_im?248:   DS   3
000008                  239             ORG  8
000008                  240           log2n?251:   DS   2
                        241     
------                  242             RSEG  ?DT?_fft?MAIN
000000                  243     ?_fft?BYTE:
000000                  244               n?460:   DS   2
000002                  245             ORG  2
000002                  246            A_re?461:   DS   3
000005                  247             ORG  5
000005                  248            A_im?462:   DS   3
000008                  249             ORG  8
000008                  250            W_re?463:   DS   3
00000B                  251             ORG  11
00000B                  252            W_im?464:   DS   3
                        253     
------                  254             RSEG  ?DT?_permute_bitrev?MAIN
000000                  255     ?_permute_bitrev?BYTE:
AX51 MACRO ASSEMBLER  MAIN                                                                  05/10/09 14:20:27 PAGE     5

000000                  256               n?352:   DS   2
000002                  257             ORG  2
000002                  258            A_re?353:   DS   3
000005                  259             ORG  5
000005                  260            A_im?354:   DS   3
                        261     
------                  262             RSEG  ?DT?MAIN
000000                  263        test_counter:   DS   2
                        264     
------                  265             RSEG  ?ID?_bitrev?MAIN
000000                  266               i?042:   DS   2
                        267     
------                  268             RSEG  ?ID?_bitrev?MAIN
000002                  269             rev?043:   DS   2
                        270     
------                  271             RSEG  ?ID?_log_2?MAIN
000000                  272             res?145:   DS   2
                        273     
------                  274             RSEG  ?ID?_compute_W?MAIN
000000                  275               i?249:   DS   2
                        276     
------                  277             RSEG  ?ID?_compute_W?MAIN
000002                  278              br?250:   DS   2
                        279     
------                  280             RSEG  ?ID?_permute_bitrev?MAIN
000000                  281               i?355:   DS   2
                        282     
------                  283             RSEG  ?ID?_permute_bitrev?MAIN
000002                  284             bri?356:   DS   2
                        285     
------                  286             RSEG  ?ID?_permute_bitrev?MAIN
000004                  287           log2n?357:   DS   2
                        288     
------                  289             RSEG  ?ID?_permute_bitrev?MAIN
000006                  290            t_re?358:   DS   2
                        291     
------                  292             RSEG  ?ID?_permute_bitrev?MAIN
000008                  293            t_im?359:   DS   2
                        294     
------                  295             RSEG  ?ID?_fft?MAIN
000000                  296            w_re?465:   DS   2
                        297     
------                  298             RSEG  ?ID?_fft?MAIN
000002                  299            w_im?466:   DS   2
                        300     
------                  301             RSEG  ?ID?_fft?MAIN
000004                  302            u_re?467:   DS   2
                        303     
------                  304             RSEG  ?ID?_fft?MAIN
000006                  305            u_im?468:   DS   2
                        306     
------                  307             RSEG  ?ID?_fft?MAIN
000008                  308            t_re?469:   DS   2
                        309     
------                  310             RSEG  ?ID?_fft?MAIN
00000A                  311            t_im?470:   DS   2
                        312     
------                  313             RSEG  ?ID?_fft?MAIN
00000C                  314               m?471:   DS   2
                        315     
------                  316             RSEG  ?ID?_fft?MAIN
00000E                  317               g?472:   DS   2
                        318     
------                  319             RSEG  ?ID?_fft?MAIN
000010                  320               b?473:   DS   2
                        321     
AX51 MACRO ASSEMBLER  MAIN                                                                  05/10/09 14:20:27 PAGE     6

------                  322             RSEG  ?ID?_fft?MAIN
000012                  323              mt?474:   DS   2
                        324     
------                  325             RSEG  ?ID?_fft?MAIN
000014                  326               k?475:   DS   2
                        327     
------                  328             RSEG  ?ID?main?MAIN
000000                  329               n?576:   DS   2
                        330     
------                  331             RSEG  ?ID?main?MAIN
000002                  332            A_re?577:   DS   16
                        333     
------                  334             RSEG  ?ID?main?MAIN
000012                  335            A_im?578:   DS   16
                        336     
------                  337             RSEG  ?ID?main?MAIN
000022                  338            W_re?579:   DS   8
                        339     
------                  340             RSEG  ?ID?main?MAIN
00002A                  341            W_im?580:   DS   8
                        342     
------                  343             RSEG  ?CO?MAIN
000000                  344     ?SC_0:
000000 0D0A00           345             DB  00DH,00AH,000H
                        346     
                        347     ; /* gets no. of points from the user, initialize the points and roots of unity lookup t
                               able 
                        348     ;  * and lets fft go. finally bit-reverses the results and outputs them into a file. 
                        349     ;  * n should be a power of 2. 
                        350     ;  */
                        351     ; #include "Eco/reg24e1.h"
                        352     ; #include "Eco/eco_sys.h"
                        353     ; #include "utils/utils.h"
                        354     ; #include "serial/serial.h"
                        355     ; #include "isr/isr_rf.h"
                        356     ; #include "eeprom/eeprom.h"
                        357     ; #include "eco_page.h"
                        358     ; #include "adc/adc.h"
                        359     ; 
                        360     ; #include <math.h>
                        361     ; 
                        362     ; volatile unsigned int test_counter;
                        363     ; /* treats inp as a numbits number and bitreverses it. 
                        364     ;  * inp < 2^(numbits) for meaningful bit-reversal
                        365     ;  */ 
                        366     ; int bitrev(int idata inp, int idata numbits)
                        367     
------                  368             RSEG  ?PR?_bitrev?MAIN
000000                  369     _bitrev:
                        370             USING   0
                        371                             ; SOURCE LINE # 20
000000 8C00       F     372             MOV     numbits?041,R4
000002 8D00       F     373             MOV     numbits?041+01H,R5
                        374     ;---- Variable 'inp?040' assigned to Register 'R2/R3' ----
000004 AB07             375             MOV     R3,AR7
000006 AA06             376             MOV     R2,AR6
                        377     ; {
                        378                             ; SOURCE LINE # 21
                        379     ;       int idata i;
                        380     ;       int idata rev=0;
                        381                             ; SOURCE LINE # 23
000008 E4               382             CLR     A
000009 7800       F     383             MOV     R0,#LOW (rev?043)
00000B F6               384             MOV     @R0,A
00000C 08               385             INC     R0
00000D F6               386             MOV     @R0,A
AX51 MACRO ASSEMBLER  MAIN                                                                  05/10/09 14:20:27 PAGE     7

                        387     ;       for (i=0; i < numbits; i++)
                        388                             ; SOURCE LINE # 24
00000E 7800       F     389             MOV     R0,#LOW (i?042)
000010 F6               390             MOV     @R0,A
000011 08               391             INC     R0
000012 F6               392             MOV     @R0,A
000013                  393     ?C0001:
000013 C3               394             CLR     C
000014 7800       F     395             MOV     R0,#LOW (i?042+01H)
000016 E6               396             MOV     A,@R0
000017 9500       F     397             SUBB    A,numbits?041+01H
000019 E500       F     398             MOV     A,numbits?041
00001B 6480             399             XRL     A,#080H
00001D F5F0             400             MOV     B,A
00001F 18               401             DEC     R0
000020 E6               402             MOV     A,@R0
000021 6480             403             XRL     A,#080H
000023 95F0             404             SUBB    A,B
000025 5026             405             JNC     ?C0002
                        406     ;       {
                        407                             ; SOURCE LINE # 25
                        408     ;               rev = (rev << 1) | (inp & 1);
                        409                             ; SOURCE LINE # 26
000027 7800       F     410             MOV     R0,#LOW (rev?043+01H)
000029 E6               411             MOV     A,@R0
00002A 25E0             412             ADD     A,ACC
00002C FF               413             MOV     R7,A
00002D 18               414             DEC     R0
00002E E6               415             MOV     A,@R0
00002F 33               416             RLC     A
000030 FE               417             MOV     R6,A
000031 EB               418             MOV     A,R3
000032 5401             419             ANL     A,#01H
000034 FD               420             MOV     R5,A
000035 EE               421             MOV     A,R6
000036 F6               422             MOV     @R0,A
000037 EF               423             MOV     A,R7
000038 4D               424             ORL     A,R5
000039 08               425             INC     R0
00003A F6               426             MOV     @R0,A
                        427     ;               inp >>= 1;
                        428                             ; SOURCE LINE # 27
00003B EA               429             MOV     A,R2
00003C A2E7             430             MOV     C,ACC.7
00003E 13               431             RRC     A
00003F FA               432             MOV     R2,A
000040 EB               433             MOV     A,R3
000041 13               434             RRC     A
000042 FB               435             MOV     R3,A
                        436     ;       }
                        437                             ; SOURCE LINE # 28
000043 7800       F     438             MOV     R0,#LOW (i?042+01H)
000045 06               439             INC     @R0
000046 E6               440             MOV     A,@R0
000047 18               441             DEC     R0
000048 70C9             442             JNZ     ?C0001
00004A 06               443             INC     @R0
00004B                  444     ?C0034:
00004B 80C6             445             SJMP    ?C0001
00004D                  446     ?C0002:
                        447     ;       return rev;
                        448                             ; SOURCE LINE # 29
00004D 7800       F     449             MOV     R0,#LOW (rev?043)
00004F E6               450             MOV     A,@R0
000050 FE               451             MOV     R6,A
000051 08               452             INC     R0
AX51 MACRO ASSEMBLER  MAIN                                                                  05/10/09 14:20:27 PAGE     8

000052 E6               453             MOV     A,@R0
000053 FF               454             MOV     R7,A
                        455     ; }
                        456                             ; SOURCE LINE # 30
000054                  457     ?C0004:
                        458             ;XRL    P0,#020H
000054 22               459             RET     
                        460     ; END OF _bitrev
                        461     
                        462     ; 
                        463     ; 
                        464     ; /* returns log n (to the base 2), if n is positive and power of 2 */ 
                        465     ; int log_2(int idata n) 
                        466     
------                  467             RSEG  ?PR?_log_2?MAIN
000000                  468     _log_2:
                        469             USING   0
                        470                             ; SOURCE LINE # 34
                        471     ;---- Variable 'n?144' assigned to Register 'R6/R7' ----
                        472     ; {
                        473                             ; SOURCE LINE # 35
                        474     ;       int idata res; 
                        475     ;       for (res=0; n >= 2; res++) 
                        476                             ; SOURCE LINE # 37
000000 E4               477             CLR     A
000001 7800       F     478             MOV     R0,#LOW (res?145)
000003 F6               479             MOV     @R0,A
000004 08               480             INC     R0
000005 F6               481             MOV     @R0,A
000006                  482     ?C0005:
000006 C3               483             CLR     C
000007 EF               484             MOV     A,R7
000008 9402             485             SUBB    A,#02H
00000A EE               486             MOV     A,R6
00000B 6480             487             XRL     A,#080H
00000D 9480             488             SUBB    A,#080H
00000F 4012             489             JC      ?C0006
                        490     ;               n = n >> 1; 
                        491                             ; SOURCE LINE # 38
000011 EE               492             MOV     A,R6
000012 A2E7             493             MOV     C,ACC.7
000014 13               494             RRC     A
000015 FE               495             MOV     R6,A
000016 EF               496             MOV     A,R7
000017 13               497             RRC     A
000018 FF               498             MOV     R7,A
000019 7800       F     499             MOV     R0,#LOW (res?145+01H)
00001B 06               500             INC     @R0
00001C E6               501             MOV     A,@R0
00001D 18               502             DEC     R0
00001E 70E6             503             JNZ     ?C0005
000020 06               504             INC     @R0
000021                  505     ?C0035:
000021 80E3             506             SJMP    ?C0005
000023                  507     ?C0006:
                        508     ;       return res; 
                        509                             ; SOURCE LINE # 39
000023 7800       F     510             MOV     R0,#LOW (res?145)
000025 E6               511             MOV     A,@R0
000026 FE               512             MOV     R6,A
000027 08               513             INC     R0
000028 E6               514             MOV     A,@R0
000029 FF               515             MOV     R7,A
                        516     ; }
                        517                             ; SOURCE LINE # 40
00002A                  518     ?C0008:
AX51 MACRO ASSEMBLER  MAIN                                                                  05/10/09 14:20:27 PAGE     9

                        519             ;XRL    P0,#020H
00002A 22               520             RET     
                        521     ; END OF _log_2
                        522     
                        523     ; 
                        524     ; 
                        525     ; 
                        526     ; /* W will contain roots of unity so that W[bitrev(i,log2n-1)] = e^(2*pi*i/n)
                        527     ;  * n should be a power of 2
                        528     ;  * Note: W is bit-reversal permuted because fft(..) goes faster if this is done.
                        529     ;  *       see that function for more details on why we treat 'i' as a (log2n-1) bit num
                               ber.
                        530     ;  */
                        531     ; void compute_W(int idata n, int idata W_re[], int idata W_im[])
                        532     
------                  533             RSEG  ?PR?_compute_W?MAIN
000000                  534     _compute_W:
                        535             USING   0
                        536                             ; SOURCE LINE # 49
000000 8E00       F     537             MOV     n?246,R6
000002 8F00       F     538             MOV     n?246+01H,R7
000004 8B00       F     539             MOV     W_re?247,R3
000006 8A00       F     540             MOV     W_re?247+01H,R2
000008 8900       F     541             MOV     W_re?247+02H,R1
                        542     ; {
                        543                             ; SOURCE LINE # 50
                        544     ;       int idata i;
                        545     ;       int idata br;
                        546     ;       int log2n = log_2(n);
                        547                             ; SOURCE LINE # 53
00000A 120000     F     548             LCALL   _log_2
00000D 8E00       F     549             MOV     log2n?251,R6
00000F 8F00       F     550             MOV     log2n?251+01H,R7
                        551     ; 
                        552     ;       for (i=0; i<(n/2); i++)
                        553                             ; SOURCE LINE # 55
000011 E4               554             CLR     A
000012 7800       F     555             MOV     R0,#LOW (i?249)
000014 F6               556             MOV     @R0,A
000015 08               557             INC     R0
000016 F6               558             MOV     @R0,A
000017                  559     ?C0009:
000017 AE00       F     560             MOV     R6,n?246
000019 AF00       F     561             MOV     R7,n?246+01H
00001B 7C00             562             MOV     R4,#00H
00001D 7D02             563             MOV     R5,#02H
00001F 120000     E     564             LCALL   ?C?SIDIV
000022 AC06             565             MOV     R4,AR6
000024 AD07             566             MOV     R5,AR7
000026 7800       F     567             MOV     R0,#LOW (i?249)
000028 E6               568             MOV     A,@R0
000029 FE               569             MOV     R6,A
00002A 08               570             INC     R0
00002B E6               571             MOV     A,@R0
00002C FF               572             MOV     R7,A
00002D C3               573             CLR     C
00002E 9D               574             SUBB    A,R5
00002F EC               575             MOV     A,R4
000030 6480             576             XRL     A,#080H
000032 F8               577             MOV     R0,A
000033 EE               578             MOV     A,R6
000034 6480             579             XRL     A,#080H
000036 98               580             SUBB    A,R0
000037 4009             581             JC      $ + 0BH
                        582             ;LJMP   ?C0012
000039 750000     F     583             MOV ECO_PAGE_ADDR,#HIGH (?C0012)
AX51 MACRO ASSEMBLER  MAIN                                                                  05/10/09 14:20:27 PAGE    10

00003C 750000     F     584         MOV ECO_PAGE_ADDR+01H,#LOW (?C0012)
00003F 020000     E     585         LJMP   eco_page_manager
                        586     ;       {
                        587                             ; SOURCE LINE # 56
                        588     ;               br = bitrev(i,log2n-1); 
                        589                             ; SOURCE LINE # 57
000042 E500       F     590             MOV     A,log2n?251+01H
000044 24FF             591             ADD     A,#0FFH
000046 FD               592             MOV     R5,A
000047 E500       F     593             MOV     A,log2n?251
000049 34FF             594             ADDC    A,#0FFH
00004B FC               595             MOV     R4,A
                        596             ;LCALL  _bitrev
00004C 7800       E     597             MOV R0,#LOW (ECO_PAGE_REGISTER4)
00004E F6               598         MOV @R0,A
                        599     
00004F 7800       E     600         MOV R0,#LOW (ECO_PAGE_REGISTER5)
000051 F6               601         MOV @R0,A
                        602     
                        603         ;LCALL  _bitrev
000052 750000     F     604         MOV ECO_PAGE_ADDR,#HIGH (_bitrev)
000055 750000     F     605         MOV ECO_PAGE_ADDR+01H,#LOW (_bitrev)
000058 120000     E     606         LCALL   eco_page_manager
                        607     
00005B 7800       F     608             MOV     R0,#LOW (br?250)
00005D A606             609             MOV     @R0,AR6
00005F 08               610             INC     R0
000060 A607             611             MOV     @R0,AR7
                        612     ;               W_re[br] = cos((i*2*3)/(n));  
                        613                             ; SOURCE LINE # 58
000062 7800       F     614             MOV     R0,#LOW (i?249)
000064 E6               615             MOV     A,@R0
000065 FE               616             MOV     R6,A
000066 08               617             INC     R0
000067 E6               618             MOV     A,@R0
000068 FF               619             MOV     R7,A
000069 7C00             620             MOV     R4,#00H
00006B 7D06             621             MOV     R5,#06H
00006D 120000     E     622             LCALL   ?C?IMUL
000070 AC00       F     623             MOV     R4,n?246
000072 AD00       F     624             MOV     R5,n?246+01H
000074 120000     E     625             LCALL   ?C?SIDIV
000077 AC06             626             MOV     R4,AR6
000079 AD07             627             MOV     R5,AR7
00007B EC               628             MOV     A,R4
00007C 120000     E     629             LCALL   ?C?FCASTI
00007F 120000     E     630             LCALL   _cos
000082 120000     E     631             LCALL   ?C?CASTF
000085 AD07             632             MOV     R5,AR7
000087 7800       F     633             MOV     R0,#LOW (br?250+01H)
000089 E6               634             MOV     A,@R0
00008A 25E0             635             ADD     A,ACC
00008C FF               636             MOV     R7,A
00008D 18               637             DEC     R0
00008E E6               638             MOV     A,@R0
00008F 33               639             RLC     A
000090 AB00       F     640             MOV     R3,W_re?247
000092 AA00       F     641             MOV     R2,W_re?247+01H
000094 A900       F     642             MOV     R1,W_re?247+02H
000096 8F82             643             MOV     DPL,R7
000098 F583             644             MOV     DPH,A
00009A EE               645             MOV     A,R6
00009B 8DF0             646             MOV     B,R5
00009D 120000     E     647             LCALL   ?C?ISTOPTR
                        648     ;               W_im[br] = sin((i*2*3)/(n));  
                        649                             ; SOURCE LINE # 59
AX51 MACRO ASSEMBLER  MAIN                                                                  05/10/09 14:20:27 PAGE    11

0000A0 7800       F     650             MOV     R0,#LOW (i?249)
0000A2 E6               651             MOV     A,@R0
0000A3 FE               652             MOV     R6,A
0000A4 08               653             INC     R0
0000A5 E6               654             MOV     A,@R0
0000A6 FF               655             MOV     R7,A
0000A7 7C00             656             MOV     R4,#00H
0000A9 7D06             657             MOV     R5,#06H
0000AB 120000     E     658             LCALL   ?C?IMUL
0000AE AC00       F     659             MOV     R4,n?246
0000B0 AD00       F     660             MOV     R5,n?246+01H
0000B2 120000     E     661             LCALL   ?C?SIDIV
0000B5 AC06             662             MOV     R4,AR6
0000B7 AD07             663             MOV     R5,AR7
0000B9 EC               664             MOV     A,R4
0000BA 120000     E     665             LCALL   ?C?FCASTI
0000BD 120000     E     666             LCALL   _sin
0000C0 120000     E     667             LCALL   ?C?CASTF
0000C3 AD07             668             MOV     R5,AR7
0000C5 7800       F     669             MOV     R0,#LOW (br?250+01H)
0000C7 E6               670             MOV     A,@R0
0000C8 25E0             671             ADD     A,ACC
0000CA FF               672             MOV     R7,A
0000CB 18               673             DEC     R0
0000CC E6               674             MOV     A,@R0
0000CD 33               675             RLC     A
0000CE AB00       F     676             MOV     R3,W_im?248
0000D0 AA00       F     677             MOV     R2,W_im?248+01H
0000D2 A900       F     678             MOV     R1,W_im?248+02H
0000D4 8F82             679             MOV     DPL,R7
0000D6 F583             680             MOV     DPH,A
0000D8 EE               681             MOV     A,R6
0000D9 8DF0             682             MOV     B,R5
0000DB 120000     E     683             LCALL   ?C?ISTOPTR
                        684     ;       }
                        685                             ; SOURCE LINE # 60
0000DE 7800       F     686             MOV     R0,#LOW (i?249+01H)
0000E0 06               687             INC     @R0
0000E1 E6               688             MOV     A,@R0
0000E2 18               689             DEC     R0
0000E3 6009             690             JZ      $ + 0BH
                        691             ;LJMP   ?C0009
0000E5 750000     F     692             MOV ECO_PAGE_ADDR,#HIGH (?C0009)
0000E8 750000     F     693         MOV ECO_PAGE_ADDR+01H,#LOW (?C0009)
0000EB 020000     E     694         LJMP   eco_page_manager
0000EE 06               695             INC     @R0
0000EF                  696     ?C0036:
                        697             ;LJMP   ?C0009
0000EF 750000     F     698             MOV ECO_PAGE_ADDR,#HIGH (?C0009)
0000F2 750000     F     699         MOV ECO_PAGE_ADDR+01H,#LOW (?C0009)
0000F5 020000     E     700         LJMP   eco_page_manager
                        701     ; //#ifdef COMMENT_ONLY 
                        702     ; //    for (i=0;i<(n/2);i++)
                        703     ; //    { 
                        704     ; //            br = i; //bitrev(i,log2n-1); 
                        705     ; //            printf("(%g\t%g)\n", W_re[br], W_im[br]);
                        706     ; //    }  
                        707     ; //#endif 
                        708     ; }
                        709                             ; SOURCE LINE # 68
0000F8                  710     ?C0012:
0000F8 22               711             RET     
                        712     ; END OF _compute_W
                        713     
                        714     ; 
                        715     ; 
AX51 MACRO ASSEMBLER  MAIN                                                                  05/10/09 14:20:27 PAGE    12

                        716     ; /* permutes the array using a bit-reversal permutation */ 
                        717     ; void permute_bitrev(int n, int *A_re, int *A_im) 
                        718     
------                  719             RSEG  ?PR?_permute_bitrev?MAIN
000000                  720     _permute_bitrev:
                        721             USING   0
                        722                             ; SOURCE LINE # 72
000000 8E00       F     723             MOV     n?352,R6
000002 8F00       F     724             MOV     n?352+01H,R7
000004 8B00       F     725             MOV     A_re?353,R3
000006 8A00       F     726             MOV     A_re?353+01H,R2
000008 8900       F     727             MOV     A_re?353+02H,R1
                        728     ; { 
                        729                             ; SOURCE LINE # 73
                        730     ;       int idata i;
                        731     ;       int idata bri;
                        732     ;       int idata log2n;
                        733     ;       int idata t_re;
                        734     ;       int idata t_im;
                        735     ; 
                        736     ;       log2n = log_2(n); 
                        737                             ; SOURCE LINE # 80
00000A 120000     F     738             LCALL   _log_2
00000D 7800       F     739             MOV     R0,#LOW (log2n?357)
00000F A606             740             MOV     @R0,AR6
000011 08               741             INC     R0
000012 A607             742             MOV     @R0,AR7
                        743     ; 
                        744     ;       for (i=0; i<n; i++)
                        745                             ; SOURCE LINE # 82
000014 E4               746             CLR     A
000015 7800       F     747             MOV     R0,#LOW (i?355)
000017 F6               748             MOV     @R0,A
000018 08               749             INC     R0
000019 F6               750             MOV     @R0,A
00001A                  751     ?C0013:
00001A 7800       F     752             MOV     R0,#LOW (i?355)
00001C E6               753             MOV     A,@R0
00001D FE               754             MOV     R6,A
00001E 08               755             INC     R0
00001F E6               756             MOV     A,@R0
000020 FF               757             MOV     R7,A
000021 C3               758             CLR     C
000022 9500       F     759             SUBB    A,n?352+01H
000024 E500       F     760             MOV     A,n?352
000026 6480             761             XRL     A,#080H
000028 F8               762             MOV     R0,A
000029 EE               763             MOV     A,R6
00002A 6480             764             XRL     A,#080H
00002C 98               765             SUBB    A,R0
00002D 4009             766             JC      $ + 0BH
                        767             ;LJMP   ?C0017
00002F 750000     F     768             MOV ECO_PAGE_ADDR,#HIGH (?C0017)
000032 750000     F     769         MOV ECO_PAGE_ADDR+01H,#LOW (?C0017)
000035 020000     E     770         LJMP   eco_page_manager
                        771     ;       {
                        772                             ; SOURCE LINE # 83
                        773     ;               bri  = bitrev(i, log2n);
                        774                             ; SOURCE LINE # 84
000038 7800       F     775             MOV     R0,#LOW (log2n?357)
00003A E6               776             MOV     A,@R0
00003B FC               777             MOV     R4,A
00003C 08               778             INC     R0
00003D E6               779             MOV     A,@R0
00003E FD               780             MOV     R5,A
                        781             ;LCALL  _bitrev
AX51 MACRO ASSEMBLER  MAIN                                                                  05/10/09 14:20:27 PAGE    13

00003F 7800       E     782             MOV R0,#LOW (ECO_PAGE_REGISTER4)
000041 F6               783         MOV @R0,A
                        784     
000042 7800       E     785         MOV R0,#LOW (ECO_PAGE_REGISTER5)
000044 F6               786         MOV @R0,A
                        787     
                        788         ;LCALL  _bitrev
000045 750000     F     789         MOV ECO_PAGE_ADDR,#HIGH (_bitrev)
000048 750000     F     790         MOV ECO_PAGE_ADDR+01H,#LOW (_bitrev)
00004B 120000     E     791         LCALL   eco_page_manager
                        792     
00004E 7800       F     793             MOV     R0,#LOW (bri?356)
000050 EE               794             MOV     A,R6
000051 F6               795             MOV     @R0,A
000052 08               796             INC     R0
000053 EF               797             MOV     A,R7
000054 F6               798             MOV     @R0,A
                        799     ; 
                        800     ;               /* skip already swapped elements */
                        801     ;               if (bri <= i) continue;
                        802                             ; SOURCE LINE # 87
000055 7800       F     803             MOV     R0,#LOW (i?355)
000057 E6               804             MOV     A,@R0
000058 FC               805             MOV     R4,A
000059 08               806             INC     R0
00005A E6               807             MOV     A,@R0
00005B FD               808             MOV     R5,A
00005C D3               809             SETB    C
00005D EF               810             MOV     A,R7
00005E 9D               811             SUBB    A,R5
00005F EC               812             MOV     A,R4
000060 6480             813             XRL     A,#080H
000062 F8               814             MOV     R0,A
000063 EE               815             MOV     A,R6
000064 6480             816             XRL     A,#080H
000066 98               817             SUBB    A,R0
000067 5009             818             JNC     $ + 0BH
                        819             ;LJMP   ?C0015
000069 750000     F     820             MOV ECO_PAGE_ADDR,#HIGH (?C0015)
00006C 750000     F     821         MOV ECO_PAGE_ADDR+01H,#LOW (?C0015)
00006F 020000     E     822         LJMP   eco_page_manager
000072                  823     ?C0016:
                        824     ; 
                        825     ;               t_re = A_re[i];
                        826                             ; SOURCE LINE # 89
000072 7800       F     827             MOV     R0,#LOW (i?355+01H)
000074 E6               828             MOV     A,@R0
000075 25E0             829             ADD     A,ACC
000077 FF               830             MOV     R7,A
000078 18               831             DEC     R0
000079 E6               832             MOV     A,@R0
00007A 33               833             RLC     A
00007B FE               834             MOV     R6,A
00007C AB00       F     835             MOV     R3,A_re?353
00007E AA00       F     836             MOV     R2,A_re?353+01H
000080 A900       F     837             MOV     R1,A_re?353+02H
000082 8F82             838             MOV     DPL,R7
000084 F583             839             MOV     DPH,A
000086 120000     E     840             LCALL   ?C?ILDOPTR
000089 7800       F     841             MOV     R0,#LOW (t_re?358)
00008B A6F0             842             MOV     @R0,B
00008D 08               843             INC     R0
00008E F6               844             MOV     @R0,A
                        845     ;               t_im = A_im[i];
                        846                             ; SOURCE LINE # 90
00008F 750000     F     847             MOV ECO_PAGE_ADDR,#HIGH (_permute_bitrev_2)
AX51 MACRO ASSEMBLER  MAIN                                                                  05/10/09 14:20:27 PAGE    14

000092 750000     F     848         MOV ECO_PAGE_ADDR+01H,#LOW (_permute_bitrev_2)
000095 020000     E     849         LJMP   eco_page_manager
                        850     
                        851     
                        852     
------                  853         RSEG  ?PR?_permute_bitrev_2?MAIN
000000                  854     _permute_bitrev_2:
                        855         USING   0
                        856     
000000 AB00       F     857             MOV     R3,A_im?354
000002 AA00       F     858             MOV     R2,A_im?354+01H
000004 A900       F     859             MOV     R1,A_im?354+02H
000006 8F82             860             MOV     DPL,R7
000008 8E83             861             MOV     DPH,R6
00000A 120000     E     862             LCALL   ?C?ILDOPTR
00000D 7800       F     863             MOV     R0,#LOW (t_im?359)
00000F A6F0             864             MOV     @R0,B
000011 08               865             INC     R0
000012 F6               866             MOV     @R0,A
                        867     ;               A_re[i]= A_re[bri];
                        868                             ; SOURCE LINE # 91
000013 7800       F     869             MOV     R0,#LOW (bri?356+01H)
000015 E6               870             MOV     A,@R0
000016 25E0             871             ADD     A,ACC
000018 FF               872             MOV     R7,A
000019 18               873             DEC     R0
00001A E6               874             MOV     A,@R0
00001B 33               875             RLC     A
00001C AB00       F     876             MOV     R3,A_re?353
00001E AA00       F     877             MOV     R2,A_re?353+01H
000020 A900       F     878             MOV     R1,A_re?353+02H
000022 8F82             879             MOV     DPL,R7
000024 F583             880             MOV     DPH,A
000026 120000     E     881             LCALL   ?C?ILDOPTR
000029 FD               882             MOV     R5,A
00002A 7800       F     883             MOV     R0,#LOW (i?355+01H)
00002C E6               884             MOV     A,@R0
00002D 25E0             885             ADD     A,ACC
00002F FF               886             MOV     R7,A
000030 18               887             DEC     R0
000031 E6               888             MOV     A,@R0
000032 33               889             RLC     A
000033 8F82             890             MOV     DPL,R7
000035 F583             891             MOV     DPH,A
000037 E5F0             892             MOV     A,B
000039 8DF0             893             MOV     B,R5
00003B 120000     E     894             LCALL   ?C?ISTOPTR
                        895     ;               A_im[i]= A_im[bri];
                        896                             ; SOURCE LINE # 92
00003E 7800       F     897             MOV     R0,#LOW (bri?356+01H)
000040 E6               898             MOV     A,@R0
000041 25E0             899             ADD     A,ACC
000043 FF               900             MOV     R7,A
000044 18               901             DEC     R0
000045 E6               902             MOV     A,@R0
000046 33               903             RLC     A
000047 AB00       F     904             MOV     R3,A_im?354
000049 AA00       F     905             MOV     R2,A_im?354+01H
00004B A900       F     906             MOV     R1,A_im?354+02H
00004D 8F82             907             MOV     DPL,R7
00004F F583             908             MOV     DPH,A
000051 120000     E     909             LCALL   ?C?ILDOPTR
000054 FD               910             MOV     R5,A
000055 7800       F     911             MOV     R0,#LOW (i?355+01H)
000057 E6               912             MOV     A,@R0
000058 25E0             913             ADD     A,ACC
AX51 MACRO ASSEMBLER  MAIN                                                                  05/10/09 14:20:27 PAGE    15

00005A FF               914             MOV     R7,A
00005B 18               915             DEC     R0
00005C E6               916             MOV     A,@R0
00005D 33               917             RLC     A
00005E 8F82             918             MOV     DPL,R7
000060 F583             919             MOV     DPH,A
000062 E5F0             920             MOV     A,B
000064 8DF0             921             MOV     B,R5
000066 120000     E     922             LCALL   ?C?ISTOPTR
                        923     ;               A_re[bri]= t_re;
                        924                             ; SOURCE LINE # 93
000069 7800       F     925             MOV     R0,#LOW (t_re?358)
00006B E6               926             MOV     A,@R0
00006C FC               927             MOV     R4,A
00006D 08               928             INC     R0
00006E E6               929             MOV     A,@R0
00006F FD               930             MOV     R5,A
000070 7800       F     931             MOV     R0,#LOW (bri?356+01H)
000072 E6               932             MOV     A,@R0
000073 25E0             933             ADD     A,ACC
000075 FF               934             MOV     R7,A
000076 18               935             DEC     R0
000077 E6               936             MOV     A,@R0
000078 33               937             RLC     A
000079 FE               938             MOV     R6,A
00007A AB00       F     939             MOV     R3,A_re?353
00007C AA00       F     940             MOV     R2,A_re?353+01H
00007E A900       F     941             MOV     R1,A_re?353+02H
000080 8F82             942             MOV     DPL,R7
000082 F583             943             MOV     DPH,A
000084 EC               944             MOV     A,R4
000085 8DF0             945             MOV     B,R5
000087 120000     E     946             LCALL   ?C?ISTOPTR
                        947     ;               A_im[bri]= t_im;
                        948                             ; SOURCE LINE # 94
00008A 7800       F     949             MOV     R0,#LOW (t_im?359)
00008C E6               950             MOV     A,@R0
00008D FD               951             MOV     R5,A
00008E 08               952             INC     R0
00008F E6               953             MOV     A,@R0
000090 AB00       F     954             MOV     R3,A_im?354
000092 AA00       F     955             MOV     R2,A_im?354+01H
000094 A900       F     956             MOV     R1,A_im?354+02H
000096 8F82             957             MOV     DPL,R7
000098 8E83             958             MOV     DPH,R6
00009A CD               959             XCH     A,R5
00009B 8DF0             960             MOV     B,R5
00009D 120000     E     961             LCALL   ?C?ISTOPTR
                        962     ;       }  
                        963                             ; SOURCE LINE # 95
0000A0                  964     ?C0015:
0000A0 7800       F     965             MOV     R0,#LOW (i?355+01H)
0000A2 06               966             INC     @R0
0000A3 E6               967             MOV     A,@R0
0000A4 18               968             DEC     R0
0000A5 6009             969             JZ      $ + 0BH
                        970             ;LJMP   ?C0013
0000A7 750000     F     971             MOV ECO_PAGE_ADDR,#HIGH (?C0013)
0000AA 750000     F     972         MOV ECO_PAGE_ADDR+01H,#LOW (?C0013)
0000AD 020000     E     973         LJMP   eco_page_manager
0000B0 06               974             INC     @R0
0000B1                  975     ?C0037:
                        976             ;LJMP   ?C0013
0000B1 750000     F     977             MOV ECO_PAGE_ADDR,#HIGH (?C0013)
0000B4 750000     F     978         MOV ECO_PAGE_ADDR+01H,#LOW (?C0013)
0000B7 020000     E     979         LJMP   eco_page_manager
AX51 MACRO ASSEMBLER  MAIN                                                                  05/10/09 14:20:27 PAGE    16

                        980     ; } 
                        981                             ; SOURCE LINE # 96
0000BA                  982     ?C0017:
0000BA 22               983             RET     
                        984     ; END OF _permute_bitrev
                        985     
                        986     ; 
                        987     ; 
                        988     ; /* fft on a set of n points given by A_re and A_im. Bit-reversal permuted roots-of-uni
                               ty lookup table
                        989     ;  * is given by W_re and W_im. More specifically,  W is the array of first n/2 nth root
                               s of unity stored
                        990     ;  * in a permuted bitreversal order.
                        991     ;  *
                        992     ;  * FFT - Decimation In Time FFT with input array in correct order and output array in 
                               bit-reversed order.
                        993     ;  *
                        994     ;  * REQ: n should be a power of 2 to work. 
                        995     ;  *
                        996     ;  * Note: - See www.cs.berkeley.edu/~randit for her thesis on VIRAM FFTs and other deta
                               ils about VHALF section of the algo
                        997     ;  *         (thesis link - http://www.cs.berkeley.edu/~randit/papers/csd-00-1106.pdf)
                        998     ;  *       - See the foll. CS267 website for details of the Decimation In Time FFT imple
                               mented here.
                        999     ;  *         (www.cs.berkeley.edu/~demmel/cs267/lecture24/lecture24.html)
                       1000     ;  *       - Also, look "Cormen Leicester Rivest [CLR] - Introduction to Algorithms" boo
                               k for another variant of Iterative-FFT
                       1001     ;  */
                       1002     ; 
                       1003     ; //void fft(int n, double *A_re, double *A_im, double *W_re, double *W_im) 
                       1004     ; void fft(int n, int A_re[], int A_im[], int W_re[], int W_im[]) 
                       1005     
------                 1006             RSEG  ?PR?_fft?MAIN
000000                 1007     _fft:
                       1008             USING   0
                       1009                             ; SOURCE LINE # 115
000000 8E00       F    1010             MOV     n?460,R6
000002 8F00       F    1011             MOV     n?460+01H,R7
000004 8B00       F    1012             MOV     A_re?461,R3
000006 8A00       F    1013             MOV     A_re?461+01H,R2
000008 8900       F    1014             MOV     A_re?461+02H,R1
                       1015     ; {
                       1016                             ; SOURCE LINE # 116
                       1017     ;       int idata w_re, w_im, u_re, u_im, t_re, t_im;
                       1018     ;       int idata m, g, b;
                       1019     ;       //int i;
                       1020     ;       int idata mt, k;
                       1021     ; 
                       1022     ;       /* for each stage */  
                       1023     ;       for (m=n; m>=2; m=m>>1) 
                       1024                             ; SOURCE LINE # 123
00000A 7800       F    1025             MOV     R0,#LOW (m?471)
00000C A600       F    1026             MOV     @R0,n?460
00000E 08              1027             INC     R0
00000F A600       F    1028             MOV     @R0,n?460+01H
000011                 1029     ?C0018:
000011 7800       F    1030             MOV     R0,#LOW (m?471)
000013 E6              1031             MOV     A,@R0
000014 FE              1032             MOV     R6,A
000015 08              1033             INC     R0
000016 E6              1034             MOV     A,@R0
000017 FF              1035             MOV     R7,A
000018 C3              1036             CLR     C
000019 9402            1037             SUBB    A,#02H
00001B EE              1038             MOV     A,R6
00001C 6480            1039             XRL     A,#080H
AX51 MACRO ASSEMBLER  MAIN                                                                  05/10/09 14:20:27 PAGE    17

00001E 9480            1040             SUBB    A,#080H
000020 5009            1041             JNC     $ + 0BH
                       1042             ;LJMP   ?C0027
000022 750000     F    1043             MOV ECO_PAGE_ADDR,#HIGH (?C0027)
000025 750000     F    1044         MOV ECO_PAGE_ADDR+01H,#LOW (?C0027)
000028 020000     E    1045         LJMP   eco_page_manager
                       1046     ;       {
                       1047                             ; SOURCE LINE # 124
                       1048     ;               /* m = n/2^s; mt = m/2; */
                       1049     ;               mt = m >> 1;
                       1050                             ; SOURCE LINE # 126
00002B EE              1051             MOV     A,R6
00002C A2E7            1052             MOV     C,ACC.7
00002E 13              1053             RRC     A
00002F 7900       F    1054             MOV     R1,#LOW (mt?474)
000031 F7              1055             MOV     @R1,A
000032 EF              1056             MOV     A,R7
000033 13              1057             RRC     A
000034 09              1058             INC     R1
000035 F7              1059             MOV     @R1,A
                       1060     ; 
                       1061     ;               /* for each group of butterfly */ 
                       1062     ;               for (g=0,k=0; g<n; g+=m,k++) 
                       1063                             ; SOURCE LINE # 129
000036 E4              1064             CLR     A
000037 08              1065             INC     R0
000038 F6              1066             MOV     @R0,A
000039 08              1067             INC     R0
00003A F6              1068             MOV     @R0,A
00003B 7800       F    1069             MOV     R0,#LOW (k?475)
00003D F6              1070             MOV     @R0,A
00003E 08              1071             INC     R0
00003F F6              1072             MOV     @R0,A
000040                 1073     ?C0021:
000040 C3              1074             CLR     C
000041 7800       F    1075             MOV     R0,#LOW (g?472+01H)
000043 E6              1076             MOV     A,@R0
000044 9500       F    1077             SUBB    A,n?460+01H
000046 E500       F    1078             MOV     A,n?460
000048 6480            1079             XRL     A,#080H
00004A F5F0            1080             MOV     B,A
00004C 18              1081             DEC     R0
00004D E6              1082             MOV     A,@R0
00004E 6480            1083             XRL     A,#080H
000050 95F0            1084             SUBB    A,B
000052 4009            1085             JC      $ + 0BH
                       1086             ;LJMP   ?C0020
000054 750000     F    1087             MOV ECO_PAGE_ADDR,#HIGH (?C0020)
000057 750000     F    1088         MOV ECO_PAGE_ADDR+01H,#LOW (?C0020)
00005A 020000     E    1089         LJMP   eco_page_manager
                       1090     ;               {
                       1091                             ; SOURCE LINE # 130
                       1092     ;                       /* each butterfly group uses only one root of unity. actually, i
                               t is the bitrev of this group's number k.
                       1093     ;                        * BUT 'bitrev' it as a log2n-1 bit number because we are using 
                               a lookup array of nth root of unity and
                       1094     ;                        * using cancellation lemma to scale nth root to n/2, n/4,... th
                                root.
                       1095     ;                        *
                       1096     ;                        * It turns out like the foll.
                       1097     ;                        *   w.re = W[bitrev(k, log2n-1)].re;
                       1098     ;                        *   w.im = W[bitrev(k, log2n-1)].im;
                       1099     ;                        * Still, we just use k, because the lookup array itself is bit-
                               reversal permuted. 
                       1100     ;                        */
                       1101     ;                       w_re = W_re[k];
AX51 MACRO ASSEMBLER  MAIN                                                                  05/10/09 14:20:27 PAGE    18

                       1102                             ; SOURCE LINE # 140
00005D 7800       F    1103             MOV     R0,#LOW (k?475+01H)
00005F E6              1104             MOV     A,@R0
000060 25E0            1105             ADD     A,ACC
000062 FF              1106             MOV     R7,A
000063 18              1107             DEC     R0
000064 E6              1108             MOV     A,@R0
000065 33              1109             RLC     A
000066 FE              1110             MOV     R6,A
000067 AB00       F    1111             MOV     R3,W_re?463
000069 AA00       F    1112             MOV     R2,W_re?463+01H
00006B A900       F    1113             MOV     R1,W_re?463+02H
00006D 8F82            1114             MOV     DPL,R7
00006F F583            1115             MOV     DPH,A
000071 120000     E    1116             LCALL   ?C?ILDOPTR
000074 7800       F    1117             MOV     R0,#LOW (w_re?465)
000076 A6F0            1118             MOV     @R0,B
000078 08              1119             INC     R0
000079 F6              1120             MOV     @R0,A
                       1121     ;                       w_im = W_im[k];
                       1122                             ; SOURCE LINE # 141
00007A AB00       F    1123             MOV     R3,W_im?464
00007C AA00       F    1124             MOV     R2,W_im?464+01H
00007E A900       F    1125             MOV     R1,W_im?464+02H
000080 8F82            1126             MOV     DPL,R7
000082 8E83            1127             MOV     DPH,R6
000084 120000     E    1128             LCALL   ?C?ILDOPTR
000087 7800       F    1129             MOV     R0,#LOW (w_im?466)
000089 A6F0            1130             MOV     @R0,B
00008B 08              1131             INC     R0
00008C F6              1132             MOV     @R0,A
                       1133     ; 
                       1134     ;                       /* for each butterfly */ 
                       1135     ;                       for (b=g; b<(g+mt); b++) 
                       1136                             ; SOURCE LINE # 144
00008D 7800       F    1137             MOV     R0,#LOW (g?472)
00008F E6              1138             MOV     A,@R0
000090 FE              1139             MOV     R6,A
000091 08              1140             INC     R0
000092 E6              1141             MOV     A,@R0
000093 FF              1142             MOV     R7,A
000094 08              1143             INC     R0
000095 A606            1144             MOV     @R0,AR6
000097 08              1145             INC     R0
000098 A607            1146             MOV     @R0,AR7
00009A                 1147     ?C0024:
00009A 7900       F    1148             MOV     R1,#LOW (g?472+01H)
00009C E7              1149             MOV     A,@R1
00009D 7800       F    1150             MOV     R0,#LOW (mt?474+01H)
00009F 26              1151             ADD     A,@R0
0000A0 FF              1152             MOV     R7,A
0000A1 19              1153             DEC     R1
0000A2 E7              1154             MOV     A,@R1
0000A3 18              1155             DEC     R0
0000A4 36              1156             ADDC    A,@R0
0000A5 FE              1157             MOV     R6,A
0000A6 C3              1158             CLR     C
0000A7 18              1159             DEC     R0
0000A8 E6              1160             MOV     A,@R0
0000A9 9F              1161             SUBB    A,R7
0000AA EE              1162             MOV     A,R6
0000AB 6480            1163             XRL     A,#080H
0000AD F5F0            1164             MOV     B,A
0000AF 18              1165             DEC     R0
0000B0 E6              1166             MOV     A,@R0
0000B1 6480            1167             XRL     A,#080H
AX51 MACRO ASSEMBLER  MAIN                                                                  05/10/09 14:20:27 PAGE    19

0000B3 95F0            1168             SUBB    A,B
0000B5 4009            1169             JC      $ + 0BH
                       1170             ;LJMP   ?C0023
0000B7 750000     F    1171             MOV ECO_PAGE_ADDR,#HIGH (?C0023)
0000BA 750000     F    1172         MOV ECO_PAGE_ADDR+01H,#LOW (?C0023)
0000BD 020000     E    1173         LJMP   eco_page_manager
                       1174     ;                       {
                       1175                             ; SOURCE LINE # 145
                       1176     ;                               /* printf("bf %d %d %d %f %f %f %f\n", m, g, b, A_re[b],
                                A_im[b], A_re[b+mt], A_im[b+mt]);
                       1177     ;                                */ 
                       1178     ;                               //printf("bf %d %d %d (u,t) %g %g %g %g (w) %g %g\n", m,
                                g, b, A_re[b], A_im[b], A_re[b+mt], A_im[b+mt], w_re, w_im);
                       1179     ; 
                       1180     ;                               /* t = w * A[b+mt] */
                       1181     ;                               t_re = w_re * A_re[b+mt] - w_im * A_im[b+mt];
                       1182                             ; SOURCE LINE # 151
0000C0 7900       F    1183             MOV     R1,#LOW (b?473+01H)
0000C2 E7              1184             MOV     A,@R1
0000C3 7800       F    1185             MOV     R0,#LOW (mt?474+01H)
0000C5 26              1186             ADD     A,@R0
0000C6 FF              1187             MOV     R7,A
0000C7 19              1188             DEC     R1
0000C8 E7              1189             MOV     A,@R1
0000C9 18              1190             DEC     R0
0000CA 36              1191             ADDC    A,@R0
0000CB FE              1192             MOV     R6,A
0000CC EF              1193             MOV     A,R7
0000CD 25E0            1194             ADD     A,ACC
0000CF FF              1195             MOV     R7,A
0000D0 EE              1196             MOV     A,R6
0000D1 33              1197             RLC     A
0000D2 AB00       F    1198             MOV     R3,A_im?462
0000D4 AA00       F    1199             MOV     R2,A_im?462+01H
0000D6 A900       F    1200             MOV     R1,A_im?462+02H
0000D8 8F82            1201             MOV     DPL,R7
0000DA F583            1202             MOV     DPH,A
0000DC 120000     E    1203             LCALL   ?C?ILDOPTR
                       1204             ;MOV    R5,A
                       1205             ;MOV    R4,B
0000DF 7800       E    1206             MOV R0,#LOW (ECO_PAGE_REGISTER5)
0000E1 F6              1207         MOV @R0,A
0000E2 7800       E    1208         MOV R0,#LOW (ECO_PAGE_REGISTER4)
0000E4 A6F0            1209         MOV @R0,B
                       1210         ;XRL    P0,#020H
                       1211     
                       1212         ;MOV ECO_PAGE_SPI_CONN,SPI_CTRL
0000E6 750000     F    1213         MOV ECO_PAGE_ADDR,#HIGH (_fft_2)
0000E9 750000     F    1214         MOV ECO_PAGE_ADDR+01H,#LOW (_fft_2)
0000EC 020000     E    1215         LJMP   eco_page_manager
                       1216     
                       1217     
------                 1218         RSEG  ?PR?_fft_2?MAIN
000000                 1219     _fft_2:
                       1220         USING   0
                       1221     
000000 7800       F    1222             MOV     R0,#LOW (w_im?466)
000002 E6              1223             MOV     A,@R0
000003 FE              1224             MOV     R6,A
000004 08              1225             INC     R0
000005 E6              1226             MOV     A,@R0
000006 FF              1227             MOV     R7,A
000007 120000     E    1228             LCALL   ?C?IMUL
00000A C006            1229             PUSH    AR6
00000C C007            1230             PUSH    AR7
00000E 7900       F    1231             MOV     R1,#LOW (b?473+01H)
AX51 MACRO ASSEMBLER  MAIN                                                                  05/10/09 14:20:27 PAGE    20

000010 E7              1232             MOV     A,@R1
000011 7800       F    1233             MOV     R0,#LOW (mt?474+01H)
000013 26              1234             ADD     A,@R0
000014 FF              1235             MOV     R7,A
000015 19              1236             DEC     R1
000016 E7              1237             MOV     A,@R1
000017 18              1238             DEC     R0
000018 36              1239             ADDC    A,@R0
000019 FE              1240             MOV     R6,A
00001A EF              1241             MOV     A,R7
00001B 25E0            1242             ADD     A,ACC
00001D FF              1243             MOV     R7,A
00001E EE              1244             MOV     A,R6
00001F 33              1245             RLC     A
000020 AB00       F    1246             MOV     R3,A_re?461
000022 AA00       F    1247             MOV     R2,A_re?461+01H
000024 A900       F    1248             MOV     R1,A_re?461+02H
000026 8F82            1249             MOV     DPL,R7
000028 F583            1250             MOV     DPH,A
00002A 120000     E    1251             LCALL   ?C?ILDOPTR
00002D FB              1252             MOV     R3,A
00002E AAF0            1253             MOV     R2,B
000030 7800       F    1254             MOV     R0,#LOW (w_re?465)
000032 E6              1255             MOV     A,@R0
000033 FE              1256             MOV     R6,A
000034 08              1257             INC     R0
000035 E6              1258             MOV     A,@R0
000036 FF              1259             MOV     R7,A
000037 AD03            1260             MOV     R5,AR3
000039 AC02            1261             MOV     R4,AR2
00003B 120000     E    1262             LCALL   ?C?IMUL
00003E AC06            1263             MOV     R4,AR6
000040 AD07            1264             MOV     R5,AR7
000042 D007            1265             POP     AR7
000044 D006            1266             POP     AR6
000046 C3              1267             CLR     C
000047 ED              1268             MOV     A,R5
000048 9F              1269             SUBB    A,R7
000049 7800       F    1270             MOV     R0,#LOW (t_re?469+01H)
00004B F6              1271             MOV     @R0,A
00004C EC              1272             MOV     A,R4
00004D 9E              1273             SUBB    A,R6
00004E 18              1274             DEC     R0
00004F F6              1275             MOV     @R0,A
                       1276     ;                               t_im = w_re * A_im[b+mt] + w_im * A_re[b+mt];
                       1277                             ; SOURCE LINE # 152
000050 7800       F    1278             MOV     R0,#LOW (w_im?466)
000052 E6              1279             MOV     A,@R0
000053 FE              1280             MOV     R6,A
000054 08              1281             INC     R0
000055 E6              1282             MOV     A,@R0
000056 FF              1283             MOV     R7,A
000057 AD03            1284             MOV     R5,AR3
000059 AC02            1285             MOV     R4,AR2
00005B 120000     E    1286             LCALL   ?C?IMUL
00005E C006            1287             PUSH    AR6
000060 C007            1288             PUSH    AR7
000062 7900       F    1289             MOV     R1,#LOW (b?473+01H)
000064 E7              1290             MOV     A,@R1
000065 7800       F    1291             MOV     R0,#LOW (mt?474+01H)
000067 26              1292             ADD     A,@R0
000068 FF              1293             MOV     R7,A
000069 19              1294             DEC     R1
00006A E7              1295             MOV     A,@R1
00006B 18              1296             DEC     R0
00006C 36              1297             ADDC    A,@R0
AX51 MACRO ASSEMBLER  MAIN                                                                  05/10/09 14:20:27 PAGE    21

00006D FE              1298             MOV     R6,A
00006E EF              1299             MOV     A,R7
00006F 25E0            1300             ADD     A,ACC
000071 FF              1301             MOV     R7,A
000072 EE              1302             MOV     A,R6
000073 33              1303             RLC     A
000074 AB00       F    1304             MOV     R3,A_im?462
000076 AA00       F    1305             MOV     R2,A_im?462+01H
000078 A900       F    1306             MOV     R1,A_im?462+02H
00007A 8F82            1307             MOV     DPL,R7
00007C F583            1308             MOV     DPH,A
00007E 120000     E    1309             LCALL   ?C?ILDOPTR
000081 FD              1310             MOV     R5,A
000082 ACF0            1311             MOV     R4,B
000084 7800       F    1312             MOV     R0,#LOW (w_re?465)
000086 E6              1313             MOV     A,@R0
000087 FE              1314             MOV     R6,A
000088 08              1315             INC     R0
000089 E6              1316             MOV     A,@R0
00008A FF              1317             MOV     R7,A
00008B 120000     E    1318             LCALL   ?C?IMUL
00008E D0E0            1319             POP     ACC
000090 2F              1320             ADD     A,R7
000091 7800       F    1321             MOV     R0,#LOW (t_im?470+01H)
000093 F6              1322             MOV     @R0,A
000094 D0E0            1323             POP     ACC
000096 3E              1324             ADDC    A,R6
000097 18              1325             DEC     R0
000098 F6              1326             MOV     @R0,A
                       1327     ; 
                       1328     ;                               /* u = A[b]; in[b] = u + t; in[b+mt] = u - t; */
                       1329     ;                               u_re = A_re[b];
                       1330                             ; SOURCE LINE # 155
000099 7800       F    1331             MOV     R0,#LOW (b?473+01H)
00009B E6              1332             MOV     A,@R0
00009C 25E0            1333             ADD     A,ACC
00009E FF              1334             MOV     R7,A
00009F 18              1335             DEC     R0
0000A0 E6              1336             MOV     A,@R0
0000A1 33              1337             RLC     A
0000A2 FE              1338             MOV     R6,A
0000A3 AB00       F    1339             MOV     R3,A_re?461
0000A5 AA00       F    1340             MOV     R2,A_re?461+01H
0000A7 A900       F    1341             MOV     R1,A_re?461+02H
0000A9 8F82            1342             MOV     DPL,R7
0000AB F583            1343             MOV     DPH,A
0000AD 120000     E    1344             LCALL   ?C?ILDOPTR
0000B0 7800       F    1345             MOV     R0,#LOW (u_re?467)
0000B2 A6F0            1346             MOV     @R0,B
0000B4 08              1347             INC     R0
0000B5 F6              1348             MOV     @R0,A
                       1349     ;                               u_im = A_im[b];
                       1350                             ; SOURCE LINE # 156
0000B6 AB00       F    1351             MOV     R3,A_im?462
0000B8 AA00       F    1352             MOV     R2,A_im?462+01H
0000BA A900       F    1353             MOV     R1,A_im?462+02H
0000BC 8F82            1354             MOV     DPL,R7
0000BE 8E83            1355             MOV     DPH,R6
0000C0 120000     E    1356             LCALL   ?C?ILDOPTR
0000C3 7800       F    1357             MOV     R0,#LOW (u_im?468)
0000C5 A6F0            1358             MOV     @R0,B
0000C7 08              1359             INC     R0
0000C8 F6              1360             MOV     @R0,A
                       1361     ;                               A_re[b] = u_re + t_re;
                       1362                             ; SOURCE LINE # 157
0000C9 7900       F    1363             MOV     R1,#LOW (u_re?467+01H)
AX51 MACRO ASSEMBLER  MAIN                                                                  05/10/09 14:20:27 PAGE    22

0000CB E7              1364             MOV     A,@R1
0000CC 7800       F    1365             MOV     R0,#LOW (t_re?469+01H)
0000CE 26              1366             ADD     A,@R0
0000CF FD              1367             MOV     R5,A
0000D0 19              1368             DEC     R1
0000D1 E7              1369             MOV     A,@R1
0000D2 18              1370             DEC     R0
0000D3 36              1371             ADDC    A,@R0
0000D4 FC              1372             MOV     R4,A
0000D5 7800       F    1373             MOV     R0,#LOW (b?473+01H)
0000D7 E6              1374             MOV     A,@R0
0000D8 25E0            1375             ADD     A,ACC
0000DA FF              1376             MOV     R7,A
0000DB 18              1377             DEC     R0
0000DC E6              1378             MOV     A,@R0
0000DD 33              1379             RLC     A
0000DE AB00       F    1380             MOV     R3,A_re?461
0000E0 AA00       F    1381             MOV     R2,A_re?461+01H
0000E2 A900       F    1382             MOV     R1,A_re?461+02H
0000E4 8F82            1383             MOV     DPL,R7
0000E6 F583            1384             MOV     DPH,A
0000E8 EC              1385             MOV     A,R4
0000E9 8DF0            1386             MOV     B,R5
0000EB 120000     E    1387             LCALL   ?C?ISTOPTR
                       1388     ;                               A_im[b] = u_im + t_im;
                       1389                             ; SOURCE LINE # 158
                       1390     
0000EE 750000     F    1391             MOV ECO_PAGE_ADDR,#HIGH (_fft_3)
0000F1 750000     F    1392         MOV ECO_PAGE_ADDR+01H,#LOW (_fft_3)
0000F4 020000     E    1393         LJMP   eco_page_manager
                       1394     
                       1395     
------                 1396         RSEG  ?PR?_fft_3?MAIN
000000                 1397     _fft_3:
                       1398         USING   0
                       1399     
000000 7900       F    1400             MOV     R1,#LOW (u_im?468+01H)
000002 E7              1401             MOV     A,@R1
000003 7800       F    1402             MOV     R0,#LOW (t_im?470+01H)
000005 26              1403             ADD     A,@R0
000006 FD              1404             MOV     R5,A
000007 19              1405             DEC     R1
000008 E7              1406             MOV     A,@R1
000009 18              1407             DEC     R0
00000A 36              1408             ADDC    A,@R0
00000B FC              1409             MOV     R4,A
00000C 7800       F    1410             MOV     R0,#LOW (b?473+01H)
00000E E6              1411             MOV     A,@R0
00000F 25E0            1412             ADD     A,ACC
000011 FF              1413             MOV     R7,A
000012 18              1414             DEC     R0
000013 E6              1415             MOV     A,@R0
000014 33              1416             RLC     A
000015 AB00       F    1417             MOV     R3,A_im?462
000017 AA00       F    1418             MOV     R2,A_im?462+01H
000019 A900       F    1419             MOV     R1,A_im?462+02H
00001B 8F82            1420             MOV     DPL,R7
00001D F583            1421             MOV     DPH,A
00001F EC              1422             MOV     A,R4
000020 8DF0            1423             MOV     B,R5
000022 120000     E    1424             LCALL   ?C?ISTOPTR
                       1425     ;                               A_re[b+mt] = u_re - t_re;
                       1426                             ; SOURCE LINE # 159
000025 C3              1427             CLR     C
000026 7900       F    1428             MOV     R1,#LOW (u_re?467+01H)
000028 E7              1429             MOV     A,@R1
AX51 MACRO ASSEMBLER  MAIN                                                                  05/10/09 14:20:27 PAGE    23

000029 7800       F    1430             MOV     R0,#LOW (t_re?469+01H)
00002B 96              1431             SUBB    A,@R0
00002C FD              1432             MOV     R5,A
00002D 19              1433             DEC     R1
00002E E7              1434             MOV     A,@R1
00002F 18              1435             DEC     R0
000030 96              1436             SUBB    A,@R0
000031 FC              1437             MOV     R4,A
000032 7900       F    1438             MOV     R1,#LOW (b?473+01H)
000034 E7              1439             MOV     A,@R1
000035 7800       F    1440             MOV     R0,#LOW (mt?474+01H)
000037 26              1441             ADD     A,@R0
000038 FF              1442             MOV     R7,A
000039 19              1443             DEC     R1
00003A E7              1444             MOV     A,@R1
00003B 18              1445             DEC     R0
00003C 36              1446             ADDC    A,@R0
00003D FE              1447             MOV     R6,A
00003E EF              1448             MOV     A,R7
00003F 25E0            1449             ADD     A,ACC
000041 FF              1450             MOV     R7,A
000042 EE              1451             MOV     A,R6
000043 33              1452             RLC     A
000044 AB00       F    1453             MOV     R3,A_re?461
000046 AA00       F    1454             MOV     R2,A_re?461+01H
000048 A900       F    1455             MOV     R1,A_re?461+02H
00004A 8F82            1456             MOV     DPL,R7
00004C F583            1457             MOV     DPH,A
00004E EC              1458             MOV     A,R4
00004F 8DF0            1459             MOV     B,R5
000051 120000     E    1460             LCALL   ?C?ISTOPTR
                       1461     ;                               A_im[b+mt] = u_im - t_im;
                       1462                             ; SOURCE LINE # 160
000054 C3              1463             CLR     C
000055 7900       F    1464             MOV     R1,#LOW (u_im?468+01H)
000057 E7              1465             MOV     A,@R1
000058 7800       F    1466             MOV     R0,#LOW (t_im?470+01H)
00005A 96              1467             SUBB    A,@R0
00005B FD              1468             MOV     R5,A
00005C 19              1469             DEC     R1
00005D E7              1470             MOV     A,@R1
00005E 18              1471             DEC     R0
00005F 96              1472             SUBB    A,@R0
000060 FC              1473             MOV     R4,A
000061 7900       F    1474             MOV     R1,#LOW (b?473+01H)
000063 E7              1475             MOV     A,@R1
000064 7800       F    1476             MOV     R0,#LOW (mt?474+01H)
000066 26              1477             ADD     A,@R0
000067 FF              1478             MOV     R7,A
000068 19              1479             DEC     R1
000069 E7              1480             MOV     A,@R1
00006A 18              1481             DEC     R0
00006B 36              1482             ADDC    A,@R0
00006C FE              1483             MOV     R6,A
00006D EF              1484             MOV     A,R7
00006E 25E0            1485             ADD     A,ACC
000070 FF              1486             MOV     R7,A
000071 EE              1487             MOV     A,R6
000072 33              1488             RLC     A
000073 AB00       F    1489             MOV     R3,A_im?462
000075 AA00       F    1490             MOV     R2,A_im?462+01H
000077 A900       F    1491             MOV     R1,A_im?462+02H
000079 8F82            1492             MOV     DPL,R7
00007B F583            1493             MOV     DPH,A
00007D EC              1494             MOV     A,R4
00007E 8DF0            1495             MOV     B,R5
AX51 MACRO ASSEMBLER  MAIN                                                                  05/10/09 14:20:27 PAGE    24

000080 120000     E    1496             LCALL   ?C?ISTOPTR
                       1497     ; 
                       1498     ;                               /*  printf("af %d %d %d %f %f %f %f\n", m, g, b, A_re[b]
                               , A_im[b], A_re[b+mt], A_im[b+mt]);
                       1499     ;                                */         
                       1500     ;                               //printf("af %d %d %d (u,t) %g %g %g %g (w) %g %g\n", m,
                                g, b, A_re[b], A_im[b], A_re[b+mt], A_im[b+mt], w_re, w_im);
                       1501     ;                       }
                       1502                             ; SOURCE LINE # 165
000083 7800       F    1503             MOV     R0,#LOW (b?473+01H)
000085 06              1504             INC     @R0
000086 E6              1505             MOV     A,@R0
000087 18              1506             DEC     R0
000088 7001            1507             JNZ     ?C0038
00008A 06              1508             INC     @R0
00008B                 1509     ?C0038:
                       1510             ;LJMP   ?C0024
00008B 750000     F    1511             MOV ECO_PAGE_ADDR,#HIGH (?C0024)
00008E 750000     F    1512         MOV ECO_PAGE_ADDR+01H,#LOW (?C0024)
000091 020000     E    1513         LJMP   eco_page_manager
                       1514     ;               }
                       1515                             ; SOURCE LINE # 166
000094                 1516     ?C0023:
000094 7800       F    1517             MOV     R0,#LOW (m?471)
000096 E6              1518             MOV     A,@R0
000097 FE              1519             MOV     R6,A
000098 08              1520             INC     R0
000099 E6              1521             MOV     A,@R0
00009A 7800       F    1522             MOV     R0,#LOW (g?472+01H)
00009C 26              1523             ADD     A,@R0
00009D F6              1524             MOV     @R0,A
00009E 18              1525             DEC     R0
00009F EE              1526             MOV     A,R6
0000A0 36              1527             ADDC    A,@R0
0000A1 F6              1528             MOV     @R0,A
0000A2 7800       F    1529             MOV     R0,#LOW (k?475+01H)
0000A4 06              1530             INC     @R0
0000A5 E6              1531             MOV     A,@R0
0000A6 18              1532             DEC     R0
0000A7 6009            1533             JZ      $ + 0BH
                       1534             ;LJMP   ?C0021
0000A9 750000     F    1535             MOV ECO_PAGE_ADDR,#HIGH (?C0021)
0000AC 750000     F    1536         MOV ECO_PAGE_ADDR+01H,#LOW (?C0021)
0000AF 020000     E    1537         LJMP   eco_page_manager
0000B2 06              1538             INC     @R0
0000B3                 1539     ?C0039:
                       1540             ;LJMP   ?C0021
0000B3 750000     F    1541             MOV ECO_PAGE_ADDR,#HIGH (?C0021)
0000B6 750000     F    1542         MOV ECO_PAGE_ADDR+01H,#LOW (?C0021)
0000B9 020000     E    1543         LJMP   eco_page_manager
                       1544     ;       }
                       1545                             ; SOURCE LINE # 167
0000BC                 1546     ?C0020:
0000BC 7800       F    1547             MOV     R0,#LOW (m?471)
0000BE E6              1548             MOV     A,@R0
0000BF A2E7            1549             MOV     C,ACC.7
0000C1 13              1550             RRC     A
0000C2 7900       F    1551             MOV     R1,#LOW (m?471)
0000C4 F7              1552             MOV     @R1,A
0000C5 08              1553             INC     R0
0000C6 E6              1554             MOV     A,@R0
0000C7 13              1555             RRC     A
0000C8 09              1556             INC     R1
0000C9 F7              1557             MOV     @R1,A
                       1558             ;LJMP   ?C0018
0000CA 750000     F    1559             MOV ECO_PAGE_ADDR,#HIGH (?C0018)
AX51 MACRO ASSEMBLER  MAIN                                                                  05/10/09 14:20:27 PAGE    25

0000CD 750000     F    1560         MOV ECO_PAGE_ADDR+01H,#LOW (?C0018)
0000D0 020000     E    1561         LJMP   eco_page_manager
                       1562     ; }
                       1563                             ; SOURCE LINE # 168
0000D3                 1564     ?C0027:
0000D3 22              1565             RET     
                       1566     ; END OF _fft
                       1567     
                       1568     ; 
                       1569     ; int main()
                       1570     
------                 1571             RSEG  ?PR?main?MAIN
000000                 1572     main:
                       1573             USING   0
                       1574                             ; SOURCE LINE # 170
                       1575     ; {
                       1576                             ; SOURCE LINE # 171
                       1577     ;       int idata n;
                       1578     ;       //int idata i;
                       1579     ;       int idata A_re[8];
                       1580     ;       int idata A_im[8];
                       1581     ;       int idata W_re[4];
                       1582     ;       int idata W_im[4]; 
                       1583     ;       //int idata A_re[16];
                       1584     ;       //int idata A_im[16];
                       1585     ;       //int idata W_re[8];
                       1586     ;       //int idata W_im[8]; 
                       1587     ; 
                       1588     ;       store_cpu_rate(16);
                       1589                             ; SOURCE LINE # 183
000000 7F10            1590             MOV     R7,#010H
000002 7E00            1591             MOV     R6,#00H
000004 120000     E    1592             LCALL   _store_cpu_rate
                       1593     ; 
                       1594     ;       P0_DIR &= ~0x28;
                       1595                             ; SOURCE LINE # 185
000007 5394D7          1596             ANL     P0_DIR,#0D7H
                       1597     ;       P0_ALT &= ~0x28;
                       1598                             ; SOURCE LINE # 186
00000A 5395D7          1599             ANL     P0_ALT,#0D7H
                       1600     ; 
                       1601     ;       test_counter = 0;       
                       1602                             ; SOURCE LINE # 188
00000D E4              1603             CLR     A
00000E F500       F    1604             MOV     test_counter,A
000010 F500       F    1605             MOV     test_counter+01H,A
                       1606     ; 
                       1607     ;       serial_init(19200);
                       1608                             ; SOURCE LINE # 190
000012 FF              1609             MOV     R7,A
000013 7E4B            1610             MOV     R6,#04BH
000015 120000     E    1611             LCALL   _serial_init
                       1612     ;       int_print(test_counter);
                       1613                             ; SOURCE LINE # 191
000018 AE00       F    1614             MOV     R6,test_counter
00001A AF00       F    1615             MOV     R7,test_counter+01H
00001C 120000     E    1616             LCALL   _?int_print
                       1617     ;       puts("\r\n");   
                       1618                             ; SOURCE LINE # 192
00001F 7BFF            1619             MOV     R3,#0FFH
000021 7A00       F    1620             MOV     R2,#HIGH (?SC_0)
000023 7900       F    1621             MOV     R1,#LOW (?SC_0)
000025 120000     E    1622             LCALL   _puts
                       1623     ;       for(n=0;n<6;n++)
                       1624                             ; SOURCE LINE # 193
000028 E4              1625             CLR     A
AX51 MACRO ASSEMBLER  MAIN                                                                  05/10/09 14:20:27 PAGE    26

000029 7800       F    1626             MOV     R0,#LOW (n?576)
00002B F6              1627             MOV     @R0,A
00002C 08              1628             INC     R0
00002D F6              1629             MOV     @R0,A
00002E                 1630     ?C0028:
                       1631     ;       {
                       1632                             ; SOURCE LINE # 194
                       1633     ;               blink_led();
                       1634                             ; SOURCE LINE # 195
00002E 638020          1635             XRL     P0,#020H
                       1636     ;               mdelay(400);
                       1637                             ; SOURCE LINE # 196
000031 7F90            1638             MOV     R7,#090H
000033 7E01            1639             MOV     R6,#01H
000035 120000     E    1640             LCALL   _mdelay
                       1641     ;       }
                       1642                             ; SOURCE LINE # 197
000038 7800       F    1643             MOV     R0,#LOW (n?576+01H)
00003A 06              1644             INC     @R0
00003B E6              1645             MOV     A,@R0
00003C 18              1646             DEC     R0
00003D 7001            1647             JNZ     ?C0040
00003F 06              1648             INC     @R0
000040                 1649     ?C0040:
000040 C3              1650             CLR     C
000041 7800       F    1651             MOV     R0,#LOW (n?576+01H)
000043 E6              1652             MOV     A,@R0
000044 9406            1653             SUBB    A,#06H
000046 18              1654             DEC     R0
000047 E6              1655             MOV     A,@R0
000048 6480            1656             XRL     A,#080H
00004A 9480            1657             SUBB    A,#080H
00004C 40E0            1658             JC      ?C0028
00004E                 1659     ?C0031:
                       1660     ;       //A_re = (double*)malloc(sizeof(double)*n); 
                       1661     ;       //A_im = (double*)malloc(sizeof(double)*n); 
                       1662     ;       //W_re = (double*)malloc(sizeof(double)*n/2); 
                       1663     ;       //W_im = (double*)malloc(sizeof(double)*n/2); 
                       1664     ;       //assert(A_re != NULL && A_im != NULL && W_re != NULL && W_im != NULL); 
                       1665     ;       
                       1666     ;       while(1)
                       1667                             ; SOURCE LINE # 204
                       1668     ;       {
                       1669                             ; SOURCE LINE # 205
                       1670     ;       //for (i=0; i<3; i++) {
                       1671     ;               //init_array(n, A_re, A_im); 
                       1672     ;               n = 8;
                       1673                             ; SOURCE LINE # 208
00004E 7800       F    1674             MOV     R0,#LOW (n?576)
000050 7600            1675             MOV     @R0,#00H
000052 08              1676             INC     R0
000053 7608            1677             MOV     @R0,#08H
                       1678     ; 
                       1679     ;               compute_W(n, W_re, W_im); 
                       1680                             ; SOURCE LINE # 210
000055 750000     F    1681             MOV     ?_compute_W?BYTE+05H,#00H
000058 750000     F    1682             MOV     ?_compute_W?BYTE+06H,#HIGH (W_im?580)
00005B 750000     F    1683             MOV     ?_compute_W?BYTE+07H,#LOW (W_im?580)
                       1684             ;MOV    R3,#00H
                       1685             ;MOV    R2,#HIGH (W_re?579)
                       1686             ;MOV    R1,#LOW (W_re?579)
                       1687             ;MOV    R7,#08H
                       1688             ;MOV    R6,#00H
                       1689     
00005E 7800       E    1690             MOV R0,#LOW (ECO_PAGE_REGISTER3)
000060 7600            1691         MOV @R0,#00H
AX51 MACRO ASSEMBLER  MAIN                                                                  05/10/09 14:20:27 PAGE    27

                       1692     
000062 7800       E    1693         MOV R0,#LOW (ECO_PAGE_REGISTER2)
000064 7600       F    1694         MOV @R0,#HIGH (W_re?579)
                       1695     
000066 7800       E    1696         MOV R0,#LOW (ECO_PAGE_REGISTER1)
000068 7600       F    1697         MOV @R0,#LOW (W_re?579)
                       1698     
00006A 7800       E    1699             MOV R0,#LOW (ECO_PAGE_REGISTER7)
00006C 7608            1700         MOV @R0,#08H
                       1701     
00006E 7800       E    1702         MOV R0,#LOW (ECO_PAGE_REGISTER6)
000070 7600            1703         MOV @R0,#00H
                       1704     
                       1705             ;LCALL  _compute_W
000072 85B300     E    1706             MOV ECO_PAGE_SPI_CONN,SPI_CTRL
000075 750000     F    1707         MOV ECO_PAGE_ADDR,#HIGH (_compute_W)
000078 750000     F    1708         MOV ECO_PAGE_ADDR+01H,#LOW (_compute_W)
00007B 120000     E    1709         LCALL   eco_page_manager
                       1710     ;               fft(n, A_re, A_im, W_re, W_im);
                       1711                             ; SOURCE LINE # 211
00007E 7800       F    1712             MOV     R0,#LOW (n?576)
000080 E6              1713             MOV     A,@R0
000081 FE              1714             MOV     R6,A
000082 08              1715             INC     R0
000083 E6              1716             MOV     A,@R0
000084 FF              1717             MOV     R7,A
                       1718     
000085 7800       E    1719             MOV R0,#LOW (ECO_PAGE_REGISTER6)
000087 EE              1720         MOV A,R6
000088 F6              1721         MOV @R0,A
000089 7800       E    1722         MOV R0,#LOW (ECO_PAGE_REGISTER7)
00008B EF              1723         MOV A,R7
00008C F6              1724         MOV @R0,A
                       1725     
00008D 750000     F    1726             MOV     ?_fft?BYTE+05H,#00H
000090 750000     F    1727             MOV     ?_fft?BYTE+06H,#HIGH (A_im?578)
000093 750000     F    1728             MOV     ?_fft?BYTE+07H,#LOW (A_im?578)
000096 750000     F    1729             MOV     ?_fft?BYTE+08H,#00H
000099 750000     F    1730             MOV     ?_fft?BYTE+09H,#HIGH (W_re?579)
00009C 750000     F    1731             MOV     ?_fft?BYTE+0AH,#LOW (W_re?579)
00009F 750000     F    1732             MOV     ?_fft?BYTE+0BH,#00H
0000A2 750000     F    1733             MOV     ?_fft?BYTE+0CH,#HIGH (W_im?580)
0000A5 750000     F    1734             MOV     ?_fft?BYTE+0DH,#LOW (W_im?580)
                       1735             ;MOV    R3,#00H
                       1736             ;MOV    R2,#HIGH (A_re?577)
                       1737             ;MOV    R1,#LOW (A_re?577)
0000A8 7800       E    1738             MOV R0,#LOW (ECO_PAGE_REGISTER3)
0000AA 7600            1739         MOV @R0,#00H
                       1740     
0000AC 7800       E    1741         MOV R0,#LOW (ECO_PAGE_REGISTER2)
0000AE 7600       F    1742         MOV @R0,#HIGH (A_re?577)
                       1743     
0000B0 7800       E    1744         MOV R0,#LOW (ECO_PAGE_REGISTER1)
0000B2 7600       F    1745         MOV @R0,#LOW (A_re?577)
                       1746             ;LCALL  _fft
0000B4 85B300     E    1747             MOV ECO_PAGE_SPI_CONN,SPI_CTRL
0000B7 750000     F    1748         MOV ECO_PAGE_ADDR,#HIGH (_fft)
0000BA 750000     F    1749         MOV ECO_PAGE_ADDR+01H,#LOW (_fft)
0000BD 120000     E    1750         LCALL   eco_page_manager
                       1751     
                       1752     ;               permute_bitrev(n, A_re, A_im);
                       1753                             ; SOURCE LINE # 212
0000C0 7800       F    1754             MOV     R0,#LOW (n?576)
0000C2 E6              1755             MOV     A,@R0
0000C3 FE              1756             MOV     R6,A
0000C4 08              1757             INC     R0
AX51 MACRO ASSEMBLER  MAIN                                                                  05/10/09 14:20:27 PAGE    28

0000C5 E6              1758             MOV     A,@R0
0000C6 FF              1759             MOV     R7,A
                       1760     
0000C7 7800       E    1761             MOV R0,#LOW (ECO_PAGE_REGISTER6)
0000C9 EE              1762         MOV A,R6
0000CA F6              1763         MOV @R0,A
0000CB 7800       E    1764         MOV R0,#LOW (ECO_PAGE_REGISTER7)
0000CD EF              1765         MOV A,R7
0000CE F6              1766         MOV @R0,A
                       1767     
0000CF 750000     F    1768             MOV     ?_permute_bitrev?BYTE+05H,#00H
0000D2 750000     F    1769             MOV     ?_permute_bitrev?BYTE+06H,#HIGH (A_im?578)
0000D5 750000     F    1770             MOV     ?_permute_bitrev?BYTE+07H,#LOW (A_im?578)
                       1771             ;MOV    R3,#00H
                       1772             ;MOV    R2,#HIGH (A_re?577)
                       1773             ;MOV    R1,#LOW (A_re?577)
0000D8 7800       E    1774             MOV R0,#LOW (ECO_PAGE_REGISTER3)
0000DA 7600            1775         MOV @R0,#00H
                       1776     
0000DC 7800       E    1777         MOV R0,#LOW (ECO_PAGE_REGISTER2)
0000DE 7600       F    1778         MOV @R0,#HIGH (A_re?577)
                       1779     
0000E0 7800       E    1780         MOV R0,#LOW (ECO_PAGE_REGISTER1)
0000E2 7600       F    1781         MOV @R0,#LOW (A_re?577)
                       1782             ;LCALL  _permute_bitrev
0000E4 85B300     E    1783             MOV ECO_PAGE_SPI_CONN,SPI_CTRL
0000E7 750000     F    1784         MOV ECO_PAGE_ADDR,#HIGH (_permute_bitrev)
0000EA 750000     F    1785         MOV ECO_PAGE_ADDR+01H,#LOW (_permute_bitrev)
0000ED 120000     E    1786         LCALL   eco_page_manager
                       1787     ; 
                       1788     ;               blink_led();
                       1789                             ; SOURCE LINE # 214
                       1790             ;XRL    P0,#020H
                       1791     ;               mdelay(100);
                       1792                             ; SOURCE LINE # 215
                       1793             ;MOV    R7,#064H
                       1794             ;MOV    R6,#00H
                       1795             ;LCALL  _mdelay
                       1796     ; 
                       1797     ;               test_counter++;
                       1798                             ; SOURCE LINE # 217
0000F0 0500       F    1799             INC     test_counter+01H
0000F2 E500       F    1800             MOV     A,test_counter+01H
0000F4 7002            1801             JNZ     ?C0041
0000F6 0500       F    1802             INC     test_counter
0000F8                 1803     ?C0041:
                       1804     ; 
                       1805     ;               int_print(test_counter);
                       1806                             ; SOURCE LINE # 219
0000F8 AE00       F    1807             MOV     R6,test_counter
0000FA AF00       F    1808             MOV     R7,test_counter+01H
0000FC 120000     E    1809             LCALL   _?int_print
                       1810     ;               puts("\r\n");
                       1811                             ; SOURCE LINE # 220
0000FF 7BFF            1812             MOV     R3,#0FFH
000101 7A00       F    1813             MOV     R2,#HIGH (?SC_0)
000103 7900       F    1814             MOV     R1,#LOW (?SC_0)
000105 120000     E    1815             LCALL   _puts
                       1816     ;       //}
                       1817     ;       }
                       1818                             ; SOURCE LINE # 222
000108 020000     F    1819             LJMP    ?C0031
                       1820     ; END OF main
                       1821     
                       1822             END
AX51 MACRO ASSEMBLER  MAIN                                                                  05/10/09 14:20:27 PAGE    29

SYMBOL TABLE LISTING
------ ----- -------


N A M E                                    T Y P E  V A L U E     ATTRIBUTES

?_BITREV?BYTE . . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?_BITREV?MAIN
?_COMPUTE_W?BYTE. . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?_COMPUTE_W?MAIN
?_FFT?BYTE. . . . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?_FFT?MAIN
?_PERMUTE_BITREV?BYTE . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?_PERMUTE_BITREV?MAIN
?C0001. . . . . . . . . . . . . . . . .    C  ADDR  0013H     R   SEG=?PR?_BITREV?MAIN
?C0002. . . . . . . . . . . . . . . . .    C  ADDR  004DH     R   SEG=?PR?_BITREV?MAIN
?C0004. . . . . . . . . . . . . . . . .    C  ADDR  0054H     R   SEG=?PR?_BITREV?MAIN
?C0005. . . . . . . . . . . . . . . . .    C  ADDR  0006H     R   SEG=?PR?_LOG_2?MAIN
?C0006. . . . . . . . . . . . . . . . .    C  ADDR  0023H     R   SEG=?PR?_LOG_2?MAIN
?C0008. . . . . . . . . . . . . . . . .    C  ADDR  002AH     R   SEG=?PR?_LOG_2?MAIN
?C0009. . . . . . . . . . . . . . . . .    C  ADDR  0017H     R   SEG=?PR?_COMPUTE_W?MAIN
?C0012. . . . . . . . . . . . . . . . .    C  ADDR  00F8H     R   SEG=?PR?_COMPUTE_W?MAIN
?C0013. . . . . . . . . . . . . . . . .    C  ADDR  001AH     R   SEG=?PR?_PERMUTE_BITREV?MAIN
?C0015. . . . . . . . . . . . . . . . .    C  ADDR  00A0H     R   SEG=?PR?_PERMUTE_BITREV_2?MAIN
?C0016. . . . . . . . . . . . . . . . .    C  ADDR  0072H     R   SEG=?PR?_PERMUTE_BITREV?MAIN
?C0017. . . . . . . . . . . . . . . . .    C  ADDR  00BAH     R   SEG=?PR?_PERMUTE_BITREV_2?MAIN
?C0018. . . . . . . . . . . . . . . . .    C  ADDR  0011H     R   SEG=?PR?_FFT?MAIN
?C0020. . . . . . . . . . . . . . . . .    C  ADDR  00BCH     R   SEG=?PR?_FFT_3?MAIN
?C0021. . . . . . . . . . . . . . . . .    C  ADDR  0040H     R   SEG=?PR?_FFT?MAIN
?C0023. . . . . . . . . . . . . . . . .    C  ADDR  0094H     R   SEG=?PR?_FFT_3?MAIN
?C0024. . . . . . . . . . . . . . . . .    C  ADDR  009AH     R   SEG=?PR?_FFT?MAIN
?C0027. . . . . . . . . . . . . . . . .    C  ADDR  00D3H     R   SEG=?PR?_FFT_3?MAIN
?C0028. . . . . . . . . . . . . . . . .    C  ADDR  002EH     R   SEG=?PR?MAIN?MAIN
?C0031. . . . . . . . . . . . . . . . .    C  ADDR  004EH     R   SEG=?PR?MAIN?MAIN
?C0034. . . . . . . . . . . . . . . . .    C  ADDR  004BH     R   SEG=?PR?_BITREV?MAIN
?C0035. . . . . . . . . . . . . . . . .    C  ADDR  0021H     R   SEG=?PR?_LOG_2?MAIN
?C0036. . . . . . . . . . . . . . . . .    C  ADDR  00EFH     R   SEG=?PR?_COMPUTE_W?MAIN
?C0037. . . . . . . . . . . . . . . . .    C  ADDR  00B1H     R   SEG=?PR?_PERMUTE_BITREV_2?MAIN
?C0038. . . . . . . . . . . . . . . . .    C  ADDR  008BH     R   SEG=?PR?_FFT_3?MAIN
?C0039. . . . . . . . . . . . . . . . .    C  ADDR  00B3H     R   SEG=?PR?_FFT_3?MAIN
?C0040. . . . . . . . . . . . . . . . .    C  ADDR  0040H     R   SEG=?PR?MAIN?MAIN
?C0041. . . . . . . . . . . . . . . . .    C  ADDR  00F8H     R   SEG=?PR?MAIN?MAIN
?C?CASTF. . . . . . . . . . . . . . . .    C  ADDR  -------       EXT
?C?FCASTI . . . . . . . . . . . . . . .    C  ADDR  -------       EXT
?C?ILDOPTR. . . . . . . . . . . . . . .    C  ADDR  -------       EXT
?C?IMUL . . . . . . . . . . . . . . . .    C  ADDR  -------       EXT
?C?ISTOPTR. . . . . . . . . . . . . . .    C  ADDR  -------       EXT
?C?SIDIV. . . . . . . . . . . . . . . .    C  ADDR  -------       EXT
?C_STARTUP. . . . . . . . . . . . . . .    C  ADDR  -------       EXT
?CO?MAIN. . . . . . . . . . . . . . . .    C  SEG   000003H       REL=UNIT, ALN=BYTE
?DT?_BITREV?MAIN. . . . . . . . . . . .    D  SEG   000002H       REL=UNIT, ALN=BYTE
?DT?_COMPUTE_W?MAIN . . . . . . . . . .    D  SEG   00000AH       REL=UNIT, ALN=BYTE
?DT?_FFT?MAIN . . . . . . . . . . . . .    D  SEG   00000EH       REL=UNIT, ALN=BYTE
?DT?_PERMUTE_BITREV?MAIN. . . . . . . .    D  SEG   000008H       REL=UNIT, ALN=BYTE
?DT?MAIN. . . . . . . . . . . . . . . .    D  SEG   000002H       REL=UNIT, ALN=BYTE
?ID?_BITREV?MAIN. . . . . . . . . . . .    I  SEG   000004H       REL=UNIT, ALN=BYTE
?ID?_COMPUTE_W?MAIN . . . . . . . . . .    I  SEG   000004H       REL=UNIT, ALN=BYTE
?ID?_FFT?MAIN . . . . . . . . . . . . .    I  SEG   000016H       REL=UNIT, ALN=BYTE
?ID?_LOG_2?MAIN . . . . . . . . . . . .    I  SEG   000002H       REL=UNIT, ALN=BYTE
?ID?_PERMUTE_BITREV?MAIN. . . . . . . .    I  SEG   00000AH       REL=UNIT, ALN=BYTE
?ID?MAIN?MAIN . . . . . . . . . . . . .    I  SEG   000032H       REL=UNIT, ALN=BYTE
?PR?_BITREV?MAIN. . . . . . . . . . . .    C  SEG   000055H       REL=UNIT, ALN=BYTE
?PR?_COMPUTE_W?MAIN . . . . . . . . . .    C  SEG   0000F9H       REL=UNIT, ALN=BYTE
?PR?_FFT?MAIN . . . . . . . . . . . . .    C  SEG   0000EFH       REL=UNIT, ALN=BYTE
?PR?_FFT_2?MAIN . . . . . . . . . . . .    C  SEG   0000F7H       REL=UNIT, ALN=BYTE
?PR?_FFT_3?MAIN . . . . . . . . . . . .    C  SEG   0000D4H       REL=UNIT, ALN=BYTE
?PR?_LOG_2?MAIN . . . . . . . . . . . .    C  SEG   00002BH       REL=UNIT, ALN=BYTE
?PR?_PERMUTE_BITREV?MAIN. . . . . . . .    C  SEG   000098H       REL=UNIT, ALN=BYTE
?PR?_PERMUTE_BITREV_2?MAIN. . . . . . .    C  SEG   0000BBH       REL=UNIT, ALN=BYTE
?PR?MAIN?MAIN . . . . . . . . . . . . .    C  SEG   00010BH       REL=UNIT, ALN=BYTE
AX51 MACRO ASSEMBLER  MAIN                                                                  05/10/09 14:20:27 PAGE    30

?SC_0 . . . . . . . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?CO?MAIN
_?INT_PRINT . . . . . . . . . . . . . .    C  ADDR  -------       EXT
_BITREV . . . . . . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?_BITREV?MAIN
_COMPUTE_W. . . . . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?_COMPUTE_W?MAIN
_COS. . . . . . . . . . . . . . . . . .    C  ADDR  -------       EXT
_FFT. . . . . . . . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?_FFT?MAIN
_FFT_2. . . . . . . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?_FFT_2?MAIN
_FFT_3. . . . . . . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?_FFT_3?MAIN
_LOG_2. . . . . . . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?_LOG_2?MAIN
_MDELAY . . . . . . . . . . . . . . . .    C  ADDR  -------       EXT
_PERMUTE_BITREV . . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?_PERMUTE_BITREV?MAIN
_PERMUTE_BITREV_2 . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?_PERMUTE_BITREV_2?MAIN
_PUTS . . . . . . . . . . . . . . . . .    C  ADDR  -------       EXT
_SERIAL_INIT. . . . . . . . . . . . . .    C  ADDR  -------       EXT
_SIN. . . . . . . . . . . . . . . . . .    C  ADDR  -------       EXT
_STORE_CPU_RATE . . . . . . . . . . . .    C  ADDR  -------       EXT
A_IM?354. . . . . . . . . . . . . . . .    D  ADDR  0005H     R   SEG=?DT?_PERMUTE_BITREV?MAIN
A_IM?462. . . . . . . . . . . . . . . .    D  ADDR  0005H     R   SEG=?DT?_FFT?MAIN
A_IM?578. . . . . . . . . . . . . . . .    I  ADDR  0012H     R   SEG=?ID?MAIN?MAIN
A_RE?353. . . . . . . . . . . . . . . .    D  ADDR  0002H     R   SEG=?DT?_PERMUTE_BITREV?MAIN
A_RE?461. . . . . . . . . . . . . . . .    D  ADDR  0002H     R   SEG=?DT?_FFT?MAIN
A_RE?577. . . . . . . . . . . . . . . .    I  ADDR  0002H     R   SEG=?ID?MAIN?MAIN
AC. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.6   A   
ACC . . . . . . . . . . . . . . . . . .    D  ADDR  00E0H     A   
ADCCON. . . . . . . . . . . . . . . . .    D  ADDR  00A1H     A   
ADCDATAH. . . . . . . . . . . . . . . .    D  ADDR  00A2H     A   
ADCDATAL. . . . . . . . . . . . . . . .    D  ADDR  00A3H     A   
ADCSTATIC . . . . . . . . . . . . . . .    D  ADDR  00A4H     A   
AR2 . . . . . . . . . . . . . . . . . .    D  ADDR  0002H     A   
AR3 . . . . . . . . . . . . . . . . . .    D  ADDR  0003H     A   
AR6 . . . . . . . . . . . . . . . . . .    D  ADDR  0006H     A   
AR7 . . . . . . . . . . . . . . . . . .    D  ADDR  0007H     A   
B . . . . . . . . . . . . . . . . . . .    D  ADDR  00F0H     A   
B?473 . . . . . . . . . . . . . . . . .    I  ADDR  0010H     R   SEG=?ID?_FFT?MAIN
BR?250. . . . . . . . . . . . . . . . .    I  ADDR  0002H     R   SEG=?ID?_COMPUTE_W?MAIN
BRI?356 . . . . . . . . . . . . . . . .    I  ADDR  0002H     R   SEG=?ID?_PERMUTE_BITREV?MAIN
C_T2. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.1   A   
CE. . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.6   A   
CK_CTRL . . . . . . . . . . . . . . . .    D  ADDR  00B6H     A   
CKCON . . . . . . . . . . . . . . . . .    D  ADDR  008EH     A   
CLK1. . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.1   A   
CLK2. . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.5   A   
CP_RL2. . . . . . . . . . . . . . . . .    B  ADDR  00C8H.0   A   
CPRL2 . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.0   A   
CS. . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.3   A   
CT2 . . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.1   A   
CY. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.7   A   
DATA? . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.0   A   
DEV_OFFSET. . . . . . . . . . . . . . .    D  ADDR  00BEH     A   
DIN0. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.2   A   
DIO0. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.0   A   
DIO1. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.1   A   
DIO2. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.0   A   
DIO3. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.1   A   
DIO4. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.2   A   
DIO5. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.3   A   
DIO6. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.4   A   
DIO7. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.5   A   
DIO8. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.6   A   
DIO9. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.7   A   
DOUT2 . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.4   A   
DPH . . . . . . . . . . . . . . . . . .    D  ADDR  0083H     A   
DPH0. . . . . . . . . . . . . . . . . .    D  ADDR  0083H     A   
DPH1. . . . . . . . . . . . . . . . . .    D  ADDR  0085H     A   
DPL . . . . . . . . . . . . . . . . . .    D  ADDR  0082H     A   
DPL0. . . . . . . . . . . . . . . . . .    D  ADDR  0082H     A   
AX51 MACRO ASSEMBLER  MAIN                                                                  05/10/09 14:20:27 PAGE    31

DPL1. . . . . . . . . . . . . . . . . .    D  ADDR  0084H     A   
DPS . . . . . . . . . . . . . . . . . .    D  ADDR  0086H     A   
DR1 . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.2   A   
DR2 . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.6   A   
DR2_CE. . . . . . . . . . . . . . . . .    B  ADDR  00A0H.6   A   
EA. . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.7   A   
ECO_PAGE_ADDR . . . . . . . . . . . . .    D  ADDR  -------       EXT
ECO_PAGE_MANAGER. . . . . . . . . . . .    C  ADDR  -------       EXT
ECO_PAGE_REGISTER1. . . . . . . . . . .    I  ADDR  -------       EXT
ECO_PAGE_REGISTER2. . . . . . . . . . .    I  ADDR  -------       EXT
ECO_PAGE_REGISTER3. . . . . . . . . . .    I  ADDR  -------       EXT
ECO_PAGE_REGISTER4. . . . . . . . . . .    I  ADDR  -------       EXT
ECO_PAGE_REGISTER5. . . . . . . . . . .    I  ADDR  -------       EXT
ECO_PAGE_REGISTER6. . . . . . . . . . .    I  ADDR  -------       EXT
ECO_PAGE_REGISTER7. . . . . . . . . . .    I  ADDR  -------       EXT
ECO_PAGE_SPI_CONN . . . . . . . . . . .    D  ADDR  -------       EXT
EICON . . . . . . . . . . . . . . . . .    D  ADDR  00D8H     A   
EIE . . . . . . . . . . . . . . . . . .    D  ADDR  00E8H     A   
EIP . . . . . . . . . . . . . . . . . .    D  ADDR  00F8H     A   
ES. . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.4   A   
ET0 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.1   A   
ET1 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.3   A   
ET2 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.5   A   
EWDI. . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.4   A   
EX0 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.0   A   
EX1 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.2   A   
EX2 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.0   A   
EX3 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.1   A   
EX4 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.2   A   
EX5 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.3   A   
EXEN2 . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.3   A   
EXF2. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.6   A   
EXIF. . . . . . . . . . . . . . . . . .    D  ADDR  0091H     A   
F0. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.5   A   
F1. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.1   A   
G?472 . . . . . . . . . . . . . . . . .    I  ADDR  000EH     R   SEG=?ID?_FFT?MAIN
I?042 . . . . . . . . . . . . . . . . .    I  ADDR  0000H     R   SEG=?ID?_BITREV?MAIN
I?249 . . . . . . . . . . . . . . . . .    I  ADDR  0000H     R   SEG=?ID?_COMPUTE_W?MAIN
I?355 . . . . . . . . . . . . . . . . .    I  ADDR  0000H     R   SEG=?ID?_PERMUTE_BITREV?MAIN
IE. . . . . . . . . . . . . . . . . . .    D  ADDR  00A8H     A   
IE0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.1   A   
IE1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.3   A   
INT0_N. . . . . . . . . . . . . . . . .    B  ADDR  0080H.3   A   
INT1_N. . . . . . . . . . . . . . . . .    B  ADDR  0080H.4   A   
IP. . . . . . . . . . . . . . . . . . .    D  ADDR  00B8H     A   
IT0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.0   A   
IT1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.2   A   
K?475 . . . . . . . . . . . . . . . . .    I  ADDR  0014H     R   SEG=?ID?_FFT?MAIN
LOG2N?251 . . . . . . . . . . . . . . .    D  ADDR  0008H     R   SEG=?DT?_COMPUTE_W?MAIN
LOG2N?357 . . . . . . . . . . . . . . .    I  ADDR  0004H     R   SEG=?ID?_PERMUTE_BITREV?MAIN
M?471 . . . . . . . . . . . . . . . . .    I  ADDR  000CH     R   SEG=?ID?_FFT?MAIN
MAIN. . . . . . . . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?MAIN?MAIN
MPAGE . . . . . . . . . . . . . . . . .    D  ADDR  0092H     A   
MT?474. . . . . . . . . . . . . . . . .    I  ADDR  0012H     R   SEG=?ID?_FFT?MAIN
N?246 . . . . . . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?_COMPUTE_W?MAIN
N?352 . . . . . . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?_PERMUTE_BITREV?MAIN
N?460 . . . . . . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?_FFT?MAIN
N?576 . . . . . . . . . . . . . . . . .    I  ADDR  0000H     R   SEG=?ID?MAIN?MAIN
NUMBITS?041 . . . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?_BITREV?MAIN
OV. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.2   A   
P . . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.0   A   
P0. . . . . . . . . . . . . . . . . . .    D  ADDR  0080H     A   
P0_0. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.0   A   
P0_1. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.1   A   
P0_2. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.2   A   
P0_3. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.3   A   
AX51 MACRO ASSEMBLER  MAIN                                                                  05/10/09 14:20:27 PAGE    32

P0_4. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.4   A   
P0_5. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.5   A   
P0_6. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.6   A   
P0_7. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.7   A   
P0_ALT. . . . . . . . . . . . . . . . .    D  ADDR  0095H     A   
P0_DIR. . . . . . . . . . . . . . . . .    D  ADDR  0094H     A   
P1. . . . . . . . . . . . . . . . . . .    D  ADDR  0090H     A   
P1_0. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.0   A   
P1_1. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.1   A   
P1_2. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.2   A   
P1_ALT. . . . . . . . . . . . . . . . .    D  ADDR  0097H     A   
P1_DIR. . . . . . . . . . . . . . . . .    D  ADDR  0096H     A   
PCON. . . . . . . . . . . . . . . . . .    D  ADDR  0087H     A   
PS. . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.4   A   
PSW . . . . . . . . . . . . . . . . . .    D  ADDR  00D0H     A   
PT0 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.1   A   
PT1 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.3   A   
PT2 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.5   A   
PWDI. . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.4   A   
PWM . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.7   A   
PWMCON. . . . . . . . . . . . . . . . .    D  ADDR  00A9H     A   
PWMDUTY . . . . . . . . . . . . . . . .    D  ADDR  00AAH     A   
PWR_UP. . . . . . . . . . . . . . . . .    B  ADDR  00A0H.7   A   
PX0 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.0   A   
PX1 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.2   A   
PX2 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.0   A   
PX3 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.1   A   
PX4 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.2   A   
PX5 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.3   A   
RADIO . . . . . . . . . . . . . . . . .    D  ADDR  00A0H     A   
RB8 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.2   A   
RCAP2H. . . . . . . . . . . . . . . . .    D  ADDR  00CBH     A   
RCAP2L. . . . . . . . . . . . . . . . .    D  ADDR  00CAH     A   
RCLK. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.5   A   
REGX_CTRL . . . . . . . . . . . . . . .    D  ADDR  00ADH     A   
REGX_LSB. . . . . . . . . . . . . . . .    D  ADDR  00ACH     A   
REGX_MSB. . . . . . . . . . . . . . . .    D  ADDR  00ABH     A   
REN . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.4   A   
RES?145 . . . . . . . . . . . . . . . .    I  ADDR  0000H     R   SEG=?ID?_LOG_2?MAIN
REV?043 . . . . . . . . . . . . . . . .    I  ADDR  0002H     R   SEG=?ID?_BITREV?MAIN
RI. . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.0   A   
RS0 . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.3   A   
RS1 . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.4   A   
RSTREAS . . . . . . . . . . . . . . . .    D  ADDR  00B1H     A   
RXD . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.1   A   
SBUF. . . . . . . . . . . . . . . . . .    D  ADDR  0099H     A   
SCON. . . . . . . . . . . . . . . . . .    D  ADDR  0098H     A   
SM0 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.7   A   
SM1 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.6   A   
SM2 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.5   A   
SP. . . . . . . . . . . . . . . . . . .    D  ADDR  0081H     A   
SPC_FNC . . . . . . . . . . . . . . . .    D  ADDR  008FH     A   
SPI_CTRL. . . . . . . . . . . . . . . .    D  ADDR  00B3H     A   
SPI_DATA. . . . . . . . . . . . . . . .    D  ADDR  00B2H     A   
SPICLK. . . . . . . . . . . . . . . . .    D  ADDR  00B4H     A   
T0. . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.5   A   
T1. . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.6   A   
T1_1V2. . . . . . . . . . . . . . . . .    D  ADDR  00BCH     A   
T2. . . . . . . . . . . . . . . . . . .    B  ADDR  0090H.0   A   
T2_1V2. . . . . . . . . . . . . . . . .    D  ADDR  00BDH     A   
T2CON . . . . . . . . . . . . . . . . .    D  ADDR  00C8H     A   
T_IM?359. . . . . . . . . . . . . . . .    I  ADDR  0008H     R   SEG=?ID?_PERMUTE_BITREV?MAIN
T_IM?470. . . . . . . . . . . . . . . .    I  ADDR  000AH     R   SEG=?ID?_FFT?MAIN
T_RE?358. . . . . . . . . . . . . . . .    I  ADDR  0006H     R   SEG=?ID?_PERMUTE_BITREV?MAIN
T_RE?469. . . . . . . . . . . . . . . .    I  ADDR  0008H     R   SEG=?ID?_FFT?MAIN
TB8 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.3   A   
AX51 MACRO ASSEMBLER  MAIN                                                                  05/10/09 14:20:27 PAGE    33

TCLK. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.4   A   
TCON. . . . . . . . . . . . . . . . . .    D  ADDR  0088H     A   
TEST_COUNTER. . . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?MAIN
TEST_MODE . . . . . . . . . . . . . . .    D  ADDR  00B7H     A   
TF0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.5   A   
TF1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.7   A   
TF2 . . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.7   A   
TH0 . . . . . . . . . . . . . . . . . .    D  ADDR  008CH     A   
TH1 . . . . . . . . . . . . . . . . . .    D  ADDR  008DH     A   
TH2 . . . . . . . . . . . . . . . . . .    D  ADDR  00CDH     A   
TI. . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.1   A   
TICK_DV . . . . . . . . . . . . . . . .    D  ADDR  00B5H     A   
TL0 . . . . . . . . . . . . . . . . . .    D  ADDR  008AH     A   
TL1 . . . . . . . . . . . . . . . . . .    D  ADDR  008BH     A   
TL2 . . . . . . . . . . . . . . . . . .    D  ADDR  00CCH     A   
TMOD. . . . . . . . . . . . . . . . . .    D  ADDR  0089H     A   
TR0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.4   A   
TR1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.6   A   
TR2 . . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.2   A   
TXD . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.2   A   
U_IM?468. . . . . . . . . . . . . . . .    I  ADDR  0006H     R   SEG=?ID?_FFT?MAIN
U_RE?467. . . . . . . . . . . . . . . .    I  ADDR  0004H     R   SEG=?ID?_FFT?MAIN
W_IM?248. . . . . . . . . . . . . . . .    D  ADDR  0005H     R   SEG=?DT?_COMPUTE_W?MAIN
W_IM?464. . . . . . . . . . . . . . . .    D  ADDR  000BH     R   SEG=?DT?_FFT?MAIN
W_IM?466. . . . . . . . . . . . . . . .    I  ADDR  0002H     R   SEG=?ID?_FFT?MAIN
W_IM?580. . . . . . . . . . . . . . . .    I  ADDR  002AH     R   SEG=?ID?MAIN?MAIN
W_RE?247. . . . . . . . . . . . . . . .    D  ADDR  0002H     R   SEG=?DT?_COMPUTE_W?MAIN
W_RE?463. . . . . . . . . . . . . . . .    D  ADDR  0008H     R   SEG=?DT?_FFT?MAIN
W_RE?465. . . . . . . . . . . . . . . .    I  ADDR  0000H     R   SEG=?ID?_FFT?MAIN
W_RE?579. . . . . . . . . . . . . . . .    I  ADDR  0022H     R   SEG=?ID?MAIN?MAIN
WDTI. . . . . . . . . . . . . . . . . .    B  ADDR  00D8H.3   A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S).
