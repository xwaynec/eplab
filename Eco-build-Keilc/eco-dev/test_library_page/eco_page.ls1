AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/17/09 14:41:20 PAGE     1


MACRO ASSEMBLER AX51 V3.06a
OBJECT MODULE PLACED IN .\eco_page.obj
ASSEMBLER INVOKED BY: C:\Keil\C51\BIN\AX51.exe .\eco_page.src EP DEBUG SYMBOLS OJ(.\eco_page.obj) PR(.\eco_page.ls1) 

LOC    OBJ             LINE     SOURCE

                          1     ; ./eco_page.src generated from: .\eco_page.c
                          2     ; COMPILER INVOKED BY:
                          3     ;        C:\Keil\C51\BIN\C51.exe .\eco_page.c BROWSE DEBUG CODE LISTINCLUDE SYMBOLS PREP
                               RINT INCDIR(../../Include) SRC(./eco_page.src)
                          4     
                          5     $nomod51 
                          6     
                          7     NAME    ECO_PAGE
                          8     
 00A0.7                   9     PWR_UP  BIT     0A0H.7
 0080                    10     P0      DATA    080H
 0090                    11     P1      DATA    090H
 00D0.6                  12     AC      BIT     0D0H.6
 0080.5                  13     T0      BIT     080H.5
 00B3                    14     SPI_CTRL        DATA    0B3H
 0080.6                  15     T1      BIT     080H.6
 00A8.7                  16     EA      BIT     0A8H.7
 0090.0                  17     T2      BIT     090H.0
 00A0.6                  18     CE      BIT     0A0H.6
 00BE                    19     DEV_OFFSET      DATA    0BEH
 00A0.1                  20     CLK1    BIT     0A0H.1
 0090.2                  21     DIN0    BIT     090H.2
 00A0.5                  22     CLK2    BIT     0A0H.5
 0090.0                  23     DIO0    BIT     090H.0
 0083                    24     DPH0    DATA    083H
 0090.1                  25     DIO1    BIT     090H.1
 00A8                    26     IE      DATA    0A8H
 0085                    27     DPH1    DATA    085H
 0080.0                  28     DIO2    BIT     080H.0
 0080.1                  29     DIO3    BIT     080H.1
 0080.0                  30     P0_0    BIT     080H.0
 0090.0                  31     P1_0    BIT     090H.0
 0080.2                  32     DIO4    BIT     080H.2
 0080.1                  33     P0_1    BIT     080H.1
 0082                    34     DPL0    DATA    082H
 0090.1                  35     P1_1    BIT     090H.1
 0080.3                  36     DIO5    BIT     080H.3
 0080.2                  37     P0_2    BIT     080H.2
 0084                    38     DPL1    DATA    084H
 0090.2                  39     P1_2    BIT     090H.2
 0080.4                  40     DIO6    BIT     080H.4
 0080.3                  41     P0_3    BIT     080H.3
 0080.5                  42     DIO7    BIT     080H.5
 0080.4                  43     P0_4    BIT     080H.4
 00A4                    44     ADCSTATIC       DATA    0A4H
 0080.6                  45     DIO8    BIT     080H.6
 0080.5                  46     P0_5    BIT     080H.5
 00C8.6                  47     EXF2    BIT     0C8H.6
 00A0.3                  48     CS      BIT     0A0H.3
 0080.7                  49     DIO9    BIT     080H.7
 0080.6                  50     P0_6    BIT     080H.6
 0080.7                  51     P0_7    BIT     080H.7
 00A8.4                  52     ES      BIT     0A8H.4
 00B8                    53     IP      DATA    0B8H
 00A0.0                  54     DATA?   BIT     0A0H.0
 0098.0                  55     RI      BIT     098H.0
 00D0.7                  56     CY      BIT     0D0H.7
 0098.1                  57     TI      BIT     098H.1
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/17/09 14:41:20 PAGE     2

 00BC                    58     T1_1V2  DATA    0BCH
 008F                    59     SPC_FNC DATA    08FH
 00BD                    60     T2_1V2  DATA    0BDH
 00CB                    61     RCAP2H  DATA    0CBH
 00B8.4                  62     PS      BIT     0B8H.4
 0081                    63     SP      DATA    081H
 00D0.2                  64     OV      BIT     0D0H.2
 00B6                    65     CK_CTRL DATA    0B6H
 00CA                    66     RCAP2L  DATA    0CAH
 00B5                    67     TICK_DV DATA    0B5H
 00B1                    68     RSTREAS DATA    0B1H
 00C8.1                  69     C_T2    BIT     0C8H.1
 00E8.4                  70     EWDI    BIT     0E8H.4
 00A1                    71     ADCCON  DATA    0A1H
 00C8.5                  72     RCLK    BIT     0C8H.5
 00A2                    73     ADCDATAH        DATA    0A2H
 0091                    74     EXIF    DATA    091H
 00C8.4                  75     TCLK    BIT     0C8H.4
 00A0.6                  76     DR2_CE  BIT     0A0H.6
 00A3                    77     ADCDATAL        DATA    0A3H
 0099                    78     SBUF    DATA    099H
 0087                    79     PCON    DATA    087H
 0098                    80     SCON    DATA    098H
 00F8.4                  81     PWDI    BIT     0F8H.4
 0089                    82     TMOD    DATA    089H
 0088                    83     TCON    DATA    088H
 00D8.3                  84     WDTI    BIT     0D8H.3
 00AA                    85     PWMDUTY DATA    0AAH
 0088.1                  86     IE0     BIT     088H.1
 0088.3                  87     IE1     BIT     088H.3
 0094                    88     P0_DIR  DATA    094H
 00F0                    89     B       DATA    0F0H
 0096                    90     P1_DIR  DATA    096H
 0095                    91     P0_ALT  DATA    095H
 0097                    92     P1_ALT  DATA    097H
 00C8.0                  93     CP_RL2  BIT     0C8H.0
 00A0.2                  94     DR1     BIT     0A0H.2
 00E0                    95     ACC     DATA    0E0H
 00A0.6                  96     DR2     BIT     0A0H.6
 00B7                    97     TEST_MODE       DATA    0B7H
 00B4                    98     SPICLK  DATA    0B4H
 00C8.1                  99     CT2     BIT     0C8H.1
 00A8.1                 100     ET0     BIT     0A8H.1
 00A8.3                 101     ET1     BIT     0A8H.3
 0088.5                 102     TF0     BIT     088H.5
 0080.3                 103     INT0_N  BIT     080H.3
 00A8.5                 104     ET2     BIT     0A8H.5
 0088.7                 105     TF1     BIT     088H.7
 0080.4                 106     INT1_N  BIT     080H.4
 00C8.7                 107     TF2     BIT     0C8H.7
 0098.2                 108     RB8     BIT     098H.2
 008C                   109     TH0     DATA    08CH
 00A8.0                 110     EX0     BIT     0A8H.0
 0088.0                 111     IT0     BIT     088H.0
 008D                   112     TH1     DATA    08DH
 00A8.2                 113     EX1     BIT     0A8H.2
 0098.3                 114     TB8     BIT     098H.3
 0088.2                 115     IT1     BIT     088H.2
 00CD                   116     TH2     DATA    0CDH
 00AD                   117     REGX_CTRL       DATA    0ADH
 00E8.0                 118     EX2     BIT     0E8H.0
 00D0.0                 119     P       BIT     0D0H.0
 00E8.1                 120     EX3     BIT     0E8H.1
 0098.7                 121     SM0     BIT     098H.7
 008A                   122     TL0     DATA    08AH
 00E8.2                 123     EX4     BIT     0E8H.2
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/17/09 14:41:20 PAGE     3

 0098.6                 124     SM1     BIT     098H.6
 008B                   125     TL1     DATA    08BH
 00E8.3                 126     EX5     BIT     0E8H.3
 0098.5                 127     SM2     BIT     098H.5
 00CC                   128     TL2     DATA    0CCH
 00E8                   129     EIE     DATA    0E8H
 00B8.1                 130     PT0     BIT     0B8H.1
 00D0.3                 131     RS0     BIT     0D0H.3
 00B8.3                 132     PT1     BIT     0B8H.3
 00D0.4                 133     RS1     BIT     0D0H.4
 00B8.5                 134     PT2     BIT     0B8H.5
 0088.4                 135     TR0     BIT     088H.4
 00A9                   136     PWMCON  DATA    0A9H
 0088.6                 137     TR1     BIT     088H.6
 00C8.2                 138     TR2     BIT     0C8H.2
 00B8.0                 139     PX0     BIT     0B8H.0
 00B8.2                 140     PX1     BIT     0B8H.2
 00F8.0                 141     PX2     BIT     0F8H.0
 00F8.1                 142     PX3     BIT     0F8H.1
 00F8.2                 143     PX4     BIT     0F8H.2
 0083                   144     DPH     DATA    083H
 00F8.3                 145     PX5     BIT     0F8H.3
 00F8                   146     EIP     DATA    0F8H
 0082                   147     DPL     DATA    082H
 00C8.3                 148     EXEN2   BIT     0C8H.3
 00C8.0                 149     CPRL2   BIT     0C8H.0
 0098.4                 150     REN     BIT     098H.4
 00C8                   151     T2CON   DATA    0C8H
 0086                   152     DPS     DATA    086H
 00B2                   153     SPI_DATA        DATA    0B2H
 0092                   154     MPAGE   DATA    092H
 0080.1                 155     RXD     BIT     080H.1
 00A0.4                 156     DOUT2   BIT     0A0H.4
 00D8                   157     EICON   DATA    0D8H
 008E                   158     CKCON   DATA    08EH
 0080.2                 159     TXD     BIT     080H.2
 00A0                   160     RADIO   DATA    0A0H
 0080.7                 161     PWM     BIT     080H.7
 00D0.5                 162     F0      BIT     0D0H.5
 00D0.1                 163     F1      BIT     0D0H.1
 00AC                   164     REGX_LSB        DATA    0ACH
 00D0                   165     PSW     DATA    0D0H
 00AB                   166     REGX_MSB        DATA    0ABH
------                  167     ?PR?eco_page_init?ECO_PAGE               SEGMENT CODE 
------                  168     ?PR?eco_page_manager?ECO_PAGE            SEGMENT CODE 
------                  169     ?DT?eco_page_manager?ECO_PAGE            SEGMENT DATA OVERLAYABLE 
------                  170     ?C_INITSEG           SEGMENT CODE 
------                  171     ?ID?ECO_PAGE         SEGMENT IDATA 
------                  172     ?DT?ECO_PAGE         SEGMENT DATA 
                        173             EXTRN   CODE (_eeprom_read)
                        174             EXTRN   CODE (eeprom_init)
                        175             PUBLIC  ECO_PAGE_TABLE_INDEX
                        176             PUBLIC  ECO_PAGE_REGISTER7
                        177             PUBLIC  ECO_PAGE_REGISTER6
                        178             PUBLIC  ECO_PAGE_REGISTER5
                        179             PUBLIC  ECO_PAGE_REGISTER4
                        180             PUBLIC  ECO_PAGE_ADDR
                        181             PUBLIC  ECO_PAGE_REGISTER3
                        182             PUBLIC  ECO_PAGE_REGISTER2
                        183             PUBLIC  ECO_PAGE_REGISTER1
                        184             PUBLIC  ECO_PAGE_PREV_VID
                        185             PUBLIC  ECO_PAGE_PREV_PID
                        186             PUBLIC  ECO_PAGE_SPI_CONN
                        187             PUBLIC  ECO_PAGE_TABLE
                        188             PUBLIC  eco_page_manager
                        189             PUBLIC  eco_page_init
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/17/09 14:41:20 PAGE     4

                        190     
------                  191             RSEG  ?DT?eco_page_manager?ECO_PAGE
000000                  192     ?eco_page_manager?BYTE:
000004                  193             ORG  4
000004                  194             seg?140:   DS   2
000000                  195             ORG  0
000000                  196               i?141:   DS   2
000002                  197             ORG  2
000002                  198      page_index?142:   DS   2
                        199     
------                  200             RSEG  ?ID?ECO_PAGE
000000                  201      ECO_PAGE_TABLE:   DS   40
000028                  202     ECO_PAGE_REGISTER1:   DS   1
000029                  203     ECO_PAGE_REGISTER2:   DS   1
00002A                  204     ECO_PAGE_REGISTER3:   DS   1
00002B                  205     ECO_PAGE_REGISTER4:   DS   1
00002C                  206     ECO_PAGE_REGISTER5:   DS   1
00002D                  207     ECO_PAGE_REGISTER6:   DS   1
00002E                  208     ECO_PAGE_REGISTER7:   DS   1
                        209     
------                  210             RSEG  ?DT?ECO_PAGE
000000                  211     ECO_PAGE_SPI_CONN:   DS   1
000001                  212     ECO_PAGE_PREV_PID:   DS   2
000003                  213     ECO_PAGE_PREV_VID:   DS   2
000005                  214       ECO_PAGE_ADDR:   DS   2
000007                  215     ECO_PAGE_TABLE_INDEX:   DS   1
                        216     
------                  217             RSEG  ?C_INITSEG
000000 20               218             DB      020H
000001 28               219             DB      028H
000002 00         F     220             DB      ECO_PAGE_TABLE
000003 0001             221             DW      00001H
000005 0002             222             DW      00002H
000007 0003             223             DW      00003H
000009 0004             224             DW      00004H
00000B 0005             225             DW      00005H
00000D 0006             226             DW      00006H
00000F 0007             227             DW      00007H
000011 0008             228             DW      00008H
000013 0009             229             DW      00009H
000015 000A             230             DW      0000AH
000017 000B             231             DW      0000BH
000019 000C             232             DW      0000CH
00001B 000D             233             DW      0000DH
00001D 000E             234             DW      0000EH
00001F 000F             235             DW      0000FH
000021 0010             236             DW      00010H
000023 0011             237             DW      00011H
000025 0012             238             DW      00012H
000027 0013             239             DW      00013H
000029 0000             240             DB  000H,000H
                        241     
                        242     
                        243     ; /*
                        244     ;  * Author(s): Wei-Han Chen (Embedded Platform Lab, NTHU)
                        245     ;  * Copyright (c) 2009 National Tsing Hua University (NTHU) 
                        246     ;  * Permission to copy, modify, and distribute this program is granted 
                        247     ;  * for noncommercial purposes, provided the author(s) and copyright
                        248     ;  * notice are retained. All other uses require explicit written
                        249     ;  * permission from NTHU. 
                        250     ;  *
                        251     ;  * Eco Paging Library 
                        252     ;  *
                        253     ;  * Wei-Han Chen <xwaynec@gmail.com> 
                        254     ;  * 2009/2/13
                        255     ;  */
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/17/09 14:41:20 PAGE     5

                        256     ; 
                        257     ; #include "eco_page.h"
                        258     ; #include "eeprom/eeprom.h"
                        259     ; 
                        260     ; #define ECO_PAGE_SIZE 128
                        261     ; #define ECO_PAGE_ADDR_OFFSET  12      
                        262     ; 
                        263     ; #if ECO_PAGE_SIZE == 64
                        264     ;       
                        265     ;       #define ECO_PAGE_ENTRY  48
                        266     ;       #define ECO_PAGE_SHIFT  6
                        267     ;       #define ECO_PAGE_MASK   0x003F
                        268     ; 
                        269     ;       unsigned int idata ECO_PAGE_TABLE[64-ECO_PAGE_ADDR_OFFSET] = {0};
                        270     ;       //Eco page virtual address id
                        271     ;       unsigned int ECO_PAGE_PREV_VID;
                        272     ;       //Eco page physical address id 
                        273     ;       unsigned int ECO_PAGE_PREV_PID;
                        274     ; 
                        275     ; #elif ECO_PAGE_SIZE == 128
                        276     ;       
                        277     ;       #define ECO_PAGE_ENTRY 24       
                        278     ;       #define ECO_PAGE_SHIFT  7
                        279     ;       #define ECO_PAGE_MASK   0x007F
                        280     ; 
                        281     ;       unsigned int idata ECO_PAGE_TABLE[32-ECO_PAGE_ADDR_OFFSET] = {1,2,3,4,5,6,7,8,9,
                               10,11,12,13,14,15,16,17,18,19};
                        282     ;       //unsigned int idata ECO_PAGE_TABLE[32-ECO_PAGE_ADDR_OFFSET];
                        283     ;       //Eco page virtual address id
                        284     ;       unsigned int ECO_PAGE_PREV_VID;
                        285     ;       //Eco page physical address id 
                        286     ;       unsigned int ECO_PAGE_PREV_PID;
                        287     ; 
                        288     ; #elif ECO_PAGE_SIZE == 256
                        289     ;       
                        290     ;       #define ECO_PAGE_ENTRY 12       
                        291     ;       #define ECO_PAGE_SHIFT  8       
                        292     ;       #define ECO_PAGE_MASK   0x00FF
                        293     ; 
                        294     ;       unsigned int ECO_PAGE_TABLE[16-ECO_PAGE_ADDR_OFFSET];
                        295     ;       //Eco page virtual address id
                        296     ;       unsigned char ECO_PAGE_PREV_VID;
                        297     ;       //Eco page physical address id 
                        298     ;       unsigned char ECO_PAGE_PREV_PID;
                        299     ; 
                        300     ; #endif
                        301     ; 
                        302     ; unsigned char ECO_PAGE_TABLE_INDEX;
                        303     ; 
                        304     ; unsigned int ECO_PAGE_ADDR;
                        305     ; 
                        306     ; unsigned char ECO_PAGE_SPI_CONN;
                        307     ; 
                        308     ; unsigned char idata ECO_PAGE_REGISTER1;
                        309     ; unsigned char idata ECO_PAGE_REGISTER2;
                        310     ; unsigned char idata ECO_PAGE_REGISTER3;
                        311     ; unsigned char idata ECO_PAGE_REGISTER4;
                        312     ; unsigned char idata ECO_PAGE_REGISTER5;
                        313     ; unsigned char idata ECO_PAGE_REGISTER6;
                        314     ; unsigned char idata ECO_PAGE_REGISTER7;
                        315     ; 
                        316     ; 
                        317     ; void eco_page_init()
                        318     
------                  319             RSEG  ?PR?eco_page_init?ECO_PAGE
000000                  320     eco_page_init:
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/17/09 14:41:20 PAGE     6

                        321                             ; SOURCE LINE # 75
                        322     ; {
                        323                             ; SOURCE LINE # 76
                        324     ;       ECO_PAGE_TABLE_INDEX = 0;
                        325                             ; SOURCE LINE # 77
000000 E4               326             CLR     A
000001 F500       F     327             MOV     ECO_PAGE_TABLE_INDEX,A
                        328     ;       
                        329     ;       ECO_PAGE_ADDR = 0;
                        330                             ; SOURCE LINE # 79
000003 F500       F     331             MOV     ECO_PAGE_ADDR,A
000005 F500       F     332             MOV     ECO_PAGE_ADDR+01H,A
                        333     ;       ECO_PAGE_PREV_VID = 0;
                        334                             ; SOURCE LINE # 80
000007 F500       F     335             MOV     ECO_PAGE_PREV_VID,A
000009 F500       F     336             MOV     ECO_PAGE_PREV_VID+01H,A
                        337     ;       ECO_PAGE_PREV_PID = 0;
                        338                             ; SOURCE LINE # 81
00000B F500       F     339             MOV     ECO_PAGE_PREV_PID,A
00000D F500       F     340             MOV     ECO_PAGE_PREV_PID+01H,A
                        341     ; 
                        342     ;       /*
                        343     ;       ECO_PAGE_TABLE[0] = 0; 
                        344     ;       ECO_PAGE_TABLE[1] = 0; 
                        345     ;       ECO_PAGE_TABLE[2] = 0;
                        346     ;       ECO_PAGE_TABLE[3] = 0; 
                        347     ;       ECO_PAGE_TABLE[4] = 0; 
                        348     ;       ECO_PAGE_TABLE[5] = 0; 
                        349     ;       ECO_PAGE_TABLE[6] = 0; 
                        350     ;       ECO_PAGE_TABLE[7] = 0; 
                        351     ;       ECO_PAGE_TABLE[8] = 0; 
                        352     ;       ECO_PAGE_TABLE[9] = 0;
                        353     ;       ECO_PAGE_TABLE[10] = 0; 
                        354     ;       ECO_PAGE_TABLE[11] = 0; 
                        355     ;       ECO_PAGE_TABLE[12] = 0;
                        356     ;       */      
                        357     ; }
                        358                             ; SOURCE LINE # 98
00000F 22               359             RET     
                        360     ; END OF eco_page_init
                        361     
                        362     ; 
                        363     ; //LRU page replacement
                        364     ; /*void eco_page_manager()
                        365     ; {
                        366     ;       unsigned int i;
                        367     ;       unsigned int page_index = -1;
                        368     ; 
                        369     ;       //if page id is the same with the last page id
                        370     ;       if(((ECO_PAGE_ADDR >> 8) & 0x7F) == (ECO_PAGE_PREV_PID & 0x7F))
                        371     ;       {
                        372     ;               //virtual address id + function offset
                        373     ;               ECO_PAGE_ADDR = (ECO_PAGE_PREV_VID << 8) + (ECO_PAGE_ADDR & 0x00FF);
                        374     ;               #pragma asm
                        375     ;               //eco_page_function_call        
                        376     ;               //MOV     DPH,ECO_PAGE_ADDR
                        377     ;               //MOV     DPL,ECO_PAGE_ADDR+01H
                        378     ;               //LCALL ?C?ICALL2
                        379     ;               #pragma endasm
                        380     ;               return ;
                        381     ;       }       
                        382     ;       
                        383     ;       //check page table
                        384     ;       for(i=0;i<ECO_PAGE_ENTRY;i++)
                        385     ;       {
                        386     ;               if((ECO_PAGE_ADDR >> 8) == ECO_PAGE_TABLE[i])
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/17/09 14:41:20 PAGE     7

                        387     ;               {
                        388     ;                       page_index = i;
                        389     ;                       
                        390     ;                       //set LRU bit is 1
                        391     ;                       ECO_PAGE_TABLE[i] = ECO_PAGE_TABLE[i] | 0x80;
                        392     ;                       break;
                        393     ;               }
                        394     ;       }
                        395     ; 
                        396     ;       if(page_index != -1)
                        397     ;       {
                        398     ;               //store function physical addres id 
                        399     ;               ECO_PAGE_PREV_PID = ECO_PAGE_ADDR >> 8;
                        400     ;       
                        401     ;               //memory page is in ram
                        402     ;               ECO_PAGE_ADDR = ((page_index + ECO_PAGE_ADDR_OFFSET) << 8) + (ECO_PAGE_A
                               DDR & 0x00FF);
                        403     ; 
                        404     ;               //cache the virtual address id
                        405     ;               ECO_PAGE_PREV_VID = ECO_PAGE_ADDR >> 8;
                        406     ; 
                        407     ;               #pragma asm
                        408     ;               //eco_page_function_call
                        409     ;               //MOV     DPH,ECO_PAGE_ADDR
                        410     ;               //MOV     DPL,ECO_PAGE_ADDR+01H
                        411     ;               //LCALL ?C?ICALL2
                        412     ;               #pragma endasm
                        413     ; 
                        414     ;               return ;
                        415     ;       }       
                        416     ;       else
                        417     ;       {
                        418     ;               //page fault
                        419     ;               for(i=ECO_PAGE_TABLE_INDEX+1; ;i=(i+1)%10)
                        420     ;               {
                        421     ;                       if((ECO_PAGE_TABLE[i] & 0x80) == 0x80)
                        422     ;                       {
                        423     ;                               //LRU bit is 1 and then set this bit is 0
                        424     ;                               ECO_PAGE_TABLE[i] = ECO_PAGE_TABLE[i] & 0x7F;
                        425     ;                       }
                        426     ;                       else
                        427     ;                       {
                        428     ;                               unsigned char xdata *seg = (unsigned char xdata *)((i + 
                               ECO_PAGE_ADDR_OFFSET)<<8);
                        429     ;                               unsigned int j;
                        430     ;                               
                        431     ;                               //memory page is in ram
                        432     ;                               eeprom_init();
                        433     ; 
                        434     ;                               //mov code from eeprom to external ram
                        435     ;                               for(j=0;j<256;j++)
                        436     ;                               {
                        437     ;                                       *(seg+j) = eeprom_read(ECO_ADDR_SHIFT(ECO_PAGE_A
                               DDR & 0xFF00 ) +j);
                        438     ;                               }
                        439     ;                               
                        440     ;                               //update page table to connect this physical address id 
                               with virtual address id 
                        441     ;                               ECO_PAGE_TABLE[i] = ECO_PAGE_ADDR >> 8;
                        442     ; 
                        443     ;                               //store physical address id
                        444     ;                               ECO_PAGE_PREV_PID = ECO_PAGE_TABLE[i];
                        445     ; 
                        446     ;                               //update page address e.g.  (page_id<<8) + page_offset
                        447     ;                               ECO_PAGE_ADDR = ((i + ECO_PAGE_ADDR_OFFSET) << 8) + (ECO
                               _PAGE_ADDR & 0x00FF);
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/17/09 14:41:20 PAGE     8

                        448     ; 
                        449     ;                               //store virtual address id 
                        450     ;                               ECO_PAGE_PREV_VID = ECO_PAGE_ADDR >> 8; 
                        451     ; 
                        452     ;                               //mov to the next index
                        453     ;                               ECO_PAGE_TABLE_INDEX = i;
                        454     ; 
                        455     ;                               //jump  to function address
                        456     ;                               #pragma asm
                        457     ;                               //eco_page_function_call
                        458     ;                               //MOV     DPH,ECO_PAGE_ADDR
                        459     ;                               //MOV     DPL,ECO_PAGE_ADDR+01H
                        460     ;                               //LCALL        ?C?ICALL2               
                        461     ;                               #pragma endasm
                        462     ;                               
                        463     ;                               return ;
                        464     ;                               
                        465     ;                       }
                        466     ;               }
                        467     ;                       
                        468     ;       }
                        469     ;                               
                        470     ; }
                        471     ; */
                        472     ; 
                        473     ; void eco_page_manager()
                        474     
------                  475             RSEG  ?PR?eco_page_manager?ECO_PAGE
000000                  476     eco_page_manager:
                        477             USING   0
                        478                             ; SOURCE LINE # 210
                        479     ; {
                        480                             ; SOURCE LINE # 211
                        481     ;       unsigned int i;
                        482     ;       unsigned int page_index = -1; 
                        483                             ; SOURCE LINE # 213
000000 74FF             484             MOV     A,#0FFH
000002 F500       F     485             MOV     page_index?142,A
000004 F500       F     486             MOV     page_index?142+01H,A
                        487     ; 
                        488     ;       //Check POP instruction 
                        489     ;       //for(i=0;i<10;i++)
                        490     ;       //{    
                        491     ;       //      blink_led();
                        492     ;       //      mdelay(200);
                        493     ;       //}    
                        494     ;       //mdelay(1000);
                        495     ;       
                        496     ;       //if page id is the same with the last page id
                        497     ;       if((ECO_PAGE_ADDR >> ECO_PAGE_SHIFT) == ECO_PAGE_PREV_PID)
                        498                             ; SOURCE LINE # 224
000006 E500       F     499             MOV     A,ECO_PAGE_ADDR+01H
000008 AE00       F     500             MOV     R6,ECO_PAGE_ADDR
00000A 7807             501             MOV     R0,#07H
00000C                  502     ?C0013:
00000C CE               503             XCH     A,R6
00000D C3               504             CLR     C
00000E 13               505             RRC     A
00000F CE               506             XCH     A,R6
000010 13               507             RRC     A
000011 D8F9             508             DJNZ    R0,?C0013
000013 B50013           509             CJNE    A,ECO_PAGE_PREV_PID+01H,?C0002
000016 EE               510             MOV     A,R6
000017 B5000F           511             CJNE    A,ECO_PAGE_PREV_PID,?C0002
                        512     ;       {
                        513                             ; SOURCE LINE # 225
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/17/09 14:41:20 PAGE     9

                        514     ;               //virtual address id + function offset
                        515     ;               ECO_PAGE_ADDR = (ECO_PAGE_PREV_VID << 8) + (ECO_PAGE_ADDR & 0x00FF);
                        516                             ; SOURCE LINE # 227
00001A E500       F     517             MOV     A,ECO_PAGE_PREV_VID+01H
00001C FE               518             MOV     R6,A
00001D 7C00             519             MOV     R4,#00H
00001F E4               520             CLR     A
000020 2500       F     521             ADD     A,ECO_PAGE_ADDR+01H
000022 F500       F     522             MOV     ECO_PAGE_ADDR+01H,A
000024 EC               523             MOV     A,R4
000025 3E               524             ADDC    A,R6
000026 F500       F     525             MOV     ECO_PAGE_ADDR,A
                        526     ;               #pragma asm
                        527     ;               //eco_page_function_call
                        528               
000028 22               529             RET     
                        530     ;               #pragma endasm
                        531     ;               return ;
                        532     ;       }       
                        533                             ; SOURCE LINE # 232
000029                  534     ?C0002:
                        535     ;                               
                        536     ;       //Check Table   
                        537     ;       for(i=0;i<ECO_PAGE_ENTRY;i++)
                        538                             ; SOURCE LINE # 235
000029 E4               539             CLR     A
00002A F500       F     540             MOV     i?141,A
00002C F500       F     541             MOV     i?141+01H,A
00002E                  542     ?C0004:
                        543     ;       {   
                        544                             ; SOURCE LINE # 236
                        545     ;               if((ECO_PAGE_ADDR >> ECO_PAGE_SHIFT) == ECO_PAGE_TABLE[i])
                        546                             ; SOURCE LINE # 237
00002E E500       F     547             MOV     A,i?141+01H
000030 25E0             548             ADD     A,ACC
000032 2400       F     549             ADD     A,#LOW (ECO_PAGE_TABLE+01H)
000034 F9               550             MOV     R1,A
000035 E500       F     551             MOV     A,ECO_PAGE_ADDR+01H
000037 AE00       F     552             MOV     R6,ECO_PAGE_ADDR
000039 7807             553             MOV     R0,#07H
00003B                  554     ?C0015:
00003B CE               555             XCH     A,R6
00003C C3               556             CLR     C
00003D 13               557             RRC     A
00003E CE               558             XCH     A,R6
00003F 13               559             RRC     A
000040 D8F9             560             DJNZ    R0,?C0015
000042 67               561             XRL     A,@R1
000043 7003             562             JNZ     ?C0016
000045 EE               563             MOV     A,R6
000046 19               564             DEC     R1
000047 67               565             XRL     A,@R1
000048                  566     ?C0016:
000048 7008             567             JNZ     ?C0006
                        568     ;               {
                        569                             ; SOURCE LINE # 238
                        570     ;                       page_index = i;
                        571                             ; SOURCE LINE # 239
00004A 850000     F     572             MOV     page_index?142,i?141
00004D 850000     F     573             MOV     page_index?142+01H,i?141+01H
                        574     ;                       break;
                        575                             ; SOURCE LINE # 240
000050 800E             576             SJMP    ?C0005
                        577     ;               }
                        578                             ; SOURCE LINE # 241
                        579     ;       }
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/17/09 14:41:20 PAGE    10

                        580                             ; SOURCE LINE # 242
000052                  581     ?C0006:
000052 0500       F     582             INC     i?141+01H
000054 E500       F     583             MOV     A,i?141+01H
000056 7002             584             JNZ     ?C0017
000058 0500       F     585             INC     i?141
00005A                  586     ?C0017:
00005A 6418             587             XRL     A,#018H
00005C 4500       F     588             ORL     A,i?141
00005E 70CE             589             JNZ     ?C0004
000060                  590     ?C0005:
                        591     ; 
                        592     ;       if(page_index != -1) 
                        593                             ; SOURCE LINE # 244
000060 E500       F     594             MOV     A,page_index?142+01H
000062 F4               595             CPL     A
000063 7003             596             JNZ     ?C0018
000065 E500       F     597             MOV     A,page_index?142
000067 F4               598             CPL     A
000068                  599     ?C0018:
000068 6044             600             JZ      ?C0008
                        601     ;       {  
                        602                             ; SOURCE LINE # 245
                        603     ;               //store function physical addres id 
                        604     ;               ECO_PAGE_PREV_PID = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;
                        605                             ; SOURCE LINE # 247
00006A E500       F     606             MOV     A,ECO_PAGE_ADDR+01H
00006C AE00       F     607             MOV     R6,ECO_PAGE_ADDR
00006E 7807             608             MOV     R0,#07H
000070                  609     ?C0019:
000070 CE               610             XCH     A,R6
000071 C3               611             CLR     C
000072 13               612             RRC     A
000073 CE               613             XCH     A,R6
000074 13               614             RRC     A
000075 D8F9             615             DJNZ    R0,?C0019
000077 F500       F     616             MOV     ECO_PAGE_PREV_PID+01H,A
000079 8E00       F     617             MOV     ECO_PAGE_PREV_PID,R6
                        618     ;       
                        619     ;               //memory page is in ram
                        620     ;               ECO_PAGE_ADDR = ((page_index + ECO_PAGE_ADDR_OFFSET) << ECO_PAGE_SHIFT) 
                               + (ECO_PAGE_ADDR & ECO_PAGE_MASK);
                        621                             ; SOURCE LINE # 250
00007B E500       F     622             MOV     A,page_index?142+01H
00007D 240C             623             ADD     A,#0CH
00007F FF               624             MOV     R7,A
000080 E4               625             CLR     A
000081 3500       F     626             ADDC    A,page_index?142
000083 FE               627             MOV     R6,A
000084 EF               628             MOV     A,R7
000085 7807             629             MOV     R0,#07H
000087                  630     ?C0020:
000087 C3               631             CLR     C
000088 33               632             RLC     A
000089 CE               633             XCH     A,R6
00008A 33               634             RLC     A
00008B CE               635             XCH     A,R6
00008C D8F9             636             DJNZ    R0,?C0020
00008E FF               637             MOV     R7,A
00008F 7C00             638             MOV     R4,#00H
000091 E500       F     639             MOV     A,ECO_PAGE_ADDR+01H
000093 547F             640             ANL     A,#07FH
000095 2F               641             ADD     A,R7
000096 F500       F     642             MOV     ECO_PAGE_ADDR+01H,A
000098 EC               643             MOV     A,R4
000099 3E               644             ADDC    A,R6
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/17/09 14:41:20 PAGE    11

00009A F500       F     645             MOV     ECO_PAGE_ADDR,A
                        646     ; 
                        647     ;               //cache the virtual address id
                        648     ;               ECO_PAGE_PREV_VID = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;
                        649                             ; SOURCE LINE # 253
00009C E500       F     650             MOV     A,ECO_PAGE_ADDR+01H
00009E AE00       F     651             MOV     R6,ECO_PAGE_ADDR
0000A0 7807             652             MOV     R0,#07H
0000A2                  653     ?C0021:
0000A2 CE               654             XCH     A,R6
0000A3 C3               655             CLR     C
0000A4 13               656             RRC     A
0000A5 CE               657             XCH     A,R6
0000A6 13               658             RRC     A
0000A7 D8F9             659             DJNZ    R0,?C0021
0000A9 F500       F     660             MOV     ECO_PAGE_PREV_VID+01H,A
0000AB 8E00       F     661             MOV     ECO_PAGE_PREV_VID,R6
                        662     ; 
                        663     ;               #pragma asm
                        664     ;               //eco_page_function_call
                        665               
                        666     ;               //MOV     DPH,ECO_PAGE_ADDR
                        667               
                        668     ;               //MOV     DPL,ECO_PAGE_ADDR+01H
                        669               
                        670     ;               //LCALL ?C?ICALL2
                        671               
                        672     ;               #pragma endasm
                        673     ;       }   
                        674                             ; SOURCE LINE # 261
0000AD 22               675             RET     
0000AE                  676     ?C0008:
                        677     ;       else
                        678     ;       {
                        679                             ; SOURCE LINE # 263
                        680     ;               //page fault
                        681     ;               // Move Data from EEPROM to iRAM 
                        682     ;               unsigned char xdata *seg = (unsigned char xdata *)((ECO_PAGE_TABLE_INDEX
                                + ECO_PAGE_ADDR_OFFSET) << ECO_PAGE_SHIFT);
                        683                             ; SOURCE LINE # 266
0000AE E500       F     684             MOV     A,ECO_PAGE_TABLE_INDEX
0000B0 240C             685             ADD     A,#0CH
0000B2 FF               686             MOV     R7,A
0000B3 E4               687             CLR     A
0000B4 33               688             RLC     A
0000B5 FE               689             MOV     R6,A
0000B6 EF               690             MOV     A,R7
0000B7 7807             691             MOV     R0,#07H
0000B9                  692     ?C0022:
0000B9 C3               693             CLR     C
0000BA 33               694             RLC     A
0000BB CE               695             XCH     A,R6
0000BC 33               696             RLC     A
0000BD CE               697             XCH     A,R6
0000BE D8F9             698             DJNZ    R0,?C0022
0000C0 8E00       F     699             MOV     seg?140,R6
0000C2 F500       F     700             MOV     seg?140+01H,A
                        701     ;               
                        702     ;               //memory page is in ram
                        703     ;               eeprom_init();
                        704                             ; SOURCE LINE # 269
0000C4 120000     E     705             LCALL   eeprom_init
                        706     ; 
                        707     ;               //mov code from eeprom to external ram
                        708     ;               for(i=0;i<ECO_PAGE_SIZE;i++)
                        709                             ; SOURCE LINE # 272
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/17/09 14:41:20 PAGE    12

0000C7 E4               710             CLR     A
0000C8 F500       F     711             MOV     i?141,A
0000CA F500       F     712             MOV     i?141+01H,A
0000CC                  713     ?C0010:
                        714     ;               {
                        715                             ; SOURCE LINE # 273
                        716     ;                       *(seg+i) = eeprom_read(ECO_ADDR_SHIFT(ECO_PAGE_ADDR & ECO_PAGE_M
                               ASK) +i);
                        717                             ; SOURCE LINE # 274
0000CC E500       F     718             MOV     A,ECO_PAGE_ADDR+01H
0000CE 547F             719             ANL     A,#07FH
0000D0 2403             720             ADD     A,#03H
0000D2 FF               721             MOV     R7,A
0000D3 E4               722             CLR     A
0000D4 33               723             RLC     A
0000D5 CF               724             XCH     A,R7
0000D6 2500       F     725             ADD     A,i?141+01H
0000D8 CF               726             XCH     A,R7
0000D9 3500       F     727             ADDC    A,i?141
0000DB FE               728             MOV     R6,A
0000DC 120000     E     729             LCALL   _eeprom_read
0000DF E500       F     730             MOV     A,seg?140+01H
0000E1 2500       F     731             ADD     A,i?141+01H
0000E3 F582             732             MOV     DPL,A
0000E5 E500       F     733             MOV     A,seg?140
0000E7 3500       F     734             ADDC    A,i?141
0000E9 F583             735             MOV     DPH,A
0000EB EF               736             MOV     A,R7
0000EC F0               737             MOVX    @DPTR,A
                        738     ;               }
                        739                             ; SOURCE LINE # 275
0000ED 0500       F     740             INC     i?141+01H
0000EF E500       F     741             MOV     A,i?141+01H
0000F1 7002             742             JNZ     ?C0023
0000F3 0500       F     743             INC     i?141
0000F5                  744     ?C0023:
0000F5 C3               745             CLR     C
0000F6 9480             746             SUBB    A,#080H
0000F8 E500       F     747             MOV     A,i?141
0000FA 9400             748             SUBB    A,#00H
0000FC 40CE             749             JC      ?C0010
0000FE                  750     ?C0011:
                        751     ;               
                        752     ;               //update page table to connect this physical address id with virtual add
                               ress id 
                        753     ;               ECO_PAGE_TABLE[ECO_PAGE_TABLE_INDEX] = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;
                        754                             ; SOURCE LINE # 278
0000FE E500       F     755             MOV     A,ECO_PAGE_ADDR+01H
000100 AE00       F     756             MOV     R6,ECO_PAGE_ADDR
000102 7807             757             MOV     R0,#07H
000104                  758     ?C0024:
000104 CE               759             XCH     A,R6
000105 C3               760             CLR     C
000106 13               761             RRC     A
000107 CE               762             XCH     A,R6
000108 13               763             RRC     A
000109 D8F9             764             DJNZ    R0,?C0024
00010B FF               765             MOV     R7,A
00010C E500       F     766             MOV     A,ECO_PAGE_TABLE_INDEX
00010E 25E0             767             ADD     A,ACC
000110 2400       F     768             ADD     A,#LOW (ECO_PAGE_TABLE)
000112 F8               769             MOV     R0,A
000113 A606             770             MOV     @R0,AR6
000115 08               771             INC     R0
000116 A607             772             MOV     @R0,AR7
                        773     ; 
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/17/09 14:41:20 PAGE    13

                        774     ;               //store physical address id
                        775     ;               ECO_PAGE_PREV_PID = ECO_PAGE_TABLE[ECO_PAGE_TABLE_INDEX];
                        776                             ; SOURCE LINE # 281
000118 E500       F     777             MOV     A,ECO_PAGE_TABLE_INDEX
00011A 25E0             778             ADD     A,ACC
00011C 2400       F     779             ADD     A,#LOW (ECO_PAGE_TABLE)
00011E F8               780             MOV     R0,A
00011F E6               781             MOV     A,@R0
000120 F500       F     782             MOV     ECO_PAGE_PREV_PID,A
000122 08               783             INC     R0
000123 E6               784             MOV     A,@R0
000124 F500       F     785             MOV     ECO_PAGE_PREV_PID+01H,A
                        786     ; 
                        787     ;               //update page address
                        788     ;               ECO_PAGE_ADDR = ((ECO_PAGE_TABLE_INDEX + ECO_PAGE_ADDR_OFFSET) << ECO_PA
                               GE_SHIFT) + (ECO_PAGE_ADDR & ECO_PAGE_MASK);
                        789                             ; SOURCE LINE # 284
000126 E500       F     790             MOV     A,ECO_PAGE_TABLE_INDEX
000128 240C             791             ADD     A,#0CH
00012A FF               792             MOV     R7,A
00012B E4               793             CLR     A
00012C 33               794             RLC     A
00012D FE               795             MOV     R6,A
00012E EF               796             MOV     A,R7
00012F 7807             797             MOV     R0,#07H
000131                  798     ?C0025:
000131 C3               799             CLR     C
000132 33               800             RLC     A
000133 CE               801             XCH     A,R6
000134 33               802             RLC     A
000135 CE               803             XCH     A,R6
000136 D8F9             804             DJNZ    R0,?C0025
000138 FF               805             MOV     R7,A
000139 7C00             806             MOV     R4,#00H
00013B E500       F     807             MOV     A,ECO_PAGE_ADDR+01H
00013D 547F             808             ANL     A,#07FH
00013F 2F               809             ADD     A,R7
000140 F500       F     810             MOV     ECO_PAGE_ADDR+01H,A
000142 EC               811             MOV     A,R4
000143 3E               812             ADDC    A,R6
000144 F500       F     813             MOV     ECO_PAGE_ADDR,A
                        814     ; 
                        815     ;               //store virtual address id 
                        816     ;               ECO_PAGE_PREV_VID = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;    
                        817                             ; SOURCE LINE # 287
000146 E500       F     818             MOV     A,ECO_PAGE_ADDR+01H
000148 AE00       F     819             MOV     R6,ECO_PAGE_ADDR
00014A 7807             820             MOV     R0,#07H
00014C                  821     ?C0026:
00014C CE               822             XCH     A,R6
00014D C3               823             CLR     C
00014E 13               824             RRC     A
00014F CE               825             XCH     A,R6
000150 13               826             RRC     A
000151 D8F9             827             DJNZ    R0,?C0026
000153 F500       F     828             MOV     ECO_PAGE_PREV_VID+01H,A
000155 8E00       F     829             MOV     ECO_PAGE_PREV_VID,R6
                        830     ; 
                        831     ;               //mov to the next index
                        832     ;               ECO_PAGE_TABLE_INDEX++;
                        833                             ; SOURCE LINE # 290
000157 0500       F     834             INC     ECO_PAGE_TABLE_INDEX
                        835     ;                       
                        836     ;               //jump  to function address
                        837     ;               #pragma asm
                        838     ;               //eco_page_function_call
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/17/09 14:41:20 PAGE    14

                        839               
                        840     ;               //MOV     DPH,ECO_PAGE_ADDR
                        841               
                        842     ;               //MOV     DPL,ECO_PAGE_ADDR+01H
                        843               
                        844     ;               //LCALL        ?C?ICALL2               
                        845               
                        846     ;               #pragma endasm
                        847     ; 
                        848     ;       }
                        849                             ; SOURCE LINE # 300
                        850     ; 
                        851     ; }
                        852                             ; SOURCE LINE # 302
000159                  853     ?C0003:
000159 22               854             RET     
                        855     ; END OF eco_page_manager
                        856     
                        857             END
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/17/09 14:41:20 PAGE    15

SYMBOL TABLE LISTING
------ ----- -------


N A M E                                    T Y P E  V A L U E     ATTRIBUTES

?C0002. . . . . . . . . . . . . . . . .    C  ADDR  0029H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0003. . . . . . . . . . . . . . . . .    C  ADDR  0159H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0004. . . . . . . . . . . . . . . . .    C  ADDR  002EH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0005. . . . . . . . . . . . . . . . .    C  ADDR  0060H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0006. . . . . . . . . . . . . . . . .    C  ADDR  0052H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0008. . . . . . . . . . . . . . . . .    C  ADDR  00AEH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0010. . . . . . . . . . . . . . . . .    C  ADDR  00CCH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0011. . . . . . . . . . . . . . . . .    C  ADDR  00FEH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0013. . . . . . . . . . . . . . . . .    C  ADDR  000CH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0015. . . . . . . . . . . . . . . . .    C  ADDR  003BH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0016. . . . . . . . . . . . . . . . .    C  ADDR  0048H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0017. . . . . . . . . . . . . . . . .    C  ADDR  005AH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0018. . . . . . . . . . . . . . . . .    C  ADDR  0068H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0019. . . . . . . . . . . . . . . . .    C  ADDR  0070H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0020. . . . . . . . . . . . . . . . .    C  ADDR  0087H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0021. . . . . . . . . . . . . . . . .    C  ADDR  00A2H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0022. . . . . . . . . . . . . . . . .    C  ADDR  00B9H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0023. . . . . . . . . . . . . . . . .    C  ADDR  00F5H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0024. . . . . . . . . . . . . . . . .    C  ADDR  0104H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0025. . . . . . . . . . . . . . . . .    C  ADDR  0131H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0026. . . . . . . . . . . . . . . . .    C  ADDR  014CH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C_INITSEG. . . . . . . . . . . . . . .    C  SEG   00002BH       REL=UNIT, ALN=BYTE
?DT?ECO_PAGE. . . . . . . . . . . . . .    D  SEG   000008H       REL=UNIT, ALN=BYTE
?DT?ECO_PAGE_MANAGER?ECO_PAGE . . . . .    D  SEG   000006H       REL=UNIT, ALN=BYTE
?ECO_PAGE_MANAGER?BYTE. . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?ECO_PAGE_MANAGER?ECO_PAGE
?ID?ECO_PAGE. . . . . . . . . . . . . .    I  SEG   00002FH       REL=UNIT, ALN=BYTE
?PR?ECO_PAGE_INIT?ECO_PAGE. . . . . . .    C  SEG   000010H       REL=UNIT, ALN=BYTE
?PR?ECO_PAGE_MANAGER?ECO_PAGE . . . . .    C  SEG   00015AH       REL=UNIT, ALN=BYTE
_EEPROM_READ. . . . . . . . . . . . . .    C  ADDR  -------       EXT
AC. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.6   A   
ACC . . . . . . . . . . . . . . . . . .    D  ADDR  00E0H     A   
ADCCON. . . . . . . . . . . . . . . . .    D  ADDR  00A1H     A   
ADCDATAH. . . . . . . . . . . . . . . .    D  ADDR  00A2H     A   
ADCDATAL. . . . . . . . . . . . . . . .    D  ADDR  00A3H     A   
ADCSTATIC . . . . . . . . . . . . . . .    D  ADDR  00A4H     A   
AR6 . . . . . . . . . . . . . . . . . .    D  ADDR  0006H     A   
AR7 . . . . . . . . . . . . . . . . . .    D  ADDR  0007H     A   
B . . . . . . . . . . . . . . . . . . .    D  ADDR  00F0H     A   
C_T2. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.1   A   
CE. . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.6   A   
CK_CTRL . . . . . . . . . . . . . . . .    D  ADDR  00B6H     A   
CKCON . . . . . . . . . . . . . . . . .    D  ADDR  008EH     A   
CLK1. . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.1   A   
CLK2. . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.5   A   
CP_RL2. . . . . . . . . . . . . . . . .    B  ADDR  00C8H.0   A   
CPRL2 . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.0   A   
CS. . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.3   A   
CT2 . . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.1   A   
CY. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.7   A   
DATA? . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.0   A   
DEV_OFFSET. . . . . . . . . . . . . . .    D  ADDR  00BEH     A   
DIN0. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.2   A   
DIO0. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.0   A   
DIO1. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.1   A   
DIO2. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.0   A   
DIO3. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.1   A   
DIO4. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.2   A   
DIO5. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.3   A   
DIO6. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.4   A   
DIO7. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.5   A   
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/17/09 14:41:20 PAGE    16

DIO8. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.6   A   
DIO9. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.7   A   
DOUT2 . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.4   A   
DPH . . . . . . . . . . . . . . . . . .    D  ADDR  0083H     A   
DPH0. . . . . . . . . . . . . . . . . .    D  ADDR  0083H     A   
DPH1. . . . . . . . . . . . . . . . . .    D  ADDR  0085H     A   
DPL . . . . . . . . . . . . . . . . . .    D  ADDR  0082H     A   
DPL0. . . . . . . . . . . . . . . . . .    D  ADDR  0082H     A   
DPL1. . . . . . . . . . . . . . . . . .    D  ADDR  0084H     A   
DPS . . . . . . . . . . . . . . . . . .    D  ADDR  0086H     A   
DR1 . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.2   A   
DR2 . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.6   A   
DR2_CE. . . . . . . . . . . . . . . . .    B  ADDR  00A0H.6   A   
EA. . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.7   A   
ECO_PAGE. . . . . . . . . . . . . . . .    -- ----  -------       
ECO_PAGE_ADDR . . . . . . . . . . . . .    D  ADDR  0005H     R   SEG=?DT?ECO_PAGE
ECO_PAGE_INIT . . . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?ECO_PAGE_INIT?ECO_PAGE
ECO_PAGE_MANAGER. . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
ECO_PAGE_PREV_PID . . . . . . . . . . .    D  ADDR  0001H     R   SEG=?DT?ECO_PAGE
ECO_PAGE_PREV_VID . . . . . . . . . . .    D  ADDR  0003H     R   SEG=?DT?ECO_PAGE
ECO_PAGE_REGISTER1. . . . . . . . . . .    I  ADDR  0028H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER2. . . . . . . . . . .    I  ADDR  0029H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER3. . . . . . . . . . .    I  ADDR  002AH     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER4. . . . . . . . . . .    I  ADDR  002BH     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER5. . . . . . . . . . .    I  ADDR  002CH     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER6. . . . . . . . . . .    I  ADDR  002DH     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER7. . . . . . . . . . .    I  ADDR  002EH     R   SEG=?ID?ECO_PAGE
ECO_PAGE_SPI_CONN . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?ECO_PAGE
ECO_PAGE_TABLE. . . . . . . . . . . . .    I  ADDR  0000H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_TABLE_INDEX. . . . . . . . . .    D  ADDR  0007H     R   SEG=?DT?ECO_PAGE
EEPROM_INIT . . . . . . . . . . . . . .    C  ADDR  -------       EXT
EICON . . . . . . . . . . . . . . . . .    D  ADDR  00D8H     A   
EIE . . . . . . . . . . . . . . . . . .    D  ADDR  00E8H     A   
EIP . . . . . . . . . . . . . . . . . .    D  ADDR  00F8H     A   
ES. . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.4   A   
ET0 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.1   A   
ET1 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.3   A   
ET2 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.5   A   
EWDI. . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.4   A   
EX0 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.0   A   
EX1 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.2   A   
EX2 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.0   A   
EX3 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.1   A   
EX4 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.2   A   
EX5 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.3   A   
EXEN2 . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.3   A   
EXF2. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.6   A   
EXIF. . . . . . . . . . . . . . . . . .    D  ADDR  0091H     A   
F0. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.5   A   
F1. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.1   A   
I?141 . . . . . . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?ECO_PAGE_MANAGER?ECO_PAGE
IE. . . . . . . . . . . . . . . . . . .    D  ADDR  00A8H     A   
IE0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.1   A   
IE1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.3   A   
INT0_N. . . . . . . . . . . . . . . . .    B  ADDR  0080H.3   A   
INT1_N. . . . . . . . . . . . . . . . .    B  ADDR  0080H.4   A   
IP. . . . . . . . . . . . . . . . . . .    D  ADDR  00B8H     A   
IT0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.0   A   
IT1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.2   A   
MPAGE . . . . . . . . . . . . . . . . .    D  ADDR  0092H     A   
OV. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.2   A   
P . . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.0   A   
P0. . . . . . . . . . . . . . . . . . .    D  ADDR  0080H     A   
P0_0. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.0   A   
P0_1. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.1   A   
P0_2. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.2   A   
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/17/09 14:41:20 PAGE    17

P0_3. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.3   A   
P0_4. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.4   A   
P0_5. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.5   A   
P0_6. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.6   A   
P0_7. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.7   A   
P0_ALT. . . . . . . . . . . . . . . . .    D  ADDR  0095H     A   
P0_DIR. . . . . . . . . . . . . . . . .    D  ADDR  0094H     A   
P1. . . . . . . . . . . . . . . . . . .    D  ADDR  0090H     A   
P1_0. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.0   A   
P1_1. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.1   A   
P1_2. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.2   A   
P1_ALT. . . . . . . . . . . . . . . . .    D  ADDR  0097H     A   
P1_DIR. . . . . . . . . . . . . . . . .    D  ADDR  0096H     A   
PAGE_INDEX?142. . . . . . . . . . . . .    D  ADDR  0002H     R   SEG=?DT?ECO_PAGE_MANAGER?ECO_PAGE
PCON. . . . . . . . . . . . . . . . . .    D  ADDR  0087H     A   
PS. . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.4   A   
PSW . . . . . . . . . . . . . . . . . .    D  ADDR  00D0H     A   
PT0 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.1   A   
PT1 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.3   A   
PT2 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.5   A   
PWDI. . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.4   A   
PWM . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.7   A   
PWMCON. . . . . . . . . . . . . . . . .    D  ADDR  00A9H     A   
PWMDUTY . . . . . . . . . . . . . . . .    D  ADDR  00AAH     A   
PWR_UP. . . . . . . . . . . . . . . . .    B  ADDR  00A0H.7   A   
PX0 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.0   A   
PX1 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.2   A   
PX2 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.0   A   
PX3 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.1   A   
PX4 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.2   A   
PX5 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.3   A   
RADIO . . . . . . . . . . . . . . . . .    D  ADDR  00A0H     A   
RB8 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.2   A   
RCAP2H. . . . . . . . . . . . . . . . .    D  ADDR  00CBH     A   
RCAP2L. . . . . . . . . . . . . . . . .    D  ADDR  00CAH     A   
RCLK. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.5   A   
REGX_CTRL . . . . . . . . . . . . . . .    D  ADDR  00ADH     A   
REGX_LSB. . . . . . . . . . . . . . . .    D  ADDR  00ACH     A   
REGX_MSB. . . . . . . . . . . . . . . .    D  ADDR  00ABH     A   
REN . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.4   A   
RI. . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.0   A   
RS0 . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.3   A   
RS1 . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.4   A   
RSTREAS . . . . . . . . . . . . . . . .    D  ADDR  00B1H     A   
RXD . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.1   A   
SBUF. . . . . . . . . . . . . . . . . .    D  ADDR  0099H     A   
SCON. . . . . . . . . . . . . . . . . .    D  ADDR  0098H     A   
SEG?140 . . . . . . . . . . . . . . . .    D  ADDR  0004H     R   SEG=?DT?ECO_PAGE_MANAGER?ECO_PAGE
SM0 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.7   A   
SM1 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.6   A   
SM2 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.5   A   
SP. . . . . . . . . . . . . . . . . . .    D  ADDR  0081H     A   
SPC_FNC . . . . . . . . . . . . . . . .    D  ADDR  008FH     A   
SPI_CTRL. . . . . . . . . . . . . . . .    D  ADDR  00B3H     A   
SPI_DATA. . . . . . . . . . . . . . . .    D  ADDR  00B2H     A   
SPICLK. . . . . . . . . . . . . . . . .    D  ADDR  00B4H     A   
T0. . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.5   A   
T1. . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.6   A   
T1_1V2. . . . . . . . . . . . . . . . .    D  ADDR  00BCH     A   
T2. . . . . . . . . . . . . . . . . . .    B  ADDR  0090H.0   A   
T2_1V2. . . . . . . . . . . . . . . . .    D  ADDR  00BDH     A   
T2CON . . . . . . . . . . . . . . . . .    D  ADDR  00C8H     A   
TB8 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.3   A   
TCLK. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.4   A   
TCON. . . . . . . . . . . . . . . . . .    D  ADDR  0088H     A   
TEST_MODE . . . . . . . . . . . . . . .    D  ADDR  00B7H     A   
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/17/09 14:41:20 PAGE    18

TF0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.5   A   
TF1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.7   A   
TF2 . . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.7   A   
TH0 . . . . . . . . . . . . . . . . . .    D  ADDR  008CH     A   
TH1 . . . . . . . . . . . . . . . . . .    D  ADDR  008DH     A   
TH2 . . . . . . . . . . . . . . . . . .    D  ADDR  00CDH     A   
TI. . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.1   A   
TICK_DV . . . . . . . . . . . . . . . .    D  ADDR  00B5H     A   
TL0 . . . . . . . . . . . . . . . . . .    D  ADDR  008AH     A   
TL1 . . . . . . . . . . . . . . . . . .    D  ADDR  008BH     A   
TL2 . . . . . . . . . . . . . . . . . .    D  ADDR  00CCH     A   
TMOD. . . . . . . . . . . . . . . . . .    D  ADDR  0089H     A   
TR0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.4   A   
TR1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.6   A   
TR2 . . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.2   A   
TXD . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.2   A   
WDTI. . . . . . . . . . . . . . . . . .    B  ADDR  00D8H.3   A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S).
