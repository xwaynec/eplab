AX51 MACRO ASSEMBLER  MAIN                                                                  05/02/09 16:05:28 PAGE     1


MACRO ASSEMBLER AX51 V3.06a
OBJECT MODULE PLACED IN .\main.obj
ASSEMBLER INVOKED BY: C:\Keil\C51\BIN\AX51.exe .\main.src EP DEBUG SYMBOLS OJ(.\main.obj) PR(.\main.ls1) 

LOC    OBJ             LINE     SOURCE

                          1     ; ./main.src generated from: .\main.c
                          2     ; COMPILER INVOKED BY:
                          3     ;        C:\Keil\C51\BIN\C51.exe .\main.c BROWSE DEBUG CODE LISTINCLUDE SYMBOLS PREPRINT
                                ROM(LARGE) INCDIR(../../Include) SRC(./main.src)
                          4     
                          5     $nomod51 
                          6     
                          7     NAME    MAIN
                          8     
 00A0.7                   9     PWR_UP  BIT     0A0H.7
 0080                    10     P0      DATA    080H
 0090                    11     P1      DATA    090H
 00D0.6                  12     AC      BIT     0D0H.6
 0080.5                  13     T0      BIT     080H.5
 00B3                    14     SPI_CTRL        DATA    0B3H
 0080.6                  15     T1      BIT     080H.6
 00A8.7                  16     EA      BIT     0A8H.7
 0090.0                  17     T2      BIT     090H.0
 00A0.6                  18     CE      BIT     0A0H.6
 00BE                    19     DEV_OFFSET      DATA    0BEH
 00A0.1                  20     CLK1    BIT     0A0H.1
 0090.2                  21     DIN0    BIT     090H.2
 00A0.5                  22     CLK2    BIT     0A0H.5
 0090.0                  23     DIO0    BIT     090H.0
 0083                    24     DPH0    DATA    083H
 0090.1                  25     DIO1    BIT     090H.1
 00A8                    26     IE      DATA    0A8H
 0085                    27     DPH1    DATA    085H
 0080.0                  28     DIO2    BIT     080H.0
 0080.1                  29     DIO3    BIT     080H.1
 0080.0                  30     P0_0    BIT     080H.0
 0090.0                  31     P1_0    BIT     090H.0
 0080.2                  32     DIO4    BIT     080H.2
 0080.1                  33     P0_1    BIT     080H.1
 0082                    34     DPL0    DATA    082H
 0090.1                  35     P1_1    BIT     090H.1
 0080.3                  36     DIO5    BIT     080H.3
 0080.2                  37     P0_2    BIT     080H.2
 0084                    38     DPL1    DATA    084H
 0090.2                  39     P1_2    BIT     090H.2
 0080.4                  40     DIO6    BIT     080H.4
 0080.3                  41     P0_3    BIT     080H.3
 0080.5                  42     DIO7    BIT     080H.5
 0080.4                  43     P0_4    BIT     080H.4
 00A4                    44     ADCSTATIC       DATA    0A4H
 0080.6                  45     DIO8    BIT     080H.6
 0080.5                  46     P0_5    BIT     080H.5
 00C8.6                  47     EXF2    BIT     0C8H.6
 00A0.3                  48     CS      BIT     0A0H.3
 0080.7                  49     DIO9    BIT     080H.7
 0080.6                  50     P0_6    BIT     080H.6
 0080.7                  51     P0_7    BIT     080H.7
 00A8.4                  52     ES      BIT     0A8H.4
 00B8                    53     IP      DATA    0B8H
 00A0.0                  54     DATA?   BIT     0A0H.0
 0098.0                  55     RI      BIT     098H.0
 00D0.7                  56     CY      BIT     0D0H.7
 0098.1                  57     TI      BIT     098H.1
AX51 MACRO ASSEMBLER  MAIN                                                                  05/02/09 16:05:28 PAGE     2

 00BC                    58     T1_1V2  DATA    0BCH
 008F                    59     SPC_FNC DATA    08FH
 00BD                    60     T2_1V2  DATA    0BDH
 00CB                    61     RCAP2H  DATA    0CBH
 00B8.4                  62     PS      BIT     0B8H.4
 0081                    63     SP      DATA    081H
 00D0.2                  64     OV      BIT     0D0H.2
 00B6                    65     CK_CTRL DATA    0B6H
 00CA                    66     RCAP2L  DATA    0CAH
 00B5                    67     TICK_DV DATA    0B5H
 00B1                    68     RSTREAS DATA    0B1H
 00C8.1                  69     C_T2    BIT     0C8H.1
 00E8.4                  70     EWDI    BIT     0E8H.4
 00A1                    71     ADCCON  DATA    0A1H
 00C8.5                  72     RCLK    BIT     0C8H.5
 00A2                    73     ADCDATAH        DATA    0A2H
 0091                    74     EXIF    DATA    091H
 00C8.4                  75     TCLK    BIT     0C8H.4
 00A0.6                  76     DR2_CE  BIT     0A0H.6
 00A3                    77     ADCDATAL        DATA    0A3H
 0099                    78     SBUF    DATA    099H
 0087                    79     PCON    DATA    087H
 0098                    80     SCON    DATA    098H
 00F8.4                  81     PWDI    BIT     0F8H.4
 0089                    82     TMOD    DATA    089H
 0088                    83     TCON    DATA    088H
 00D8.3                  84     WDTI    BIT     0D8H.3
 00AA                    85     PWMDUTY DATA    0AAH
 0088.1                  86     IE0     BIT     088H.1
 0088.3                  87     IE1     BIT     088H.3
 0094                    88     P0_DIR  DATA    094H
 00F0                    89     B       DATA    0F0H
 0096                    90     P1_DIR  DATA    096H
 0095                    91     P0_ALT  DATA    095H
 0097                    92     P1_ALT  DATA    097H
 00C8.0                  93     CP_RL2  BIT     0C8H.0
 00A0.2                  94     DR1     BIT     0A0H.2
 00E0                    95     ACC     DATA    0E0H
 00A0.6                  96     DR2     BIT     0A0H.6
 00B7                    97     TEST_MODE       DATA    0B7H
 00B4                    98     SPICLK  DATA    0B4H
 00C8.1                  99     CT2     BIT     0C8H.1
 00A8.1                 100     ET0     BIT     0A8H.1
 00A8.3                 101     ET1     BIT     0A8H.3
 0088.5                 102     TF0     BIT     088H.5
 0080.3                 103     INT0_N  BIT     080H.3
 00A8.5                 104     ET2     BIT     0A8H.5
 0088.7                 105     TF1     BIT     088H.7
 0080.4                 106     INT1_N  BIT     080H.4
 00C8.7                 107     TF2     BIT     0C8H.7
 0098.2                 108     RB8     BIT     098H.2
 008C                   109     TH0     DATA    08CH
 00A8.0                 110     EX0     BIT     0A8H.0
 0088.0                 111     IT0     BIT     088H.0
 008D                   112     TH1     DATA    08DH
 00A8.2                 113     EX1     BIT     0A8H.2
 0098.3                 114     TB8     BIT     098H.3
 0088.2                 115     IT1     BIT     088H.2
 00CD                   116     TH2     DATA    0CDH
 00AD                   117     REGX_CTRL       DATA    0ADH
 00E8.0                 118     EX2     BIT     0E8H.0
 00D0.0                 119     P       BIT     0D0H.0
 00E8.1                 120     EX3     BIT     0E8H.1
 0098.7                 121     SM0     BIT     098H.7
 008A                   122     TL0     DATA    08AH
 00E8.2                 123     EX4     BIT     0E8H.2
AX51 MACRO ASSEMBLER  MAIN                                                                  05/02/09 16:05:28 PAGE     3

 0098.6                 124     SM1     BIT     098H.6
 008B                   125     TL1     DATA    08BH
 00E8.3                 126     EX5     BIT     0E8H.3
 0098.5                 127     SM2     BIT     098H.5
 00CC                   128     TL2     DATA    0CCH
 00E8                   129     EIE     DATA    0E8H
 00B8.1                 130     PT0     BIT     0B8H.1
 00D0.3                 131     RS0     BIT     0D0H.3
 00B8.3                 132     PT1     BIT     0B8H.3
 00D0.4                 133     RS1     BIT     0D0H.4
 00B8.5                 134     PT2     BIT     0B8H.5
 0088.4                 135     TR0     BIT     088H.4
 00A9                   136     PWMCON  DATA    0A9H
 0088.6                 137     TR1     BIT     088H.6
 00C8.2                 138     TR2     BIT     0C8H.2
 00B8.0                 139     PX0     BIT     0B8H.0
 00B8.2                 140     PX1     BIT     0B8H.2
 00F8.0                 141     PX2     BIT     0F8H.0
 00F8.1                 142     PX3     BIT     0F8H.1
 00F8.2                 143     PX4     BIT     0F8H.2
 0083                   144     DPH     DATA    083H
 00F8.3                 145     PX5     BIT     0F8H.3
 00F8                   146     EIP     DATA    0F8H
 0082                   147     DPL     DATA    082H
 00C8.3                 148     EXEN2   BIT     0C8H.3
 00C8.0                 149     CPRL2   BIT     0C8H.0
 0098.4                 150     REN     BIT     098H.4
 00C8                   151     T2CON   DATA    0C8H
 0086                   152     DPS     DATA    086H
 00B2                   153     SPI_DATA        DATA    0B2H
 0092                   154     MPAGE   DATA    092H
 0080.1                 155     RXD     BIT     080H.1
 00A0.4                 156     DOUT2   BIT     0A0H.4
 00D8                   157     EICON   DATA    0D8H
 008E                   158     CKCON   DATA    08EH
 0080.2                 159     TXD     BIT     080H.2
 00A0                   160     RADIO   DATA    0A0H
 0080.7                 161     PWM     BIT     080H.7
 00D0.5                 162     F0      BIT     0D0H.5
 00D0.1                 163     F1      BIT     0D0H.1
 00AC                   164     REGX_LSB        DATA    0ACH
 00D0                   165     PSW     DATA    0D0H
 00AB                   166     REGX_MSB        DATA    0ABH
------                  167     ?PR?timer0?MAIN      SEGMENT CODE 
------                  168     ?PR?_log_2?MAIN      SEGMENT CODE 
------                  169     ?DT?_log_2?MAIN      SEGMENT DATA OVERLAYABLE 
------                  170     ?PR?delta_compress?MAIN                  SEGMENT CODE 
------                  171     ?DT?delta_compress?MAIN                  SEGMENT DATA OVERLAYABLE 
------                  172     ?PR?delta_compress_2?MAIN                  SEGMENT CODE 
------                  173     ?PR?main?MAIN        SEGMENT CODE 
------                  174     ?DT?main?MAIN        SEGMENT DATA OVERLAYABLE 
------                  175     ?CO?MAIN             SEGMENT CODE 
------                  176     ?C_INITSEG           SEGMENT CODE 
------                  177     ?DT?MAIN             SEGMENT DATA 
------                  178     ?ID?MAIN             SEGMENT IDATA 
------                  179     ?ID?delta_compress?MAIN                  SEGMENT IDATA OVERLAYABLE 
                        180             EXTRN   CODE (_mdelay)
                        181             EXTRN   CODE (_rf_configure)
                        182             EXTRN   CODE (_serial_init)
                        183             EXTRN   CODE (_log10)
                        184             EXTRN   CODE (_adc_read)
                        185             EXTRN   CODE (_adc_init)
                        186             EXTRN   CODE (_puts)
                        187             EXTRN   CODE (_?int_print)
                        188             EXTRN   CODE (_rf_send)
                        189             EXTRN   DATA (?_rf_send?BYTE)
AX51 MACRO ASSEMBLER  MAIN                                                                  05/02/09 16:05:28 PAGE     4

                        190             EXTRN   CODE (_store_cpu_rate)
                        191             EXTRN   CODE (rf_init)
                        192             EXTRN   CODE (?C?FCASTI)
                        193             EXTRN   CODE (?C?LSTIDATA)
                        194             EXTRN   CODE (?C?LLDIDATA)
                        195             EXTRN   CODE (?C?CASTF)
                        196             EXTRN   CODE (?C_STARTUP)
                        197             
                        198             EXTRN   CODE (eco_page_manager)
                        199         EXTRN   DATA (ECO_PAGE_ADDR)
                        200         EXTRN   DATA (ECO_PAGE_SPI_CONN)
                        201         EXTRN   IDATA (ECO_PAGE_REGISTER1)
                        202         EXTRN   IDATA (ECO_PAGE_REGISTER2)
                        203         EXTRN   IDATA (ECO_PAGE_REGISTER3)
                        204         EXTRN   IDATA (ECO_PAGE_REGISTER4)
                        205         EXTRN   IDATA (ECO_PAGE_REGISTER5)
                        206         EXTRN   IDATA (ECO_PAGE_REGISTER6)
                        207         EXTRN   IDATA (ECO_PAGE_REGISTER7)
                        208             
                        209             PUBLIC  rf_data
                        210             PUBLIC  dst_addr
                        211             PUBLIC  msg
                        212             PUBLIC  cfg
                        213             PUBLIC  test_counter
                        214             PUBLIC  flag
                        215             PUBLIC  timer_counter
                        216             PUBLIC  main
                        217             PUBLIC  delta_compress
                        218             PUBLIC  delta_compress_2
                        219             PUBLIC  _log_2
                        220             PUBLIC  timer0
                        221     
------                  222             RSEG  ?DT?main?MAIN
000000                  223     ?main?BYTE:
000000                  224               i?346:   DS   2
000002                  225             ORG  2
000002                  226            accx?347:   DS   2
                        227     
------                  228             RSEG  ?DT?_log_2?MAIN
000000                  229     ?_log_2?BYTE:
000000                  230               x?140:   DS   2
                        231     
------                  232             RSEG  ?DT?delta_compress?MAIN
000000                  233     ?delta_compress?BYTE:
000000                  234               i?241:   DS   2
000002                  235             ORG  2
000002                  236               j?242:   DS   2
000004                  237             ORG  4
000004                  238             now?244:   DS   2
000006                  239             ORG  6
000006                  240            prev?245:   DS   2
                        241     
------                  242             RSEG  ?DT?MAIN
000000                  243       timer_counter:   DS   2
000002                  244                flag:   DS   2
000004                  245        test_counter:   DS   2
000006                  246                 cfg:   DS   3
000009                  247             rf_data:   DS   15
                        248     
------                  249             RSEG  ?ID?MAIN
000000                  250                 msg:   DS   54
000036                  251            dst_addr:   DS   3
                        252     
------                  253             RSEG  ?ID?delta_compress?MAIN
000000                  254           delta?243:   DS   4
                        255     
AX51 MACRO ASSEMBLER  MAIN                                                                  05/02/09 16:05:28 PAGE     5

------                  256             RSEG  ?CO?MAIN
000000                  257     ?SC_0:
000000 74657374         258             DB  't' ,'e' ,'s' ,'t' ,':' ,000H
000004 3A00                     
                        259     
000006                  260     ?SC_6:
000006 0D0A00           261             DB  00DH,00AH,000H
                        262     
                        263     
------                  264             RSEG  ?C_INITSEG
000000 0F               265             DB      00FH
000001 00         F     266             DB      rf_data
000002 00               267             DB      000H
000003 A0               268             DB      0A0H
000004 00               269             DB      000H
000005 00               270             DB      000H
000006 00               271             DB      000H
000007 00               272             DB      000H
000008 00               273             DB      000H
000009 F2               274             DB      0F2H
00000A F2               275             DB      0F2H
00000B F2               276             DB      0F2H
00000C F2               277             DB      0F2H
00000D F2               278             DB      0F2H
00000E 63               279             DB      063H
00000F 6F               280             DB      06FH
000010 EC               281             DB      0ECH
                        282     
000011 03               283             DB      003H
000012 00         F     284             DB      cfg
000013 00               285             DB      000H
000014 0000       F     286             DW      rf_data + 0
                        287     
000016 03               288             DB      003H
000017 00         F     289             DB      dst_addr
000018 F1               290             DB      0F1H
000019 F1               291             DB      0F1H
00001A F1               292             DB      0F1H
                        293     
                        294     
                        295     ; #include "Eco/reg24e1.h"
                        296     ; #include "Eco/eco_sys.h"
                        297     ; #include "utils/utils.h"
                        298     ; #include "serial/serial.h"
                        299     ; #include "isr/isr_rf.h"
                        300     ; #include "eeprom/eeprom.h"
                        301     ; #include "eco_page.h"
                        302     ; #include "adc/adc.h"
                        303     ; #include <math.h>
                        304     ; 
                        305     ; #define LEN 27
                        306     ; struct rf_config rf_data = { {0x00}, /* data2 width */
                        307     ;     {0xA0}, /* data1 width */ 
                        308     ;     {0x00, 0x00, 0x00, 0x00, 0x00}, /* addr2 */
                        309     ;     {0xF2, 0xF2, 0xF2, 0xF2, 0xF2}, /* addr1, host addr */
                        310     ;     {0x63}, /* 24-bit address, 16-bit CRC */
                        311     ;     {0x6f, 0xEC} };
                        312     ; struct rf_config *cfg = &rf_data;
                        313     ; 
                        314     ; //struct rf_config *cfg = &rf_data;
                        315     ; char idata dst_addr[3] = { 0xF1, 0xF1, 0xF1 };
                        316     ; char idata msg[54];
                        317     ; 
                        318     ; volatile unsigned int test_counter;
                        319     ; volatile unsigned int flag;
                        320     ; volatile unsigned int timer_counter;
AX51 MACRO ASSEMBLER  MAIN                                                                  05/02/09 16:05:28 PAGE     6

                        321     ; 
00000B                  322     CSEG    AT      0000BH
00000B 020000     F     323             LJMP    timer0
                        324     
                        325     ; void timer0() interrupt 1
                        326     
------                  327             RSEG  ?PR?timer0?MAIN
                        328             USING   0
000000                  329     timer0:
000000 C0E0             330             PUSH    ACC
000002 C0D0             331             PUSH    PSW
                        332                             ; SOURCE LINE # 28
                        333     ; {
                        334     ;       if(timer_counter < 5000)
                        335                             ; SOURCE LINE # 30
000004 C3               336             CLR     C
000005 E500       F     337             MOV     A,timer_counter+01H
000007 9488             338             SUBB    A,#088H
000009 E500       F     339             MOV     A,timer_counter
00000B 9413             340             SUBB    A,#013H
00000D 500A             341             JNC     ?C0001
                        342     ;       {
                        343                             ; SOURCE LINE # 31
                        344     ;               timer_counter++;
                        345                             ; SOURCE LINE # 32
00000F 0500       F     346             INC     timer_counter+01H
000011 E500       F     347             MOV     A,timer_counter+01H
000013 7012             348             JNZ     ?C0003
000015 0500       F     349             INC     timer_counter
000017                  350     ?C0026:
                        351     ;       }
                        352                             ; SOURCE LINE # 33
000017 800E             353             SJMP    ?C0003
000019                  354     ?C0001:
                        355     ;       else
                        356     ;       {
                        357                             ; SOURCE LINE # 35
                        358     ;               timer_counter = 0;
                        359                             ; SOURCE LINE # 36
000019 750000     F     360             MOV     timer_counter,#00H
00001C 750000     F     361             MOV     timer_counter+01H,#00H
                        362     ;               flag = 1;
                        363                             ; SOURCE LINE # 37
00001F 750000     F     364             MOV     flag,#00H
000022 750001     F     365             MOV     flag+01H,#01H
                        366     ;               EA = 0;
                        367                             ; SOURCE LINE # 38
000025 C2AF             368             CLR     EA
                        369     ;       }       
                        370                             ; SOURCE LINE # 39
                        371     ;       
                        372     ; }
                        373                             ; SOURCE LINE # 41
000027                  374     ?C0003:
000027 D0D0             375             POP     PSW
000029 D0E0             376             POP     ACC
00002B 32               377             RETI    
                        378     ; END OF timer0
                        379     
                        380     ; 
                        381     ; int log_2(int x)
                        382     
------                  383             RSEG  ?PR?_log_2?MAIN
000000                  384     _log_2:
                        385             USING   0
                        386                             ; SOURCE LINE # 43
AX51 MACRO ASSEMBLER  MAIN                                                                  05/02/09 16:05:28 PAGE     7

000000 8E00       F     387             MOV     x?140,R6
000002 8F00       F     388             MOV     x?140+01H,R7
                        389     ; {
                        390                             ; SOURCE LINE # 44
                        391     ;       //EA = 0;       
                        392     ;       if( x > 0)
                        393                             ; SOURCE LINE # 46
000004 D3               394             SETB    C
000005 E500       F     395             MOV     A,x?140+01H
000007 9400             396             SUBB    A,#00H
000009 E500       F     397             MOV     A,x?140
00000B 6480             398             XRL     A,#080H
00000D 9480             399             SUBB    A,#080H
00000F 4020             400             JC      ?C0004
                        401     ;       {
                        402                             ; SOURCE LINE # 47
                        403     ;               //return (log10(x))/(log10(2.0)) + 1;
                        404     ;               if ( x< 0) log10(x);
                        405                             ; SOURCE LINE # 49
000011 E500       F     406             MOV     A,x?140
000013 6480             407             XRL     A,#080H
000015 9480             408             SUBB    A,#080H
000017 500B             409             JNC     ?C0006
000019 AC00       F     410             MOV     R4,x?140
00001B AD00       F     411             MOV     R5,x?140+01H
00001D EC               412             MOV     A,R4
00001E 120000     E     413             LCALL   ?C?FCASTI
000021 120000     E     414             LCALL   _log10
000024                  415     ?C0006:
                        416     ;               while(x--)
                        417                             ; SOURCE LINE # 50
000024 E500       F     418             MOV     A,x?140+01H
000026 1500       F     419             DEC     x?140+01H
000028 AE00       F     420             MOV     R6,x?140
00002A 7002             421             JNZ     ?C0027
00002C 1500       F     422             DEC     x?140
00002E                  423     ?C0027:
00002E 4E               424             ORL     A,R6
00002F 70F3             425             JNZ     ?C0006
                        426     ;               ;
                        427     ;       }
                        428                             ; SOURCE LINE # 52
000031                  429     ?C0004:
                        430     ;       else if(x == 0)
                        431                             ; SOURCE LINE # 53
                        432     ;       {
                        433                             ; SOURCE LINE # 54
                        434     ;               return ;
                        435     ;       }
                        436                             ; SOURCE LINE # 56
                        437     ;       else
                        438     ;       {
                        439                             ; SOURCE LINE # 58
                        440     ;               //return -(log10(-x))/(log10(2.0)) + 2;
                        441     ;               return ;        
                        442     ;       }
                        443                             ; SOURCE LINE # 61
                        444     ; }
                        445                             ; SOURCE LINE # 62
000031                  446     ?C0010:
000031 22               447             RET     
                        448     ; END OF _log_2
                        449     
                        450     ; 
                        451     ; void delta_compress()
                        452     
AX51 MACRO ASSEMBLER  MAIN                                                                  05/02/09 16:05:28 PAGE     8

------                  453             RSEG  ?PR?delta_compress?MAIN
000000                  454     delta_compress:
                        455             USING   0
                        456                             ; SOURCE LINE # 64
                        457     ; {
                        458                             ; SOURCE LINE # 65
                        459     ;       int i,j;
                        460     ;       float idata delta;
                        461     ;       int now,prev;
                        462     ;       test_counter++;
                        463                             ; SOURCE LINE # 69
000000 0500       F     464             INC     test_counter+01H
000002 E500       F     465             MOV     A,test_counter+01H
000004 7002             466             JNZ     ?C0028
000006 0500       F     467             INC     test_counter
000008                  468     ?C0028:
                        469     ;       now = prev = (msg[0]<<8) + msg[1];
                        470                             ; SOURCE LINE # 70
000008 7800       F     471             MOV     R0,#LOW (msg)
00000A E6               472             MOV     A,@R0
00000B FF               473             MOV     R7,A
00000C 33               474             RLC     A
00000D 95E0             475             SUBB    A,ACC
00000F EF               476             MOV     A,R7
000010 FE               477             MOV     R6,A
000011 08               478             INC     R0
000012 E6               479             MOV     A,@R0
000013 FD               480             MOV     R5,A
000014 33               481             RLC     A
000015 95E0             482             SUBB    A,ACC
000017 FC               483             MOV     R4,A
000018 E4               484             CLR     A
000019 2D               485             ADD     A,R5
00001A FF               486             MOV     R7,A
00001B EE               487             MOV     A,R6
00001C 3C               488             ADDC    A,R4
00001D F500       F     489             MOV     prev?245,A
00001F 8F00       F     490             MOV     prev?245+01H,R7
000021 F500       F     491             MOV     now?244,A
000023 8F00       F     492             MOV     now?244+01H,R7
                        493     
                        494             ;MOV ECO_PAGE_SPI_CONN,SPI_CTRL
                        495         ;MOV ECO_PAGE_ADDR,#HIGH (delta_compress_2)
                        496         ;MOV ECO_PAGE_ADDR+01H,#LOW (delta_compress_2)
                        497         ;LCALL   eco_page_manager
000025 120000     F     498             LCALL delta_compress_2
000028 22               499         RET
                        500     
------                  501         RSEG  ?PR?delta_compress_2?MAIN
000000                  502     delta_compress_2:
                        503         USING   0
                        504     ;       
                        505     ;       for(i=2,j=2;i<54;i+=2,j++)
                        506                             ; SOURCE LINE # 72
000000 750000     F     507             MOV     i?241,#00H
000003 750002     F     508             MOV     i?241+01H,#02H
000006 750000     F     509             MOV     j?242,#00H
000009 750002     F     510             MOV     j?242+01H,#02H
00000C                  511     ?C0012:
00000C C3               512             CLR     C
00000D E500       F     513             MOV     A,i?241+01H
00000F 9436             514             SUBB    A,#036H
000011 E500       F     515             MOV     A,i?241
000013 6480             516             XRL     A,#080H
000015 9480             517             SUBB    A,#080H
000017 5065             518             JNC     ?C0015
AX51 MACRO ASSEMBLER  MAIN                                                                  05/02/09 16:05:28 PAGE     9

                        519     ;       {
                        520                             ; SOURCE LINE # 73
                        521     ;               prev = now;
                        522                             ; SOURCE LINE # 74
000019 850000     F     523             MOV     prev?245,now?244
00001C 850000     F     524             MOV     prev?245+01H,now?244+01H
                        525     ;               now = (msg[i]<<8) + msg[i+1];
                        526                             ; SOURCE LINE # 75
00001F AD00       F     527             MOV     R5,i?241+01H
000021 7400       F     528             MOV     A,#LOW (msg)
000023 2D               529             ADD     A,R5
000024 F8               530             MOV     R0,A
000025 E6               531             MOV     A,@R0
000026 FF               532             MOV     R7,A
000027 EF               533             MOV     A,R7
000028 FE               534             MOV     R6,A
000029 7400       F     535             MOV     A,#LOW (msg+01H)
00002B 2D               536             ADD     A,R5
00002C F8               537             MOV     R0,A
00002D E6               538             MOV     A,@R0
00002E FD               539             MOV     R5,A
00002F 33               540             RLC     A
000030 95E0             541             SUBB    A,ACC
000032 FC               542             MOV     R4,A
000033 E4               543             CLR     A
000034 2D               544             ADD     A,R5
000035 F500       F     545             MOV     now?244+01H,A
000037 EE               546             MOV     A,R6
000038 3C               547             ADDC    A,R4
000039 F500       F     548             MOV     now?244,A
                        549     ;               delta = now - prev;
                        550                             ; SOURCE LINE # 76
00003B C3               551             CLR     C
00003C E500       F     552             MOV     A,now?244+01H
00003E 9500       F     553             SUBB    A,prev?245+01H
000040 FD               554             MOV     R5,A
000041 E500       F     555             MOV     A,now?244
000043 9500       F     556             SUBB    A,prev?245
000045 FC               557             MOV     R4,A
000046 120000     E     558             LCALL   ?C?FCASTI
000049 7800       F     559             MOV     R0,#LOW (delta?243)
00004B 120000     E     560             LCALL   ?C?LSTIDATA
                        561     ;               log_2(delta);
                        562                             ; SOURCE LINE # 77
00004E 7800       F     563             MOV     R0,#LOW (delta?243)
000050 120000     E     564             LCALL   ?C?LLDIDATA
000053 120000     E     565             LCALL   ?C?CASTF
                        566             ;LCALL  _log_2
000056 85B300     E     567             MOV ECO_PAGE_SPI_CONN,SPI_CTRL
000059 750000     F     568         MOV ECO_PAGE_ADDR,#HIGH (_log_2)
00005C 750000     F     569         MOV ECO_PAGE_ADDR+01H,#LOW (_log_2)
00005F 120000     E     570         LCALL   eco_page_manager
                        571     ;               msg[j] = now;
                        572                             ; SOURCE LINE # 78
000062 7400       F     573             MOV     A,#LOW (msg)
000064 2500       F     574             ADD     A,j?242+01H
000066 F8               575             MOV     R0,A
000067 A600       F     576             MOV     @R0,now?244+01H
                        577     ;       }
                        578                             ; SOURCE LINE # 79
000069 7402             579             MOV     A,#02H
00006B 2500       F     580             ADD     A,i?241+01H
00006D F500       F     581             MOV     i?241+01H,A
00006F E4               582             CLR     A
000070 3500       F     583             ADDC    A,i?241
000072 F500       F     584             MOV     i?241,A
AX51 MACRO ASSEMBLER  MAIN                                                                  05/02/09 16:05:28 PAGE    10

000074 0500       F     585             INC     j?242+01H
000076 E500       F     586             MOV     A,j?242+01H
000078 7092             587             JNZ     ?C0012
00007A 0500       F     588             INC     j?242
00007C                  589     ?C0029:
00007C 808E             590             SJMP    ?C0012
                        591     ; }
                        592                             ; SOURCE LINE # 80
00007E                  593     ?C0015:
00007E 22               594             RET     
                        595     ; END OF delta_compress
                        596     
                        597     ; 
                        598     ; 
                        599     ; int main()
                        600     
------                  601             RSEG  ?PR?main?MAIN
000000                  602     main:
                        603             USING   0
                        604                             ; SOURCE LINE # 83
                        605     ; {
                        606                             ; SOURCE LINE # 84
                        607     ; 
                        608     ;       int i;
                        609     ;       int accx;
                        610     ;       store_cpu_rate(16);
                        611                             ; SOURCE LINE # 88
000000 7F10             612             MOV     R7,#010H
000002 7E00             613             MOV     R6,#00H
                        614             
                        615             ;MOV R0,#LOW (ECO_PAGE_REGISTER7)
                        616         ;MOV @R0,#010H
                        617     
                        618             ;MOV R0,#LOW (ECO_PAGE_REGISTER6)
                        619         ;MOV @R0,#00H
000004 120000     E     620             LCALL   _store_cpu_rate
                        621         ;MOV ECO_PAGE_ADDR,#HIGH (_store_cpu_rate)
                        622         ;MOV ECO_PAGE_ADDR+01H,#LOW (_store_cpu_rate)
                        623         ;LCALL   eco_page_manager
                        624     ;       /* init led */
                        625     ;       P0_DIR &= ~0x28;
                        626                             ; SOURCE LINE # 90
000007 5394D7           627             ANL     P0_DIR,#0D7H
                        628     ;       P0_ALT &= ~0x28;
                        629                             ; SOURCE LINE # 91
00000A 5395D7           630             ANL     P0_ALT,#0D7H
                        631     ; 
                        632     ; 
                        633     ;       serial_init(19200);
                        634                             ; SOURCE LINE # 94
00000D 7F00             635             MOV     R7,#00H
00000F 7E4B             636             MOV     R6,#04BH
000011 120000     E     637             LCALL   _serial_init
                        638             ;MOV R0,#LOW (ECO_PAGE_REGISTER7)
                        639         ;MOV @R0,#00H
                        640     
                        641         ;MOV R0,#LOW (ECO_PAGE_REGISTER6)
                        642         ;MOV @R0,#04BH
                        643         ;;LCALL  _store_cpu_rate
                        644         ;MOV ECO_PAGE_ADDR,#HIGH (_serial_init)
                        645         ;MOV ECO_PAGE_ADDR+01H,#LOW (_serial_init)
                        646         ;LCALL   eco_page_manager
                        647     
                        648             
                        649     ;       puts("test:");
                        650                             ; SOURCE LINE # 95
AX51 MACRO ASSEMBLER  MAIN                                                                  05/02/09 16:05:28 PAGE    11

000014 7BFF             651             MOV     R3,#0FFH
000016 7A00       F     652             MOV     R2,#HIGH (?SC_0)
000018 7900       F     653             MOV     R1,#LOW (?SC_0)
00001A 120000     E     654             LCALL   _puts
                        655     ;       int_print(test_counter);
                        656                             ; SOURCE LINE # 96
00001D AE00       F     657             MOV     R6,test_counter
00001F AF00       F     658             MOV     R7,test_counter+01H
000021 120000     E     659             LCALL   _?int_print
                        660     ;       puts("\r\n");
                        661                             ; SOURCE LINE # 97
000024 7BFF             662             MOV     R3,#0FFH
000026 7A00       F     663             MOV     R2,#HIGH (?SC_6)
000028 7900       F     664             MOV     R1,#LOW (?SC_6)
00002A 120000     E     665             LCALL   _puts
                        666     ; 
                        667     ;       for (i = 0; i < 6; i++) {
                        668                             ; SOURCE LINE # 99
00002D E4               669             CLR     A
00002E F500       F     670             MOV     i?346,A
000030 F500       F     671             MOV     i?346+01H,A
000032                  672     ?C0016:
                        673     ;               blink_led();
                        674                             ; SOURCE LINE # 100
000032 638020           675             XRL     P0,#020H
                        676     ;               mdelay(400);
                        677                             ; SOURCE LINE # 101
000035 7F90             678             MOV     R7,#090H
000037 7E01             679             MOV     R6,#01H
000039 120000     E     680             LCALL   _mdelay
                        681     ;       }
                        682                             ; SOURCE LINE # 102
00003C 0500       F     683             INC     i?346+01H
00003E E500       F     684             MOV     A,i?346+01H
000040 7002             685             JNZ     ?C0030
000042 0500       F     686             INC     i?346
000044                  687     ?C0030:
000044 C3               688             CLR     C
000045 9406             689             SUBB    A,#06H
000047 E500       F     690             MOV     A,i?346
000049 6480             691             XRL     A,#080H
00004B 9480             692             SUBB    A,#080H
00004D 40E3             693             JC      ?C0016
00004F                  694     ?C0017:
                        695     ;       /* init adc */
                        696     ;       adc_init(ADC_CLK_D8, ADC_RES_12, EXTREF);
                        697                             ; SOURCE LINE # 104
00004F 7B10             698             MOV     R3,#010H
000051 7D03             699             MOV     R5,#03H
000053 7F20             700             MOV     R7,#020H
000055 120000     E     701             LCALL   _adc_init
                        702             ;MOV R0,#LOW (ECO_PAGE_REGISTER3)
                        703         ;MOV @R0,#010H
                        704     
                        705             ;MOV R0,#LOW (ECO_PAGE_REGISTER5)
                        706         ;MOV @R0,#03H
                        707     
                        708         ;MOV R0,#LOW (ECO_PAGE_REGISTER7)
                        709         ;MOV @R0,#020H
                        710         ;;LCALL  _store_cpu_rate
                        711         ;MOV ECO_PAGE_SPI_CONN,SPI_CTRL
                        712         ;MOV ECO_PAGE_ADDR,#HIGH (_adc_init)
                        713         ;MOV ECO_PAGE_ADDR+01H,#LOW (_adc_init)
                        714         ;LCALL   eco_page_manager
                        715     ; 
                        716     ;       /* rf */
AX51 MACRO ASSEMBLER  MAIN                                                                  05/02/09 16:05:28 PAGE    12

                        717     ;       rf_init();
                        718                             ; SOURCE LINE # 107
000058 120000     E     719             LCALL   rf_init
                        720         ;MOV ECO_PAGE_SPI_CONN,SPI_CTRL
                        721         ;MOV ECO_PAGE_ADDR,#HIGH (rf_init)
                        722         ;MOV ECO_PAGE_ADDR+01H,#LOW (rf_init)
                        723         ;LCALL   eco_page_manager
                        724     ;       rf_configure(cfg);
                        725                             ; SOURCE LINE # 108
00005B AB00       F     726             MOV     R3,cfg
00005D AA00       F     727             MOV     R2,cfg+01H
00005F A900       F     728             MOV     R1,cfg+02H
000061 120000     E     729             LCALL   _rf_configure
                        730     ; 
                        731     ;       //volatile value for calculating 
                        732     ;       test_counter = 0;
                        733                             ; SOURCE LINE # 111
000064 E4               734             CLR     A
000065 F500       F     735             MOV     test_counter,A
000067 F500       F     736             MOV     test_counter+01H,A
                        737     ;       timer_counter = 0;
                        738                             ; SOURCE LINE # 112
000069 F500       F     739             MOV     timer_counter,A
00006B F500       F     740             MOV     timer_counter+01H,A
                        741     ;       flag = 0;
                        742                             ; SOURCE LINE # 113
00006D F500       F     743             MOV     flag,A
00006F F500       F     744             MOV     flag+01H,A
                        745     ;       /* init timer */
                        746     ;       // TMOD.1 TMOD.2 [1 0] 8-bit counter with auto-reload
                        747     ;       TMOD = 0x02;
                        748                             ; SOURCE LINE # 116
000071 758902           749             MOV     TMOD,#02H
                        750     ;       TH0 = 0x00;
                        751                             ; SOURCE LINE # 117
000074 F58C             752             MOV     TH0,A
                        753     ;       //enable interrupt
                        754     ;       EA = 1;
                        755                             ; SOURCE LINE # 119
000076 D2AF             756             SETB    EA
                        757     ;       //enable timer interrupt
                        758     ;       ET0 = 1;
                        759                             ; SOURCE LINE # 121
000078 D2A9             760             SETB    ET0
                        761     ;       //set to 1 to enable counting on Timer 0.               
                        762     ;       TR0 = 1;        
                        763                             ; SOURCE LINE # 123
00007A D28C             764             SETB    TR0
00007C                  765     ?C0019:
                        766     ; 
                        767     ;       while(1)
                        768                             ; SOURCE LINE # 125
                        769     ;       {
                        770                             ; SOURCE LINE # 126
                        771     ;               for(i=0;i<LEN*2;i+=2)
                        772                             ; SOURCE LINE # 127
00007C E4               773             CLR     A
00007D F500       F     774             MOV     i?346,A
00007F F500       F     775             MOV     i?346+01H,A
000081                  776     ?C0021:
000081 C3               777             CLR     C
000082 E500       F     778             MOV     A,i?346+01H
000084 9436             779             SUBB    A,#036H
000086 E500       F     780             MOV     A,i?346
000088 6480             781             XRL     A,#080H
00008A 9480             782             SUBB    A,#080H
AX51 MACRO ASSEMBLER  MAIN                                                                  05/02/09 16:05:28 PAGE    13

00008C 502E             783             JNC     ?C0022
                        784     ;               {
                        785                             ; SOURCE LINE # 128
                        786     ;                       accx = adc_read(X_AXIS);
                        787                             ; SOURCE LINE # 129
00008E 7F03             788             MOV     R7,#03H
000090 120000     E     789             LCALL   _adc_read
000093 8E00       F     790             MOV     accx?347,R6
000095 8F00       F     791             MOV     accx?347+01H,R7
                        792     ;                       msg[i] = (accx >> 8);
                        793                             ; SOURCE LINE # 130
000097 E500       F     794             MOV     A,accx?347
000099 FF               795             MOV     R7,A
00009A AE00       F     796             MOV     R6,i?346+01H
00009C 7400       F     797             MOV     A,#LOW (msg)
00009E 2E               798             ADD     A,R6
00009F F8               799             MOV     R0,A
0000A0 A607             800             MOV     @R0,AR7
                        801     ;                       msg[i+1] = accx & 0xff;
                        802                             ; SOURCE LINE # 131
0000A2 7400       F     803             MOV     A,#LOW (msg+01H)
0000A4 2E               804             ADD     A,R6
0000A5 F8               805             MOV     R0,A
0000A6 A600       F     806             MOV     @R0,accx?347+01H
                        807     ;                       mdelay(5);
                        808                             ; SOURCE LINE # 132
0000A8 7F05             809             MOV     R7,#05H
0000AA 7E00             810             MOV     R6,#00H
0000AC 120000     E     811             LCALL   _mdelay
                        812     ;               }
                        813                             ; SOURCE LINE # 133
0000AF 7402             814             MOV     A,#02H
0000B1 2500       F     815             ADD     A,i?346+01H
0000B3 F500       F     816             MOV     i?346+01H,A
0000B5 E4               817             CLR     A
0000B6 3500       F     818             ADDC    A,i?346
0000B8 F500       F     819             MOV     i?346,A
0000BA 80C5             820             SJMP    ?C0021
0000BC                  821     ?C0022:
                        822     ; 
                        823     ;               delta_compress();
                        824                             ; SOURCE LINE # 135
                        825             ;LCALL  delta_compress
0000BC 85B300     E     826         MOV ECO_PAGE_SPI_CONN,SPI_CTRL
0000BF 750000     F     827         MOV ECO_PAGE_ADDR,#HIGH (delta_compress)
0000C2 750000     F     828         MOV ECO_PAGE_ADDR+01H,#LOW (delta_compress)
0000C5 120000     E     829         LCALL   eco_page_manager
                        830     ; 
                        831     ;               if(flag == 1)
                        832                             ; SOURCE LINE # 137
0000C8 E500       F     833             MOV     A,flag+01H
0000CA 6401             834             XRL     A,#01H
0000CC 4500       F     835             ORL     A,flag
0000CE 7019             836             JNZ     ?C0024
                        837     ;               {
                        838                             ; SOURCE LINE # 138
                        839     ;                       flag = 0;
                        840                             ; SOURCE LINE # 139
0000D0 F500       F     841             MOV     flag,A
0000D2 F500       F     842             MOV     flag+01H,A
                        843     ;                       blink_led();
                        844                             ; SOURCE LINE # 140
0000D4 638020           845             XRL     P0,#020H
                        846     ;                       int_print(test_counter);
                        847                             ; SOURCE LINE # 141
0000D7 AE00       F     848             MOV     R6,test_counter
AX51 MACRO ASSEMBLER  MAIN                                                                  05/02/09 16:05:28 PAGE    14

0000D9 AF00       F     849             MOV     R7,test_counter+01H
0000DB 120000     E     850             LCALL   _?int_print
                        851     ;                       //int_print(timer_counter);
                        852     ;                       puts("\r\n");
                        853                             ; SOURCE LINE # 143
0000DE 7BFF             854             MOV     R3,#0FFH
0000E0 7A00       F     855             MOV     R2,#HIGH (?SC_6)
0000E2 7900       F     856             MOV     R1,#LOW (?SC_6)
0000E4 120000     E     857             LCALL   _puts
                        858     ;                       EA = 1;
                        859                             ; SOURCE LINE # 144
0000E7 D2AF             860             SETB    EA
                        861     ;               }
                        862                             ; SOURCE LINE # 145
0000E9                  863     ?C0024:
                        864     ; 
                        865     ;               rf_send(dst_addr, 3, msg, 20);
                        866                             ; SOURCE LINE # 147
0000E9 750000     E     867             MOV     ?_rf_send?BYTE+04H,#00H
0000EC 750000     F     868             MOV     ?_rf_send?BYTE+05H,#HIGH (msg)
0000EF 750000     F     869             MOV     ?_rf_send?BYTE+06H,#LOW (msg)
0000F2 750014     E     870             MOV     ?_rf_send?BYTE+07H,#014H
                        871             ;--------------------------
                        872         ;MOV R0,#LOW (ECO_PAGE_REGISTER3)
                        873         ;MOV @R0,#00H
                        874     ;--------------------------
                        875     ;   MOV     R2,#HIGH (dst_addr)
                        876     ;--------------------------
                        877         ;MOV R0,#LOW (ECO_PAGE_REGISTER2)
                        878         ;MOV @R0,#HIGH (dst_addr)
                        879     ;--------------------------
                        880     ;   MOV     R1,#LOW (dst_addr)
                        881     ;--------------------------
                        882         ;MOV R0,#LOW (ECO_PAGE_REGISTER1)
                        883         ;MOV @R0,#LOW (dst_addr)
                        884     ;--------------------------
                        885     ;   MOV     R5,#03H
                        886     ;--------------------------
                        887         ;MOV R0,#LOW (ECO_PAGE_REGISTER5)
                        888         ;MOV @R0,#03H
0000F5 7B00             889             MOV     R3,#00H
0000F7 7A00       F     890             MOV     R2,#HIGH (dst_addr)
0000F9 7900       F     891             MOV     R1,#LOW (dst_addr)
0000FB 7D03             892             MOV     R5,#03H
0000FD 120000     E     893             LCALL   _rf_send
                        894             ;MOV ECO_PAGE_SPI_CONN,SPI_CTRL
                        895         ;MOV ECO_PAGE_ADDR,#HIGH (_rf_send)
                        896         ;MOV ECO_PAGE_ADDR+01H,#LOW (_rf_send)
                        897         ;LCALL   eco_page_manager
                        898     ;               //mdelay(20);
                        899     ;       }
                        900                             ; SOURCE LINE # 149
000100 020000     F     901             LJMP    ?C0019
                        902     ; END OF main
                        903     
                        904             END
AX51 MACRO ASSEMBLER  MAIN                                                                  05/02/09 16:05:28 PAGE    15

SYMBOL TABLE LISTING
------ ----- -------


N A M E                                    T Y P E  V A L U E     ATTRIBUTES

?_LOG_2?BYTE. . . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?_LOG_2?MAIN
?_RF_SEND?BYTE. . . . . . . . . . . . .    D  ADDR  -------       EXT
?C0001. . . . . . . . . . . . . . . . .    C  ADDR  0019H     R   SEG=?PR?TIMER0?MAIN
?C0003. . . . . . . . . . . . . . . . .    C  ADDR  0027H     R   SEG=?PR?TIMER0?MAIN
?C0004. . . . . . . . . . . . . . . . .    C  ADDR  0031H     R   SEG=?PR?_LOG_2?MAIN
?C0006. . . . . . . . . . . . . . . . .    C  ADDR  0024H     R   SEG=?PR?_LOG_2?MAIN
?C0010. . . . . . . . . . . . . . . . .    C  ADDR  0031H     R   SEG=?PR?_LOG_2?MAIN
?C0012. . . . . . . . . . . . . . . . .    C  ADDR  000CH     R   SEG=?PR?DELTA_COMPRESS_2?MAIN
?C0015. . . . . . . . . . . . . . . . .    C  ADDR  007EH     R   SEG=?PR?DELTA_COMPRESS_2?MAIN
?C0016. . . . . . . . . . . . . . . . .    C  ADDR  0032H     R   SEG=?PR?MAIN?MAIN
?C0017. . . . . . . . . . . . . . . . .    C  ADDR  004FH     R   SEG=?PR?MAIN?MAIN
?C0019. . . . . . . . . . . . . . . . .    C  ADDR  007CH     R   SEG=?PR?MAIN?MAIN
?C0021. . . . . . . . . . . . . . . . .    C  ADDR  0081H     R   SEG=?PR?MAIN?MAIN
?C0022. . . . . . . . . . . . . . . . .    C  ADDR  00BCH     R   SEG=?PR?MAIN?MAIN
?C0024. . . . . . . . . . . . . . . . .    C  ADDR  00E9H     R   SEG=?PR?MAIN?MAIN
?C0026. . . . . . . . . . . . . . . . .    C  ADDR  0017H     R   SEG=?PR?TIMER0?MAIN
?C0027. . . . . . . . . . . . . . . . .    C  ADDR  002EH     R   SEG=?PR?_LOG_2?MAIN
?C0028. . . . . . . . . . . . . . . . .    C  ADDR  0008H     R   SEG=?PR?DELTA_COMPRESS?MAIN
?C0029. . . . . . . . . . . . . . . . .    C  ADDR  007CH     R   SEG=?PR?DELTA_COMPRESS_2?MAIN
?C0030. . . . . . . . . . . . . . . . .    C  ADDR  0044H     R   SEG=?PR?MAIN?MAIN
?C?CASTF. . . . . . . . . . . . . . . .    C  ADDR  -------       EXT
?C?FCASTI . . . . . . . . . . . . . . .    C  ADDR  -------       EXT
?C?LLDIDATA . . . . . . . . . . . . . .    C  ADDR  -------       EXT
?C?LSTIDATA . . . . . . . . . . . . . .    C  ADDR  -------       EXT
?C_INITSEG. . . . . . . . . . . . . . .    C  SEG   00001BH       REL=UNIT, ALN=BYTE
?C_STARTUP. . . . . . . . . . . . . . .    C  ADDR  -------       EXT
?CO?MAIN. . . . . . . . . . . . . . . .    C  SEG   000009H       REL=UNIT, ALN=BYTE
?DELTA_COMPRESS?BYTE. . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?DELTA_COMPRESS?MAIN
?DT?_LOG_2?MAIN . . . . . . . . . . . .    D  SEG   000002H       REL=UNIT, ALN=BYTE
?DT?DELTA_COMPRESS?MAIN . . . . . . . .    D  SEG   000008H       REL=UNIT, ALN=BYTE
?DT?MAIN. . . . . . . . . . . . . . . .    D  SEG   000018H       REL=UNIT, ALN=BYTE
?DT?MAIN?MAIN . . . . . . . . . . . . .    D  SEG   000004H       REL=UNIT, ALN=BYTE
?ID?DELTA_COMPRESS?MAIN . . . . . . . .    I  SEG   000004H       REL=UNIT, ALN=BYTE
?ID?MAIN. . . . . . . . . . . . . . . .    I  SEG   000039H       REL=UNIT, ALN=BYTE
?MAIN?BYTE. . . . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?MAIN?MAIN
?PR?_LOG_2?MAIN . . . . . . . . . . . .    C  SEG   000032H       REL=UNIT, ALN=BYTE
?PR?DELTA_COMPRESS?MAIN . . . . . . . .    C  SEG   000029H       REL=UNIT, ALN=BYTE
?PR?DELTA_COMPRESS_2?MAIN . . . . . . .    C  SEG   00007FH       REL=UNIT, ALN=BYTE
?PR?MAIN?MAIN . . . . . . . . . . . . .    C  SEG   000103H       REL=UNIT, ALN=BYTE
?PR?TIMER0?MAIN . . . . . . . . . . . .    C  SEG   00002CH       REL=UNIT, ALN=BYTE
?SC_0 . . . . . . . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?CO?MAIN
?SC_6 . . . . . . . . . . . . . . . . .    C  ADDR  0006H     R   SEG=?CO?MAIN
_?INT_PRINT . . . . . . . . . . . . . .    C  ADDR  -------       EXT
_ADC_INIT . . . . . . . . . . . . . . .    C  ADDR  -------       EXT
_ADC_READ . . . . . . . . . . . . . . .    C  ADDR  -------       EXT
_LOG10. . . . . . . . . . . . . . . . .    C  ADDR  -------       EXT
_LOG_2. . . . . . . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?_LOG_2?MAIN
_MDELAY . . . . . . . . . . . . . . . .    C  ADDR  -------       EXT
_PUTS . . . . . . . . . . . . . . . . .    C  ADDR  -------       EXT
_RF_CONFIGURE . . . . . . . . . . . . .    C  ADDR  -------       EXT
_RF_SEND. . . . . . . . . . . . . . . .    C  ADDR  -------       EXT
_SERIAL_INIT. . . . . . . . . . . . . .    C  ADDR  -------       EXT
_STORE_CPU_RATE . . . . . . . . . . . .    C  ADDR  -------       EXT
AC. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.6   A   
ACC . . . . . . . . . . . . . . . . . .    D  ADDR  00E0H     A   
ACCX?347. . . . . . . . . . . . . . . .    D  ADDR  0002H     R   SEG=?DT?MAIN?MAIN
ADCCON. . . . . . . . . . . . . . . . .    D  ADDR  00A1H     A   
ADCDATAH. . . . . . . . . . . . . . . .    D  ADDR  00A2H     A   
ADCDATAL. . . . . . . . . . . . . . . .    D  ADDR  00A3H     A   
ADCSTATIC . . . . . . . . . . . . . . .    D  ADDR  00A4H     A   
AX51 MACRO ASSEMBLER  MAIN                                                                  05/02/09 16:05:28 PAGE    16

AR7 . . . . . . . . . . . . . . . . . .    D  ADDR  0007H     A   
B . . . . . . . . . . . . . . . . . . .    D  ADDR  00F0H     A   
C_T2. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.1   A   
CE. . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.6   A   
CFG . . . . . . . . . . . . . . . . . .    D  ADDR  0006H     R   SEG=?DT?MAIN
CK_CTRL . . . . . . . . . . . . . . . .    D  ADDR  00B6H     A   
CKCON . . . . . . . . . . . . . . . . .    D  ADDR  008EH     A   
CLK1. . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.1   A   
CLK2. . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.5   A   
CP_RL2. . . . . . . . . . . . . . . . .    B  ADDR  00C8H.0   A   
CPRL2 . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.0   A   
CS. . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.3   A   
CT2 . . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.1   A   
CY. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.7   A   
DATA? . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.0   A   
DELTA?243 . . . . . . . . . . . . . . .    I  ADDR  0000H     R   SEG=?ID?DELTA_COMPRESS?MAIN
DELTA_COMPRESS. . . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?DELTA_COMPRESS?MAIN
DELTA_COMPRESS_2. . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?DELTA_COMPRESS_2?MAIN
DEV_OFFSET. . . . . . . . . . . . . . .    D  ADDR  00BEH     A   
DIN0. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.2   A   
DIO0. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.0   A   
DIO1. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.1   A   
DIO2. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.0   A   
DIO3. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.1   A   
DIO4. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.2   A   
DIO5. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.3   A   
DIO6. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.4   A   
DIO7. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.5   A   
DIO8. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.6   A   
DIO9. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.7   A   
DOUT2 . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.4   A   
DPH . . . . . . . . . . . . . . . . . .    D  ADDR  0083H     A   
DPH0. . . . . . . . . . . . . . . . . .    D  ADDR  0083H     A   
DPH1. . . . . . . . . . . . . . . . . .    D  ADDR  0085H     A   
DPL . . . . . . . . . . . . . . . . . .    D  ADDR  0082H     A   
DPL0. . . . . . . . . . . . . . . . . .    D  ADDR  0082H     A   
DPL1. . . . . . . . . . . . . . . . . .    D  ADDR  0084H     A   
DPS . . . . . . . . . . . . . . . . . .    D  ADDR  0086H     A   
DR1 . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.2   A   
DR2 . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.6   A   
DR2_CE. . . . . . . . . . . . . . . . .    B  ADDR  00A0H.6   A   
DST_ADDR. . . . . . . . . . . . . . . .    I  ADDR  0036H     R   SEG=?ID?MAIN
EA. . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.7   A   
ECO_PAGE_ADDR . . . . . . . . . . . . .    D  ADDR  -------       EXT
ECO_PAGE_MANAGER. . . . . . . . . . . .    C  ADDR  -------       EXT
ECO_PAGE_REGISTER1. . . . . . . . . . .    I  ADDR  -------       EXT
ECO_PAGE_REGISTER2. . . . . . . . . . .    I  ADDR  -------       EXT
ECO_PAGE_REGISTER3. . . . . . . . . . .    I  ADDR  -------       EXT
ECO_PAGE_REGISTER4. . . . . . . . . . .    I  ADDR  -------       EXT
ECO_PAGE_REGISTER5. . . . . . . . . . .    I  ADDR  -------       EXT
ECO_PAGE_REGISTER6. . . . . . . . . . .    I  ADDR  -------       EXT
ECO_PAGE_REGISTER7. . . . . . . . . . .    I  ADDR  -------       EXT
ECO_PAGE_SPI_CONN . . . . . . . . . . .    D  ADDR  -------       EXT
EICON . . . . . . . . . . . . . . . . .    D  ADDR  00D8H     A   
EIE . . . . . . . . . . . . . . . . . .    D  ADDR  00E8H     A   
EIP . . . . . . . . . . . . . . . . . .    D  ADDR  00F8H     A   
ES. . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.4   A   
ET0 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.1   A   
ET1 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.3   A   
ET2 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.5   A   
EWDI. . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.4   A   
EX0 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.0   A   
EX1 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.2   A   
EX2 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.0   A   
EX3 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.1   A   
EX4 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.2   A   
AX51 MACRO ASSEMBLER  MAIN                                                                  05/02/09 16:05:28 PAGE    17

EX5 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.3   A   
EXEN2 . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.3   A   
EXF2. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.6   A   
EXIF. . . . . . . . . . . . . . . . . .    D  ADDR  0091H     A   
F0. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.5   A   
F1. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.1   A   
FLAG. . . . . . . . . . . . . . . . . .    D  ADDR  0002H     R   SEG=?DT?MAIN
I?241 . . . . . . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?DELTA_COMPRESS?MAIN
I?346 . . . . . . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?MAIN?MAIN
IE. . . . . . . . . . . . . . . . . . .    D  ADDR  00A8H     A   
IE0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.1   A   
IE1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.3   A   
INT0_N. . . . . . . . . . . . . . . . .    B  ADDR  0080H.3   A   
INT1_N. . . . . . . . . . . . . . . . .    B  ADDR  0080H.4   A   
IP. . . . . . . . . . . . . . . . . . .    D  ADDR  00B8H     A   
IT0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.0   A   
IT1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.2   A   
J?242 . . . . . . . . . . . . . . . . .    D  ADDR  0002H     R   SEG=?DT?DELTA_COMPRESS?MAIN
MAIN. . . . . . . . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?MAIN?MAIN
MPAGE . . . . . . . . . . . . . . . . .    D  ADDR  0092H     A   
MSG . . . . . . . . . . . . . . . . . .    I  ADDR  0000H     R   SEG=?ID?MAIN
NOW?244 . . . . . . . . . . . . . . . .    D  ADDR  0004H     R   SEG=?DT?DELTA_COMPRESS?MAIN
OV. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.2   A   
P . . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.0   A   
P0. . . . . . . . . . . . . . . . . . .    D  ADDR  0080H     A   
P0_0. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.0   A   
P0_1. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.1   A   
P0_2. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.2   A   
P0_3. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.3   A   
P0_4. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.4   A   
P0_5. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.5   A   
P0_6. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.6   A   
P0_7. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.7   A   
P0_ALT. . . . . . . . . . . . . . . . .    D  ADDR  0095H     A   
P0_DIR. . . . . . . . . . . . . . . . .    D  ADDR  0094H     A   
P1. . . . . . . . . . . . . . . . . . .    D  ADDR  0090H     A   
P1_0. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.0   A   
P1_1. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.1   A   
P1_2. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.2   A   
P1_ALT. . . . . . . . . . . . . . . . .    D  ADDR  0097H     A   
P1_DIR. . . . . . . . . . . . . . . . .    D  ADDR  0096H     A   
PCON. . . . . . . . . . . . . . . . . .    D  ADDR  0087H     A   
PREV?245. . . . . . . . . . . . . . . .    D  ADDR  0006H     R   SEG=?DT?DELTA_COMPRESS?MAIN
PS. . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.4   A   
PSW . . . . . . . . . . . . . . . . . .    D  ADDR  00D0H     A   
PT0 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.1   A   
PT1 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.3   A   
PT2 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.5   A   
PWDI. . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.4   A   
PWM . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.7   A   
PWMCON. . . . . . . . . . . . . . . . .    D  ADDR  00A9H     A   
PWMDUTY . . . . . . . . . . . . . . . .    D  ADDR  00AAH     A   
PWR_UP. . . . . . . . . . . . . . . . .    B  ADDR  00A0H.7   A   
PX0 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.0   A   
PX1 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.2   A   
PX2 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.0   A   
PX3 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.1   A   
PX4 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.2   A   
PX5 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.3   A   
RADIO . . . . . . . . . . . . . . . . .    D  ADDR  00A0H     A   
RB8 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.2   A   
RCAP2H. . . . . . . . . . . . . . . . .    D  ADDR  00CBH     A   
RCAP2L. . . . . . . . . . . . . . . . .    D  ADDR  00CAH     A   
RCLK. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.5   A   
REGX_CTRL . . . . . . . . . . . . . . .    D  ADDR  00ADH     A   
REGX_LSB. . . . . . . . . . . . . . . .    D  ADDR  00ACH     A   
AX51 MACRO ASSEMBLER  MAIN                                                                  05/02/09 16:05:28 PAGE    18

REGX_MSB. . . . . . . . . . . . . . . .    D  ADDR  00ABH     A   
REN . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.4   A   
RF_DATA . . . . . . . . . . . . . . . .    D  ADDR  0009H     R   SEG=?DT?MAIN
RF_INIT . . . . . . . . . . . . . . . .    C  ADDR  -------       EXT
RI. . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.0   A   
RS0 . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.3   A   
RS1 . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.4   A   
RSTREAS . . . . . . . . . . . . . . . .    D  ADDR  00B1H     A   
RXD . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.1   A   
SBUF. . . . . . . . . . . . . . . . . .    D  ADDR  0099H     A   
SCON. . . . . . . . . . . . . . . . . .    D  ADDR  0098H     A   
SM0 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.7   A   
SM1 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.6   A   
SM2 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.5   A   
SP. . . . . . . . . . . . . . . . . . .    D  ADDR  0081H     A   
SPC_FNC . . . . . . . . . . . . . . . .    D  ADDR  008FH     A   
SPI_CTRL. . . . . . . . . . . . . . . .    D  ADDR  00B3H     A   
SPI_DATA. . . . . . . . . . . . . . . .    D  ADDR  00B2H     A   
SPICLK. . . . . . . . . . . . . . . . .    D  ADDR  00B4H     A   
T0. . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.5   A   
T1. . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.6   A   
T1_1V2. . . . . . . . . . . . . . . . .    D  ADDR  00BCH     A   
T2. . . . . . . . . . . . . . . . . . .    B  ADDR  0090H.0   A   
T2_1V2. . . . . . . . . . . . . . . . .    D  ADDR  00BDH     A   
T2CON . . . . . . . . . . . . . . . . .    D  ADDR  00C8H     A   
TB8 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.3   A   
TCLK. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.4   A   
TCON. . . . . . . . . . . . . . . . . .    D  ADDR  0088H     A   
TEST_COUNTER. . . . . . . . . . . . . .    D  ADDR  0004H     R   SEG=?DT?MAIN
TEST_MODE . . . . . . . . . . . . . . .    D  ADDR  00B7H     A   
TF0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.5   A   
TF1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.7   A   
TF2 . . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.7   A   
TH0 . . . . . . . . . . . . . . . . . .    D  ADDR  008CH     A   
TH1 . . . . . . . . . . . . . . . . . .    D  ADDR  008DH     A   
TH2 . . . . . . . . . . . . . . . . . .    D  ADDR  00CDH     A   
TI. . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.1   A   
TICK_DV . . . . . . . . . . . . . . . .    D  ADDR  00B5H     A   
TIMER0. . . . . . . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?TIMER0?MAIN
TIMER_COUNTER . . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?MAIN
TL0 . . . . . . . . . . . . . . . . . .    D  ADDR  008AH     A   
TL1 . . . . . . . . . . . . . . . . . .    D  ADDR  008BH     A   
TL2 . . . . . . . . . . . . . . . . . .    D  ADDR  00CCH     A   
TMOD. . . . . . . . . . . . . . . . . .    D  ADDR  0089H     A   
TR0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.4   A   
TR1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.6   A   
TR2 . . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.2   A   
TXD . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.2   A   
WDTI. . . . . . . . . . . . . . . . . .    B  ADDR  00D8H.3   A   
X?140 . . . . . . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?_LOG_2?MAIN


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S).
