AX51 MACRO ASSEMBLER  MAIN                                                                  05/02/09 01:30:54 PAGE     1


MACRO ASSEMBLER AX51 V3.06a
OBJECT MODULE PLACED IN .\main.obj
ASSEMBLER INVOKED BY: C:\Keil\C51\BIN\AX51.exe .\main.src EP DEBUG SYMBOLS OJ(.\main.obj) PR(.\main.ls1) 

LOC    OBJ             LINE     SOURCE

                          1     ; ./main.src generated from: .\main.c
                          2     ; COMPILER INVOKED BY:
                          3     ;        C:\Keil\C51\BIN\C51.exe .\main.c BROWSE DEBUG CODE LISTINCLUDE SYMBOLS PREPRINT
                                ROM(LARGE) INCDIR(../../Include) SRC(./main.src)
                          4     
                          5     $nomod51 
                          6     
                          7     NAME    MAIN
                          8     
 00A0.7                   9     PWR_UP  BIT     0A0H.7
 0080                    10     P0      DATA    080H
 0090                    11     P1      DATA    090H
 00D0.6                  12     AC      BIT     0D0H.6
 0080.5                  13     T0      BIT     080H.5
 00B3                    14     SPI_CTRL        DATA    0B3H
 0080.6                  15     T1      BIT     080H.6
 00A8.7                  16     EA      BIT     0A8H.7
 0090.0                  17     T2      BIT     090H.0
 00A0.6                  18     CE      BIT     0A0H.6
 00BE                    19     DEV_OFFSET      DATA    0BEH
 00A0.1                  20     CLK1    BIT     0A0H.1
 0090.2                  21     DIN0    BIT     090H.2
 00A0.5                  22     CLK2    BIT     0A0H.5
 0090.0                  23     DIO0    BIT     090H.0
 0083                    24     DPH0    DATA    083H
 0090.1                  25     DIO1    BIT     090H.1
 00A8                    26     IE      DATA    0A8H
 0085                    27     DPH1    DATA    085H
 0080.0                  28     DIO2    BIT     080H.0
 0080.1                  29     DIO3    BIT     080H.1
 0080.0                  30     P0_0    BIT     080H.0
 0090.0                  31     P1_0    BIT     090H.0
 0080.2                  32     DIO4    BIT     080H.2
 0080.1                  33     P0_1    BIT     080H.1
 0082                    34     DPL0    DATA    082H
 0090.1                  35     P1_1    BIT     090H.1
 0080.3                  36     DIO5    BIT     080H.3
 0080.2                  37     P0_2    BIT     080H.2
 0084                    38     DPL1    DATA    084H
 0090.2                  39     P1_2    BIT     090H.2
 0080.4                  40     DIO6    BIT     080H.4
 0080.3                  41     P0_3    BIT     080H.3
 0080.5                  42     DIO7    BIT     080H.5
 0080.4                  43     P0_4    BIT     080H.4
 00A4                    44     ADCSTATIC       DATA    0A4H
 0080.6                  45     DIO8    BIT     080H.6
 0080.5                  46     P0_5    BIT     080H.5
 00C8.6                  47     EXF2    BIT     0C8H.6
 00A0.3                  48     CS      BIT     0A0H.3
 0080.7                  49     DIO9    BIT     080H.7
 0080.6                  50     P0_6    BIT     080H.6
 0080.7                  51     P0_7    BIT     080H.7
 00A8.4                  52     ES      BIT     0A8H.4
 00B8                    53     IP      DATA    0B8H
 00A0.0                  54     DATA?   BIT     0A0H.0
 0098.0                  55     RI      BIT     098H.0
 00D0.7                  56     CY      BIT     0D0H.7
 0098.1                  57     TI      BIT     098H.1
AX51 MACRO ASSEMBLER  MAIN                                                                  05/02/09 01:30:54 PAGE     2

 00BC                    58     T1_1V2  DATA    0BCH
 008F                    59     SPC_FNC DATA    08FH
 00BD                    60     T2_1V2  DATA    0BDH
 00CB                    61     RCAP2H  DATA    0CBH
 00B8.4                  62     PS      BIT     0B8H.4
 0081                    63     SP      DATA    081H
 00D0.2                  64     OV      BIT     0D0H.2
 00B6                    65     CK_CTRL DATA    0B6H
 00CA                    66     RCAP2L  DATA    0CAH
 00B5                    67     TICK_DV DATA    0B5H
 00B1                    68     RSTREAS DATA    0B1H
 00C8.1                  69     C_T2    BIT     0C8H.1
 00E8.4                  70     EWDI    BIT     0E8H.4
 00A1                    71     ADCCON  DATA    0A1H
 00C8.5                  72     RCLK    BIT     0C8H.5
 00A2                    73     ADCDATAH        DATA    0A2H
 0091                    74     EXIF    DATA    091H
 00C8.4                  75     TCLK    BIT     0C8H.4
 00A0.6                  76     DR2_CE  BIT     0A0H.6
 00A3                    77     ADCDATAL        DATA    0A3H
 0099                    78     SBUF    DATA    099H
 0087                    79     PCON    DATA    087H
 0098                    80     SCON    DATA    098H
 00F8.4                  81     PWDI    BIT     0F8H.4
 0089                    82     TMOD    DATA    089H
 0088                    83     TCON    DATA    088H
 00D8.3                  84     WDTI    BIT     0D8H.3
 00AA                    85     PWMDUTY DATA    0AAH
 0088.1                  86     IE0     BIT     088H.1
 0088.3                  87     IE1     BIT     088H.3
 0094                    88     P0_DIR  DATA    094H
 00F0                    89     B       DATA    0F0H
 0096                    90     P1_DIR  DATA    096H
 0095                    91     P0_ALT  DATA    095H
 0097                    92     P1_ALT  DATA    097H
 00C8.0                  93     CP_RL2  BIT     0C8H.0
 00A0.2                  94     DR1     BIT     0A0H.2
 00E0                    95     ACC     DATA    0E0H
 00A0.6                  96     DR2     BIT     0A0H.6
 00B7                    97     TEST_MODE       DATA    0B7H
 00B4                    98     SPICLK  DATA    0B4H
 00C8.1                  99     CT2     BIT     0C8H.1
 00A8.1                 100     ET0     BIT     0A8H.1
 00A8.3                 101     ET1     BIT     0A8H.3
 0088.5                 102     TF0     BIT     088H.5
 0080.3                 103     INT0_N  BIT     080H.3
 00A8.5                 104     ET2     BIT     0A8H.5
 0088.7                 105     TF1     BIT     088H.7
 0080.4                 106     INT1_N  BIT     080H.4
 00C8.7                 107     TF2     BIT     0C8H.7
 0098.2                 108     RB8     BIT     098H.2
 008C                   109     TH0     DATA    08CH
 00A8.0                 110     EX0     BIT     0A8H.0
 0088.0                 111     IT0     BIT     088H.0
 008D                   112     TH1     DATA    08DH
 00A8.2                 113     EX1     BIT     0A8H.2
 0098.3                 114     TB8     BIT     098H.3
 0088.2                 115     IT1     BIT     088H.2
 00CD                   116     TH2     DATA    0CDH
 00AD                   117     REGX_CTRL       DATA    0ADH
 00E8.0                 118     EX2     BIT     0E8H.0
 00D0.0                 119     P       BIT     0D0H.0
 00E8.1                 120     EX3     BIT     0E8H.1
 0098.7                 121     SM0     BIT     098H.7
 008A                   122     TL0     DATA    08AH
 00E8.2                 123     EX4     BIT     0E8H.2
AX51 MACRO ASSEMBLER  MAIN                                                                  05/02/09 01:30:54 PAGE     3

 0098.6                 124     SM1     BIT     098H.6
 008B                   125     TL1     DATA    08BH
 00E8.3                 126     EX5     BIT     0E8H.3
 0098.5                 127     SM2     BIT     098H.5
 00CC                   128     TL2     DATA    0CCH
 00E8                   129     EIE     DATA    0E8H
 00B8.1                 130     PT0     BIT     0B8H.1
 00D0.3                 131     RS0     BIT     0D0H.3
 00B8.3                 132     PT1     BIT     0B8H.3
 00D0.4                 133     RS1     BIT     0D0H.4
 00B8.5                 134     PT2     BIT     0B8H.5
 0088.4                 135     TR0     BIT     088H.4
 00A9                   136     PWMCON  DATA    0A9H
 0088.6                 137     TR1     BIT     088H.6
 00C8.2                 138     TR2     BIT     0C8H.2
 00B8.0                 139     PX0     BIT     0B8H.0
 00B8.2                 140     PX1     BIT     0B8H.2
 00F8.0                 141     PX2     BIT     0F8H.0
 00F8.1                 142     PX3     BIT     0F8H.1
 00F8.2                 143     PX4     BIT     0F8H.2
 0083                   144     DPH     DATA    083H
 00F8.3                 145     PX5     BIT     0F8H.3
 00F8                   146     EIP     DATA    0F8H
 0082                   147     DPL     DATA    082H
 00C8.3                 148     EXEN2   BIT     0C8H.3
 00C8.0                 149     CPRL2   BIT     0C8H.0
 0098.4                 150     REN     BIT     098H.4
 00C8                   151     T2CON   DATA    0C8H
 0086                   152     DPS     DATA    086H
 00B2                   153     SPI_DATA        DATA    0B2H
 0092                   154     MPAGE   DATA    092H
 0080.1                 155     RXD     BIT     080H.1
 00A0.4                 156     DOUT2   BIT     0A0H.4
 00D8                   157     EICON   DATA    0D8H
 008E                   158     CKCON   DATA    08EH
 0080.2                 159     TXD     BIT     080H.2
 00A0                   160     RADIO   DATA    0A0H
 0080.7                 161     PWM     BIT     080H.7
 00D0.5                 162     F0      BIT     0D0H.5
 00D0.1                 163     F1      BIT     0D0H.1
 00AC                   164     REGX_LSB        DATA    0ACH
 00D0                   165     PSW     DATA    0D0H
 00AB                   166     REGX_MSB        DATA    0ABH
------                  167     ?PR?timer0?MAIN      SEGMENT CODE 
------                  168     ?PR?_log_2?MAIN      SEGMENT CODE 
------                  169     ?PR?delta_compress?MAIN                  SEGMENT CODE 
------                  170     ?DT?delta_compress?MAIN                  SEGMENT DATA OVERLAYABLE 
------                  171     ?PR?delta_compress_2?MAIN                  SEGMENT CODE 
------                  172     ?PR?main?MAIN        SEGMENT CODE 
------                  173     ?DT?main?MAIN        SEGMENT DATA OVERLAYABLE 
------                  174     ?CO?MAIN             SEGMENT CODE 
------                  175     ?C_INITSEG           SEGMENT CODE 
------                  176     ?DT?MAIN             SEGMENT DATA 
------                  177     ?ID?MAIN             SEGMENT IDATA 
------                  178     ?ID?delta_compress?MAIN                  SEGMENT IDATA OVERLAYABLE 
                        179             EXTRN   CODE (_mdelay)
                        180             EXTRN   CODE (_rf_configure)
                        181             EXTRN   CODE (_serial_init)
                        182             EXTRN   CODE (_adc_read)
                        183             EXTRN   CODE (_adc_init)
                        184             EXTRN   CODE (_puts)
                        185             EXTRN   CODE (_?int_print)
                        186             EXTRN   CODE (_rf_send)
                        187             EXTRN   DATA (?_rf_send?BYTE)
                        188             EXTRN   CODE (_store_cpu_rate)
                        189             EXTRN   CODE (rf_init)
AX51 MACRO ASSEMBLER  MAIN                                                                  05/02/09 01:30:54 PAGE     4

                        190             EXTRN   CODE (?C?FCASTI)
                        191             EXTRN   CODE (?C?LSTIDATA)
                        192             EXTRN   CODE (?C?LLDIDATA)
                        193             EXTRN   CODE (?C?CASTF)
                        194             EXTRN   CODE (?C_STARTUP)
                        195     
                        196             EXTRN   CODE (eco_page_manager)
                        197         EXTRN   DATA (ECO_PAGE_ADDR)
                        198         EXTRN   DATA (ECO_PAGE_SPI_CONN)
                        199         EXTRN   IDATA (ECO_PAGE_REGISTER1)
                        200         EXTRN   IDATA (ECO_PAGE_REGISTER2)
                        201         EXTRN   IDATA (ECO_PAGE_REGISTER3)
                        202         EXTRN   IDATA (ECO_PAGE_REGISTER4)
                        203         EXTRN   IDATA (ECO_PAGE_REGISTER5)
                        204         EXTRN   IDATA (ECO_PAGE_REGISTER6)
                        205         EXTRN   IDATA (ECO_PAGE_REGISTER7)
                        206     
                        207             PUBLIC  rf_data
                        208             PUBLIC  dst_addr
                        209             PUBLIC  msg
                        210             PUBLIC  cfg
                        211             PUBLIC  test_counter
                        212             PUBLIC  flag
                        213             PUBLIC  timer_counter
                        214             PUBLIC  main
                        215             PUBLIC  delta_compress
                        216             PUBLIC  delta_compress_2
                        217             PUBLIC  _log_2
                        218             PUBLIC  timer0
                        219     
------                  220             RSEG  ?DT?main?MAIN
000000                  221     ?main?BYTE:
000000                  222               i?346:   DS   2
000002                  223             ORG  2
000002                  224            accx?347:   DS   2
                        225     
------                  226             RSEG  ?DT?delta_compress?MAIN
000000                  227     ?delta_compress?BYTE:
000000                  228               i?241:   DS   2
000002                  229             ORG  2
000002                  230               j?242:   DS   2
000004                  231             ORG  4
000004                  232             now?244:   DS   2
000006                  233             ORG  6
000006                  234            prev?245:   DS   2
                        235     
------                  236             RSEG  ?DT?MAIN
000000                  237       timer_counter:   DS   2
000002                  238                flag:   DS   2
000004                  239        test_counter:   DS   2
000006                  240                 cfg:   DS   3
000009                  241             rf_data:   DS   15
                        242     
------                  243             RSEG  ?ID?MAIN
000000                  244                 msg:   DS   54
000036                  245            dst_addr:   DS   3
                        246     
------                  247             RSEG  ?ID?delta_compress?MAIN
000000                  248           delta?243:   DS   4
                        249     
------                  250             RSEG  ?CO?MAIN
000000                  251     ?SC_0:
000000 74657374         252             DB  't' ,'e' ,'s' ,'t' ,':' ,000H
000004 3A00                     
                        253     
000006                  254     ?SC_6:
AX51 MACRO ASSEMBLER  MAIN                                                                  05/02/09 01:30:54 PAGE     5

000006 0D0A00           255             DB  00DH,00AH,000H
                        256     
                        257     
------                  258             RSEG  ?C_INITSEG
000000 0F               259             DB      00FH
000001 00         F     260             DB      rf_data
000002 00               261             DB      000H
000003 A0               262             DB      0A0H
000004 00               263             DB      000H
000005 00               264             DB      000H
000006 00               265             DB      000H
000007 00               266             DB      000H
000008 00               267             DB      000H
000009 F2               268             DB      0F2H
00000A F2               269             DB      0F2H
00000B F2               270             DB      0F2H
00000C F2               271             DB      0F2H
00000D F2               272             DB      0F2H
00000E 63               273             DB      063H
00000F 6F               274             DB      06FH
000010 EC               275             DB      0ECH
                        276     
000011 03               277             DB      003H
000012 00         F     278             DB      cfg
000013 00               279             DB      000H
000014 0000       F     280             DW      rf_data + 0
                        281     
000016 03               282             DB      003H
000017 00         F     283             DB      dst_addr
000018 F1               284             DB      0F1H
000019 F1               285             DB      0F1H
00001A F1               286             DB      0F1H
                        287     
                        288     ; #include "Eco/reg24e1.h"
                        289     ; #include "Eco/eco_sys.h"
                        290     ; #include "utils/utils.h"
                        291     ; #include "serial/serial.h"
                        292     ; #include "isr/isr_rf.h"
                        293     ; #include "eeprom/eeprom.h"
                        294     ; #include "eco_page.h"
                        295     ; #include "adc/adc.h"
                        296     ; #include <math.h>
                        297     ; 
                        298     ; #define LEN 27
                        299     ; struct rf_config rf_data = { {0x00}, /* data2 width */
                        300     ;     {0xA0}, /* data1 width */ 
                        301     ;     {0x00, 0x00, 0x00, 0x00, 0x00}, /* addr2 */
                        302     ;     {0xF2, 0xF2, 0xF2, 0xF2, 0xF2}, /* addr1, host addr */
                        303     ;     {0x63}, /* 24-bit address, 16-bit CRC */
                        304     ;     {0x6f, 0xEC} };
                        305     ; struct rf_config *cfg = &rf_data;
                        306     ; 
                        307     ; //struct rf_config *cfg = &rf_data;
                        308     ; char idata dst_addr[3] = { 0xF1, 0xF1, 0xF1 };
                        309     ; char idata msg[54];
                        310     ; 
                        311     ; volatile unsigned int test_counter;
                        312     ; volatile unsigned int flag;
                        313     ; volatile unsigned int timer_counter;
                        314     ; 
00000B                  315     CSEG    AT      0000BH
00000B 020000     F     316             LJMP    timer0
                        317     
                        318     ; void timer0() interrupt 1
                        319     
------                  320             RSEG  ?PR?timer0?MAIN
AX51 MACRO ASSEMBLER  MAIN                                                                  05/02/09 01:30:54 PAGE     6

                        321             USING   0
000000                  322     timer0:
000000 C0E0             323             PUSH    ACC
000002 C0D0             324             PUSH    PSW
                        325                             ; SOURCE LINE # 28
                        326     ; {
                        327     ;       if(timer_counter < 5000)
                        328                             ; SOURCE LINE # 30
000004 C3               329             CLR     C
000005 E500       F     330             MOV     A,timer_counter+01H
000007 9488             331             SUBB    A,#088H
000009 E500       F     332             MOV     A,timer_counter
00000B 9413             333             SUBB    A,#013H
00000D 500A             334             JNC     ?C0001
                        335     ;       {
                        336                             ; SOURCE LINE # 31
                        337     ;               timer_counter++;
                        338                             ; SOURCE LINE # 32
00000F 0500       F     339             INC     timer_counter+01H
000011 E500       F     340             MOV     A,timer_counter+01H
000013 7012             341             JNZ     ?C0003
000015 0500       F     342             INC     timer_counter
000017                  343     ?C0025:
                        344     ;       }
                        345                             ; SOURCE LINE # 33
000017 800E             346             SJMP    ?C0003
000019                  347     ?C0001:
                        348     ;       else
                        349     ;       {
                        350                             ; SOURCE LINE # 35
                        351     ;               timer_counter = 0;
                        352                             ; SOURCE LINE # 36
000019 750000     F     353             MOV     timer_counter,#00H
00001C 750000     F     354             MOV     timer_counter+01H,#00H
                        355     ;               flag = 1;
                        356                             ; SOURCE LINE # 37
00001F 750000     F     357             MOV     flag,#00H
000022 750001     F     358             MOV     flag+01H,#01H
                        359     ;               EA = 0;
                        360                             ; SOURCE LINE # 38
000025 C2AF             361             CLR     EA
                        362     ;       }       
                        363                             ; SOURCE LINE # 39
                        364     ;       
                        365     ; }
                        366                             ; SOURCE LINE # 41
000027                  367     ?C0003:
000027 D0D0             368             POP     PSW
000029 D0E0             369             POP     ACC
00002B 32               370             RETI    
                        371     ; END OF timer0
                        372     
                        373     ; 
                        374     ; int log_2(int x)
                        375     
------                  376             RSEG  ?PR?_log_2?MAIN
000000                  377     _log_2:
                        378             USING   0
                        379                             ; SOURCE LINE # 43
                        380     ;---- Variable 'x?140' assigned to Register 'R6/R7' ----
                        381     ; {
                        382                             ; SOURCE LINE # 44
                        383     ;       //EA = 0;       
                        384     ;       if( x > 0)
                        385                             ; SOURCE LINE # 46
000000 D3               386             SETB    C
AX51 MACRO ASSEMBLER  MAIN                                                                  05/02/09 01:30:54 PAGE     7

000001 EF               387             MOV     A,R7
000002 9400             388             SUBB    A,#00H
000004 EE               389             MOV     A,R6
000005 6480             390             XRL     A,#080H
000007 9480             391             SUBB    A,#080H
000009 400A             392             JC      ?C0004
                        393     ;       {
                        394                             ; SOURCE LINE # 47
00000B                  395     ?C0005:
                        396     ;               //return (log10(x))/(log10(2.0)) + 1;
                        397     ;               while(x--)
                        398                             ; SOURCE LINE # 49
00000B EF               399             MOV     A,R7
00000C 1F               400             DEC     R7
00000D AC06             401             MOV     R4,AR6
00000F 7001             402             JNZ     ?C0026
000011 1E               403             DEC     R6
000012                  404     ?C0026:
000012 4C               405             ORL     A,R4
000013 70F6             406             JNZ     ?C0005
                        407     ;               ;
                        408     ;       }
                        409                             ; SOURCE LINE # 51
000015                  410     ?C0004:
                        411     ;       else if(x == 0)
                        412                             ; SOURCE LINE # 52
                        413     ;       {
                        414                             ; SOURCE LINE # 53
                        415     ;               return ;
                        416     ;       }
                        417                             ; SOURCE LINE # 55
                        418     ;       else
                        419     ;       {
                        420                             ; SOURCE LINE # 57
                        421     ;               //return -(log10(-x))/(log10(2.0)) + 2;
                        422     ;               return ;        
                        423     ;       }
                        424                             ; SOURCE LINE # 60
                        425     ; }
                        426                             ; SOURCE LINE # 61
000015                  427     ?C0009:
000015 22               428             RET     
                        429     ; END OF _log_2
                        430     
                        431     ; 
                        432     ; void delta_compress()
                        433     
------                  434             RSEG  ?PR?delta_compress?MAIN
000000                  435     delta_compress:
                        436             USING   0
                        437                             ; SOURCE LINE # 63
                        438     ; {
                        439                             ; SOURCE LINE # 64
                        440     ;       int i,j;
                        441     ;       float idata delta;
                        442     ;       int now,prev;
                        443     ;       test_counter++;
                        444                             ; SOURCE LINE # 68
000000 0500       F     445             INC     test_counter+01H
000002 E500       F     446             MOV     A,test_counter+01H
000004 7002             447             JNZ     ?C0027
000006 0500       F     448             INC     test_counter
000008                  449     ?C0027:
                        450     ;       now = prev = (msg[0]<<8) + msg[1];
                        451                             ; SOURCE LINE # 69
000008 7800       F     452             MOV     R0,#LOW (msg)
AX51 MACRO ASSEMBLER  MAIN                                                                  05/02/09 01:30:54 PAGE     8

00000A E6               453             MOV     A,@R0
00000B FF               454             MOV     R7,A
00000C 33               455             RLC     A
00000D 95E0             456             SUBB    A,ACC
00000F EF               457             MOV     A,R7
000010 FE               458             MOV     R6,A
000011 08               459             INC     R0
000012 E6               460             MOV     A,@R0
000013 FD               461             MOV     R5,A
000014 33               462             RLC     A
000015 95E0             463             SUBB    A,ACC
000017 FC               464             MOV     R4,A
000018 E4               465             CLR     A
000019 2D               466             ADD     A,R5
00001A FF               467             MOV     R7,A
00001B EE               468             MOV     A,R6
00001C 3C               469             ADDC    A,R4
00001D F500       F     470             MOV     prev?245,A
00001F 8F00       F     471             MOV     prev?245+01H,R7
000021 F500       F     472             MOV     now?244,A
000023 8F00       F     473             MOV     now?244+01H,R7
                        474     
000025 750000     F     475             MOV ECO_PAGE_ADDR,#HIGH (delta_compress_2)
000028 750000     F     476         MOV ECO_PAGE_ADDR+01H,#LOW (delta_compress_2)
00002B 120000     E     477         LCALL   eco_page_manager
00002E 22               478         RET 
                        479     
------                  480         RSEG  ?PR?delta_compress_2?MAIN
000000                  481     delta_compress_2:
                        482         USING   0
                        483     ;       
                        484     ;       for(i=2,j=2;i<54;i+=2,j++)
                        485                             ; SOURCE LINE # 71
000000 750000     F     486             MOV     i?241,#00H
000003 750002     F     487             MOV     i?241+01H,#02H
000006 750000     F     488             MOV     j?242,#00H
000009 750002     F     489             MOV     j?242+01H,#02H
00000C                  490     ?C0011:
00000C C3               491             CLR     C
00000D E500       F     492             MOV     A,i?241+01H
00000F 9436             493             SUBB    A,#036H
000011 E500       F     494             MOV     A,i?241
000013 6480             495             XRL     A,#080H
000015 9480             496             SUBB    A,#080H
000017 505C             497             JNC     ?C0014
                        498     ;       {
                        499                             ; SOURCE LINE # 72
                        500     ;               prev = now;
                        501                             ; SOURCE LINE # 73
000019 850000     F     502             MOV     prev?245,now?244
00001C 850000     F     503             MOV     prev?245+01H,now?244+01H
                        504     ;               now = (msg[i]<<8) + msg[i+1];
                        505                             ; SOURCE LINE # 74
00001F AD00       F     506             MOV     R5,i?241+01H
000021 7400       F     507             MOV     A,#LOW (msg)
000023 2D               508             ADD     A,R5
000024 F8               509             MOV     R0,A
000025 E6               510             MOV     A,@R0
000026 FF               511             MOV     R7,A
000027 EF               512             MOV     A,R7
000028 FE               513             MOV     R6,A
000029 7400       F     514             MOV     A,#LOW (msg+01H)
00002B 2D               515             ADD     A,R5
00002C F8               516             MOV     R0,A
00002D E6               517             MOV     A,@R0
00002E FD               518             MOV     R5,A
AX51 MACRO ASSEMBLER  MAIN                                                                  05/02/09 01:30:54 PAGE     9

00002F 33               519             RLC     A
000030 95E0             520             SUBB    A,ACC
000032 FC               521             MOV     R4,A
000033 E4               522             CLR     A
000034 2D               523             ADD     A,R5
000035 F500       F     524             MOV     now?244+01H,A
000037 EE               525             MOV     A,R6
000038 3C               526             ADDC    A,R4
000039 F500       F     527             MOV     now?244,A
                        528     ;               delta = now - prev;
                        529                             ; SOURCE LINE # 75
00003B C3               530             CLR     C
00003C E500       F     531             MOV     A,now?244+01H
00003E 9500       F     532             SUBB    A,prev?245+01H
000040 FD               533             MOV     R5,A
000041 E500       F     534             MOV     A,now?244
000043 9500       F     535             SUBB    A,prev?245
000045 FC               536             MOV     R4,A
000046 120000     E     537             LCALL   ?C?FCASTI
000049 7800       F     538             MOV     R0,#LOW (delta?243)
00004B 120000     E     539             LCALL   ?C?LSTIDATA
                        540     ;               log_2(delta);
                        541                             ; SOURCE LINE # 76
00004E 7800       F     542             MOV     R0,#LOW (delta?243)
000050 120000     E     543             LCALL   ?C?LLDIDATA
000053 120000     E     544             LCALL   ?C?CASTF
000056 120000     F     545             LCALL   _log_2
                        546     ;               msg[j] = now;
                        547                             ; SOURCE LINE # 77
000059 7400       F     548             MOV     A,#LOW (msg)
00005B 2500       F     549             ADD     A,j?242+01H
00005D F8               550             MOV     R0,A
00005E A600       F     551             MOV     @R0,now?244+01H
                        552     ;       }
                        553                             ; SOURCE LINE # 78
000060 7402             554             MOV     A,#02H
000062 2500       F     555             ADD     A,i?241+01H
000064 F500       F     556             MOV     i?241+01H,A
000066 E4               557             CLR     A
000067 3500       F     558             ADDC    A,i?241
000069 F500       F     559             MOV     i?241,A
00006B 0500       F     560             INC     j?242+01H
00006D E500       F     561             MOV     A,j?242+01H
00006F 709B             562             JNZ     ?C0011
000071 0500       F     563             INC     j?242
000073                  564     ?C0028:
000073 8097             565             SJMP    ?C0011
                        566     ; }
                        567                             ; SOURCE LINE # 79
000075                  568     ?C0014:
000075 22               569             RET     
                        570     ; END OF delta_compress
                        571     
                        572     ; 
                        573     ; 
                        574     ; int main()
                        575     
------                  576             RSEG  ?PR?main?MAIN
000000                  577     main:
                        578             USING   0
                        579                             ; SOURCE LINE # 82
                        580     ; {
                        581                             ; SOURCE LINE # 83
                        582     ; 
                        583     ;       int i;
                        584     ;       int accx;
AX51 MACRO ASSEMBLER  MAIN                                                                  05/02/09 01:30:54 PAGE    10

                        585     ;       store_cpu_rate(16);
                        586                             ; SOURCE LINE # 87
000000 7F10             587             MOV     R7,#010H
000002 7E00             588             MOV     R6,#00H
000004 120000     E     589             LCALL   _store_cpu_rate
                        590     ;       /* init led */
                        591     ;       P0_DIR &= ~0x28;
                        592                             ; SOURCE LINE # 89
000007 5394D7           593             ANL     P0_DIR,#0D7H
                        594     ;       P0_ALT &= ~0x28;
                        595                             ; SOURCE LINE # 90
00000A 5395D7           596             ANL     P0_ALT,#0D7H
                        597     ; 
                        598     ; 
                        599     ;       serial_init(19200);
                        600                             ; SOURCE LINE # 93
00000D 7F00             601             MOV     R7,#00H
00000F 7E4B             602             MOV     R6,#04BH
000011 120000     E     603             LCALL   _serial_init
                        604     ;       puts("test:");
                        605                             ; SOURCE LINE # 94
000014 7BFF             606             MOV     R3,#0FFH
000016 7A00       F     607             MOV     R2,#HIGH (?SC_0)
000018 7900       F     608             MOV     R1,#LOW (?SC_0)
00001A 120000     E     609             LCALL   _puts
                        610     ;       int_print(test_counter);
                        611                             ; SOURCE LINE # 95
00001D AE00       F     612             MOV     R6,test_counter
00001F AF00       F     613             MOV     R7,test_counter+01H
000021 120000     E     614             LCALL   _?int_print
                        615     ;       puts("\r\n");
                        616                             ; SOURCE LINE # 96
000024 7BFF             617             MOV     R3,#0FFH
000026 7A00       F     618             MOV     R2,#HIGH (?SC_6)
000028 7900       F     619             MOV     R1,#LOW (?SC_6)
00002A 120000     E     620             LCALL   _puts
                        621     ; 
                        622     ;       for (i = 0; i < 6; i++) {
                        623                             ; SOURCE LINE # 98
00002D E4               624             CLR     A
00002E F500       F     625             MOV     i?346,A
000030 F500       F     626             MOV     i?346+01H,A
000032                  627     ?C0015:
                        628     ;               blink_led();
                        629                             ; SOURCE LINE # 99
000032 638020           630             XRL     P0,#020H
                        631     ;               mdelay(400);
                        632                             ; SOURCE LINE # 100
000035 7F90             633             MOV     R7,#090H
000037 7E01             634             MOV     R6,#01H
000039 120000     E     635             LCALL   _mdelay
                        636     ;       }
                        637                             ; SOURCE LINE # 101
00003C 0500       F     638             INC     i?346+01H
00003E E500       F     639             MOV     A,i?346+01H
000040 7002             640             JNZ     ?C0029
000042 0500       F     641             INC     i?346
000044                  642     ?C0029:
000044 C3               643             CLR     C
000045 9406             644             SUBB    A,#06H
000047 E500       F     645             MOV     A,i?346
000049 6480             646             XRL     A,#080H
00004B 9480             647             SUBB    A,#080H
00004D 40E3             648             JC      ?C0015
00004F                  649     ?C0016:
                        650     ;       /* init adc */
AX51 MACRO ASSEMBLER  MAIN                                                                  05/02/09 01:30:54 PAGE    11

                        651     ;       adc_init(ADC_CLK_D8, ADC_RES_12, EXTREF);
                        652                             ; SOURCE LINE # 103
00004F 7B10             653             MOV     R3,#010H
000051 7D03             654             MOV     R5,#03H
000053 7F20             655             MOV     R7,#020H
000055 120000     E     656             LCALL   _adc_init
                        657     ; 
                        658     ;       /* rf */
                        659     ;       rf_init();
                        660                             ; SOURCE LINE # 106
000058 120000     E     661             LCALL   rf_init
                        662     ;       rf_configure(cfg);
                        663                             ; SOURCE LINE # 107
00005B AB00       F     664             MOV     R3,cfg
00005D AA00       F     665             MOV     R2,cfg+01H
00005F A900       F     666             MOV     R1,cfg+02H
000061 120000     E     667             LCALL   _rf_configure
                        668     ; 
                        669     ;       //volatile value for calculating 
                        670     ;       test_counter = 0;
                        671                             ; SOURCE LINE # 110
000064 E4               672             CLR     A
000065 F500       F     673             MOV     test_counter,A
000067 F500       F     674             MOV     test_counter+01H,A
                        675     ;       timer_counter = 0;
                        676                             ; SOURCE LINE # 111
000069 F500       F     677             MOV     timer_counter,A
00006B F500       F     678             MOV     timer_counter+01H,A
                        679     ;       flag = 0;
                        680                             ; SOURCE LINE # 112
00006D F500       F     681             MOV     flag,A
00006F F500       F     682             MOV     flag+01H,A
                        683     ;       /* init timer */
                        684     ;       // TMOD.1 TMOD.2 [1 0] 8-bit counter with auto-reload
                        685     ;       TMOD = 0x02;
                        686                             ; SOURCE LINE # 115
000071 758902           687             MOV     TMOD,#02H
                        688     ;       TH0 = 0x00;
                        689                             ; SOURCE LINE # 116
000074 F58C             690             MOV     TH0,A
                        691     ;       //enable interrupt
                        692     ;       EA = 1;
                        693                             ; SOURCE LINE # 118
000076 D2AF             694             SETB    EA
                        695     ;       //enable timer interrupt
                        696     ;       ET0 = 1;
                        697                             ; SOURCE LINE # 120
000078 D2A9             698             SETB    ET0
                        699     ;       //set to 1 to enable counting on Timer 0.               
                        700     ;       TR0 = 1;        
                        701                             ; SOURCE LINE # 122
00007A D28C             702             SETB    TR0
00007C                  703     ?C0018:
                        704     ; 
                        705     ;       while(1)
                        706                             ; SOURCE LINE # 124
                        707     ;       {
                        708                             ; SOURCE LINE # 125
                        709     ;               for(i=0;i<LEN*2;i+=2)
                        710                             ; SOURCE LINE # 126
00007C E4               711             CLR     A
00007D F500       F     712             MOV     i?346,A
00007F F500       F     713             MOV     i?346+01H,A
000081                  714     ?C0020:
000081 C3               715             CLR     C
000082 E500       F     716             MOV     A,i?346+01H
AX51 MACRO ASSEMBLER  MAIN                                                                  05/02/09 01:30:54 PAGE    12

000084 9436             717             SUBB    A,#036H
000086 E500       F     718             MOV     A,i?346
000088 6480             719             XRL     A,#080H
00008A 9480             720             SUBB    A,#080H
00008C 502E             721             JNC     ?C0021
                        722     ;               {
                        723                             ; SOURCE LINE # 127
                        724     ;                       accx = adc_read(X_AXIS);
                        725                             ; SOURCE LINE # 128
00008E 7F03             726             MOV     R7,#03H
000090 120000     E     727             LCALL   _adc_read
000093 8E00       F     728             MOV     accx?347,R6
000095 8F00       F     729             MOV     accx?347+01H,R7
                        730     ;                       msg[i] = (accx >> 8);
                        731                             ; SOURCE LINE # 129
000097 E500       F     732             MOV     A,accx?347
000099 FF               733             MOV     R7,A
00009A AE00       F     734             MOV     R6,i?346+01H
00009C 7400       F     735             MOV     A,#LOW (msg)
00009E 2E               736             ADD     A,R6
00009F F8               737             MOV     R0,A
0000A0 A607             738             MOV     @R0,AR7
                        739     ;                       msg[i+1] = accx & 0xff;
                        740                             ; SOURCE LINE # 130
0000A2 7400       F     741             MOV     A,#LOW (msg+01H)
0000A4 2E               742             ADD     A,R6
0000A5 F8               743             MOV     R0,A
0000A6 A600       F     744             MOV     @R0,accx?347+01H
                        745     ;                       mdelay(5);
                        746                             ; SOURCE LINE # 131
0000A8 7F05             747             MOV     R7,#05H
0000AA 7E00             748             MOV     R6,#00H
0000AC 120000     E     749             LCALL   _mdelay
                        750     ;               }
                        751                             ; SOURCE LINE # 132
0000AF 7402             752             MOV     A,#02H
0000B1 2500       F     753             ADD     A,i?346+01H
0000B3 F500       F     754             MOV     i?346+01H,A
0000B5 E4               755             CLR     A
0000B6 3500       F     756             ADDC    A,i?346
0000B8 F500       F     757             MOV     i?346,A
0000BA 80C5             758             SJMP    ?C0020
0000BC                  759     ?C0021:
                        760     ; 
                        761     ;               delta_compress();
                        762                             ; SOURCE LINE # 134
0000BC 120000     F     763             LCALL   delta_compress
                        764     ; 
                        765     ;               if(flag == 1)
                        766                             ; SOURCE LINE # 136
0000BF E500       F     767             MOV     A,flag+01H
0000C1 6401             768             XRL     A,#01H
0000C3 4500       F     769             ORL     A,flag
0000C5 7019             770             JNZ     ?C0023
                        771     ;               {
                        772                             ; SOURCE LINE # 137
                        773     ;                       flag = 0;
                        774                             ; SOURCE LINE # 138
0000C7 F500       F     775             MOV     flag,A
0000C9 F500       F     776             MOV     flag+01H,A
                        777     ;                       blink_led();
                        778                             ; SOURCE LINE # 139
0000CB 638020           779             XRL     P0,#020H
                        780     ;                       int_print(test_counter);
                        781                             ; SOURCE LINE # 140
0000CE AE00       F     782             MOV     R6,test_counter
AX51 MACRO ASSEMBLER  MAIN                                                                  05/02/09 01:30:54 PAGE    13

0000D0 AF00       F     783             MOV     R7,test_counter+01H
0000D2 120000     E     784             LCALL   _?int_print
                        785     ;                       //int_print(timer_counter);
                        786     ;                       puts("\r\n");
                        787                             ; SOURCE LINE # 142
0000D5 7BFF             788             MOV     R3,#0FFH
0000D7 7A00       F     789             MOV     R2,#HIGH (?SC_6)
0000D9 7900       F     790             MOV     R1,#LOW (?SC_6)
0000DB 120000     E     791             LCALL   _puts
                        792     ;                       EA = 1;
                        793                             ; SOURCE LINE # 143
0000DE D2AF             794             SETB    EA
                        795     ;               }
                        796                             ; SOURCE LINE # 144
0000E0                  797     ?C0023:
                        798     ; 
                        799     ;               rf_send(dst_addr, 3, msg, 20);
                        800                             ; SOURCE LINE # 146
0000E0 750000     E     801             MOV     ?_rf_send?BYTE+04H,#00H
0000E3 750000     F     802             MOV     ?_rf_send?BYTE+05H,#HIGH (msg)
0000E6 750000     F     803             MOV     ?_rf_send?BYTE+06H,#LOW (msg)
0000E9 750014     E     804             MOV     ?_rf_send?BYTE+07H,#014H
0000EC 7B00             805             MOV     R3,#00H
0000EE 7A00       F     806             MOV     R2,#HIGH (dst_addr)
0000F0 7900       F     807             MOV     R1,#LOW (dst_addr)
0000F2 7D03             808             MOV     R5,#03H
0000F4 120000     E     809             LCALL   _rf_send
                        810     ;               //mdelay(20);
                        811     ;       }
                        812                             ; SOURCE LINE # 148
0000F7 8083             813             SJMP    ?C0018
                        814     ; END OF main
                        815     
                        816             END
AX51 MACRO ASSEMBLER  MAIN                                                                  05/02/09 01:30:54 PAGE    14

SYMBOL TABLE LISTING
------ ----- -------


N A M E                                    T Y P E  V A L U E     ATTRIBUTES

?_RF_SEND?BYTE. . . . . . . . . . . . .    D  ADDR  -------       EXT
?C0001. . . . . . . . . . . . . . . . .    C  ADDR  0019H     R   SEG=?PR?TIMER0?MAIN
?C0003. . . . . . . . . . . . . . . . .    C  ADDR  0027H     R   SEG=?PR?TIMER0?MAIN
?C0004. . . . . . . . . . . . . . . . .    C  ADDR  0015H     R   SEG=?PR?_LOG_2?MAIN
?C0005. . . . . . . . . . . . . . . . .    C  ADDR  000BH     R   SEG=?PR?_LOG_2?MAIN
?C0009. . . . . . . . . . . . . . . . .    C  ADDR  0015H     R   SEG=?PR?_LOG_2?MAIN
?C0011. . . . . . . . . . . . . . . . .    C  ADDR  000CH     R   SEG=?PR?DELTA_COMPRESS_2?MAIN
?C0014. . . . . . . . . . . . . . . . .    C  ADDR  0075H     R   SEG=?PR?DELTA_COMPRESS_2?MAIN
?C0015. . . . . . . . . . . . . . . . .    C  ADDR  0032H     R   SEG=?PR?MAIN?MAIN
?C0016. . . . . . . . . . . . . . . . .    C  ADDR  004FH     R   SEG=?PR?MAIN?MAIN
?C0018. . . . . . . . . . . . . . . . .    C  ADDR  007CH     R   SEG=?PR?MAIN?MAIN
?C0020. . . . . . . . . . . . . . . . .    C  ADDR  0081H     R   SEG=?PR?MAIN?MAIN
?C0021. . . . . . . . . . . . . . . . .    C  ADDR  00BCH     R   SEG=?PR?MAIN?MAIN
?C0023. . . . . . . . . . . . . . . . .    C  ADDR  00E0H     R   SEG=?PR?MAIN?MAIN
?C0025. . . . . . . . . . . . . . . . .    C  ADDR  0017H     R   SEG=?PR?TIMER0?MAIN
?C0026. . . . . . . . . . . . . . . . .    C  ADDR  0012H     R   SEG=?PR?_LOG_2?MAIN
?C0027. . . . . . . . . . . . . . . . .    C  ADDR  0008H     R   SEG=?PR?DELTA_COMPRESS?MAIN
?C0028. . . . . . . . . . . . . . . . .    C  ADDR  0073H     R   SEG=?PR?DELTA_COMPRESS_2?MAIN
?C0029. . . . . . . . . . . . . . . . .    C  ADDR  0044H     R   SEG=?PR?MAIN?MAIN
?C?CASTF. . . . . . . . . . . . . . . .    C  ADDR  -------       EXT
?C?FCASTI . . . . . . . . . . . . . . .    C  ADDR  -------       EXT
?C?LLDIDATA . . . . . . . . . . . . . .    C  ADDR  -------       EXT
?C?LSTIDATA . . . . . . . . . . . . . .    C  ADDR  -------       EXT
?C_INITSEG. . . . . . . . . . . . . . .    C  SEG   00001BH       REL=UNIT, ALN=BYTE
?C_STARTUP. . . . . . . . . . . . . . .    C  ADDR  -------       EXT
?CO?MAIN. . . . . . . . . . . . . . . .    C  SEG   000009H       REL=UNIT, ALN=BYTE
?DELTA_COMPRESS?BYTE. . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?DELTA_COMPRESS?MAIN
?DT?DELTA_COMPRESS?MAIN . . . . . . . .    D  SEG   000008H       REL=UNIT, ALN=BYTE
?DT?MAIN. . . . . . . . . . . . . . . .    D  SEG   000018H       REL=UNIT, ALN=BYTE
?DT?MAIN?MAIN . . . . . . . . . . . . .    D  SEG   000004H       REL=UNIT, ALN=BYTE
?ID?DELTA_COMPRESS?MAIN . . . . . . . .    I  SEG   000004H       REL=UNIT, ALN=BYTE
?ID?MAIN. . . . . . . . . . . . . . . .    I  SEG   000039H       REL=UNIT, ALN=BYTE
?MAIN?BYTE. . . . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?MAIN?MAIN
?PR?_LOG_2?MAIN . . . . . . . . . . . .    C  SEG   000016H       REL=UNIT, ALN=BYTE
?PR?DELTA_COMPRESS?MAIN . . . . . . . .    C  SEG   00002FH       REL=UNIT, ALN=BYTE
?PR?DELTA_COMPRESS_2?MAIN . . . . . . .    C  SEG   000076H       REL=UNIT, ALN=BYTE
?PR?MAIN?MAIN . . . . . . . . . . . . .    C  SEG   0000F9H       REL=UNIT, ALN=BYTE
?PR?TIMER0?MAIN . . . . . . . . . . . .    C  SEG   00002CH       REL=UNIT, ALN=BYTE
?SC_0 . . . . . . . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?CO?MAIN
?SC_6 . . . . . . . . . . . . . . . . .    C  ADDR  0006H     R   SEG=?CO?MAIN
_?INT_PRINT . . . . . . . . . . . . . .    C  ADDR  -------       EXT
_ADC_INIT . . . . . . . . . . . . . . .    C  ADDR  -------       EXT
_ADC_READ . . . . . . . . . . . . . . .    C  ADDR  -------       EXT
_LOG_2. . . . . . . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?_LOG_2?MAIN
_MDELAY . . . . . . . . . . . . . . . .    C  ADDR  -------       EXT
_PUTS . . . . . . . . . . . . . . . . .    C  ADDR  -------       EXT
_RF_CONFIGURE . . . . . . . . . . . . .    C  ADDR  -------       EXT
_RF_SEND. . . . . . . . . . . . . . . .    C  ADDR  -------       EXT
_SERIAL_INIT. . . . . . . . . . . . . .    C  ADDR  -------       EXT
_STORE_CPU_RATE . . . . . . . . . . . .    C  ADDR  -------       EXT
AC. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.6   A   
ACC . . . . . . . . . . . . . . . . . .    D  ADDR  00E0H     A   
ACCX?347. . . . . . . . . . . . . . . .    D  ADDR  0002H     R   SEG=?DT?MAIN?MAIN
ADCCON. . . . . . . . . . . . . . . . .    D  ADDR  00A1H     A   
ADCDATAH. . . . . . . . . . . . . . . .    D  ADDR  00A2H     A   
ADCDATAL. . . . . . . . . . . . . . . .    D  ADDR  00A3H     A   
ADCSTATIC . . . . . . . . . . . . . . .    D  ADDR  00A4H     A   
AR6 . . . . . . . . . . . . . . . . . .    D  ADDR  0006H     A   
AR7 . . . . . . . . . . . . . . . . . .    D  ADDR  0007H     A   
B . . . . . . . . . . . . . . . . . . .    D  ADDR  00F0H     A   
AX51 MACRO ASSEMBLER  MAIN                                                                  05/02/09 01:30:54 PAGE    15

C_T2. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.1   A   
CE. . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.6   A   
CFG . . . . . . . . . . . . . . . . . .    D  ADDR  0006H     R   SEG=?DT?MAIN
CK_CTRL . . . . . . . . . . . . . . . .    D  ADDR  00B6H     A   
CKCON . . . . . . . . . . . . . . . . .    D  ADDR  008EH     A   
CLK1. . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.1   A   
CLK2. . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.5   A   
CP_RL2. . . . . . . . . . . . . . . . .    B  ADDR  00C8H.0   A   
CPRL2 . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.0   A   
CS. . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.3   A   
CT2 . . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.1   A   
CY. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.7   A   
DATA? . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.0   A   
DELTA?243 . . . . . . . . . . . . . . .    I  ADDR  0000H     R   SEG=?ID?DELTA_COMPRESS?MAIN
DELTA_COMPRESS. . . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?DELTA_COMPRESS?MAIN
DELTA_COMPRESS_2. . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?DELTA_COMPRESS_2?MAIN
DEV_OFFSET. . . . . . . . . . . . . . .    D  ADDR  00BEH     A   
DIN0. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.2   A   
DIO0. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.0   A   
DIO1. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.1   A   
DIO2. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.0   A   
DIO3. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.1   A   
DIO4. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.2   A   
DIO5. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.3   A   
DIO6. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.4   A   
DIO7. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.5   A   
DIO8. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.6   A   
DIO9. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.7   A   
DOUT2 . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.4   A   
DPH . . . . . . . . . . . . . . . . . .    D  ADDR  0083H     A   
DPH0. . . . . . . . . . . . . . . . . .    D  ADDR  0083H     A   
DPH1. . . . . . . . . . . . . . . . . .    D  ADDR  0085H     A   
DPL . . . . . . . . . . . . . . . . . .    D  ADDR  0082H     A   
DPL0. . . . . . . . . . . . . . . . . .    D  ADDR  0082H     A   
DPL1. . . . . . . . . . . . . . . . . .    D  ADDR  0084H     A   
DPS . . . . . . . . . . . . . . . . . .    D  ADDR  0086H     A   
DR1 . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.2   A   
DR2 . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.6   A   
DR2_CE. . . . . . . . . . . . . . . . .    B  ADDR  00A0H.6   A   
DST_ADDR. . . . . . . . . . . . . . . .    I  ADDR  0036H     R   SEG=?ID?MAIN
EA. . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.7   A   
ECO_PAGE_ADDR . . . . . . . . . . . . .    D  ADDR  -------       EXT
ECO_PAGE_MANAGER. . . . . . . . . . . .    C  ADDR  -------       EXT
ECO_PAGE_REGISTER1. . . . . . . . . . .    I  ADDR  -------       EXT
ECO_PAGE_REGISTER2. . . . . . . . . . .    I  ADDR  -------       EXT
ECO_PAGE_REGISTER3. . . . . . . . . . .    I  ADDR  -------       EXT
ECO_PAGE_REGISTER4. . . . . . . . . . .    I  ADDR  -------       EXT
ECO_PAGE_REGISTER5. . . . . . . . . . .    I  ADDR  -------       EXT
ECO_PAGE_REGISTER6. . . . . . . . . . .    I  ADDR  -------       EXT
ECO_PAGE_REGISTER7. . . . . . . . . . .    I  ADDR  -------       EXT
ECO_PAGE_SPI_CONN . . . . . . . . . . .    D  ADDR  -------       EXT
EICON . . . . . . . . . . . . . . . . .    D  ADDR  00D8H     A   
EIE . . . . . . . . . . . . . . . . . .    D  ADDR  00E8H     A   
EIP . . . . . . . . . . . . . . . . . .    D  ADDR  00F8H     A   
ES. . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.4   A   
ET0 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.1   A   
ET1 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.3   A   
ET2 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.5   A   
EWDI. . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.4   A   
EX0 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.0   A   
EX1 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.2   A   
EX2 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.0   A   
EX3 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.1   A   
EX4 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.2   A   
EX5 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.3   A   
EXEN2 . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.3   A   
AX51 MACRO ASSEMBLER  MAIN                                                                  05/02/09 01:30:54 PAGE    16

EXF2. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.6   A   
EXIF. . . . . . . . . . . . . . . . . .    D  ADDR  0091H     A   
F0. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.5   A   
F1. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.1   A   
FLAG. . . . . . . . . . . . . . . . . .    D  ADDR  0002H     R   SEG=?DT?MAIN
I?241 . . . . . . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?DELTA_COMPRESS?MAIN
I?346 . . . . . . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?MAIN?MAIN
IE. . . . . . . . . . . . . . . . . . .    D  ADDR  00A8H     A   
IE0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.1   A   
IE1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.3   A   
INT0_N. . . . . . . . . . . . . . . . .    B  ADDR  0080H.3   A   
INT1_N. . . . . . . . . . . . . . . . .    B  ADDR  0080H.4   A   
IP. . . . . . . . . . . . . . . . . . .    D  ADDR  00B8H     A   
IT0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.0   A   
IT1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.2   A   
J?242 . . . . . . . . . . . . . . . . .    D  ADDR  0002H     R   SEG=?DT?DELTA_COMPRESS?MAIN
MAIN. . . . . . . . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?MAIN?MAIN
MPAGE . . . . . . . . . . . . . . . . .    D  ADDR  0092H     A   
MSG . . . . . . . . . . . . . . . . . .    I  ADDR  0000H     R   SEG=?ID?MAIN
NOW?244 . . . . . . . . . . . . . . . .    D  ADDR  0004H     R   SEG=?DT?DELTA_COMPRESS?MAIN
OV. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.2   A   
P . . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.0   A   
P0. . . . . . . . . . . . . . . . . . .    D  ADDR  0080H     A   
P0_0. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.0   A   
P0_1. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.1   A   
P0_2. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.2   A   
P0_3. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.3   A   
P0_4. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.4   A   
P0_5. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.5   A   
P0_6. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.6   A   
P0_7. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.7   A   
P0_ALT. . . . . . . . . . . . . . . . .    D  ADDR  0095H     A   
P0_DIR. . . . . . . . . . . . . . . . .    D  ADDR  0094H     A   
P1. . . . . . . . . . . . . . . . . . .    D  ADDR  0090H     A   
P1_0. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.0   A   
P1_1. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.1   A   
P1_2. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.2   A   
P1_ALT. . . . . . . . . . . . . . . . .    D  ADDR  0097H     A   
P1_DIR. . . . . . . . . . . . . . . . .    D  ADDR  0096H     A   
PCON. . . . . . . . . . . . . . . . . .    D  ADDR  0087H     A   
PREV?245. . . . . . . . . . . . . . . .    D  ADDR  0006H     R   SEG=?DT?DELTA_COMPRESS?MAIN
PS. . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.4   A   
PSW . . . . . . . . . . . . . . . . . .    D  ADDR  00D0H     A   
PT0 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.1   A   
PT1 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.3   A   
PT2 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.5   A   
PWDI. . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.4   A   
PWM . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.7   A   
PWMCON. . . . . . . . . . . . . . . . .    D  ADDR  00A9H     A   
PWMDUTY . . . . . . . . . . . . . . . .    D  ADDR  00AAH     A   
PWR_UP. . . . . . . . . . . . . . . . .    B  ADDR  00A0H.7   A   
PX0 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.0   A   
PX1 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.2   A   
PX2 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.0   A   
PX3 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.1   A   
PX4 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.2   A   
PX5 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.3   A   
RADIO . . . . . . . . . . . . . . . . .    D  ADDR  00A0H     A   
RB8 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.2   A   
RCAP2H. . . . . . . . . . . . . . . . .    D  ADDR  00CBH     A   
RCAP2L. . . . . . . . . . . . . . . . .    D  ADDR  00CAH     A   
RCLK. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.5   A   
REGX_CTRL . . . . . . . . . . . . . . .    D  ADDR  00ADH     A   
REGX_LSB. . . . . . . . . . . . . . . .    D  ADDR  00ACH     A   
REGX_MSB. . . . . . . . . . . . . . . .    D  ADDR  00ABH     A   
REN . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.4   A   
AX51 MACRO ASSEMBLER  MAIN                                                                  05/02/09 01:30:54 PAGE    17

RF_DATA . . . . . . . . . . . . . . . .    D  ADDR  0009H     R   SEG=?DT?MAIN
RF_INIT . . . . . . . . . . . . . . . .    C  ADDR  -------       EXT
RI. . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.0   A   
RS0 . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.3   A   
RS1 . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.4   A   
RSTREAS . . . . . . . . . . . . . . . .    D  ADDR  00B1H     A   
RXD . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.1   A   
SBUF. . . . . . . . . . . . . . . . . .    D  ADDR  0099H     A   
SCON. . . . . . . . . . . . . . . . . .    D  ADDR  0098H     A   
SM0 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.7   A   
SM1 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.6   A   
SM2 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.5   A   
SP. . . . . . . . . . . . . . . . . . .    D  ADDR  0081H     A   
SPC_FNC . . . . . . . . . . . . . . . .    D  ADDR  008FH     A   
SPI_CTRL. . . . . . . . . . . . . . . .    D  ADDR  00B3H     A   
SPI_DATA. . . . . . . . . . . . . . . .    D  ADDR  00B2H     A   
SPICLK. . . . . . . . . . . . . . . . .    D  ADDR  00B4H     A   
T0. . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.5   A   
T1. . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.6   A   
T1_1V2. . . . . . . . . . . . . . . . .    D  ADDR  00BCH     A   
T2. . . . . . . . . . . . . . . . . . .    B  ADDR  0090H.0   A   
T2_1V2. . . . . . . . . . . . . . . . .    D  ADDR  00BDH     A   
T2CON . . . . . . . . . . . . . . . . .    D  ADDR  00C8H     A   
TB8 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.3   A   
TCLK. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.4   A   
TCON. . . . . . . . . . . . . . . . . .    D  ADDR  0088H     A   
TEST_COUNTER. . . . . . . . . . . . . .    D  ADDR  0004H     R   SEG=?DT?MAIN
TEST_MODE . . . . . . . . . . . . . . .    D  ADDR  00B7H     A   
TF0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.5   A   
TF1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.7   A   
TF2 . . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.7   A   
TH0 . . . . . . . . . . . . . . . . . .    D  ADDR  008CH     A   
TH1 . . . . . . . . . . . . . . . . . .    D  ADDR  008DH     A   
TH2 . . . . . . . . . . . . . . . . . .    D  ADDR  00CDH     A   
TI. . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.1   A   
TICK_DV . . . . . . . . . . . . . . . .    D  ADDR  00B5H     A   
TIMER0. . . . . . . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?TIMER0?MAIN
TIMER_COUNTER . . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?MAIN
TL0 . . . . . . . . . . . . . . . . . .    D  ADDR  008AH     A   
TL1 . . . . . . . . . . . . . . . . . .    D  ADDR  008BH     A   
TL2 . . . . . . . . . . . . . . . . . .    D  ADDR  00CCH     A   
TMOD. . . . . . . . . . . . . . . . . .    D  ADDR  0089H     A   
TR0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.4   A   
TR1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.6   A   
TR2 . . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.2   A   
TXD . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.2   A   
WDTI. . . . . . . . . . . . . . . . . .    B  ADDR  00D8H.3   A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S).
