AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/02/09 01:19:52 PAGE     1


MACRO ASSEMBLER AX51 V3.06a
OBJECT MODULE PLACED IN .\eco_page.obj
ASSEMBLER INVOKED BY: C:\Keil\C51\BIN\AX51.exe .\eco_page.src EP DEBUG SYMBOLS OJ(.\eco_page.obj) PR(.\eco_page.ls1) 

LOC    OBJ             LINE     SOURCE

                          1     ; ./eco_page.src generated from: .\eco_page.c
                          2     ; COMPILER INVOKED BY:
                          3     ;        C:\Keil\C51\BIN\C51.exe .\eco_page.c BROWSE DEBUG CODE LISTINCLUDE SYMBOLS PREP
                               RINT ROM(LARGE) INCDIR(../../Include) SRC(./eco_page.src)
                          4     
                          5     $nomod51 
                          6     
                          7     NAME    ECO_PAGE
                          8     
 00A0.7                   9     PWR_UP  BIT     0A0H.7
 0080                    10     P0      DATA    080H
 0090                    11     P1      DATA    090H
 00D0.6                  12     AC      BIT     0D0H.6
 0080.5                  13     T0      BIT     080H.5
 00B3                    14     SPI_CTRL        DATA    0B3H
 0080.6                  15     T1      BIT     080H.6
 00A8.7                  16     EA      BIT     0A8H.7
 0090.0                  17     T2      BIT     090H.0
 00A0.6                  18     CE      BIT     0A0H.6
 00BE                    19     DEV_OFFSET      DATA    0BEH
 00A0.1                  20     CLK1    BIT     0A0H.1
 0090.2                  21     DIN0    BIT     090H.2
 00A0.5                  22     CLK2    BIT     0A0H.5
 0090.0                  23     DIO0    BIT     090H.0
 0083                    24     DPH0    DATA    083H
 0090.1                  25     DIO1    BIT     090H.1
 00A8                    26     IE      DATA    0A8H
 0085                    27     DPH1    DATA    085H
 0080.0                  28     DIO2    BIT     080H.0
 0080.1                  29     DIO3    BIT     080H.1
 0080.0                  30     P0_0    BIT     080H.0
 0090.0                  31     P1_0    BIT     090H.0
 0080.2                  32     DIO4    BIT     080H.2
 0080.1                  33     P0_1    BIT     080H.1
 0082                    34     DPL0    DATA    082H
 0090.1                  35     P1_1    BIT     090H.1
 0080.3                  36     DIO5    BIT     080H.3
 0080.2                  37     P0_2    BIT     080H.2
 0084                    38     DPL1    DATA    084H
 0090.2                  39     P1_2    BIT     090H.2
 0080.4                  40     DIO6    BIT     080H.4
 0080.3                  41     P0_3    BIT     080H.3
 0080.5                  42     DIO7    BIT     080H.5
 0080.4                  43     P0_4    BIT     080H.4
 00A4                    44     ADCSTATIC       DATA    0A4H
 0080.6                  45     DIO8    BIT     080H.6
 0080.5                  46     P0_5    BIT     080H.5
 00C8.6                  47     EXF2    BIT     0C8H.6
 00A0.3                  48     CS      BIT     0A0H.3
 0080.7                  49     DIO9    BIT     080H.7
 0080.6                  50     P0_6    BIT     080H.6
 0080.7                  51     P0_7    BIT     080H.7
 00A8.4                  52     ES      BIT     0A8H.4
 00B8                    53     IP      DATA    0B8H
 00A0.0                  54     DATA?   BIT     0A0H.0
 0098.0                  55     RI      BIT     098H.0
 00D0.7                  56     CY      BIT     0D0H.7
 0098.1                  57     TI      BIT     098H.1
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/02/09 01:19:52 PAGE     2

 00BC                    58     T1_1V2  DATA    0BCH
 008F                    59     SPC_FNC DATA    08FH
 00BD                    60     T2_1V2  DATA    0BDH
 00CB                    61     RCAP2H  DATA    0CBH
 00B8.4                  62     PS      BIT     0B8H.4
 0081                    63     SP      DATA    081H
 00D0.2                  64     OV      BIT     0D0H.2
 00B6                    65     CK_CTRL DATA    0B6H
 00CA                    66     RCAP2L  DATA    0CAH
 00B5                    67     TICK_DV DATA    0B5H
 00B1                    68     RSTREAS DATA    0B1H
 00C8.1                  69     C_T2    BIT     0C8H.1
 00E8.4                  70     EWDI    BIT     0E8H.4
 00A1                    71     ADCCON  DATA    0A1H
 00C8.5                  72     RCLK    BIT     0C8H.5
 00A2                    73     ADCDATAH        DATA    0A2H
 0091                    74     EXIF    DATA    091H
 00C8.4                  75     TCLK    BIT     0C8H.4
 00A0.6                  76     DR2_CE  BIT     0A0H.6
 00A3                    77     ADCDATAL        DATA    0A3H
 0099                    78     SBUF    DATA    099H
 0087                    79     PCON    DATA    087H
 0098                    80     SCON    DATA    098H
 00F8.4                  81     PWDI    BIT     0F8H.4
 0089                    82     TMOD    DATA    089H
 0088                    83     TCON    DATA    088H
 00D8.3                  84     WDTI    BIT     0D8H.3
 00AA                    85     PWMDUTY DATA    0AAH
 0088.1                  86     IE0     BIT     088H.1
 0088.3                  87     IE1     BIT     088H.3
 0094                    88     P0_DIR  DATA    094H
 00F0                    89     B       DATA    0F0H
 0096                    90     P1_DIR  DATA    096H
 0095                    91     P0_ALT  DATA    095H
 0097                    92     P1_ALT  DATA    097H
 00C8.0                  93     CP_RL2  BIT     0C8H.0
 00A0.2                  94     DR1     BIT     0A0H.2
 00E0                    95     ACC     DATA    0E0H
 00A0.6                  96     DR2     BIT     0A0H.6
 00B7                    97     TEST_MODE       DATA    0B7H
 00B4                    98     SPICLK  DATA    0B4H
 00C8.1                  99     CT2     BIT     0C8H.1
 00A8.1                 100     ET0     BIT     0A8H.1
 00A8.3                 101     ET1     BIT     0A8H.3
 0088.5                 102     TF0     BIT     088H.5
 0080.3                 103     INT0_N  BIT     080H.3
 00A8.5                 104     ET2     BIT     0A8H.5
 0088.7                 105     TF1     BIT     088H.7
 0080.4                 106     INT1_N  BIT     080H.4
 00C8.7                 107     TF2     BIT     0C8H.7
 0098.2                 108     RB8     BIT     098H.2
 008C                   109     TH0     DATA    08CH
 00A8.0                 110     EX0     BIT     0A8H.0
 0088.0                 111     IT0     BIT     088H.0
 008D                   112     TH1     DATA    08DH
 00A8.2                 113     EX1     BIT     0A8H.2
 0098.3                 114     TB8     BIT     098H.3
 0088.2                 115     IT1     BIT     088H.2
 00CD                   116     TH2     DATA    0CDH
 00AD                   117     REGX_CTRL       DATA    0ADH
 00E8.0                 118     EX2     BIT     0E8H.0
 00D0.0                 119     P       BIT     0D0H.0
 00E8.1                 120     EX3     BIT     0E8H.1
 0098.7                 121     SM0     BIT     098H.7
 008A                   122     TL0     DATA    08AH
 00E8.2                 123     EX4     BIT     0E8H.2
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/02/09 01:19:52 PAGE     3

 0098.6                 124     SM1     BIT     098H.6
 008B                   125     TL1     DATA    08BH
 00E8.3                 126     EX5     BIT     0E8H.3
 0098.5                 127     SM2     BIT     098H.5
 00CC                   128     TL2     DATA    0CCH
 00E8                   129     EIE     DATA    0E8H
 00B8.1                 130     PT0     BIT     0B8H.1
 00D0.3                 131     RS0     BIT     0D0H.3
 00B8.3                 132     PT1     BIT     0B8H.3
 00D0.4                 133     RS1     BIT     0D0H.4
 00B8.5                 134     PT2     BIT     0B8H.5
 0088.4                 135     TR0     BIT     088H.4
 00A9                   136     PWMCON  DATA    0A9H
 0088.6                 137     TR1     BIT     088H.6
 00C8.2                 138     TR2     BIT     0C8H.2
 00B8.0                 139     PX0     BIT     0B8H.0
 00B8.2                 140     PX1     BIT     0B8H.2
 00F8.0                 141     PX2     BIT     0F8H.0
 00F8.1                 142     PX3     BIT     0F8H.1
 00F8.2                 143     PX4     BIT     0F8H.2
 0083                   144     DPH     DATA    083H
 00F8.3                 145     PX5     BIT     0F8H.3
 00F8                   146     EIP     DATA    0F8H
 0082                   147     DPL     DATA    082H
 00C8.3                 148     EXEN2   BIT     0C8H.3
 00C8.0                 149     CPRL2   BIT     0C8H.0
 0098.4                 150     REN     BIT     098H.4
 00C8                   151     T2CON   DATA    0C8H
 0086                   152     DPS     DATA    086H
 00B2                   153     SPI_DATA        DATA    0B2H
 0092                   154     MPAGE   DATA    092H
 0080.1                 155     RXD     BIT     080H.1
 00A0.4                 156     DOUT2   BIT     0A0H.4
 00D8                   157     EICON   DATA    0D8H
 008E                   158     CKCON   DATA    08EH
 0080.2                 159     TXD     BIT     080H.2
 00A0                   160     RADIO   DATA    0A0H
 0080.7                 161     PWM     BIT     080H.7
 00D0.5                 162     F0      BIT     0D0H.5
 00D0.1                 163     F1      BIT     0D0H.1
 00AC                   164     REGX_LSB        DATA    0ACH
 00D0                   165     PSW     DATA    0D0H
 00AB                   166     REGX_MSB        DATA    0ABH
------                  167     ?PR?eco_page_init?ECO_PAGE               SEGMENT CODE 
------                  168     ?PR?eco_page_manager?ECO_PAGE            SEGMENT CODE 
------                  169     ?DT?eco_page_manager?ECO_PAGE            SEGMENT DATA OVERLAYABLE 
------                  170     ?ID?ECO_PAGE         SEGMENT IDATA 
------                  171     ?DT?ECO_PAGE         SEGMENT DATA 
                        172             EXTRN   CODE (_eeprom_read)
                        173             EXTRN   CODE (eeprom_init)
                        174             EXTRN   CODE (?C?UIDIV)
                        175             PUBLIC  ECO_PAGE_TABLE_INDEX
                        176             PUBLIC  ECO_PAGE_REGISTER7
                        177             PUBLIC  ECO_PAGE_REGISTER6
                        178             PUBLIC  ECO_PAGE_REGISTER5
                        179             PUBLIC  ECO_PAGE_REGISTER4
                        180             PUBLIC  ECO_PAGE_ADDR
                        181             PUBLIC  ECO_PAGE_REGISTER3
                        182             PUBLIC  ECO_PAGE_REGISTER2
                        183             PUBLIC  ECO_PAGE_REGISTER1
                        184             PUBLIC  ECO_PAGE_PREV_VID
                        185             PUBLIC  ECO_PAGE_PREV_PID
                        186             PUBLIC  ECO_PAGE_SPI_CONN
                        187             PUBLIC  ECO_PAGE_TABLE
                        188             PUBLIC  eco_page_manager
                        189             PUBLIC  eco_page_init
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/02/09 01:19:52 PAGE     4

                        190     
------                  191             RSEG  ?DT?eco_page_manager?ECO_PAGE
000000                  192     ?eco_page_manager?BYTE:
000004                  193             ORG  4
000004                  194             seg?140:   DS   2
000000                  195             ORG  0
000000                  196               i?141:   DS   2
000002                  197             ORG  2
000002                  198      page_index?142:   DS   2
                        199     
------                  200             RSEG  ?ID?ECO_PAGE
000000                  201      ECO_PAGE_TABLE:   DS   6
000006                  202     ECO_PAGE_REGISTER1:   DS   1
000007                  203     ECO_PAGE_REGISTER2:   DS   1
000008                  204     ECO_PAGE_REGISTER3:   DS   1
000009                  205     ECO_PAGE_REGISTER4:   DS   1
00000A                  206     ECO_PAGE_REGISTER5:   DS   1
00000B                  207     ECO_PAGE_REGISTER6:   DS   1
00000C                  208     ECO_PAGE_REGISTER7:   DS   1
                        209     
------                  210             RSEG  ?DT?ECO_PAGE
000000                  211     ECO_PAGE_SPI_CONN:   DS   1
000001                  212     ECO_PAGE_PREV_PID:   DS   2
000003                  213     ECO_PAGE_PREV_VID:   DS   2
000005                  214       ECO_PAGE_ADDR:   DS   2
000007                  215     ECO_PAGE_TABLE_INDEX:   DS   1
                        216     ; /*
                        217     ;  * Author(s): Wei-Han Chen (Embedded Platform Lab, NTHU)
                        218     ;  * Copyright (c) 2009 National Tsing Hua University (NTHU) 
                        219     ;  * Permission to copy, modify, and distribute this program is granted 
                        220     ;  * for noncommercial purposes, provided the author(s) and copyright
                        221     ;  * notice are retained. All other uses require explicit written
                        222     ;  * permission from NTHU. 
                        223     ;  *
                        224     ;  * Eco Paging Library 
                        225     ;  *
                        226     ;  * Wei-Han Chen <xwaynec@gmail.com> 
                        227     ;  * 2009/2/13
                        228     ;  */
                        229     ; 
                        230     ; #include "eco_page.h"
                        231     ; #include "eeprom/eeprom.h"
                        232     ; 
                        233     ; //#define ECO_PAGE_SIZE 256
                        234     ; #define ECO_PAGE_SIZE 128
                        235     ; //#define ECO_PAGE_SIZE 64
                        236     ; 
                        237     ; //#define ECO_PAGE_ADDR_OFFSET 47
                        238     ; //#define ECO_PAGE_ADDR_OFFSET 23
                        239     ; //#define ECO_PAGE_ADDR_OFFSET 11 
                        240     ; 
                        241     ; //test for data compress
                        242     ; #define ECO_PAGE_ADDR_OFFSET 29
                        243     ; 
                        244     ; #if ECO_PAGE_SIZE == 64
                        245     ;       
                        246     ;       #define ECO_PAGE_ENTRY  (64-ECO_PAGE_ADDR_OFFSET)
                        247     ;       #define ECO_PAGE_SHIFT  6
                        248     ;       #define ECO_PAGE_MASK   0x003F
                        249     ;       #define ECO_PAGE_MOV_MASK       0xFFC0
                        250     ; 
                        251     ;       unsigned int idata ECO_PAGE_TABLE[ECO_PAGE_ENTRY];
                        252     ;       //Eco page virtual address id
                        253     ;       unsigned int ECO_PAGE_PREV_VID;
                        254     ;       //Eco page physical address id 
                        255     ;       unsigned int ECO_PAGE_PREV_PID;
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/02/09 01:19:52 PAGE     5

                        256     ; 
                        257     ; #elif ECO_PAGE_SIZE == 128
                        258     ;       
                        259     ;       #define ECO_PAGE_ENTRY (32-ECO_PAGE_ADDR_OFFSET)
                        260     ;       #define ECO_PAGE_SHIFT  7
                        261     ;       #define ECO_PAGE_MASK   0x007F
                        262     ;       #define ECO_PAGE_MOV_MASK       0xFF80
                        263     ; 
                        264     ;       unsigned int idata ECO_PAGE_TABLE[ECO_PAGE_ENTRY];
                        265     ;       //Eco page virtual address id
                        266     ;       unsigned int ECO_PAGE_PREV_VID;
                        267     ;       //Eco page physical address id 
                        268     ;       unsigned int ECO_PAGE_PREV_PID;
                        269     ; 
                        270     ; #elif ECO_PAGE_SIZE == 256
                        271     ;       
                        272     ;       #define ECO_PAGE_ENTRY  (16-ECO_PAGE_ADDR_OFFSET)
                        273     ;       #define ECO_PAGE_SHIFT  8       
                        274     ;       #define ECO_PAGE_MASK   0x00FF
                        275     ;       #define ECO_PAGE_MOV_MASK       0xFF00
                        276     ; 
                        277     ;       unsigned int ECO_PAGE_TABLE[ECO_PAGE_ENTRY];
                        278     ;       //Eco page virtual address id
                        279     ;       unsigned char ECO_PAGE_PREV_VID;
                        280     ;       //Eco page physical address id 
                        281     ;       unsigned char ECO_PAGE_PREV_PID;
                        282     ; 
                        283     ; #endif
                        284     ; 
                        285     ; unsigned char ECO_PAGE_TABLE_INDEX;
                        286     ; unsigned int ECO_PAGE_ADDR;
                        287     ; unsigned char ECO_PAGE_SPI_CONN;
                        288     ; 
                        289     ; unsigned char idata ECO_PAGE_REGISTER1;
                        290     ; unsigned char idata ECO_PAGE_REGISTER2;
                        291     ; unsigned char idata ECO_PAGE_REGISTER3;
                        292     ; unsigned char idata ECO_PAGE_REGISTER4;
                        293     ; unsigned char idata ECO_PAGE_REGISTER5;
                        294     ; unsigned char idata ECO_PAGE_REGISTER6;
                        295     ; unsigned char idata ECO_PAGE_REGISTER7;
                        296     ; 
                        297     ; 
                        298     ; void eco_page_init()
                        299     
------                  300             RSEG  ?PR?eco_page_init?ECO_PAGE
000000                  301     eco_page_init:
                        302                             ; SOURCE LINE # 83
                        303     ; {
                        304                             ; SOURCE LINE # 84
                        305     ;       ECO_PAGE_TABLE_INDEX = ECO_PAGE_ENTRY - 1;
                        306                             ; SOURCE LINE # 85
000000 750002     F     307             MOV     ECO_PAGE_TABLE_INDEX,#02H
                        308     ;       
                        309     ;       ECO_PAGE_ADDR = 0;
                        310                             ; SOURCE LINE # 87
000003 E4               311             CLR     A
000004 F500       F     312             MOV     ECO_PAGE_ADDR,A
000006 F500       F     313             MOV     ECO_PAGE_ADDR+01H,A
                        314     ;       ECO_PAGE_PREV_VID = 0;
                        315                             ; SOURCE LINE # 88
000008 F500       F     316             MOV     ECO_PAGE_PREV_VID,A
00000A F500       F     317             MOV     ECO_PAGE_PREV_VID+01H,A
                        318     ;       ECO_PAGE_PREV_PID = 0;
                        319                             ; SOURCE LINE # 89
00000C F500       F     320             MOV     ECO_PAGE_PREV_PID,A
00000E F500       F     321             MOV     ECO_PAGE_PREV_PID+01H,A
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/02/09 01:19:52 PAGE     6

                        322     ; 
                        323     ; }
                        324                             ; SOURCE LINE # 91
000010 22               325             RET     
                        326     ; END OF eco_page_init
                        327     
                        328     ; 
                        329     ; //LRU page replacement
                        330     ; /*void eco_page_manager()
                        331     ; {
                        332     ;       unsigned int i;
                        333     ;       unsigned int page_index = -1;
                        334     ; 
                        335     ;       //if page id is the same with the last page id
                        336     ;       if(((ECO_PAGE_ADDR >> 8) & 0x7F) == (ECO_PAGE_PREV_PID & 0x7F))
                        337     ;       {
                        338     ;               //virtual address id + function offset
                        339     ;               ECO_PAGE_ADDR = (ECO_PAGE_PREV_VID << 8) + (ECO_PAGE_ADDR & 0x00FF);
                        340     ;               #pragma asm
                        341     ;               //eco_page_function_call        
                        342     ;               //MOV     DPH,ECO_PAGE_ADDR
                        343     ;               //MOV     DPL,ECO_PAGE_ADDR+01H
                        344     ;               //LCALL ?C?ICALL2
                        345     ;               #pragma endasm
                        346     ;               return ;
                        347     ;       }       
                        348     ;       
                        349     ;       //check page table
                        350     ;       for(i=0;i<ECO_PAGE_ENTRY;i++)
                        351     ;       {
                        352     ;               if((ECO_PAGE_ADDR >> 8) == ECO_PAGE_TABLE[i])
                        353     ;               {
                        354     ;                       page_index = i;
                        355     ;                       
                        356     ;                       //set LRU bit is 1
                        357     ;                       ECO_PAGE_TABLE[i] = ECO_PAGE_TABLE[i] | 0x80;
                        358     ;                       break;
                        359     ;               }
                        360     ;       }
                        361     ; 
                        362     ;       if(page_index != -1)
                        363     ;       {
                        364     ;               //store function physical addres id 
                        365     ;               ECO_PAGE_PREV_PID = ECO_PAGE_ADDR >> 8;
                        366     ;       
                        367     ;               //memory page is in ram
                        368     ;               ECO_PAGE_ADDR = ((page_index + ECO_PAGE_ADDR_OFFSET) << 8) + (ECO_PAGE_A
                               DDR & 0x00FF);
                        369     ; 
                        370     ;               //cache the virtual address id
                        371     ;               ECO_PAGE_PREV_VID = ECO_PAGE_ADDR >> 8;
                        372     ; 
                        373     ;               #pragma asm
                        374     ;               //eco_page_function_call
                        375     ;               //MOV     DPH,ECO_PAGE_ADDR
                        376     ;               //MOV     DPL,ECO_PAGE_ADDR+01H
                        377     ;               //LCALL ?C?ICALL2
                        378     ;               #pragma endasm
                        379     ; 
                        380     ;               return ;
                        381     ;       }       
                        382     ;       else
                        383     ;       {
                        384     ;               //page fault
                        385     ;               for(i=ECO_PAGE_TABLE_INDEX+1; ;i=(i+1)%10)
                        386     ;               {
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/02/09 01:19:52 PAGE     7

                        387     ;                       if((ECO_PAGE_TABLE[i] & 0x80) == 0x80)
                        388     ;                       {
                        389     ;                               //LRU bit is 1 and then set this bit is 0
                        390     ;                               ECO_PAGE_TABLE[i] = ECO_PAGE_TABLE[i] & 0x7F;
                        391     ;                       }
                        392     ;                       else
                        393     ;                       {
                        394     ;                               unsigned char xdata *seg = (unsigned char xdata *)((i + 
                               ECO_PAGE_ADDR_OFFSET)<<8);
                        395     ;                               unsigned int j;
                        396     ;                               
                        397     ;                               //memory page is in ram
                        398     ;                               eeprom_init();
                        399     ; 
                        400     ;                               //mov code from eeprom to external ram
                        401     ;                               for(j=0;j<256;j++)
                        402     ;                               {
                        403     ;                                       *(seg+j) = eeprom_read(ECO_ADDR_SHIFT(ECO_PAGE_A
                               DDR & 0xFF00 ) +j);
                        404     ;                               }
                        405     ;                               
                        406     ;                               //update page table to connect this physical address id 
                               with virtual address id 
                        407     ;                               ECO_PAGE_TABLE[i] = ECO_PAGE_ADDR >> 8;
                        408     ; 
                        409     ;                               //store physical address id
                        410     ;                               ECO_PAGE_PREV_PID = ECO_PAGE_TABLE[i];
                        411     ; 
                        412     ;                               //update page address e.g.  (page_id<<8) + page_offset
                        413     ;                               ECO_PAGE_ADDR = ((i + ECO_PAGE_ADDR_OFFSET) << 8) + (ECO
                               _PAGE_ADDR & 0x00FF);
                        414     ; 
                        415     ;                               //store virtual address id 
                        416     ;                               ECO_PAGE_PREV_VID = ECO_PAGE_ADDR >> 8; 
                        417     ; 
                        418     ;                               //mov to the next index
                        419     ;                               ECO_PAGE_TABLE_INDEX = i;
                        420     ; 
                        421     ;                               //jump  to function address
                        422     ;                               #pragma asm
                        423     ;                               //eco_page_function_call
                        424     ;                               //MOV     DPH,ECO_PAGE_ADDR
                        425     ;                               //MOV     DPL,ECO_PAGE_ADDR+01H
                        426     ;                               //LCALL        ?C?ICALL2               
                        427     ;                               #pragma endasm
                        428     ;                               
                        429     ;                               return ;
                        430     ;                               
                        431     ;                       }
                        432     ;               }
                        433     ;                       
                        434     ;       }
                        435     ;                               
                        436     ; }
                        437     ; */
                        438     ; 
                        439     ; void eco_page_manager()
                        440     
------                  441             RSEG  ?PR?eco_page_manager?ECO_PAGE
000000                  442     eco_page_manager:
                        443             USING   0
                        444                             ; SOURCE LINE # 203
                        445     ; {
                        446                             ; SOURCE LINE # 204
                        447     ;       unsigned int i;
                        448     ;       unsigned int page_index = -1; 
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/02/09 01:19:52 PAGE     8

                        449                             ; SOURCE LINE # 206
000000 74FF             450             MOV     A,#0FFH
000002 F500       F     451             MOV     page_index?142,A
000004 F500       F     452             MOV     page_index?142+01H,A
                        453     ; 
                        454     ;       //Check POP instruction 
                        455     ;       //for(i=0;i<10;i++)
                        456     ;       //{    
                        457     ;       //      blink_led();
                        458     ;       //      mdelay(200);
                        459     ;       //}    
                        460     ;       //mdelay(1000);
                        461     ;       
                        462     ;       //if page id is the same with the last page id
                        463     ;       if((ECO_PAGE_ADDR >> ECO_PAGE_SHIFT) == ECO_PAGE_PREV_PID)
                        464                             ; SOURCE LINE # 217
000006 E500       F     465             MOV     A,ECO_PAGE_ADDR+01H
000008 AE00       F     466             MOV     R6,ECO_PAGE_ADDR
00000A 7807             467             MOV     R0,#07H
00000C                  468     ?C0013:
00000C CE               469             XCH     A,R6
00000D C3               470             CLR     C
00000E 13               471             RRC     A
00000F CE               472             XCH     A,R6
000010 13               473             RRC     A
000011 D8F9             474             DJNZ    R0,?C0013
000013 B50020           475             CJNE    A,ECO_PAGE_PREV_PID+01H,?C0002
000016 EE               476             MOV     A,R6
000017 B5001C           477             CJNE    A,ECO_PAGE_PREV_PID,?C0002
                        478     ;       {
                        479                             ; SOURCE LINE # 218
                        480     ;               //virtual address id + function offset
                        481     ;               ECO_PAGE_ADDR = (ECO_PAGE_PREV_VID << ECO_PAGE_SHIFT) + (ECO_PAGE_ADDR &
                                ECO_PAGE_MASK);
                        482                             ; SOURCE LINE # 220
00001A E500       F     483             MOV     A,ECO_PAGE_PREV_VID+01H
00001C AE00       F     484             MOV     R6,ECO_PAGE_PREV_VID
00001E 7807             485             MOV     R0,#07H
000020                  486     ?C0015:
000020 C3               487             CLR     C
000021 33               488             RLC     A
000022 CE               489             XCH     A,R6
000023 33               490             RLC     A
000024 CE               491             XCH     A,R6
000025 D8F9             492             DJNZ    R0,?C0015
000027 FF               493             MOV     R7,A
000028 7C00             494             MOV     R4,#00H
00002A E500       F     495             MOV     A,ECO_PAGE_ADDR+01H
00002C 547F             496             ANL     A,#07FH
00002E 2F               497             ADD     A,R7
00002F F500       F     498             MOV     ECO_PAGE_ADDR+01H,A
000031 EC               499             MOV     A,R4
000032 3E               500             ADDC    A,R6
000033 F500       F     501             MOV     ECO_PAGE_ADDR,A
                        502     ;               #pragma asm
                        503     ;               //eco_page_function_call
                        504               
000035 22               505             RET     
                        506     ;               #pragma endasm
                        507     ;               return ;
                        508     ;       }       
                        509                             ; SOURCE LINE # 225
000036                  510     ?C0002:
                        511     ;                               
                        512     ;       //Check Table   
                        513     ;       for(i=0;i<ECO_PAGE_ENTRY;i++)
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/02/09 01:19:52 PAGE     9

                        514                             ; SOURCE LINE # 228
000036 E4               515             CLR     A
000037 F500       F     516             MOV     i?141,A
000039 F500       F     517             MOV     i?141+01H,A
00003B                  518     ?C0004:
                        519     ;       {   
                        520                             ; SOURCE LINE # 229
                        521     ;               if((ECO_PAGE_ADDR >> ECO_PAGE_SHIFT) == ECO_PAGE_TABLE[i])
                        522                             ; SOURCE LINE # 230
00003B E500       F     523             MOV     A,i?141+01H
00003D 25E0             524             ADD     A,ACC
00003F 2400       F     525             ADD     A,#LOW (ECO_PAGE_TABLE+01H)
000041 F9               526             MOV     R1,A
000042 E500       F     527             MOV     A,ECO_PAGE_ADDR+01H
000044 AE00       F     528             MOV     R6,ECO_PAGE_ADDR
000046 7807             529             MOV     R0,#07H
000048                  530     ?C0016:
000048 CE               531             XCH     A,R6
000049 C3               532             CLR     C
00004A 13               533             RRC     A
00004B CE               534             XCH     A,R6
00004C 13               535             RRC     A
00004D D8F9             536             DJNZ    R0,?C0016
00004F 67               537             XRL     A,@R1
000050 7003             538             JNZ     ?C0017
000052 EE               539             MOV     A,R6
000053 19               540             DEC     R1
000054 67               541             XRL     A,@R1
000055                  542     ?C0017:
000055 7008             543             JNZ     ?C0006
                        544     ;               {
                        545                             ; SOURCE LINE # 231
                        546     ;                       page_index = i;
                        547                             ; SOURCE LINE # 232
000057 850000     F     548             MOV     page_index?142,i?141
00005A 850000     F     549             MOV     page_index?142+01H,i?141+01H
                        550     ;                       break;
                        551                             ; SOURCE LINE # 233
00005D 800E             552             SJMP    ?C0005
                        553     ;               }
                        554                             ; SOURCE LINE # 234
                        555     ;       }
                        556                             ; SOURCE LINE # 235
00005F                  557     ?C0006:
00005F 0500       F     558             INC     i?141+01H
000061 E500       F     559             MOV     A,i?141+01H
000063 7002             560             JNZ     ?C0018
000065 0500       F     561             INC     i?141
000067                  562     ?C0018:
000067 6403             563             XRL     A,#03H
000069 4500       F     564             ORL     A,i?141
00006B 70CE             565             JNZ     ?C0004
00006D                  566     ?C0005:
                        567     ; 
                        568     ;       if(page_index != -1) 
                        569                             ; SOURCE LINE # 237
00006D E500       F     570             MOV     A,page_index?142+01H
00006F F4               571             CPL     A
000070 7003             572             JNZ     ?C0019
000072 E500       F     573             MOV     A,page_index?142
000074 F4               574             CPL     A
000075                  575     ?C0019:
000075 6044             576             JZ      ?C0008
                        577     ;       {  
                        578                             ; SOURCE LINE # 238
                        579     ;               //store function physical addres id 
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/02/09 01:19:52 PAGE    10

                        580     ;               ECO_PAGE_PREV_PID = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;
                        581                             ; SOURCE LINE # 240
000077 E500       F     582             MOV     A,ECO_PAGE_ADDR+01H
000079 AE00       F     583             MOV     R6,ECO_PAGE_ADDR
00007B 7807             584             MOV     R0,#07H
00007D                  585     ?C0020:
00007D CE               586             XCH     A,R6
00007E C3               587             CLR     C
00007F 13               588             RRC     A
000080 CE               589             XCH     A,R6
000081 13               590             RRC     A
000082 D8F9             591             DJNZ    R0,?C0020
000084 F500       F     592             MOV     ECO_PAGE_PREV_PID+01H,A
000086 8E00       F     593             MOV     ECO_PAGE_PREV_PID,R6
                        594     ;       
                        595     ;               //memory page is in ram
                        596     ;               ECO_PAGE_ADDR = ((page_index + ECO_PAGE_ADDR_OFFSET) << ECO_PAGE_SHIFT) 
                               + (ECO_PAGE_ADDR & ECO_PAGE_MASK);
                        597                             ; SOURCE LINE # 243
000088 E500       F     598             MOV     A,page_index?142+01H
00008A 241D             599             ADD     A,#01DH
00008C FF               600             MOV     R7,A
00008D E4               601             CLR     A
00008E 3500       F     602             ADDC    A,page_index?142
000090 FE               603             MOV     R6,A
000091 EF               604             MOV     A,R7
000092 7807             605             MOV     R0,#07H
000094                  606     ?C0021:
000094 C3               607             CLR     C
000095 33               608             RLC     A
000096 CE               609             XCH     A,R6
000097 33               610             RLC     A
000098 CE               611             XCH     A,R6
000099 D8F9             612             DJNZ    R0,?C0021
00009B FF               613             MOV     R7,A
00009C 7C00             614             MOV     R4,#00H
00009E E500       F     615             MOV     A,ECO_PAGE_ADDR+01H
0000A0 547F             616             ANL     A,#07FH
0000A2 2F               617             ADD     A,R7
0000A3 F500       F     618             MOV     ECO_PAGE_ADDR+01H,A
0000A5 EC               619             MOV     A,R4
0000A6 3E               620             ADDC    A,R6
0000A7 F500       F     621             MOV     ECO_PAGE_ADDR,A
                        622     ; 
                        623     ;               //cache the virtual address id
                        624     ;               ECO_PAGE_PREV_VID = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;
                        625                             ; SOURCE LINE # 246
0000A9 E500       F     626             MOV     A,ECO_PAGE_ADDR+01H
0000AB AE00       F     627             MOV     R6,ECO_PAGE_ADDR
0000AD 7807             628             MOV     R0,#07H
0000AF                  629     ?C0022:
0000AF CE               630             XCH     A,R6
0000B0 C3               631             CLR     C
0000B1 13               632             RRC     A
0000B2 CE               633             XCH     A,R6
0000B3 13               634             RRC     A
0000B4 D8F9             635             DJNZ    R0,?C0022
0000B6 F500       F     636             MOV     ECO_PAGE_PREV_VID+01H,A
0000B8 8E00       F     637             MOV     ECO_PAGE_PREV_VID,R6
                        638     ; 
                        639     ;               #pragma asm
                        640     ;               //eco_page_function_call
                        641               
                        642     ;               //MOV     DPH,ECO_PAGE_ADDR
                        643               
                        644     ;               //MOV     DPL,ECO_PAGE_ADDR+01H
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/02/09 01:19:52 PAGE    11

                        645               
                        646     ;               //LCALL ?C?ICALL2
                        647               
                        648     ;               #pragma endasm
                        649     ;       }   
                        650                             ; SOURCE LINE # 254
0000BA 22               651             RET     
0000BB                  652     ?C0008:
                        653     ;       else
                        654     ;       {
                        655                             ; SOURCE LINE # 256
                        656     ;               //page fault
                        657     ;               // Move Data from EEPROM to iRAM 
                        658     ;               unsigned char xdata *seg = (unsigned char xdata *)((ECO_PAGE_TABLE_INDEX
                                + ECO_PAGE_ADDR_OFFSET) << ECO_PAGE_SHIFT);
                        659                             ; SOURCE LINE # 259
0000BB E500       F     660             MOV     A,ECO_PAGE_TABLE_INDEX
0000BD 241D             661             ADD     A,#01DH
0000BF FF               662             MOV     R7,A
0000C0 E4               663             CLR     A
0000C1 33               664             RLC     A
0000C2 FE               665             MOV     R6,A
0000C3 EF               666             MOV     A,R7
0000C4 7807             667             MOV     R0,#07H
0000C6                  668     ?C0023:
0000C6 C3               669             CLR     C
0000C7 33               670             RLC     A
0000C8 CE               671             XCH     A,R6
0000C9 33               672             RLC     A
0000CA CE               673             XCH     A,R6
0000CB D8F9             674             DJNZ    R0,?C0023
0000CD 8E00       F     675             MOV     seg?140,R6
0000CF F500       F     676             MOV     seg?140+01H,A
                        677     ;               
                        678     ;               //memory page is in ram
                        679     ;               eeprom_init();
                        680                             ; SOURCE LINE # 262
0000D1 120000     E     681             LCALL   eeprom_init
                        682     ; 
                        683     ;               //mov code from eeprom to external ram
                        684     ;               for(i=0;i<ECO_PAGE_SIZE;i++)
                        685                             ; SOURCE LINE # 265
0000D4 E4               686             CLR     A
0000D5 F500       F     687             MOV     i?141,A
0000D7 F500       F     688             MOV     i?141+01H,A
0000D9                  689     ?C0010:
                        690     ;               {
                        691                             ; SOURCE LINE # 266
                        692     ;                       *(seg+i) = eeprom_read(ECO_ADDR_SHIFT(ECO_PAGE_ADDR & ECO_PAGE_M
                               OV_MASK) +i);
                        693                             ; SOURCE LINE # 267
0000D9 E500       F     694             MOV     A,ECO_PAGE_ADDR+01H
0000DB 5480             695             ANL     A,#080H
0000DD 2403             696             ADD     A,#03H
0000DF FF               697             MOV     R7,A
0000E0 E4               698             CLR     A
0000E1 3500       F     699             ADDC    A,ECO_PAGE_ADDR
0000E3 CF               700             XCH     A,R7
0000E4 2500       F     701             ADD     A,i?141+01H
0000E6 CF               702             XCH     A,R7
0000E7 3500       F     703             ADDC    A,i?141
0000E9 FE               704             MOV     R6,A
0000EA 120000     E     705             LCALL   _eeprom_read
0000ED E500       F     706             MOV     A,seg?140+01H
0000EF 2500       F     707             ADD     A,i?141+01H
0000F1 F582             708             MOV     DPL,A
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/02/09 01:19:52 PAGE    12

0000F3 E500       F     709             MOV     A,seg?140
0000F5 3500       F     710             ADDC    A,i?141
0000F7 F583             711             MOV     DPH,A
0000F9 EF               712             MOV     A,R7
0000FA F0               713             MOVX    @DPTR,A
                        714     ;               }
                        715                             ; SOURCE LINE # 268
0000FB 0500       F     716             INC     i?141+01H
0000FD E500       F     717             MOV     A,i?141+01H
0000FF 7002             718             JNZ     ?C0024
000101 0500       F     719             INC     i?141
000103                  720     ?C0024:
000103 C3               721             CLR     C
000104 9480             722             SUBB    A,#080H
000106 E500       F     723             MOV     A,i?141
000108 9400             724             SUBB    A,#00H
00010A 40CD             725             JC      ?C0010
00010C                  726     ?C0011:
                        727     ;               
                        728     ;               //update page table to connect this physical address id with virtual add
                               ress id 
                        729     ;               ECO_PAGE_TABLE[ECO_PAGE_TABLE_INDEX] = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;
                        730                             ; SOURCE LINE # 271
00010C E500       F     731             MOV     A,ECO_PAGE_ADDR+01H
00010E AE00       F     732             MOV     R6,ECO_PAGE_ADDR
000110 7807             733             MOV     R0,#07H
000112                  734     ?C0025:
000112 CE               735             XCH     A,R6
000113 C3               736             CLR     C
000114 13               737             RRC     A
000115 CE               738             XCH     A,R6
000116 13               739             RRC     A
000117 D8F9             740             DJNZ    R0,?C0025
000119 FF               741             MOV     R7,A
00011A E500       F     742             MOV     A,ECO_PAGE_TABLE_INDEX
00011C 25E0             743             ADD     A,ACC
00011E 2400       F     744             ADD     A,#LOW (ECO_PAGE_TABLE)
000120 F8               745             MOV     R0,A
000121 A606             746             MOV     @R0,AR6
000123 08               747             INC     R0
000124 A607             748             MOV     @R0,AR7
                        749     ; 
                        750     ;               //store physical address id
                        751     ;               //ECO_PAGE_PREV_PID = ECO_PAGE_TABLE[ECO_PAGE_TABLE_INDEX];
                        752     ;               ECO_PAGE_PREV_PID = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;
                        753                             ; SOURCE LINE # 275
000126 8E00       F     754             MOV     ECO_PAGE_PREV_PID,R6
000128 8F00       F     755             MOV     ECO_PAGE_PREV_PID+01H,R7
                        756     ; 
                        757     ;               //update page address
                        758     ;               ECO_PAGE_ADDR = ((ECO_PAGE_TABLE_INDEX + ECO_PAGE_ADDR_OFFSET) << ECO_PA
                               GE_SHIFT) + (ECO_PAGE_ADDR & ECO_PAGE_MASK);
                        759                             ; SOURCE LINE # 278
00012A E500       F     760             MOV     A,ECO_PAGE_TABLE_INDEX
00012C FD               761             MOV     R5,A
00012D 7C00             762             MOV     R4,#00H
00012F 241D             763             ADD     A,#01DH
000131 FF               764             MOV     R7,A
000132 EC               765             MOV     A,R4
000133 33               766             RLC     A
000134 FE               767             MOV     R6,A
000135 EF               768             MOV     A,R7
000136 7807             769             MOV     R0,#07H
000138                  770     ?C0026:
000138 C3               771             CLR     C
000139 33               772             RLC     A
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/02/09 01:19:52 PAGE    13

00013A CE               773             XCH     A,R6
00013B 33               774             RLC     A
00013C CE               775             XCH     A,R6
00013D D8F9             776             DJNZ    R0,?C0026
00013F FF               777             MOV     R7,A
000140 7A00             778             MOV     R2,#00H
000142 E500       F     779             MOV     A,ECO_PAGE_ADDR+01H
000144 547F             780             ANL     A,#07FH
000146 2F               781             ADD     A,R7
000147 F500       F     782             MOV     ECO_PAGE_ADDR+01H,A
000149 EA               783             MOV     A,R2
00014A 3E               784             ADDC    A,R6
00014B F500       F     785             MOV     ECO_PAGE_ADDR,A
                        786     ; 
                        787     ;               //store virtual address id 
                        788     ;               ECO_PAGE_PREV_VID = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;    
                        789                             ; SOURCE LINE # 281
00014D E500       F     790             MOV     A,ECO_PAGE_ADDR+01H
00014F AE00       F     791             MOV     R6,ECO_PAGE_ADDR
000151 7807             792             MOV     R0,#07H
000153                  793     ?C0027:
000153 CE               794             XCH     A,R6
000154 C3               795             CLR     C
000155 13               796             RRC     A
000156 CE               797             XCH     A,R6
000157 13               798             RRC     A
000158 D8F9             799             DJNZ    R0,?C0027
00015A F500       F     800             MOV     ECO_PAGE_PREV_VID+01H,A
00015C 8E00       F     801             MOV     ECO_PAGE_PREV_VID,R6
                        802     ; 
                        803     ;               //mov to the next index
                        804     ;               ECO_PAGE_TABLE_INDEX = (ECO_PAGE_TABLE_INDEX + 1) % ECO_PAGE_ENTRY;
                        805                             ; SOURCE LINE # 284
00015E ED               806             MOV     A,R5
00015F 2401             807             ADD     A,#01H
000161 FF               808             MOV     R7,A
000162 E4               809             CLR     A
000163 3C               810             ADDC    A,R4
000164 FE               811             MOV     R6,A
000165 7C00             812             MOV     R4,#00H
000167 7D03             813             MOV     R5,#03H
000169 120000     E     814             LCALL   ?C?UIDIV
00016C 8D00       F     815             MOV     ECO_PAGE_TABLE_INDEX,R5
                        816     ;                       
                        817     ;               //jump  to function address
                        818     ;               #pragma asm
                        819     ;               //eco_page_function_call
                        820               
                        821     ;               //MOV     DPH,ECO_PAGE_ADDR
                        822               
                        823     ;               //MOV     DPL,ECO_PAGE_ADDR+01H
                        824               
                        825     ;               //LCALL        ?C?ICALL2               
                        826               
                        827     ;               #pragma endasm
                        828     ; 
                        829     ;       }
                        830                             ; SOURCE LINE # 294
                        831     ; 
                        832     ; }
                        833                             ; SOURCE LINE # 296
00016E                  834     ?C0003:
00016E 22               835             RET     
                        836     ; END OF eco_page_manager
                        837     
                        838             END
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/02/09 01:19:52 PAGE    14

SYMBOL TABLE LISTING
------ ----- -------


N A M E                                    T Y P E  V A L U E     ATTRIBUTES

?C0002. . . . . . . . . . . . . . . . .    C  ADDR  0036H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0003. . . . . . . . . . . . . . . . .    C  ADDR  016EH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0004. . . . . . . . . . . . . . . . .    C  ADDR  003BH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0005. . . . . . . . . . . . . . . . .    C  ADDR  006DH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0006. . . . . . . . . . . . . . . . .    C  ADDR  005FH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0008. . . . . . . . . . . . . . . . .    C  ADDR  00BBH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0010. . . . . . . . . . . . . . . . .    C  ADDR  00D9H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0011. . . . . . . . . . . . . . . . .    C  ADDR  010CH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0013. . . . . . . . . . . . . . . . .    C  ADDR  000CH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0015. . . . . . . . . . . . . . . . .    C  ADDR  0020H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0016. . . . . . . . . . . . . . . . .    C  ADDR  0048H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0017. . . . . . . . . . . . . . . . .    C  ADDR  0055H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0018. . . . . . . . . . . . . . . . .    C  ADDR  0067H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0019. . . . . . . . . . . . . . . . .    C  ADDR  0075H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0020. . . . . . . . . . . . . . . . .    C  ADDR  007DH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0021. . . . . . . . . . . . . . . . .    C  ADDR  0094H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0022. . . . . . . . . . . . . . . . .    C  ADDR  00AFH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0023. . . . . . . . . . . . . . . . .    C  ADDR  00C6H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0024. . . . . . . . . . . . . . . . .    C  ADDR  0103H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0025. . . . . . . . . . . . . . . . .    C  ADDR  0112H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0026. . . . . . . . . . . . . . . . .    C  ADDR  0138H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0027. . . . . . . . . . . . . . . . .    C  ADDR  0153H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C?UIDIV. . . . . . . . . . . . . . . .    C  ADDR  -------       EXT
?DT?ECO_PAGE. . . . . . . . . . . . . .    D  SEG   000008H       REL=UNIT, ALN=BYTE
?DT?ECO_PAGE_MANAGER?ECO_PAGE . . . . .    D  SEG   000006H       REL=UNIT, ALN=BYTE
?ECO_PAGE_MANAGER?BYTE. . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?ECO_PAGE_MANAGER?ECO_PAGE
?ID?ECO_PAGE. . . . . . . . . . . . . .    I  SEG   00000DH       REL=UNIT, ALN=BYTE
?PR?ECO_PAGE_INIT?ECO_PAGE. . . . . . .    C  SEG   000011H       REL=UNIT, ALN=BYTE
?PR?ECO_PAGE_MANAGER?ECO_PAGE . . . . .    C  SEG   00016FH       REL=UNIT, ALN=BYTE
_EEPROM_READ. . . . . . . . . . . . . .    C  ADDR  -------       EXT
AC. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.6   A   
ACC . . . . . . . . . . . . . . . . . .    D  ADDR  00E0H     A   
ADCCON. . . . . . . . . . . . . . . . .    D  ADDR  00A1H     A   
ADCDATAH. . . . . . . . . . . . . . . .    D  ADDR  00A2H     A   
ADCDATAL. . . . . . . . . . . . . . . .    D  ADDR  00A3H     A   
ADCSTATIC . . . . . . . . . . . . . . .    D  ADDR  00A4H     A   
AR6 . . . . . . . . . . . . . . . . . .    D  ADDR  0006H     A   
AR7 . . . . . . . . . . . . . . . . . .    D  ADDR  0007H     A   
B . . . . . . . . . . . . . . . . . . .    D  ADDR  00F0H     A   
C_T2. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.1   A   
CE. . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.6   A   
CK_CTRL . . . . . . . . . . . . . . . .    D  ADDR  00B6H     A   
CKCON . . . . . . . . . . . . . . . . .    D  ADDR  008EH     A   
CLK1. . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.1   A   
CLK2. . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.5   A   
CP_RL2. . . . . . . . . . . . . . . . .    B  ADDR  00C8H.0   A   
CPRL2 . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.0   A   
CS. . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.3   A   
CT2 . . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.1   A   
CY. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.7   A   
DATA? . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.0   A   
DEV_OFFSET. . . . . . . . . . . . . . .    D  ADDR  00BEH     A   
DIN0. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.2   A   
DIO0. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.0   A   
DIO1. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.1   A   
DIO2. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.0   A   
DIO3. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.1   A   
DIO4. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.2   A   
DIO5. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.3   A   
DIO6. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.4   A   
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/02/09 01:19:52 PAGE    15

DIO7. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.5   A   
DIO8. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.6   A   
DIO9. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.7   A   
DOUT2 . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.4   A   
DPH . . . . . . . . . . . . . . . . . .    D  ADDR  0083H     A   
DPH0. . . . . . . . . . . . . . . . . .    D  ADDR  0083H     A   
DPH1. . . . . . . . . . . . . . . . . .    D  ADDR  0085H     A   
DPL . . . . . . . . . . . . . . . . . .    D  ADDR  0082H     A   
DPL0. . . . . . . . . . . . . . . . . .    D  ADDR  0082H     A   
DPL1. . . . . . . . . . . . . . . . . .    D  ADDR  0084H     A   
DPS . . . . . . . . . . . . . . . . . .    D  ADDR  0086H     A   
DR1 . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.2   A   
DR2 . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.6   A   
DR2_CE. . . . . . . . . . . . . . . . .    B  ADDR  00A0H.6   A   
EA. . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.7   A   
ECO_PAGE. . . . . . . . . . . . . . . .    -- ----  -------       
ECO_PAGE_ADDR . . . . . . . . . . . . .    D  ADDR  0005H     R   SEG=?DT?ECO_PAGE
ECO_PAGE_INIT . . . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?ECO_PAGE_INIT?ECO_PAGE
ECO_PAGE_MANAGER. . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
ECO_PAGE_PREV_PID . . . . . . . . . . .    D  ADDR  0001H     R   SEG=?DT?ECO_PAGE
ECO_PAGE_PREV_VID . . . . . . . . . . .    D  ADDR  0003H     R   SEG=?DT?ECO_PAGE
ECO_PAGE_REGISTER1. . . . . . . . . . .    I  ADDR  0006H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER2. . . . . . . . . . .    I  ADDR  0007H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER3. . . . . . . . . . .    I  ADDR  0008H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER4. . . . . . . . . . .    I  ADDR  0009H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER5. . . . . . . . . . .    I  ADDR  000AH     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER6. . . . . . . . . . .    I  ADDR  000BH     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER7. . . . . . . . . . .    I  ADDR  000CH     R   SEG=?ID?ECO_PAGE
ECO_PAGE_SPI_CONN . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?ECO_PAGE
ECO_PAGE_TABLE. . . . . . . . . . . . .    I  ADDR  0000H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_TABLE_INDEX. . . . . . . . . .    D  ADDR  0007H     R   SEG=?DT?ECO_PAGE
EEPROM_INIT . . . . . . . . . . . . . .    C  ADDR  -------       EXT
EICON . . . . . . . . . . . . . . . . .    D  ADDR  00D8H     A   
EIE . . . . . . . . . . . . . . . . . .    D  ADDR  00E8H     A   
EIP . . . . . . . . . . . . . . . . . .    D  ADDR  00F8H     A   
ES. . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.4   A   
ET0 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.1   A   
ET1 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.3   A   
ET2 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.5   A   
EWDI. . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.4   A   
EX0 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.0   A   
EX1 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.2   A   
EX2 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.0   A   
EX3 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.1   A   
EX4 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.2   A   
EX5 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.3   A   
EXEN2 . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.3   A   
EXF2. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.6   A   
EXIF. . . . . . . . . . . . . . . . . .    D  ADDR  0091H     A   
F0. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.5   A   
F1. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.1   A   
I?141 . . . . . . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?ECO_PAGE_MANAGER?ECO_PAGE
IE. . . . . . . . . . . . . . . . . . .    D  ADDR  00A8H     A   
IE0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.1   A   
IE1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.3   A   
INT0_N. . . . . . . . . . . . . . . . .    B  ADDR  0080H.3   A   
INT1_N. . . . . . . . . . . . . . . . .    B  ADDR  0080H.4   A   
IP. . . . . . . . . . . . . . . . . . .    D  ADDR  00B8H     A   
IT0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.0   A   
IT1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.2   A   
MPAGE . . . . . . . . . . . . . . . . .    D  ADDR  0092H     A   
OV. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.2   A   
P . . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.0   A   
P0. . . . . . . . . . . . . . . . . . .    D  ADDR  0080H     A   
P0_0. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.0   A   
P0_1. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.1   A   
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/02/09 01:19:52 PAGE    16

P0_2. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.2   A   
P0_3. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.3   A   
P0_4. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.4   A   
P0_5. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.5   A   
P0_6. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.6   A   
P0_7. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.7   A   
P0_ALT. . . . . . . . . . . . . . . . .    D  ADDR  0095H     A   
P0_DIR. . . . . . . . . . . . . . . . .    D  ADDR  0094H     A   
P1. . . . . . . . . . . . . . . . . . .    D  ADDR  0090H     A   
P1_0. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.0   A   
P1_1. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.1   A   
P1_2. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.2   A   
P1_ALT. . . . . . . . . . . . . . . . .    D  ADDR  0097H     A   
P1_DIR. . . . . . . . . . . . . . . . .    D  ADDR  0096H     A   
PAGE_INDEX?142. . . . . . . . . . . . .    D  ADDR  0002H     R   SEG=?DT?ECO_PAGE_MANAGER?ECO_PAGE
PCON. . . . . . . . . . . . . . . . . .    D  ADDR  0087H     A   
PS. . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.4   A   
PSW . . . . . . . . . . . . . . . . . .    D  ADDR  00D0H     A   
PT0 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.1   A   
PT1 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.3   A   
PT2 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.5   A   
PWDI. . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.4   A   
PWM . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.7   A   
PWMCON. . . . . . . . . . . . . . . . .    D  ADDR  00A9H     A   
PWMDUTY . . . . . . . . . . . . . . . .    D  ADDR  00AAH     A   
PWR_UP. . . . . . . . . . . . . . . . .    B  ADDR  00A0H.7   A   
PX0 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.0   A   
PX1 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.2   A   
PX2 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.0   A   
PX3 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.1   A   
PX4 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.2   A   
PX5 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.3   A   
RADIO . . . . . . . . . . . . . . . . .    D  ADDR  00A0H     A   
RB8 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.2   A   
RCAP2H. . . . . . . . . . . . . . . . .    D  ADDR  00CBH     A   
RCAP2L. . . . . . . . . . . . . . . . .    D  ADDR  00CAH     A   
RCLK. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.5   A   
REGX_CTRL . . . . . . . . . . . . . . .    D  ADDR  00ADH     A   
REGX_LSB. . . . . . . . . . . . . . . .    D  ADDR  00ACH     A   
REGX_MSB. . . . . . . . . . . . . . . .    D  ADDR  00ABH     A   
REN . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.4   A   
RI. . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.0   A   
RS0 . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.3   A   
RS1 . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.4   A   
RSTREAS . . . . . . . . . . . . . . . .    D  ADDR  00B1H     A   
RXD . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.1   A   
SBUF. . . . . . . . . . . . . . . . . .    D  ADDR  0099H     A   
SCON. . . . . . . . . . . . . . . . . .    D  ADDR  0098H     A   
SEG?140 . . . . . . . . . . . . . . . .    D  ADDR  0004H     R   SEG=?DT?ECO_PAGE_MANAGER?ECO_PAGE
SM0 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.7   A   
SM1 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.6   A   
SM2 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.5   A   
SP. . . . . . . . . . . . . . . . . . .    D  ADDR  0081H     A   
SPC_FNC . . . . . . . . . . . . . . . .    D  ADDR  008FH     A   
SPI_CTRL. . . . . . . . . . . . . . . .    D  ADDR  00B3H     A   
SPI_DATA. . . . . . . . . . . . . . . .    D  ADDR  00B2H     A   
SPICLK. . . . . . . . . . . . . . . . .    D  ADDR  00B4H     A   
T0. . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.5   A   
T1. . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.6   A   
T1_1V2. . . . . . . . . . . . . . . . .    D  ADDR  00BCH     A   
T2. . . . . . . . . . . . . . . . . . .    B  ADDR  0090H.0   A   
T2_1V2. . . . . . . . . . . . . . . . .    D  ADDR  00BDH     A   
T2CON . . . . . . . . . . . . . . . . .    D  ADDR  00C8H     A   
TB8 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.3   A   
TCLK. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.4   A   
TCON. . . . . . . . . . . . . . . . . .    D  ADDR  0088H     A   
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/02/09 01:19:52 PAGE    17

TEST_MODE . . . . . . . . . . . . . . .    D  ADDR  00B7H     A   
TF0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.5   A   
TF1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.7   A   
TF2 . . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.7   A   
TH0 . . . . . . . . . . . . . . . . . .    D  ADDR  008CH     A   
TH1 . . . . . . . . . . . . . . . . . .    D  ADDR  008DH     A   
TH2 . . . . . . . . . . . . . . . . . .    D  ADDR  00CDH     A   
TI. . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.1   A   
TICK_DV . . . . . . . . . . . . . . . .    D  ADDR  00B5H     A   
TL0 . . . . . . . . . . . . . . . . . .    D  ADDR  008AH     A   
TL1 . . . . . . . . . . . . . . . . . .    D  ADDR  008BH     A   
TL2 . . . . . . . . . . . . . . . . . .    D  ADDR  00CCH     A   
TMOD. . . . . . . . . . . . . . . . . .    D  ADDR  0089H     A   
TR0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.4   A   
TR1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.6   A   
TR2 . . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.2   A   
TXD . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.2   A   
WDTI. . . . . . . . . . . . . . . . . .    B  ADDR  00D8H.3   A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S).
