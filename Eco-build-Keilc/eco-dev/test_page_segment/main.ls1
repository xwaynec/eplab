AX51 MACRO ASSEMBLER  MAIN                                                                  05/05/09 16:31:11 PAGE     1


MACRO ASSEMBLER AX51 V3.06a
OBJECT MODULE PLACED IN .\main.obj
ASSEMBLER INVOKED BY: C:\Keil\C51\BIN\AX51.exe .\main.src EP DEBUG SYMBOLS OJ(.\main.obj) PR(.\main.ls1) 

LOC    OBJ             LINE     SOURCE

                          1     ; ./main.src generated from: .\main.c
                          2     ; COMPILER INVOKED BY:
                          3     ;        C:\Keil\C51\BIN\C51.exe .\main.c BROWSE DEBUG CODE LISTINCLUDE SYMBOLS PREPRINT
                                INCDIR(../../Include) SRC(./main.src)
                          4     
                          5     $nomod51 
                          6     
                          7     NAME    MAIN
                          8     
 00A0.7                   9     PWR_UP  BIT     0A0H.7
 0080                    10     P0      DATA    080H
 0090                    11     P1      DATA    090H
 00D0.6                  12     AC      BIT     0D0H.6
 0080.5                  13     T0      BIT     080H.5
 00B3                    14     SPI_CTRL        DATA    0B3H
 0080.6                  15     T1      BIT     080H.6
 00A8.7                  16     EA      BIT     0A8H.7
 0090.0                  17     T2      BIT     090H.0
 00A0.6                  18     CE      BIT     0A0H.6
 00BE                    19     DEV_OFFSET      DATA    0BEH
 00A0.1                  20     CLK1    BIT     0A0H.1
 0090.2                  21     DIN0    BIT     090H.2
 00A0.5                  22     CLK2    BIT     0A0H.5
 0090.0                  23     DIO0    BIT     090H.0
 0083                    24     DPH0    DATA    083H
 0090.1                  25     DIO1    BIT     090H.1
 00A8                    26     IE      DATA    0A8H
 0085                    27     DPH1    DATA    085H
 0080.0                  28     DIO2    BIT     080H.0
 0080.1                  29     DIO3    BIT     080H.1
 0080.0                  30     P0_0    BIT     080H.0
 0090.0                  31     P1_0    BIT     090H.0
 0080.2                  32     DIO4    BIT     080H.2
 0080.1                  33     P0_1    BIT     080H.1
 0082                    34     DPL0    DATA    082H
 0090.1                  35     P1_1    BIT     090H.1
 0080.3                  36     DIO5    BIT     080H.3
 0080.2                  37     P0_2    BIT     080H.2
 0084                    38     DPL1    DATA    084H
 0090.2                  39     P1_2    BIT     090H.2
 0080.4                  40     DIO6    BIT     080H.4
 0080.3                  41     P0_3    BIT     080H.3
 0080.5                  42     DIO7    BIT     080H.5
 0080.4                  43     P0_4    BIT     080H.4
 00A4                    44     ADCSTATIC       DATA    0A4H
 0080.6                  45     DIO8    BIT     080H.6
 0080.5                  46     P0_5    BIT     080H.5
 00C8.6                  47     EXF2    BIT     0C8H.6
 00A0.3                  48     CS      BIT     0A0H.3
 0080.7                  49     DIO9    BIT     080H.7
 0080.6                  50     P0_6    BIT     080H.6
 0080.7                  51     P0_7    BIT     080H.7
 00A8.4                  52     ES      BIT     0A8H.4
 00B8                    53     IP      DATA    0B8H
 00A0.0                  54     DATA?   BIT     0A0H.0
 0098.0                  55     RI      BIT     098H.0
 00D0.7                  56     CY      BIT     0D0H.7
 0098.1                  57     TI      BIT     098H.1
AX51 MACRO ASSEMBLER  MAIN                                                                  05/05/09 16:31:11 PAGE     2

 00BC                    58     T1_1V2  DATA    0BCH
 008F                    59     SPC_FNC DATA    08FH
 00BD                    60     T2_1V2  DATA    0BDH
 00CB                    61     RCAP2H  DATA    0CBH
 00B8.4                  62     PS      BIT     0B8H.4
 0081                    63     SP      DATA    081H
 00D0.2                  64     OV      BIT     0D0H.2
 00B6                    65     CK_CTRL DATA    0B6H
 00CA                    66     RCAP2L  DATA    0CAH
 00B5                    67     TICK_DV DATA    0B5H
 00B1                    68     RSTREAS DATA    0B1H
 00C8.1                  69     C_T2    BIT     0C8H.1
 00E8.4                  70     EWDI    BIT     0E8H.4
 00A1                    71     ADCCON  DATA    0A1H
 00C8.5                  72     RCLK    BIT     0C8H.5
 00A2                    73     ADCDATAH        DATA    0A2H
 0091                    74     EXIF    DATA    091H
 00C8.4                  75     TCLK    BIT     0C8H.4
 00A0.6                  76     DR2_CE  BIT     0A0H.6
 00A3                    77     ADCDATAL        DATA    0A3H
 0099                    78     SBUF    DATA    099H
 0087                    79     PCON    DATA    087H
 0098                    80     SCON    DATA    098H
 00F8.4                  81     PWDI    BIT     0F8H.4
 0089                    82     TMOD    DATA    089H
 0088                    83     TCON    DATA    088H
 00D8.3                  84     WDTI    BIT     0D8H.3
 00AA                    85     PWMDUTY DATA    0AAH
 0088.1                  86     IE0     BIT     088H.1
 0088.3                  87     IE1     BIT     088H.3
 0094                    88     P0_DIR  DATA    094H
 00F0                    89     B       DATA    0F0H
 0096                    90     P1_DIR  DATA    096H
 0095                    91     P0_ALT  DATA    095H
 0097                    92     P1_ALT  DATA    097H
 00C8.0                  93     CP_RL2  BIT     0C8H.0
 00A0.2                  94     DR1     BIT     0A0H.2
 00E0                    95     ACC     DATA    0E0H
 00A0.6                  96     DR2     BIT     0A0H.6
 00B7                    97     TEST_MODE       DATA    0B7H
 00B4                    98     SPICLK  DATA    0B4H
 00C8.1                  99     CT2     BIT     0C8H.1
 00A8.1                 100     ET0     BIT     0A8H.1
 00A8.3                 101     ET1     BIT     0A8H.3
 0088.5                 102     TF0     BIT     088H.5
 0080.3                 103     INT0_N  BIT     080H.3
 00A8.5                 104     ET2     BIT     0A8H.5
 0088.7                 105     TF1     BIT     088H.7
 0080.4                 106     INT1_N  BIT     080H.4
 00C8.7                 107     TF2     BIT     0C8H.7
 0098.2                 108     RB8     BIT     098H.2
 008C                   109     TH0     DATA    08CH
 00A8.0                 110     EX0     BIT     0A8H.0
 0088.0                 111     IT0     BIT     088H.0
 008D                   112     TH1     DATA    08DH
 00A8.2                 113     EX1     BIT     0A8H.2
 0098.3                 114     TB8     BIT     098H.3
 0088.2                 115     IT1     BIT     088H.2
 00CD                   116     TH2     DATA    0CDH
 00AD                   117     REGX_CTRL       DATA    0ADH
 00E8.0                 118     EX2     BIT     0E8H.0
 00D0.0                 119     P       BIT     0D0H.0
 00E8.1                 120     EX3     BIT     0E8H.1
 0098.7                 121     SM0     BIT     098H.7
 008A                   122     TL0     DATA    08AH
 00E8.2                 123     EX4     BIT     0E8H.2
AX51 MACRO ASSEMBLER  MAIN                                                                  05/05/09 16:31:11 PAGE     3

 0098.6                 124     SM1     BIT     098H.6
 008B                   125     TL1     DATA    08BH
 00E8.3                 126     EX5     BIT     0E8H.3
 0098.5                 127     SM2     BIT     098H.5
 00CC                   128     TL2     DATA    0CCH
 00E8                   129     EIE     DATA    0E8H
 00B8.1                 130     PT0     BIT     0B8H.1
 00D0.3                 131     RS0     BIT     0D0H.3
 00B8.3                 132     PT1     BIT     0B8H.3
 00D0.4                 133     RS1     BIT     0D0H.4
 00B8.5                 134     PT2     BIT     0B8H.5
 0088.4                 135     TR0     BIT     088H.4
 00A9                   136     PWMCON  DATA    0A9H
 0088.6                 137     TR1     BIT     088H.6
 00C8.2                 138     TR2     BIT     0C8H.2
 00B8.0                 139     PX0     BIT     0B8H.0
 00B8.2                 140     PX1     BIT     0B8H.2
 00F8.0                 141     PX2     BIT     0F8H.0
 00F8.1                 142     PX3     BIT     0F8H.1
 00F8.2                 143     PX4     BIT     0F8H.2
 0083                   144     DPH     DATA    083H
 00F8.3                 145     PX5     BIT     0F8H.3
 00F8                   146     EIP     DATA    0F8H
 0082                   147     DPL     DATA    082H
 00C8.3                 148     EXEN2   BIT     0C8H.3
 00C8.0                 149     CPRL2   BIT     0C8H.0
 0098.4                 150     REN     BIT     098H.4
 00C8                   151     T2CON   DATA    0C8H
 0086                   152     DPS     DATA    086H
 00B2                   153     SPI_DATA        DATA    0B2H
 0092                   154     MPAGE   DATA    092H
 0080.1                 155     RXD     BIT     080H.1
 00A0.4                 156     DOUT2   BIT     0A0H.4
 00D8                   157     EICON   DATA    0D8H
 008E                   158     CKCON   DATA    08EH
 0080.2                 159     TXD     BIT     080H.2
 00A0                   160     RADIO   DATA    0A0H
 0080.7                 161     PWM     BIT     080H.7
 00D0.5                 162     F0      BIT     0D0H.5
 00D0.1                 163     F1      BIT     0D0H.1
 00AC                   164     REGX_LSB        DATA    0ACH
 00D0                   165     PSW     DATA    0D0H
 00AB                   166     REGX_MSB        DATA    0ABH
------                  167     ?PR?blink2?MAIN      SEGMENT CODE 
------                  168     ?DT?blink2?MAIN      SEGMENT DATA OVERLAYABLE 
------                  169     ?PR?blink4?MAIN      SEGMENT CODE 
------                  170     ?DT?blink4?MAIN      SEGMENT DATA OVERLAYABLE 
------                  171     ?PR?blink6?MAIN      SEGMENT CODE 
------                  172     ?DT?blink6?MAIN      SEGMENT DATA OVERLAYABLE 
------                  173     ?PR?main?MAIN        SEGMENT CODE 
------                  174     ?DT?main?MAIN        SEGMENT DATA OVERLAYABLE 
------                  175     ?C_INITSEG           SEGMENT CODE 
------                  176     ?ID?MAIN             SEGMENT IDATA 
------                  177     ?DT?MAIN             SEGMENT DATA 
                        178             EXTRN   CODE (_mdelay)
                        179             EXTRN   CODE (eco_page_manager)
                        180             EXTRN   DATA (ECO_PAGE_ADDR)
                        181             EXTRN   DATA (ECO_PAGE_SPI_CONN)
                        182             EXTRN   IDATA (ECO_PAGE_REGISTER1)
                        183             EXTRN   IDATA (ECO_PAGE_REGISTER2)
                        184             EXTRN   IDATA (ECO_PAGE_REGISTER3)
                        185             EXTRN   IDATA (ECO_PAGE_REGISTER4)
                        186             EXTRN   IDATA (ECO_PAGE_REGISTER5)
                        187             EXTRN   IDATA (ECO_PAGE_REGISTER6)
                        188             EXTRN   IDATA (ECO_PAGE_REGISTER7)
                        189             EXTRN   CODE (_rf_configure)
AX51 MACRO ASSEMBLER  MAIN                                                                  05/05/09 16:31:11 PAGE     4

                        190             EXTRN   CODE (_serial_init)
                        191             EXTRN   CODE (eco_page_init)
                        192             EXTRN   CODE (_rf_send)
                        193             EXTRN   DATA (?_rf_send?BYTE)
                        194             EXTRN   CODE (_store_cpu_rate)
                        195             EXTRN   CODE (rf_init)
                        196             EXTRN   CODE (?C_STARTUP)
                        197             PUBLIC  rf_data
                        198             PUBLIC  dst_addr
                        199             PUBLIC  msg
                        200             PUBLIC  main
                        201             PUBLIC  blink6
                        202             PUBLIC  blink4
                        203             PUBLIC  blink2
                        204     
------                  205             RSEG  ?DT?main?MAIN
000000                  206     ?main?BYTE:
000000                  207             idx?343:   DS   1
000001                  208             ORG  1
000001                  209               i?344:   DS   2
                        210     
------                  211             RSEG  ?DT?blink2?MAIN
000000                  212     ?blink2?BYTE:
000000                  213               i?040:   DS   2
                        214     
------                  215             RSEG  ?DT?blink4?MAIN
000000                  216     ?blink4?BYTE:
000000                  217               i?141:   DS   2
                        218     
------                  219             RSEG  ?DT?blink6?MAIN
000000                  220     ?blink6?BYTE:
000000                  221               i?242:   DS   2
                        222     
------                  223             RSEG  ?ID?MAIN
000000                  224                 msg:   DS   7
000007                  225            dst_addr:   DS   3
                        226     
------                  227             RSEG  ?DT?MAIN
000000                  228             rf_data:   DS   15
                        229     
------                  230             RSEG  ?C_INITSEG
000000 0F               231             DB      00FH
000001 00         F     232             DB      rf_data
000002 00               233             DB      000H
000003 38               234             DB      038H
000004 00               235             DB      000H
000005 00               236             DB      000H
000006 00               237             DB      000H
000007 00               238             DB      000H
000008 00               239             DB      000H
000009 F2               240             DB      0F2H
00000A F2               241             DB      0F2H
00000B F2               242             DB      0F2H
00000C F2               243             DB      0F2H
00000D F2               244             DB      0F2H
00000E 63               245             DB      063H
00000F 6F               246             DB      06FH
000010 EC               247             DB      0ECH
                        248     
000011 03               249             DB      003H
000012 00         F     250             DB      dst_addr
000013 F1               251             DB      0F1H
000014 F1               252             DB      0F1H
000015 F1               253             DB      0F1H
                        254     
                        255     ; #include "Eco/reg24e1.h"
AX51 MACRO ASSEMBLER  MAIN                                                                  05/05/09 16:31:11 PAGE     5

                        256     ; #include "Eco/eco_sys.h"
                        257     ; #include "utils/utils.h"
                        258     ; #include "serial/serial.h"
                        259     ; #include "isr/isr_rf.h"
                        260     ; #include "eeprom/eeprom.h"
                        261     ; #include "eco_page.h"
                        262     ; 
                        263     ; 
                        264     ; struct rf_config rf_data = { {0x00}, /* data2 width */
                        265     ;       {0x38}, /* data1 width */ 
                        266     ;       {0x00, 0x00, 0x00, 0x00, 0x00}, /* addr2 */
                        267     ;       {0xF2, 0xF2, 0xF2, 0xF2, 0xF2}, /* addr1, host addr */
                        268     ;       {0x63}, /* 24-bit address, 16-bit CRC */
                        269     ;       {0x6f, 0xEC} };
                        270     ; char idata dst_addr[3] = {0xF1, 0xF1, 0xF1};
                        271     ; char idata msg[7];
                        272     ; 
                        273     ; 
                        274     ; /* rf.c
                        275     ; void rf_init();
                        276     ; void rf_configure(struct rf_config);
                        277     ; void rf_send(char *, unsigned char, char *, unsigned char);
                        278     ; */
                        279     ; 
                        280     ; /*int long_function(int time1,int time2,int time3,int time4)
                        281     ; {
                        282     ;       int i;
                        283     ; 
                        284     ;       for(i=0;i<time1;i++)
                        285     ;       {
                        286     ;               blink_led();
                        287     ;               mdelay(300);
                        288     ;       }
                        289     ; 
                        290     ;       for(i=0;i<time2;i++)
                        291     ;       {
                        292     ;               blink_led();
                        293     ;               mdelay(300);
                        294     ;       }
                        295     ; 
                        296     ;       for(i=0;i<time3;i++)
                        297     ;       {
                        298     ;               blink_led();
                        299     ;               mdelay(300);
                        300     ;       }
                        301     ;       
                        302     ;       for(i=0;i<time4;i++)
                        303     ;       {
                        304     ;               blink_led();
                        305     ;               mdelay(300);
                        306     ;       }
                        307     ; 
                        308     ;       msg[0] = 0x0A;
                        309     ;       msg[1] = 0x00;
                        310     ;       msg[2] = 0x02;
                        311     ;       msg[3] = 0xA0;
                        312     ;       msg[4] = 0x02;
                        313     ;       msg[5] = 0xDD;
                        314     ;       msg[6] = 0xCC;
                        315     ;       mdelay(1000);
                        316     ; 
                        317     ;       for(i=0;i<time1;i++)
                        318     ;       {
                        319     ;               blink_led();
                        320     ;               mdelay(300);
                        321     ;       }
AX51 MACRO ASSEMBLER  MAIN                                                                  05/05/09 16:31:11 PAGE     6

                        322     ; 
                        323     ;       for(i=0;i<time2;i++)
                        324     ;       {
                        325     ;               blink_led();
                        326     ;               mdelay(300);
                        327     ;       }
                        328     ; 
                        329     ;       for(i=0;i<time3;i++)
                        330     ;       {
                        331     ;               blink_led();
                        332     ;               mdelay(300);
                        333     ;       }
                        334     ;       
                        335     ;       for(i=0;i<time4;i++)
                        336     ;       {
                        337     ;               blink_led();
                        338     ;               mdelay(300);
                        339     ;       }
                        340     ; 
                        341     ;       msg[0] = 0x0A;
                        342     ;       msg[1] = 0x00;
                        343     ;       msg[2] = 0x02;
                        344     ;       msg[3] = 0xA0;
                        345     ;       msg[4] = 0x02;
                        346     ;       msg[5] = 0xDD;
                        347     ;       msg[6] = 0xCC;
                        348     ;       mdelay(1000);
                        349     ; }
                        350     ; */
                        351     ; 
                        352     ; void blink2()
                        353     
------                  354             RSEG  ?PR?blink2?MAIN
000000                  355     blink2:
                        356             USING   0
                        357                             ; SOURCE LINE # 98
                        358     ; {
                        359                             ; SOURCE LINE # 99
                        360     ;       int i;
                        361     ;       for(i=0;i<4;i++)
                        362                             ; SOURCE LINE # 101
000000 E4               363             CLR     A
000001 F500       F     364             MOV     i?040,A
000003 F500       F     365             MOV     i?040+01H,A
000005                  366     ?C0001:
                        367     ;       {
                        368                             ; SOURCE LINE # 102
                        369     ;               blink_led();
                        370                             ; SOURCE LINE # 103
000005 638020           371             XRL     P0,#020H
                        372     ;               mdelay(400);
                        373                             ; SOURCE LINE # 104
000008 7F90             374             MOV     R7,#090H
00000A 7E01             375             MOV     R6,#01H
00000C 120000     E     376             LCALL   _mdelay
                        377     ;       }
                        378                             ; SOURCE LINE # 105
00000F 0500       F     379             INC     i?040+01H
000011 E500       F     380             MOV     A,i?040+01H
000013 7002             381             JNZ     ?C0019
000015 0500       F     382             INC     i?040
000017                  383     ?C0019:
000017 C3               384             CLR     C
000018 9404             385             SUBB    A,#04H
00001A E500       F     386             MOV     A,i?040
00001C 6480             387             XRL     A,#080H
AX51 MACRO ASSEMBLER  MAIN                                                                  05/05/09 16:31:11 PAGE     7

00001E 9480             388             SUBB    A,#080H
000020 40E3             389             JC      ?C0001
000022                  390     ?C0002:
                        391     ;       mdelay(1000);   
                        392                             ; SOURCE LINE # 106
000022 7FE8             393             MOV     R7,#0E8H
000024 7E03             394             MOV     R6,#03H
000026 020000     E     395             LJMP    _mdelay
                        396     ; END OF blink2
                        397     
                        398     ; }
                        399     ; void blink4()
                        400     
------                  401             RSEG  ?PR?blink4?MAIN
000000                  402     blink4:
                        403             USING   0
                        404                             ; SOURCE LINE # 108
                        405     ; {
                        406                             ; SOURCE LINE # 109
                        407     ;       int i;
                        408     ;       for(i=0;i<8;i++)
                        409                             ; SOURCE LINE # 111
000000 E4               410             CLR     A
000001 F500       F     411             MOV     i?141,A
000003 F500       F     412             MOV     i?141+01H,A
000005                  413     ?C0005:
                        414     ;       {
                        415                             ; SOURCE LINE # 112
                        416     ;               blink_led();
                        417                             ; SOURCE LINE # 113
000005 638020           418             XRL     P0,#020H
                        419     ;               mdelay(400);
                        420                             ; SOURCE LINE # 114
000008 7F90             421             MOV     R7,#090H
00000A 7E01             422             MOV     R6,#01H
00000C 120000     E     423             LCALL   _mdelay
                        424     ;       }       
                        425                             ; SOURCE LINE # 115
00000F 0500       F     426             INC     i?141+01H
000011 E500       F     427             MOV     A,i?141+01H
000013 7002             428             JNZ     ?C0020
000015 0500       F     429             INC     i?141
000017                  430     ?C0020:
000017 C3               431             CLR     C
000018 9408             432             SUBB    A,#08H
00001A E500       F     433             MOV     A,i?141
00001C 6480             434             XRL     A,#080H
00001E 9480             435             SUBB    A,#080H
000020 40E3             436             JC      ?C0005
000022                  437     ?C0006:
                        438     ;       mdelay(1000);   
                        439                             ; SOURCE LINE # 116
000022 7FE8             440             MOV     R7,#0E8H
000024 7E03             441             MOV     R6,#03H
000026 020000     E     442             LJMP    _mdelay
                        443     ; END OF blink4
                        444     
                        445     ; }
                        446     ; void blink6()
                        447     
------                  448             RSEG  ?PR?blink6?MAIN
000000                  449     blink6:
                        450             USING   0
                        451                             ; SOURCE LINE # 118
                        452     ; {
                        453                             ; SOURCE LINE # 119
AX51 MACRO ASSEMBLER  MAIN                                                                  05/05/09 16:31:11 PAGE     8

                        454     ;       int i;
                        455     ;       for(i=0;i<12;i++)
                        456                             ; SOURCE LINE # 121
000000 E4               457             CLR     A
000001 F500       F     458             MOV     i?242,A
000003 F500       F     459             MOV     i?242+01H,A
000005                  460     ?C0009:
                        461     ;       {
                        462                             ; SOURCE LINE # 122
                        463     ;               blink_led();
                        464                             ; SOURCE LINE # 123
000005 638020           465             XRL     P0,#020H
                        466     ;               mdelay(400);
                        467                             ; SOURCE LINE # 124
000008 7F90             468             MOV     R7,#090H
00000A 7E01             469             MOV     R6,#01H
00000C 120000     E     470             LCALL   _mdelay
                        471     ;       }       
                        472                             ; SOURCE LINE # 125
00000F 0500       F     473             INC     i?242+01H
000011 E500       F     474             MOV     A,i?242+01H
000013 7002             475             JNZ     ?C0021
000015 0500       F     476             INC     i?242
000017                  477     ?C0021:
000017 C3               478             CLR     C
000018 940C             479             SUBB    A,#0CH
00001A E500       F     480             MOV     A,i?242
00001C 6480             481             XRL     A,#080H
00001E 9480             482             SUBB    A,#080H
000020 40E3             483             JC      ?C0009
000022                  484     ?C0010:
                        485     ;       mdelay(1000);   
                        486                             ; SOURCE LINE # 126
000022 7FE8             487             MOV     R7,#0E8H
000024 7E03             488             MOV     R6,#03H
000026 020000     E     489             LJMP    _mdelay
                        490     ; END OF blink6
                        491     
                        492     ; }
                        493     ; 
                        494     ; int main()
                        495     
------                  496             RSEG  ?PR?main?MAIN
000000                  497     main:
                        498             USING   0
                        499                             ; SOURCE LINE # 129
                        500     ; {
                        501                             ; SOURCE LINE # 130
                        502     ;       unsigned char idx;
                        503     ;       unsigned int i = 0;
                        504                             ; SOURCE LINE # 132
000000 E4               505             CLR     A
000001 F500       F     506             MOV     i?344,A
000003 F500       F     507             MOV     i?344+01H,A
                        508     ;       store_cpu_rate(16);
                        509                             ; SOURCE LINE # 133
000005 7F10             510             MOV     R7,#010H
000007 FE               511             MOV     R6,A
000008 120000     E     512             LCALL   _store_cpu_rate
                        513     ;       P0_DIR &= ~0x28;
                        514                             ; SOURCE LINE # 134
00000B 5394D7           515             ANL     P0_DIR,#0D7H
                        516     ;       P0_ALT &= ~0x28;
                        517                             ; SOURCE LINE # 135
00000E 5395D7           518             ANL     P0_ALT,#0D7H
                        519     ; 
AX51 MACRO ASSEMBLER  MAIN                                                                  05/05/09 16:31:11 PAGE     9

                        520     ;       
                        521     ;       rf_init();
                        522                             ; SOURCE LINE # 138
000011 120000     E     523             LCALL   rf_init
                        524     ;       rf_configure(&rf_data);
                        525                             ; SOURCE LINE # 139
000014 7B00             526             MOV     R3,#00H
000016 7A00       F     527             MOV     R2,#HIGH (rf_data)
000018 7900       F     528             MOV     R1,#LOW (rf_data)
00001A 120000     E     529             LCALL   _rf_configure
                        530     ;       serial_init(19200);     
                        531                             ; SOURCE LINE # 140
00001D 7F00             532             MOV     R7,#00H
00001F 7E4B             533             MOV     R6,#04BH
000021 120000     E     534             LCALL   _serial_init
                        535     ;       eco_page_init();
                        536                             ; SOURCE LINE # 141
000024 120000     E     537             LCALL   eco_page_init
                        538     ;       
                        539     ;       //long_function(4,6,8,4);
                        540     ; 
                        541     ;       msg[0] = 0x0A;
                        542                             ; SOURCE LINE # 145
000027 7800       F     543             MOV     R0,#LOW (msg)
000029 760A             544             MOV     @R0,#0AH
                        545     ;       msg[1] = 0x00;
                        546                             ; SOURCE LINE # 146
00002B E4               547             CLR     A
00002C 08               548             INC     R0
00002D F6               549             MOV     @R0,A
                        550     ;       /* ADDR */
                        551     ;       msg[2] = 0x02;
                        552                             ; SOURCE LINE # 148
00002E 08               553             INC     R0
00002F 7602             554             MOV     @R0,#02H
                        555     ;       msg[3] = 0xA0;
                        556                             ; SOURCE LINE # 149
000031 08               557             INC     R0
000032 76A0             558             MOV     @R0,#0A0H
                        559     ;       /* LEN */
                        560     ;       msg[4] = 0x02;
                        561                             ; SOURCE LINE # 151
000034 08               562             INC     R0
000035 7602             563             MOV     @R0,#02H
                        564     ;       msg[5] = 0xDD;
                        565                             ; SOURCE LINE # 152
000037 08               566             INC     R0
000038 76DD             567             MOV     @R0,#0DDH
                        568     ;       msg[6] = 0xCC;
                        569                             ; SOURCE LINE # 153
00003A 08               570             INC     R0
00003B 76CC             571             MOV     @R0,#0CCH
                        572     ;       
                        573     ;       for(idx = 4; idx > 0; idx--)
                        574                             ; SOURCE LINE # 155
00003D 750004     F     575             MOV     idx?343,#04H
000040                  576     ?C0013:
                        577     ;       {
                        578                             ; SOURCE LINE # 156
                        579     ;               blink_led();            
                        580                             ; SOURCE LINE # 157
000040 638020           581             XRL     P0,#020H
                        582     ;               mdelay(300);
                        583                             ; SOURCE LINE # 158
000043 7F2C             584             MOV     R7,#02CH
000045 7E01             585             MOV     R6,#01H
AX51 MACRO ASSEMBLER  MAIN                                                                  05/05/09 16:31:11 PAGE    10

000047 120000     E     586             LCALL   _mdelay
                        587     ;       }
                        588                             ; SOURCE LINE # 159
00004A 1500       F     589             DEC     idx?343
00004C E500       F     590             MOV     A,idx?343
00004E D3               591             SETB    C
00004F 9400             592             SUBB    A,#00H
000051 50ED             593             JNC     ?C0013
000053                  594     ?C0014:
                        595     ;       mdelay(1000);   
                        596                             ; SOURCE LINE # 160
000053 7FE8             597             MOV     R7,#0E8H
000055 7E03             598             MOV     R6,#03H
000057 120000     E     599             LCALL   _mdelay
00005A                  600     ?C0016:
                        601     ;       while(1)
                        602                             ; SOURCE LINE # 161
                        603     ;       {
                        604                             ; SOURCE LINE # 162
                        605             ;----------     LCALL   blink2 start----------
00005A 85B300     E     606             MOV     ECO_PAGE_SPI_CONN,SPI_CTRL
00005D 750000     F     607             MOV     ECO_PAGE_ADDR,#HIGH (blink2)
000060 750000     F     608             MOV     ECO_PAGE_ADDR+01H,#LOW (blink2)
000063 120000     E     609             LCALL   eco_page_manager
                        610             ;----------     LCALL   blink2 end----------
                        611     ;               rf_send(dst_addr, 3, msg, 7);
                        612                             ; SOURCE LINE # 164
                        613     
000066 750000     E     614             MOV     ?_rf_send?BYTE+04H,#00H
                        615     
000069 750000     F     616             MOV     ?_rf_send?BYTE+05H,#HIGH (msg)
                        617     
00006C 750000     F     618             MOV     ?_rf_send?BYTE+06H,#LOW (msg)
                        619     
00006F 750007     E     620             MOV     ?_rf_send?BYTE+07H,#07H
                        621     
                        622     ;       MOV     R3,#00H
                        623     
                        624     ;--------------------------
000072 7800       E     625             MOV     R0,#LOW (ECO_PAGE_REGISTER3)
000074 7600             626             MOV     @R0,#00H
                        627     ;--------------------------
                        628     ;       MOV     R2,#HIGH (dst_addr)
                        629     
                        630     ;--------------------------
000076 7800       E     631             MOV     R0,#LOW (ECO_PAGE_REGISTER2)
000078 7600       F     632             MOV     @R0,#HIGH (dst_addr)
                        633     ;--------------------------
                        634     ;       MOV     R1,#LOW (dst_addr)
                        635     
                        636     ;--------------------------
00007A 7800       E     637             MOV     R0,#LOW (ECO_PAGE_REGISTER1)
00007C 7600       F     638             MOV     @R0,#LOW (dst_addr)
                        639     ;--------------------------
                        640     ;       MOV     R5,#03H
                        641     
                        642     ;--------------------------
00007E 7800       E     643             MOV     R0,#LOW (ECO_PAGE_REGISTER5)
000080 7603             644             MOV     @R0,#03H
                        645     ;--------------------------
                        646             ;----------     LCALL   _rf_send start----------
000082 85B300     E     647             MOV     ECO_PAGE_SPI_CONN,SPI_CTRL
000085 750000     E     648             MOV     ECO_PAGE_ADDR,#HIGH (_rf_send)
000088 750000     E     649             MOV     ECO_PAGE_ADDR+01H,#LOW (_rf_send)
00008B 120000     E     650             LCALL   eco_page_manager
                        651             ;----------     LCALL   _rf_send end----------
AX51 MACRO ASSEMBLER  MAIN                                                                  05/05/09 16:31:11 PAGE    11

                        652             ;----------     LCALL   blink4 start----------
00008E 85B300     E     653             MOV     ECO_PAGE_SPI_CONN,SPI_CTRL
000091 750000     F     654             MOV     ECO_PAGE_ADDR,#HIGH (blink4)
000094 750000     F     655             MOV     ECO_PAGE_ADDR+01H,#LOW (blink4)
000097 120000     E     656             LCALL   eco_page_manager
                        657             ;----------     LCALL   blink4 end----------
                        658     ;               mdelay(200);    
                        659                             ; SOURCE LINE # 166
00009A 7FC8             660             MOV     R7,#0C8H
00009C 7E00             661             MOV     R6,#00H
00009E 120000     E     662             LCALL   _mdelay
                        663             ;----------     LCALL   blink6 start----------
0000A1 85B300     E     664             MOV     ECO_PAGE_SPI_CONN,SPI_CTRL
0000A4 750000     F     665             MOV     ECO_PAGE_ADDR,#HIGH (blink6)
0000A7 750000     F     666             MOV     ECO_PAGE_ADDR+01H,#LOW (blink6)
0000AA 120000     E     667             LCALL   eco_page_manager
                        668             ;----------     LCALL   blink6 end----------
                        669     ;       }
                        670                             ; SOURCE LINE # 168
0000AD 80AB             671             SJMP    ?C0016
                        672     ; END OF main
                        673     
                        674             END
AX51 MACRO ASSEMBLER  MAIN                                                                  05/05/09 16:31:11 PAGE    12

SYMBOL TABLE LISTING
------ ----- -------


N A M E                          T Y P E  V A L U E     ATTRIBUTES

?_RF_SEND?BYTE. . . . . . . . .  D  ADDR  -------       EXT
?BLINK2?BYTE. . . . . . . . . .  D  ADDR  0000H     R   SEG=?DT?BLINK2?MAIN
?BLINK4?BYTE. . . . . . . . . .  D  ADDR  0000H     R   SEG=?DT?BLINK4?MAIN
?BLINK6?BYTE. . . . . . . . . .  D  ADDR  0000H     R   SEG=?DT?BLINK6?MAIN
?C0001. . . . . . . . . . . . .  C  ADDR  0005H     R   SEG=?PR?BLINK2?MAIN
?C0002. . . . . . . . . . . . .  C  ADDR  0022H     R   SEG=?PR?BLINK2?MAIN
?C0005. . . . . . . . . . . . .  C  ADDR  0005H     R   SEG=?PR?BLINK4?MAIN
?C0006. . . . . . . . . . . . .  C  ADDR  0022H     R   SEG=?PR?BLINK4?MAIN
?C0009. . . . . . . . . . . . .  C  ADDR  0005H     R   SEG=?PR?BLINK6?MAIN
?C0010. . . . . . . . . . . . .  C  ADDR  0022H     R   SEG=?PR?BLINK6?MAIN
?C0013. . . . . . . . . . . . .  C  ADDR  0040H     R   SEG=?PR?MAIN?MAIN
?C0014. . . . . . . . . . . . .  C  ADDR  0053H     R   SEG=?PR?MAIN?MAIN
?C0016. . . . . . . . . . . . .  C  ADDR  005AH     R   SEG=?PR?MAIN?MAIN
?C0019. . . . . . . . . . . . .  C  ADDR  0017H     R   SEG=?PR?BLINK2?MAIN
?C0020. . . . . . . . . . . . .  C  ADDR  0017H     R   SEG=?PR?BLINK4?MAIN
?C0021. . . . . . . . . . . . .  C  ADDR  0017H     R   SEG=?PR?BLINK6?MAIN
?C_INITSEG. . . . . . . . . . .  C  SEG   000016H       REL=UNIT, ALN=BYTE
?C_STARTUP. . . . . . . . . . .  C  ADDR  -------       EXT
?DT?BLINK2?MAIN . . . . . . . .  D  SEG   000002H       REL=UNIT, ALN=BYTE
?DT?BLINK4?MAIN . . . . . . . .  D  SEG   000002H       REL=UNIT, ALN=BYTE
?DT?BLINK6?MAIN . . . . . . . .  D  SEG   000002H       REL=UNIT, ALN=BYTE
?DT?MAIN. . . . . . . . . . . .  D  SEG   00000FH       REL=UNIT, ALN=BYTE
?DT?MAIN?MAIN . . . . . . . . .  D  SEG   000003H       REL=UNIT, ALN=BYTE
?ID?MAIN. . . . . . . . . . . .  I  SEG   00000AH       REL=UNIT, ALN=BYTE
?MAIN?BYTE. . . . . . . . . . .  D  ADDR  0000H     R   SEG=?DT?MAIN?MAIN
?PR?BLINK2?MAIN . . . . . . . .  C  SEG   000029H       REL=UNIT, ALN=BYTE
?PR?BLINK4?MAIN . . . . . . . .  C  SEG   000029H       REL=UNIT, ALN=BYTE
?PR?BLINK6?MAIN . . . . . . . .  C  SEG   000029H       REL=UNIT, ALN=BYTE
?PR?MAIN?MAIN . . . . . . . . .  C  SEG   0000AFH       REL=UNIT, ALN=BYTE
_MDELAY . . . . . . . . . . . .  C  ADDR  -------       EXT
_RF_CONFIGURE . . . . . . . . .  C  ADDR  -------       EXT
_RF_SEND. . . . . . . . . . . .  C  ADDR  -------       EXT
_SERIAL_INIT. . . . . . . . . .  C  ADDR  -------       EXT
_STORE_CPU_RATE . . . . . . . .  C  ADDR  -------       EXT
AC. . . . . . . . . . . . . . .  B  ADDR  00D0H.6   A   
ACC . . . . . . . . . . . . . .  D  ADDR  00E0H     A   
ADCCON. . . . . . . . . . . . .  D  ADDR  00A1H     A   
ADCDATAH. . . . . . . . . . . .  D  ADDR  00A2H     A   
ADCDATAL. . . . . . . . . . . .  D  ADDR  00A3H     A   
ADCSTATIC . . . . . . . . . . .  D  ADDR  00A4H     A   
B . . . . . . . . . . . . . . .  D  ADDR  00F0H     A   
BLINK2. . . . . . . . . . . . .  C  ADDR  0000H     R   SEG=?PR?BLINK2?MAIN
BLINK4. . . . . . . . . . . . .  C  ADDR  0000H     R   SEG=?PR?BLINK4?MAIN
BLINK6. . . . . . . . . . . . .  C  ADDR  0000H     R   SEG=?PR?BLINK6?MAIN
C_T2. . . . . . . . . . . . . .  B  ADDR  00C8H.1   A   
CE. . . . . . . . . . . . . . .  B  ADDR  00A0H.6   A   
CK_CTRL . . . . . . . . . . . .  D  ADDR  00B6H     A   
CKCON . . . . . . . . . . . . .  D  ADDR  008EH     A   
CLK1. . . . . . . . . . . . . .  B  ADDR  00A0H.1   A   
CLK2. . . . . . . . . . . . . .  B  ADDR  00A0H.5   A   
CP_RL2. . . . . . . . . . . . .  B  ADDR  00C8H.0   A   
CPRL2 . . . . . . . . . . . . .  B  ADDR  00C8H.0   A   
CS. . . . . . . . . . . . . . .  B  ADDR  00A0H.3   A   
CT2 . . . . . . . . . . . . . .  B  ADDR  00C8H.1   A   
CY. . . . . . . . . . . . . . .  B  ADDR  00D0H.7   A   
DATA? . . . . . . . . . . . . .  B  ADDR  00A0H.0   A   
DEV_OFFSET. . . . . . . . . . .  D  ADDR  00BEH     A   
DIN0. . . . . . . . . . . . . .  B  ADDR  0090H.2   A   
DIO0. . . . . . . . . . . . . .  B  ADDR  0090H.0   A   
DIO1. . . . . . . . . . . . . .  B  ADDR  0090H.1   A   
AX51 MACRO ASSEMBLER  MAIN                                                                  05/05/09 16:31:11 PAGE    13

DIO2. . . . . . . . . . . . . .  B  ADDR  0080H.0   A   
DIO3. . . . . . . . . . . . . .  B  ADDR  0080H.1   A   
DIO4. . . . . . . . . . . . . .  B  ADDR  0080H.2   A   
DIO5. . . . . . . . . . . . . .  B  ADDR  0080H.3   A   
DIO6. . . . . . . . . . . . . .  B  ADDR  0080H.4   A   
DIO7. . . . . . . . . . . . . .  B  ADDR  0080H.5   A   
DIO8. . . . . . . . . . . . . .  B  ADDR  0080H.6   A   
DIO9. . . . . . . . . . . . . .  B  ADDR  0080H.7   A   
DOUT2 . . . . . . . . . . . . .  B  ADDR  00A0H.4   A   
DPH . . . . . . . . . . . . . .  D  ADDR  0083H     A   
DPH0. . . . . . . . . . . . . .  D  ADDR  0083H     A   
DPH1. . . . . . . . . . . . . .  D  ADDR  0085H     A   
DPL . . . . . . . . . . . . . .  D  ADDR  0082H     A   
DPL0. . . . . . . . . . . . . .  D  ADDR  0082H     A   
DPL1. . . . . . . . . . . . . .  D  ADDR  0084H     A   
DPS . . . . . . . . . . . . . .  D  ADDR  0086H     A   
DR1 . . . . . . . . . . . . . .  B  ADDR  00A0H.2   A   
DR2 . . . . . . . . . . . . . .  B  ADDR  00A0H.6   A   
DR2_CE. . . . . . . . . . . . .  B  ADDR  00A0H.6   A   
DST_ADDR. . . . . . . . . . . .  I  ADDR  0007H     R   SEG=?ID?MAIN
EA. . . . . . . . . . . . . . .  B  ADDR  00A8H.7   A   
ECO_PAGE_ADDR . . . . . . . . .  D  ADDR  -------       EXT
ECO_PAGE_INIT . . . . . . . . .  C  ADDR  -------       EXT
ECO_PAGE_MANAGER. . . . . . . .  C  ADDR  -------       EXT
ECO_PAGE_REGISTER1. . . . . . .  I  ADDR  -------       EXT
ECO_PAGE_REGISTER2. . . . . . .  I  ADDR  -------       EXT
ECO_PAGE_REGISTER3. . . . . . .  I  ADDR  -------       EXT
ECO_PAGE_REGISTER4. . . . . . .  I  ADDR  -------       EXT
ECO_PAGE_REGISTER5. . . . . . .  I  ADDR  -------       EXT
ECO_PAGE_REGISTER6. . . . . . .  I  ADDR  -------       EXT
ECO_PAGE_REGISTER7. . . . . . .  I  ADDR  -------       EXT
ECO_PAGE_SPI_CONN . . . . . . .  D  ADDR  -------       EXT
EICON . . . . . . . . . . . . .  D  ADDR  00D8H     A   
EIE . . . . . . . . . . . . . .  D  ADDR  00E8H     A   
EIP . . . . . . . . . . . . . .  D  ADDR  00F8H     A   
ES. . . . . . . . . . . . . . .  B  ADDR  00A8H.4   A   
ET0 . . . . . . . . . . . . . .  B  ADDR  00A8H.1   A   
ET1 . . . . . . . . . . . . . .  B  ADDR  00A8H.3   A   
ET2 . . . . . . . . . . . . . .  B  ADDR  00A8H.5   A   
EWDI. . . . . . . . . . . . . .  B  ADDR  00E8H.4   A   
EX0 . . . . . . . . . . . . . .  B  ADDR  00A8H.0   A   
EX1 . . . . . . . . . . . . . .  B  ADDR  00A8H.2   A   
EX2 . . . . . . . . . . . . . .  B  ADDR  00E8H.0   A   
EX3 . . . . . . . . . . . . . .  B  ADDR  00E8H.1   A   
EX4 . . . . . . . . . . . . . .  B  ADDR  00E8H.2   A   
EX5 . . . . . . . . . . . . . .  B  ADDR  00E8H.3   A   
EXEN2 . . . . . . . . . . . . .  B  ADDR  00C8H.3   A   
EXF2. . . . . . . . . . . . . .  B  ADDR  00C8H.6   A   
EXIF. . . . . . . . . . . . . .  D  ADDR  0091H     A   
F0. . . . . . . . . . . . . . .  B  ADDR  00D0H.5   A   
F1. . . . . . . . . . . . . . .  B  ADDR  00D0H.1   A   
I?040 . . . . . . . . . . . . .  D  ADDR  0000H     R   SEG=?DT?BLINK2?MAIN
I?141 . . . . . . . . . . . . .  D  ADDR  0000H     R   SEG=?DT?BLINK4?MAIN
I?242 . . . . . . . . . . . . .  D  ADDR  0000H     R   SEG=?DT?BLINK6?MAIN
I?344 . . . . . . . . . . . . .  D  ADDR  0001H     R   SEG=?DT?MAIN?MAIN
IDX?343 . . . . . . . . . . . .  D  ADDR  0000H     R   SEG=?DT?MAIN?MAIN
IE. . . . . . . . . . . . . . .  D  ADDR  00A8H     A   
IE0 . . . . . . . . . . . . . .  B  ADDR  0088H.1   A   
IE1 . . . . . . . . . . . . . .  B  ADDR  0088H.3   A   
INT0_N. . . . . . . . . . . . .  B  ADDR  0080H.3   A   
INT1_N. . . . . . . . . . . . .  B  ADDR  0080H.4   A   
IP. . . . . . . . . . . . . . .  D  ADDR  00B8H     A   
IT0 . . . . . . . . . . . . . .  B  ADDR  0088H.0   A   
IT1 . . . . . . . . . . . . . .  B  ADDR  0088H.2   A   
MAIN. . . . . . . . . . . . . .  C  ADDR  0000H     R   SEG=?PR?MAIN?MAIN
MPAGE . . . . . . . . . . . . .  D  ADDR  0092H     A   
AX51 MACRO ASSEMBLER  MAIN                                                                  05/05/09 16:31:11 PAGE    14

MSG . . . . . . . . . . . . . .  I  ADDR  0000H     R   SEG=?ID?MAIN
OV. . . . . . . . . . . . . . .  B  ADDR  00D0H.2   A   
P . . . . . . . . . . . . . . .  B  ADDR  00D0H.0   A   
P0. . . . . . . . . . . . . . .  D  ADDR  0080H     A   
P0_0. . . . . . . . . . . . . .  B  ADDR  0080H.0   A   
P0_1. . . . . . . . . . . . . .  B  ADDR  0080H.1   A   
P0_2. . . . . . . . . . . . . .  B  ADDR  0080H.2   A   
P0_3. . . . . . . . . . . . . .  B  ADDR  0080H.3   A   
P0_4. . . . . . . . . . . . . .  B  ADDR  0080H.4   A   
P0_5. . . . . . . . . . . . . .  B  ADDR  0080H.5   A   
P0_6. . . . . . . . . . . . . .  B  ADDR  0080H.6   A   
P0_7. . . . . . . . . . . . . .  B  ADDR  0080H.7   A   
P0_ALT. . . . . . . . . . . . .  D  ADDR  0095H     A   
P0_DIR. . . . . . . . . . . . .  D  ADDR  0094H     A   
P1. . . . . . . . . . . . . . .  D  ADDR  0090H     A   
P1_0. . . . . . . . . . . . . .  B  ADDR  0090H.0   A   
P1_1. . . . . . . . . . . . . .  B  ADDR  0090H.1   A   
P1_2. . . . . . . . . . . . . .  B  ADDR  0090H.2   A   
P1_ALT. . . . . . . . . . . . .  D  ADDR  0097H     A   
P1_DIR. . . . . . . . . . . . .  D  ADDR  0096H     A   
PCON. . . . . . . . . . . . . .  D  ADDR  0087H     A   
PS. . . . . . . . . . . . . . .  B  ADDR  00B8H.4   A   
PSW . . . . . . . . . . . . . .  D  ADDR  00D0H     A   
PT0 . . . . . . . . . . . . . .  B  ADDR  00B8H.1   A   
PT1 . . . . . . . . . . . . . .  B  ADDR  00B8H.3   A   
PT2 . . . . . . . . . . . . . .  B  ADDR  00B8H.5   A   
PWDI. . . . . . . . . . . . . .  B  ADDR  00F8H.4   A   
PWM . . . . . . . . . . . . . .  B  ADDR  0080H.7   A   
PWMCON. . . . . . . . . . . . .  D  ADDR  00A9H     A   
PWMDUTY . . . . . . . . . . . .  D  ADDR  00AAH     A   
PWR_UP. . . . . . . . . . . . .  B  ADDR  00A0H.7   A   
PX0 . . . . . . . . . . . . . .  B  ADDR  00B8H.0   A   
PX1 . . . . . . . . . . . . . .  B  ADDR  00B8H.2   A   
PX2 . . . . . . . . . . . . . .  B  ADDR  00F8H.0   A   
PX3 . . . . . . . . . . . . . .  B  ADDR  00F8H.1   A   
PX4 . . . . . . . . . . . . . .  B  ADDR  00F8H.2   A   
PX5 . . . . . . . . . . . . . .  B  ADDR  00F8H.3   A   
RADIO . . . . . . . . . . . . .  D  ADDR  00A0H     A   
RB8 . . . . . . . . . . . . . .  B  ADDR  0098H.2   A   
RCAP2H. . . . . . . . . . . . .  D  ADDR  00CBH     A   
RCAP2L. . . . . . . . . . . . .  D  ADDR  00CAH     A   
RCLK. . . . . . . . . . . . . .  B  ADDR  00C8H.5   A   
REGX_CTRL . . . . . . . . . . .  D  ADDR  00ADH     A   
REGX_LSB. . . . . . . . . . . .  D  ADDR  00ACH     A   
REGX_MSB. . . . . . . . . . . .  D  ADDR  00ABH     A   
REN . . . . . . . . . . . . . .  B  ADDR  0098H.4   A   
RF_DATA . . . . . . . . . . . .  D  ADDR  0000H     R   SEG=?DT?MAIN
RF_INIT . . . . . . . . . . . .  C  ADDR  -------       EXT
RI. . . . . . . . . . . . . . .  B  ADDR  0098H.0   A   
RS0 . . . . . . . . . . . . . .  B  ADDR  00D0H.3   A   
RS1 . . . . . . . . . . . . . .  B  ADDR  00D0H.4   A   
RSTREAS . . . . . . . . . . . .  D  ADDR  00B1H     A   
RXD . . . . . . . . . . . . . .  B  ADDR  0080H.1   A   
SBUF. . . . . . . . . . . . . .  D  ADDR  0099H     A   
SCON. . . . . . . . . . . . . .  D  ADDR  0098H     A   
SM0 . . . . . . . . . . . . . .  B  ADDR  0098H.7   A   
SM1 . . . . . . . . . . . . . .  B  ADDR  0098H.6   A   
SM2 . . . . . . . . . . . . . .  B  ADDR  0098H.5   A   
SP. . . . . . . . . . . . . . .  D  ADDR  0081H     A   
SPC_FNC . . . . . . . . . . . .  D  ADDR  008FH     A   
SPI_CTRL. . . . . . . . . . . .  D  ADDR  00B3H     A   
SPI_DATA. . . . . . . . . . . .  D  ADDR  00B2H     A   
SPICLK. . . . . . . . . . . . .  D  ADDR  00B4H     A   
T0. . . . . . . . . . . . . . .  B  ADDR  0080H.5   A   
T1. . . . . . . . . . . . . . .  B  ADDR  0080H.6   A   
T1_1V2. . . . . . . . . . . . .  D  ADDR  00BCH     A   
AX51 MACRO ASSEMBLER  MAIN                                                                  05/05/09 16:31:11 PAGE    15

T2. . . . . . . . . . . . . . .  B  ADDR  0090H.0   A   
T2_1V2. . . . . . . . . . . . .  D  ADDR  00BDH     A   
T2CON . . . . . . . . . . . . .  D  ADDR  00C8H     A   
TB8 . . . . . . . . . . . . . .  B  ADDR  0098H.3   A   
TCLK. . . . . . . . . . . . . .  B  ADDR  00C8H.4   A   
TCON. . . . . . . . . . . . . .  D  ADDR  0088H     A   
TEST_MODE . . . . . . . . . . .  D  ADDR  00B7H     A   
TF0 . . . . . . . . . . . . . .  B  ADDR  0088H.5   A   
TF1 . . . . . . . . . . . . . .  B  ADDR  0088H.7   A   
TF2 . . . . . . . . . . . . . .  B  ADDR  00C8H.7   A   
TH0 . . . . . . . . . . . . . .  D  ADDR  008CH     A   
TH1 . . . . . . . . . . . . . .  D  ADDR  008DH     A   
TH2 . . . . . . . . . . . . . .  D  ADDR  00CDH     A   
TI. . . . . . . . . . . . . . .  B  ADDR  0098H.1   A   
TICK_DV . . . . . . . . . . . .  D  ADDR  00B5H     A   
TL0 . . . . . . . . . . . . . .  D  ADDR  008AH     A   
TL1 . . . . . . . . . . . . . .  D  ADDR  008BH     A   
TL2 . . . . . . . . . . . . . .  D  ADDR  00CCH     A   
TMOD. . . . . . . . . . . . . .  D  ADDR  0089H     A   
TR0 . . . . . . . . . . . . . .  B  ADDR  0088H.4   A   
TR1 . . . . . . . . . . . . . .  B  ADDR  0088H.6   A   
TR2 . . . . . . . . . . . . . .  B  ADDR  00C8H.2   A   
TXD . . . . . . . . . . . . . .  B  ADDR  0080H.2   A   
WDTI. . . . . . . . . . . . . .  B  ADDR  00D8H.3   A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S).
