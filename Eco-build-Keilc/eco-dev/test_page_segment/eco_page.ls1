AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/05/09 17:03:41 PAGE     1


MACRO ASSEMBLER AX51 V3.06a
OBJECT MODULE PLACED IN .\eco_page.obj
ASSEMBLER INVOKED BY: C:\Keil\C51\BIN\AX51.exe .\eco_page.src EP DEBUG SYMBOLS OJ(.\eco_page.obj) PR(.\eco_page.ls1) 

LOC    OBJ             LINE     SOURCE

                          1     ; ./eco_page.src generated from: .\eco_page.c
                          2     ; COMPILER INVOKED BY:
                          3     ;        C:\Keil\C51\BIN\C51.exe .\eco_page.c BROWSE DEBUG CODE LISTINCLUDE SYMBOLS PREP
                               RINT ROM(LARGE) INCDIR(../../Include) SRC(./eco_page.src)
                          4     
                          5     $nomod51 
                          6     
                          7     NAME    ECO_PAGE
                          8     
 00A0.7                   9     PWR_UP  BIT     0A0H.7
 0080                    10     P0      DATA    080H
 0090                    11     P1      DATA    090H
 00D0.6                  12     AC      BIT     0D0H.6
 0080.5                  13     T0      BIT     080H.5
 00B3                    14     SPI_CTRL        DATA    0B3H
 0080.6                  15     T1      BIT     080H.6
 00A8.7                  16     EA      BIT     0A8H.7
 0090.0                  17     T2      BIT     090H.0
 00A0.6                  18     CE      BIT     0A0H.6
 00BE                    19     DEV_OFFSET      DATA    0BEH
 00A0.1                  20     CLK1    BIT     0A0H.1
 0090.2                  21     DIN0    BIT     090H.2
 00A0.5                  22     CLK2    BIT     0A0H.5
 0090.0                  23     DIO0    BIT     090H.0
 0083                    24     DPH0    DATA    083H
 0090.1                  25     DIO1    BIT     090H.1
 00A8                    26     IE      DATA    0A8H
 0085                    27     DPH1    DATA    085H
 0080.0                  28     DIO2    BIT     080H.0
 0080.1                  29     DIO3    BIT     080H.1
 0080.0                  30     P0_0    BIT     080H.0
 0090.0                  31     P1_0    BIT     090H.0
 0080.2                  32     DIO4    BIT     080H.2
 0080.1                  33     P0_1    BIT     080H.1
 0082                    34     DPL0    DATA    082H
 0090.1                  35     P1_1    BIT     090H.1
 0080.3                  36     DIO5    BIT     080H.3
 0080.2                  37     P0_2    BIT     080H.2
 0084                    38     DPL1    DATA    084H
 0090.2                  39     P1_2    BIT     090H.2
 0080.4                  40     DIO6    BIT     080H.4
 0080.3                  41     P0_3    BIT     080H.3
 0080.5                  42     DIO7    BIT     080H.5
 0080.4                  43     P0_4    BIT     080H.4
 00A4                    44     ADCSTATIC       DATA    0A4H
 0080.6                  45     DIO8    BIT     080H.6
 0080.5                  46     P0_5    BIT     080H.5
 00C8.6                  47     EXF2    BIT     0C8H.6
 00A0.3                  48     CS      BIT     0A0H.3
 0080.7                  49     DIO9    BIT     080H.7
 0080.6                  50     P0_6    BIT     080H.6
 0080.7                  51     P0_7    BIT     080H.7
 00A8.4                  52     ES      BIT     0A8H.4
 00B8                    53     IP      DATA    0B8H
 00A0.0                  54     DATA?   BIT     0A0H.0
 0098.0                  55     RI      BIT     098H.0
 00D0.7                  56     CY      BIT     0D0H.7
 0098.1                  57     TI      BIT     098H.1
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/05/09 17:03:41 PAGE     2

 00BC                    58     T1_1V2  DATA    0BCH
 008F                    59     SPC_FNC DATA    08FH
 00BD                    60     T2_1V2  DATA    0BDH
 00CB                    61     RCAP2H  DATA    0CBH
 00B8.4                  62     PS      BIT     0B8H.4
 0081                    63     SP      DATA    081H
 00D0.2                  64     OV      BIT     0D0H.2
 00B6                    65     CK_CTRL DATA    0B6H
 00CA                    66     RCAP2L  DATA    0CAH
 00B5                    67     TICK_DV DATA    0B5H
 00B1                    68     RSTREAS DATA    0B1H
 00C8.1                  69     C_T2    BIT     0C8H.1
 00E8.4                  70     EWDI    BIT     0E8H.4
 00A1                    71     ADCCON  DATA    0A1H
 00C8.5                  72     RCLK    BIT     0C8H.5
 00A2                    73     ADCDATAH        DATA    0A2H
 0091                    74     EXIF    DATA    091H
 00C8.4                  75     TCLK    BIT     0C8H.4
 00A0.6                  76     DR2_CE  BIT     0A0H.6
 00A3                    77     ADCDATAL        DATA    0A3H
 0099                    78     SBUF    DATA    099H
 0087                    79     PCON    DATA    087H
 0098                    80     SCON    DATA    098H
 00F8.4                  81     PWDI    BIT     0F8H.4
 0089                    82     TMOD    DATA    089H
 0088                    83     TCON    DATA    088H
 00D8.3                  84     WDTI    BIT     0D8H.3
 00AA                    85     PWMDUTY DATA    0AAH
 0088.1                  86     IE0     BIT     088H.1
 0088.3                  87     IE1     BIT     088H.3
 0094                    88     P0_DIR  DATA    094H
 00F0                    89     B       DATA    0F0H
 0096                    90     P1_DIR  DATA    096H
 0095                    91     P0_ALT  DATA    095H
 0097                    92     P1_ALT  DATA    097H
 00C8.0                  93     CP_RL2  BIT     0C8H.0
 00A0.2                  94     DR1     BIT     0A0H.2
 00E0                    95     ACC     DATA    0E0H
 00A0.6                  96     DR2     BIT     0A0H.6
 00B7                    97     TEST_MODE       DATA    0B7H
 00B4                    98     SPICLK  DATA    0B4H
 00C8.1                  99     CT2     BIT     0C8H.1
 00A8.1                 100     ET0     BIT     0A8H.1
 00A8.3                 101     ET1     BIT     0A8H.3
 0088.5                 102     TF0     BIT     088H.5
 0080.3                 103     INT0_N  BIT     080H.3
 00A8.5                 104     ET2     BIT     0A8H.5
 0088.7                 105     TF1     BIT     088H.7
 0080.4                 106     INT1_N  BIT     080H.4
 00C8.7                 107     TF2     BIT     0C8H.7
 0098.2                 108     RB8     BIT     098H.2
 008C                   109     TH0     DATA    08CH
 00A8.0                 110     EX0     BIT     0A8H.0
 0088.0                 111     IT0     BIT     088H.0
 008D                   112     TH1     DATA    08DH
 00A8.2                 113     EX1     BIT     0A8H.2
 0098.3                 114     TB8     BIT     098H.3
 0088.2                 115     IT1     BIT     088H.2
 00CD                   116     TH2     DATA    0CDH
 00AD                   117     REGX_CTRL       DATA    0ADH
 00E8.0                 118     EX2     BIT     0E8H.0
 00D0.0                 119     P       BIT     0D0H.0
 00E8.1                 120     EX3     BIT     0E8H.1
 0098.7                 121     SM0     BIT     098H.7
 008A                   122     TL0     DATA    08AH
 00E8.2                 123     EX4     BIT     0E8H.2
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/05/09 17:03:41 PAGE     3

 0098.6                 124     SM1     BIT     098H.6
 008B                   125     TL1     DATA    08BH
 00E8.3                 126     EX5     BIT     0E8H.3
 0098.5                 127     SM2     BIT     098H.5
 00CC                   128     TL2     DATA    0CCH
 00E8                   129     EIE     DATA    0E8H
 00B8.1                 130     PT0     BIT     0B8H.1
 00D0.3                 131     RS0     BIT     0D0H.3
 00B8.3                 132     PT1     BIT     0B8H.3
 00D0.4                 133     RS1     BIT     0D0H.4
 00B8.5                 134     PT2     BIT     0B8H.5
 0088.4                 135     TR0     BIT     088H.4
 00A9                   136     PWMCON  DATA    0A9H
 0088.6                 137     TR1     BIT     088H.6
 00C8.2                 138     TR2     BIT     0C8H.2
 00B8.0                 139     PX0     BIT     0B8H.0
 00B8.2                 140     PX1     BIT     0B8H.2
 00F8.0                 141     PX2     BIT     0F8H.0
 00F8.1                 142     PX3     BIT     0F8H.1
 00F8.2                 143     PX4     BIT     0F8H.2
 0083                   144     DPH     DATA    083H
 00F8.3                 145     PX5     BIT     0F8H.3
 00F8                   146     EIP     DATA    0F8H
 0082                   147     DPL     DATA    082H
 00C8.3                 148     EXEN2   BIT     0C8H.3
 00C8.0                 149     CPRL2   BIT     0C8H.0
 0098.4                 150     REN     BIT     098H.4
 00C8                   151     T2CON   DATA    0C8H
 0086                   152     DPS     DATA    086H
 00B2                   153     SPI_DATA        DATA    0B2H
 0092                   154     MPAGE   DATA    092H
 0080.1                 155     RXD     BIT     080H.1
 00A0.4                 156     DOUT2   BIT     0A0H.4
 00D8                   157     EICON   DATA    0D8H
 008E                   158     CKCON   DATA    08EH
 0080.2                 159     TXD     BIT     080H.2
 00A0                   160     RADIO   DATA    0A0H
 0080.7                 161     PWM     BIT     080H.7
 00D0.5                 162     F0      BIT     0D0H.5
 00D0.1                 163     F1      BIT     0D0H.1
 00AC                   164     REGX_LSB        DATA    0ACH
 00D0                   165     PSW     DATA    0D0H
 00AB                   166     REGX_MSB        DATA    0ABH
------                  167     ?PR?eco_page_init?ECO_PAGE               SEGMENT CODE 
------                  168     ?PR?eco_page_manager?ECO_PAGE            SEGMENT CODE 
------                  169     ?DT?eco_page_manager?ECO_PAGE            SEGMENT DATA OVERLAYABLE 
------                  170     ?DT?ECO_PAGE         SEGMENT DATA 
------                  171     ?ID?ECO_PAGE         SEGMENT IDATA 
                        172             EXTRN   CODE (_eeprom_read)
                        173             EXTRN   CODE (eeprom_init)
                        174             PUBLIC  ECO_PAGE_TABLE_INDEX
                        175             PUBLIC  ECO_PAGE_REGISTER7
                        176             PUBLIC  ECO_PAGE_REGISTER6
                        177             PUBLIC  ECO_PAGE_REGISTER5
                        178             PUBLIC  ECO_PAGE_REGISTER4
                        179             PUBLIC  ECO_PAGE_ADDR
                        180             PUBLIC  ECO_PAGE_REGISTER3
                        181             PUBLIC  ECO_PAGE_REGISTER2
                        182             PUBLIC  ECO_PAGE_REGISTER1
                        183             PUBLIC  ECO_PAGE_PREV_VID
                        184             PUBLIC  ECO_PAGE_PREV_PID
                        185             PUBLIC  ECO_PAGE_SPI_CONN
                        186             PUBLIC  ECO_PAGE_TABLE
                        187             PUBLIC  eco_page_manager
                        188             PUBLIC  eco_page_init
                        189     
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/05/09 17:03:41 PAGE     4

------                  190             RSEG  ?DT?eco_page_manager?ECO_PAGE
000000                  191     ?eco_page_manager?BYTE:
000004                  192             ORG  4
000004                  193             seg?140:   DS   2
000000                  194             ORG  0
000000                  195               i?141:   DS   2
000002                  196             ORG  2
000002                  197      page_index?142:   DS   2
                        198     
------                  199             RSEG  ?DT?ECO_PAGE
000000                  200      ECO_PAGE_TABLE:   DS   4
000004                  201     ECO_PAGE_SPI_CONN:   DS   1
000005                  202     ECO_PAGE_PREV_PID:   DS   1
000006                  203     ECO_PAGE_PREV_VID:   DS   1
000007                  204       ECO_PAGE_ADDR:   DS   2
000009                  205     ECO_PAGE_TABLE_INDEX:   DS   1
                        206     
------                  207             RSEG  ?ID?ECO_PAGE
000000                  208     ECO_PAGE_REGISTER1:   DS   1
000001                  209     ECO_PAGE_REGISTER2:   DS   1
000002                  210     ECO_PAGE_REGISTER3:   DS   1
000003                  211     ECO_PAGE_REGISTER4:   DS   1
000004                  212     ECO_PAGE_REGISTER5:   DS   1
000005                  213     ECO_PAGE_REGISTER6:   DS   1
000006                  214     ECO_PAGE_REGISTER7:   DS   1
                        215     ; /*
                        216     ;  * Author(s): Wei-Han Chen (Embedded Platform Lab, NTHU)
                        217     ;  * Copyright (c) 2009 National Tsing Hua University (NTHU) 
                        218     ;  * Permission to copy, modify, and distribute this program is granted 
                        219     ;  * for noncommercial purposes, provided the author(s) and copyright
                        220     ;  * notice are retained. All other uses require explicit written
                        221     ;  * permission from NTHU. 
                        222     ;  *
                        223     ;  * Eco Paging Library 
                        224     ;  *
                        225     ;  * Wei-Han Chen <xwaynec@gmail.com> 
                        226     ;  * 2009/2/13
                        227     ;  */
                        228     ; 
                        229     ; #include "eco_page.h"
                        230     ; #include "eeprom/eeprom.h"
                        231     ; 
                        232     ; //control page replacement policy is LRU or Round-Robin
                        233     ; #define PAGE_REPLACEMENT 1
                        234     ; 
                        235     ; //#define ECO_PAGE_SIZE 256
                        236     ; //#define ECO_PAGE_ADDR_OFFSET 11 
                        237     ; 
                        238     ; 
                        239     ; //#define ECO_PAGE_SIZE 128
                        240     ; //#define ECO_PAGE_ADDR_OFFSET 23
                        241     ; 
                        242     ; 
                        243     ; 
                        244     ; //#define ECO_PAGE_SIZE 64
                        245     ; //#define ECO_PAGE_ADDR_OFFSET 47
                        246     ; 
                        247     ; 
                        248     ; #define ECO_PAGE_SIZE 256
                        249     ; #define ECO_PAGE_ADDR_OFFSET 14
                        250     ; 
                        251     ; 
                        252     ; #if ECO_PAGE_SIZE == 64
                        253     ;       
                        254     ;       #define ECO_PAGE_ENTRY  (64-ECO_PAGE_ADDR_OFFSET)
                        255     ;       #define ECO_PAGE_SHIFT  6
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/05/09 17:03:41 PAGE     5

                        256     ;       #define ECO_PAGE_MASK   0x003F
                        257     ;       #define ECO_PAGE_MOV_MASK       0xFFC0
                        258     ; 
                        259     ;       unsigned int idata ECO_PAGE_TABLE[ECO_PAGE_ENTRY];
                        260     ;       //Eco page virtual address id
                        261     ;       unsigned int ECO_PAGE_PREV_VID;
                        262     ;       //Eco page physical address id 
                        263     ;       unsigned int ECO_PAGE_PREV_PID;
                        264     ; 
                        265     ; #elif ECO_PAGE_SIZE == 128
                        266     ;       
                        267     ;       #define ECO_PAGE_ENTRY (32-ECO_PAGE_ADDR_OFFSET)
                        268     ;       #define ECO_PAGE_SHIFT  7
                        269     ;       #define ECO_PAGE_MASK   0x007F
                        270     ;       #define ECO_PAGE_MOV_MASK       0xFF80
                        271     ; 
                        272     ;       unsigned int idata ECO_PAGE_TABLE[ECO_PAGE_ENTRY];
                        273     ;       //Eco page virtual address id
                        274     ;       unsigned int ECO_PAGE_PREV_VID;
                        275     ;       //Eco page physical address id 
                        276     ;       unsigned int ECO_PAGE_PREV_PID;
                        277     ; 
                        278     ; #elif ECO_PAGE_SIZE == 256
                        279     ;       
                        280     ;       #define ECO_PAGE_ENTRY  (16-ECO_PAGE_ADDR_OFFSET)
                        281     ;       #define ECO_PAGE_SHIFT  8       
                        282     ;       #define ECO_PAGE_MASK   0x00FF
                        283     ;       #define ECO_PAGE_MOV_MASK       0xFF00
                        284     ; 
                        285     ;       unsigned int ECO_PAGE_TABLE[ECO_PAGE_ENTRY];
                        286     ;       //Eco page virtual address id
                        287     ;       unsigned char ECO_PAGE_PREV_VID;
                        288     ;       //Eco page physical address id 
                        289     ;       unsigned char ECO_PAGE_PREV_PID;
                        290     ; 
                        291     ; #endif
                        292     ; 
                        293     ; unsigned char ECO_PAGE_TABLE_INDEX;
                        294     ; unsigned int ECO_PAGE_ADDR;
                        295     ; unsigned char ECO_PAGE_SPI_CONN;
                        296     ; 
                        297     ; unsigned char idata ECO_PAGE_REGISTER1;
                        298     ; unsigned char idata ECO_PAGE_REGISTER2;
                        299     ; unsigned char idata ECO_PAGE_REGISTER3;
                        300     ; unsigned char idata ECO_PAGE_REGISTER4;
                        301     ; unsigned char idata ECO_PAGE_REGISTER5;
                        302     ; unsigned char idata ECO_PAGE_REGISTER6;
                        303     ; unsigned char idata ECO_PAGE_REGISTER7;
                        304     ; 
                        305     ; 
                        306     ; void eco_page_init()
                        307     
------                  308             RSEG  ?PR?eco_page_init?ECO_PAGE
000000                  309     eco_page_init:
                        310                             ; SOURCE LINE # 92
                        311     ; {
                        312                             ; SOURCE LINE # 93
                        313     ;       //ECO_PAGE_TABLE_INDEX = ECO_PAGE_ENTRY - 1;
                        314     ;       ECO_PAGE_TABLE_INDEX = 0;       
                        315                             ; SOURCE LINE # 95
000000 E4               316             CLR     A
000001 F500       F     317             MOV     ECO_PAGE_TABLE_INDEX,A
                        318     ;       ECO_PAGE_ADDR = 0;
                        319                             ; SOURCE LINE # 96
000003 F500       F     320             MOV     ECO_PAGE_ADDR,A
000005 F500       F     321             MOV     ECO_PAGE_ADDR+01H,A
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/05/09 17:03:41 PAGE     6

                        322     ;       ECO_PAGE_PREV_VID = 0;
                        323                             ; SOURCE LINE # 97
000007 F500       F     324             MOV     ECO_PAGE_PREV_VID,A
                        325     ;       ECO_PAGE_PREV_PID = 0;
                        326                             ; SOURCE LINE # 98
000009 F500       F     327             MOV     ECO_PAGE_PREV_PID,A
                        328     ; }
                        329                             ; SOURCE LINE # 99
00000B 22               330             RET     
                        331     ; END OF eco_page_init
                        332     
                        333     ; 
                        334     ; 
                        335     ; #if PAGE_REPLACEMENT == 0 
                        336     ; //LRU page replacement
                        337     ; void eco_page_manager()
                        338     ; {
                        339     ;       unsigned int i;
                        340     ;       unsigned int page_index = -1;
                        341     ; 
                        342     ;       //if page id is the same with the last page id
                        343     ;       if((ECO_PAGE_ADDR >> ECO_PAGE_SHIFT) == ECO_PAGE_PREV_PID)
                        344     ;       {
                        345     ;               //virtual address id + function offset
                        346     ;               ECO_PAGE_ADDR = (ECO_PAGE_PREV_VID << ECO_PAGE_SHIFT) + (ECO_PAGE_ADDR &
                                ECO_PAGE_MASK);
                        347     ;               #pragma asm
                        348     ;               //eco_page_function_call
                        349     ;               #pragma endasm
                        350     ;               return ;
                        351     ;       }
                        352     ; 
                        353     ;       //Check Table   
                        354     ;       for(i=0;i<ECO_PAGE_ENTRY;i++)
                        355     ;       {   
                        356     ;               if((ECO_PAGE_ADDR >> ECO_PAGE_SHIFT) == (ECO_PAGE_TABLE[i] & 0x7FFF))
                        357     ;               {
                        358     ;                       page_index = i;
                        359     ; 
                        360     ;                       //set LRU bit is 1
                        361     ;                       ECO_PAGE_TABLE[i] = ECO_PAGE_TABLE[i] | 0x8000;
                        362     ;                       break;
                        363     ;               }
                        364     ;       }
                        365     ; 
                        366     ;       if(page_index != -1)
                        367     ;       {
                        368     ;               //store function physical addres id 
                        369     ;               ECO_PAGE_PREV_PID = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;
                        370     ;       
                        371     ;               //memory page is in ram
                        372     ;               ECO_PAGE_ADDR = ((page_index + ECO_PAGE_ADDR_OFFSET) << ECO_PAGE_SHIFT) 
                               + (ECO_PAGE_ADDR & ECO_PAGE_MASK);
                        373     ; 
                        374     ;               //cache the virtual address id
                        375     ;               ECO_PAGE_PREV_VID = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;
                        376     ; 
                        377     ; 
                        378     ;               
                        379     ;               #pragma asm
                        380     ;               //eco_page_function_call
                        381     ;               //MOV     DPH,ECO_PAGE_ADDR
                        382     ;               //MOV     DPL,ECO_PAGE_ADDR+01H
                        383     ;               //LCALL ?C?ICALL2
                        384     ;               #pragma endasm
                        385     ;       }       
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/05/09 17:03:41 PAGE     7

                        386     ;       else
                        387     ;       {
                        388     ;               //page fault
                        389     ;               for(i=(ECO_PAGE_TABLE_INDEX+1)%ECO_PAGE_ENTRY; ;i=(i+1)%ECO_PAGE_ENTRY)
                        390     ;               {
                        391     ;                       if((ECO_PAGE_TABLE[i] & 0x8000) == 0x8000)
                        392     ;                       {
                        393     ;                               //LRU bit is 1 and then set this bit is 0
                        394     ;                               ECO_PAGE_TABLE[i] = ECO_PAGE_TABLE[i] & 0x7FFF;
                        395     ;                       }
                        396     ;                       else
                        397     ;                       {
                        398     ;                               unsigned char xdata *seg = (unsigned char xdata *)((i + 
                               ECO_PAGE_ADDR_OFFSET) << ECO_PAGE_SHIFT);
                        399     ;                               unsigned int j;
                        400     ;                               
                        401     ;                               //memory page is in ram
                        402     ;                               eeprom_init();
                        403     ; 
                        404     ;                               //mov code from eeprom to external ram
                        405     ;                               for(j=0;j<ECO_PAGE_SIZE;j++)
                        406     ;                               {
                        407     ;                                       *(seg+j) = eeprom_read(ECO_ADDR_SHIFT(ECO_PAGE_A
                               DDR & ECO_PAGE_MOV_MASK ) +j);
                        408     ;                               }
                        409     ;                               
                        410     ;                               //update page table to connect this physical address id 
                               with virtual address id 
                        411     ;                               ECO_PAGE_TABLE[i] = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;
                        412     ; 
                        413     ;                               //store physical address id
                        414     ;                               ECO_PAGE_PREV_PID = ECO_PAGE_TABLE[i];
                        415     ; 
                        416     ;                               //update page address e.g.  (page_id<<8) + page_offset
                        417     ;                               ECO_PAGE_ADDR = ((i + ECO_PAGE_ADDR_OFFSET) << ECO_PAGE_
                               SHIFT) + (ECO_PAGE_ADDR & ECO_PAGE_MASK);
                        418     ; 
                        419     ;                               //store virtual address id 
                        420     ;                               ECO_PAGE_PREV_VID = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;    
                        421     ; 
                        422     ;                               //mov to the next index
                        423     ;                               ECO_PAGE_TABLE_INDEX = i;
                        424     ; 
                        425     ;                               //jump  to function address
                        426     ;                               #pragma asm
                        427     ;                               //eco_page_function_call
                        428     ;                               //MOV     DPH,ECO_PAGE_ADDR
                        429     ;                               //MOV     DPL,ECO_PAGE_ADDR+01H
                        430     ;                               //LCALL        ?C?ICALL2               
                        431     ;                               #pragma endasm
                        432     ;                               
                        433     ;                               return ;
                        434     ;                               
                        435     ;                       }
                        436     ;               }
                        437     ;                       
                        438     ;       }
                        439     ;                               
                        440     ; }
                        441     ; 
                        442     ; #else
                        443     ; 
                        444     ; void eco_page_manager()
                        445     
------                  446             RSEG  ?PR?eco_page_manager?ECO_PAGE
000000                  447     eco_page_manager:
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/05/09 17:03:41 PAGE     8

                        448             USING   0
                        449                             ; SOURCE LINE # 211
                        450     ; {
                        451                             ; SOURCE LINE # 212
                        452     ;       unsigned int i;
                        453     ;       unsigned int page_index = -1; 
                        454                             ; SOURCE LINE # 214
000000 74FF             455             MOV     A,#0FFH
000002 F500       F     456             MOV     page_index?142,A
000004 F500       F     457             MOV     page_index?142+01H,A
                        458     ; 
                        459     ;       //Check POP instruction 
                        460     ;       //for(i=0;i<10;i++)
                        461     ;       //{    
                        462     ;       //      blink_led();
                        463     ;       //      mdelay(200);
                        464     ;       //}    
                        465     ;       //mdelay(1000);
                        466     ;       
                        467     ;       //if page id is the same with the last page id
                        468     ;       if((ECO_PAGE_ADDR >> ECO_PAGE_SHIFT) == ECO_PAGE_PREV_PID)
                        469                             ; SOURCE LINE # 225
000006 E500       F     470             MOV     A,ECO_PAGE_ADDR
000008 6500       F     471             XRL     A,ECO_PAGE_PREV_PID
00000A 7001             472             JNZ     ?C0013
00000C E4               473             CLR     A
00000D                  474     ?C0013:
00000D 702E             475             JNZ     ?C0002
                        476     ;       {
                        477                             ; SOURCE LINE # 226
                        478     ;               //virtual address id + function offset
                        479     ;               ECO_PAGE_ADDR = (ECO_PAGE_PREV_VID << ECO_PAGE_SHIFT) + (ECO_PAGE_ADDR &
                                ECO_PAGE_MASK);
                        480                             ; SOURCE LINE # 228
00000F E500       F     481             MOV     A,ECO_PAGE_PREV_VID
000011 FE               482             MOV     R6,A
000012 7C00             483             MOV     R4,#00H
000014 E4               484             CLR     A
000015 2500       F     485             ADD     A,ECO_PAGE_ADDR+01H
000017 F500       F     486             MOV     ECO_PAGE_ADDR+01H,A
000019 EC               487             MOV     A,R4
00001A 3E               488             ADDC    A,R6
00001B F500       F     489             MOV     ECO_PAGE_ADDR,A
                        490     ;               #pragma asm
                        491     ; 
                        492               
                        493     ;               MOV R0,#LOW (ECO_PAGE_REGISTER1)
00001D 7800       F     494               MOV R0,#LOW (ECO_PAGE_REGISTER1)
                        495     ;       MOV A,@R0
00001F E6               496               MOV A,@R0
                        497     ;               MOV R0,#LOW (ECO_PAGE_REGISTER2)
000020 7800       F     498               MOV R0,#LOW (ECO_PAGE_REGISTER2)
                        499     ;       MOV A,@R0
000022 E6               500               MOV A,@R0
                        501     ;               MOV R0,#LOW (ECO_PAGE_REGISTER3)
000023 7800       F     502               MOV R0,#LOW (ECO_PAGE_REGISTER3)
                        503     ;       MOV A,@R0
000025 E6               504               MOV A,@R0
                        505     ;               MOV R0,#LOW (ECO_PAGE_REGISTER4)
000026 7800       F     506               MOV R0,#LOW (ECO_PAGE_REGISTER4)
                        507     ;       MOV A,@R0
000028 E6               508               MOV A,@R0
                        509     ;               MOV R0,#LOW (ECO_PAGE_REGISTER5)
000029 7800       F     510               MOV R0,#LOW (ECO_PAGE_REGISTER5)
                        511     ;       MOV A,@R0
00002B E6               512               MOV A,@R0
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/05/09 17:03:41 PAGE     9

                        513     ;               MOV R0,#LOW (ECO_PAGE_REGISTER6)
00002C 7800       F     514               MOV R0,#LOW (ECO_PAGE_REGISTER6)
                        515     ;       MOV A,@R0
00002E E6               516               MOV A,@R0
                        517     ;               MOV R0,#LOW (ECO_PAGE_REGISTER7)
00002F 7800       F     518               MOV R0,#LOW (ECO_PAGE_REGISTER7)
                        519     ;       MOV A,@R0
000031 E6               520               MOV A,@R0
                        521     ;       
                        522               
                        523     ;               MOV     SPI_CTRL,ECO_PAGE_SPI_CONN
000032 8500B3     F     524               MOV   SPI_CTRL,ECO_PAGE_SPI_CONN
                        525     ;               MOV     DPH,ECO_PAGE_ADDR
000035 850083     F     526               MOV   DPH,ECO_PAGE_ADDR
                        527     ;               MOV     DPL,ECO_PAGE_ADDR+01H
000038 850082     F     528               MOV   DPL,ECO_PAGE_ADDR+01H
                        529     ;               
                        530               
                        531     ;               CLR     A
00003B E4               532               CLR   A
                        533     ;               JMP     @A+DPTR
00003C 73               534               JMP   @A+DPTR
                        535     ; 
                        536               
                        537     ; 
                        538               
                        539     ;               //eco_page_function_call
                        540               
                        541     ;               //MOV     DPH,ECO_PAGE_ADDR
                        542               
                        543     ;               //MOV     DPL,ECO_PAGE_ADDR+01H
                        544               
                        545     ;               //CLR   A
                        546               
                        547     ;               //LJMP  @A+DPTR
                        548               
                        549     ;               #pragma endasm
                        550     ;       }       
                        551                             ; SOURCE LINE # 260
00003D                  552     ?C0002:
                        553     ;                               
                        554     ;       //Check Table   
                        555     ;       for(i=0;i<ECO_PAGE_ENTRY;i++)
                        556                             ; SOURCE LINE # 263
00003D E4               557             CLR     A
00003E F500       F     558             MOV     i?141,A
000040 F500       F     559             MOV     i?141+01H,A
000042                  560     ?C0003:
                        561     ;       {   
                        562                             ; SOURCE LINE # 264
                        563     ;               if((ECO_PAGE_ADDR >> ECO_PAGE_SHIFT) == ECO_PAGE_TABLE[i])
                        564                             ; SOURCE LINE # 265
000042 E500       F     565             MOV     A,i?141+01H
000044 25E0             566             ADD     A,ACC
000046 2400       F     567             ADD     A,#LOW (ECO_PAGE_TABLE)
000048 F8               568             MOV     R0,A
000049 E6               569             MOV     A,@R0
00004A FC               570             MOV     R4,A
00004B 08               571             INC     R0
00004C E6               572             MOV     A,@R0
00004D FD               573             MOV     R5,A
00004E E500       F     574             MOV     A,ECO_PAGE_ADDR
000050 B5050C           575             CJNE    A,AR5,?C0005
000053 E4               576             CLR     A
000054 B50408           577             CJNE    A,AR4,?C0005
                        578     ;               {
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/05/09 17:03:41 PAGE    10

                        579                             ; SOURCE LINE # 266
                        580     ;                       page_index = i;
                        581                             ; SOURCE LINE # 267
000057 850000     F     582             MOV     page_index?142,i?141
00005A 850000     F     583             MOV     page_index?142+01H,i?141+01H
                        584     ;                       break;
                        585                             ; SOURCE LINE # 268
00005D 800E             586             SJMP    ?C0004
                        587     ;               }
                        588                             ; SOURCE LINE # 269
                        589     ;       }
                        590                             ; SOURCE LINE # 270
00005F                  591     ?C0005:
00005F 0500       F     592             INC     i?141+01H
000061 E500       F     593             MOV     A,i?141+01H
000063 7002             594             JNZ     ?C0015
000065 0500       F     595             INC     i?141
000067                  596     ?C0015:
000067 6402             597             XRL     A,#02H
000069 4500       F     598             ORL     A,i?141
00006B 70D5             599             JNZ     ?C0003
00006D                  600     ?C0004:
                        601     ; 
                        602     ;       if(page_index != -1) 
                        603                             ; SOURCE LINE # 272
00006D E500       F     604             MOV     A,page_index?142+01H
00006F F4               605             CPL     A
000070 7003             606             JNZ     ?C0016
000072 E500       F     607             MOV     A,page_index?142
000074 F4               608             CPL     A
000075                  609     ?C0016:
000075 6039             610             JZ      ?C0007
                        611     ;       {  
                        612                             ; SOURCE LINE # 273
                        613     ;               //store function physical addres id 
                        614     ;               ECO_PAGE_PREV_PID = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;
                        615                             ; SOURCE LINE # 275
000077 E500       F     616             MOV     A,ECO_PAGE_ADDR
000079 F500       F     617             MOV     ECO_PAGE_PREV_PID,A
                        618     ;       
                        619     ;               //memory page is in ram
                        620     ;               ECO_PAGE_ADDR = ((page_index + ECO_PAGE_ADDR_OFFSET) << ECO_PAGE_SHIFT) 
                               + (ECO_PAGE_ADDR & ECO_PAGE_MASK);
                        621                             ; SOURCE LINE # 278
00007B E500       F     622             MOV     A,page_index?142+01H
00007D 240E             623             ADD     A,#0EH
00007F FF               624             MOV     R7,A
000080 EF               625             MOV     A,R7
000081 FE               626             MOV     R6,A
000082 7C00             627             MOV     R4,#00H
000084 E4               628             CLR     A
000085 2500       F     629             ADD     A,ECO_PAGE_ADDR+01H
000087 F500       F     630             MOV     ECO_PAGE_ADDR+01H,A
000089 EC               631             MOV     A,R4
00008A 3E               632             ADDC    A,R6
00008B F500       F     633             MOV     ECO_PAGE_ADDR,A
                        634     ; 
                        635     ;               //cache the virtual address id
                        636     ;               ECO_PAGE_PREV_VID = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;
                        637                             ; SOURCE LINE # 281
00008D F500       F     638             MOV     ECO_PAGE_PREV_VID,A
                        639     ; 
                        640     ;               #pragma asm
                        641     ;               //eco_page_function_call
                        642               
                        643     ;               //MOV     DPH,ECO_PAGE_ADDR
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/05/09 17:03:41 PAGE    11

                        644               
                        645     ;               //LJMP  @A + DPTR
                        646               
                        647     ;               //MOV     DPL,ECO_PAGE_ADDR+01H
                        648               
                        649     ;               //LCALL ?C?ICALL2
                        650               
                        651     ;               MOV R0,#LOW (ECO_PAGE_REGISTER1)
00008F 7800       F     652               MOV R0,#LOW (ECO_PAGE_REGISTER1)
                        653     ;       MOV A,@R0
000091 E6               654               MOV A,@R0
                        655     ;               MOV R0,#LOW (ECO_PAGE_REGISTER2)
000092 7800       F     656               MOV R0,#LOW (ECO_PAGE_REGISTER2)
                        657     ;       MOV A,@R0
000094 E6               658               MOV A,@R0
                        659     ;               MOV R0,#LOW (ECO_PAGE_REGISTER3)
000095 7800       F     660               MOV R0,#LOW (ECO_PAGE_REGISTER3)
                        661     ;       MOV A,@R0
000097 E6               662               MOV A,@R0
                        663     ;               MOV R0,#LOW (ECO_PAGE_REGISTER4)
000098 7800       F     664               MOV R0,#LOW (ECO_PAGE_REGISTER4)
                        665     ;       MOV A,@R0
00009A E6               666               MOV A,@R0
                        667     ;               MOV R0,#LOW (ECO_PAGE_REGISTER5)
00009B 7800       F     668               MOV R0,#LOW (ECO_PAGE_REGISTER5)
                        669     ;       MOV A,@R0
00009D E6               670               MOV A,@R0
                        671     ;               MOV R0,#LOW (ECO_PAGE_REGISTER6)
00009E 7800       F     672               MOV R0,#LOW (ECO_PAGE_REGISTER6)
                        673     ;       MOV A,@R0
0000A0 E6               674               MOV A,@R0
                        675     ;               MOV R0,#LOW (ECO_PAGE_REGISTER7)
0000A1 7800       F     676               MOV R0,#LOW (ECO_PAGE_REGISTER7)
                        677     ;       MOV A,@R0
0000A3 E6               678               MOV A,@R0
                        679     ;       
                        680               
                        681     ;               MOV     SPI_CTRL,ECO_PAGE_SPI_CONN
0000A4 8500B3     F     682               MOV   SPI_CTRL,ECO_PAGE_SPI_CONN
                        683     ;               MOV     DPH,ECO_PAGE_ADDR
0000A7 850083     F     684               MOV   DPH,ECO_PAGE_ADDR
                        685     ;               MOV     DPL,ECO_PAGE_ADDR+01H
0000AA 850082     F     686               MOV   DPL,ECO_PAGE_ADDR+01H
                        687     ;               
                        688               
                        689     ;               CLR     A
0000AD E4               690               CLR   A
                        691     ;               JMP     @A+DPTR
0000AE 73               692               JMP   @A+DPTR
                        693     ;               #pragma endasm
                        694     ;       }   
                        695                             ; SOURCE LINE # 311
0000AF 22               696             RET     
0000B0                  697     ?C0007:
                        698     ;       else
                        699     ;       {
                        700                             ; SOURCE LINE # 313
                        701     ;               //page fault
                        702     ;               // Move Data from EEPROM to iRAM 
                        703     ;               unsigned char xdata *seg = (unsigned char xdata *)((ECO_PAGE_TABLE_INDEX
                                + ECO_PAGE_ADDR_OFFSET) << ECO_PAGE_SHIFT);
                        704                             ; SOURCE LINE # 316
0000B0 E500       F     705             MOV     A,ECO_PAGE_TABLE_INDEX
0000B2 240E             706             ADD     A,#0EH
0000B4 FF               707             MOV     R7,A
0000B5 E4               708             CLR     A
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/05/09 17:03:41 PAGE    12

0000B6 33               709             RLC     A
0000B7 EF               710             MOV     A,R7
0000B8 F500       F     711             MOV     seg?140,A
0000BA 750000     F     712             MOV     seg?140+01H,#00H
                        713     ;               
                        714     ;               //memory page is in ram
                        715     ;               eeprom_init();
                        716                             ; SOURCE LINE # 319
0000BD 120000     E     717             LCALL   eeprom_init
                        718     ; 
                        719     ;               //mov code from eeprom to external ram
                        720     ;               for(i=0;i<ECO_PAGE_SIZE;i++)
                        721                             ; SOURCE LINE # 322
0000C0 E4               722             CLR     A
0000C1 F500       F     723             MOV     i?141,A
0000C3 F500       F     724             MOV     i?141+01H,A
0000C5                  725     ?C0009:
                        726     ;               {
                        727                             ; SOURCE LINE # 323
                        728     ;                       *(seg+i) = eeprom_read(ECO_ADDR_SHIFT(ECO_PAGE_ADDR & ECO_PAGE_M
                               OV_MASK) +i);
                        729                             ; SOURCE LINE # 324
0000C5 E4               730             CLR     A
0000C6 2403             731             ADD     A,#03H
0000C8 FF               732             MOV     R7,A
0000C9 E4               733             CLR     A
0000CA 3500       F     734             ADDC    A,ECO_PAGE_ADDR
0000CC CF               735             XCH     A,R7
0000CD 2500       F     736             ADD     A,i?141+01H
0000CF CF               737             XCH     A,R7
0000D0 3500       F     738             ADDC    A,i?141
0000D2 FE               739             MOV     R6,A
0000D3 120000     E     740             LCALL   _eeprom_read
0000D6 E500       F     741             MOV     A,seg?140+01H
0000D8 2500       F     742             ADD     A,i?141+01H
0000DA F582             743             MOV     DPL,A
0000DC E500       F     744             MOV     A,seg?140
0000DE 3500       F     745             ADDC    A,i?141
0000E0 F583             746             MOV     DPH,A
0000E2 EF               747             MOV     A,R7
0000E3 F0               748             MOVX    @DPTR,A
                        749     ;               }
                        750                             ; SOURCE LINE # 325
0000E4 0500       F     751             INC     i?141+01H
0000E6 E500       F     752             MOV     A,i?141+01H
0000E8 7002             753             JNZ     ?C0017
0000EA 0500       F     754             INC     i?141
0000EC                  755     ?C0017:
0000EC C3               756             CLR     C
0000ED E500       F     757             MOV     A,i?141
0000EF 9401             758             SUBB    A,#01H
0000F1 40D2             759             JC      ?C0009
0000F3                  760     ?C0010:
                        761     ;               
                        762     ;               //update page table to connect this physical address id with virtual add
                               ress id 
                        763     ;               ECO_PAGE_TABLE[ECO_PAGE_TABLE_INDEX] = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;
                        764                             ; SOURCE LINE # 328
0000F3 E500       F     765             MOV     A,ECO_PAGE_ADDR
0000F5 FF               766             MOV     R7,A
0000F6 7E00             767             MOV     R6,#00H
0000F8 E500       F     768             MOV     A,ECO_PAGE_TABLE_INDEX
0000FA 25E0             769             ADD     A,ACC
0000FC 2400       F     770             ADD     A,#LOW (ECO_PAGE_TABLE)
0000FE F8               771             MOV     R0,A
0000FF A606             772             MOV     @R0,AR6
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/05/09 17:03:41 PAGE    13

000101 08               773             INC     R0
000102 A607             774             MOV     @R0,AR7
                        775     ; 
                        776     ;               //store physical address id
                        777     ;               //ECO_PAGE_PREV_PID = ECO_PAGE_TABLE[ECO_PAGE_TABLE_INDEX];
                        778     ;               ECO_PAGE_PREV_PID = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;
                        779                             ; SOURCE LINE # 332
000104 8F00       F     780             MOV     ECO_PAGE_PREV_PID,R7
                        781     ; 
                        782     ;               //update page address
                        783     ;               ECO_PAGE_ADDR = ((ECO_PAGE_TABLE_INDEX + ECO_PAGE_ADDR_OFFSET) << ECO_PA
                               GE_SHIFT) + (ECO_PAGE_ADDR & ECO_PAGE_MASK);
                        784                             ; SOURCE LINE # 335
000106 E500       F     785             MOV     A,ECO_PAGE_TABLE_INDEX
000108 240E             786             ADD     A,#0EH
00010A FF               787             MOV     R7,A
00010B EF               788             MOV     A,R7
00010C FE               789             MOV     R6,A
00010D 7C00             790             MOV     R4,#00H
00010F E4               791             CLR     A
000110 2500       F     792             ADD     A,ECO_PAGE_ADDR+01H
000112 F500       F     793             MOV     ECO_PAGE_ADDR+01H,A
000114 EC               794             MOV     A,R4
000115 3E               795             ADDC    A,R6
000116 F500       F     796             MOV     ECO_PAGE_ADDR,A
                        797     ; 
                        798     ;               //store virtual address id 
                        799     ;               ECO_PAGE_PREV_VID = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;    
                        800                             ; SOURCE LINE # 338
000118 F500       F     801             MOV     ECO_PAGE_PREV_VID,A
                        802     ; 
                        803     ;               //mov to the next index
                        804     ;               ECO_PAGE_TABLE_INDEX = (ECO_PAGE_TABLE_INDEX + 1) % ECO_PAGE_ENTRY;
                        805                             ; SOURCE LINE # 341
00011A E500       F     806             MOV     A,ECO_PAGE_TABLE_INDEX
00011C 04               807             INC     A
00011D 5401             808             ANL     A,#01H
00011F F500       F     809             MOV     ECO_PAGE_TABLE_INDEX,A
                        810     ;                       
                        811     ;               //jump  to function address
                        812     ;               #pragma asm
                        813     ; 
                        814               
                        815     ;               MOV R0,#LOW (ECO_PAGE_REGISTER1)
000121 7800       F     816               MOV R0,#LOW (ECO_PAGE_REGISTER1)
                        817     ;       MOV A,@R0
000123 E6               818               MOV A,@R0
                        819     ;               MOV R0,#LOW (ECO_PAGE_REGISTER2)
000124 7800       F     820               MOV R0,#LOW (ECO_PAGE_REGISTER2)
                        821     ;       MOV A,@R0
000126 E6               822               MOV A,@R0
                        823     ;               MOV R0,#LOW (ECO_PAGE_REGISTER3)
000127 7800       F     824               MOV R0,#LOW (ECO_PAGE_REGISTER3)
                        825     ;       MOV A,@R0
000129 E6               826               MOV A,@R0
                        827     ;               MOV R0,#LOW (ECO_PAGE_REGISTER4)
00012A 7800       F     828               MOV R0,#LOW (ECO_PAGE_REGISTER4)
                        829     ;       MOV A,@R0
00012C E6               830               MOV A,@R0
                        831     ;               MOV R0,#LOW (ECO_PAGE_REGISTER5)
00012D 7800       F     832               MOV R0,#LOW (ECO_PAGE_REGISTER5)
                        833     ;       MOV A,@R0
00012F E6               834               MOV A,@R0
                        835     ;               MOV R0,#LOW (ECO_PAGE_REGISTER6)
000130 7800       F     836               MOV R0,#LOW (ECO_PAGE_REGISTER6)
                        837     ;       MOV A,@R0
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/05/09 17:03:41 PAGE    14

000132 E6               838               MOV A,@R0
                        839     ;               MOV R0,#LOW (ECO_PAGE_REGISTER7)
000133 7800       F     840               MOV R0,#LOW (ECO_PAGE_REGISTER7)
                        841     ;       MOV A,@R0
000135 E6               842               MOV A,@R0
                        843     ;       
                        844               
                        845     ;               MOV     SPI_CTRL,ECO_PAGE_SPI_CONN
000136 8500B3     F     846               MOV   SPI_CTRL,ECO_PAGE_SPI_CONN
                        847     ;               MOV     DPH,ECO_PAGE_ADDR
000139 850083     F     848               MOV   DPH,ECO_PAGE_ADDR
                        849     ;               MOV     DPL,ECO_PAGE_ADDR+01H
00013C 850082     F     850               MOV   DPL,ECO_PAGE_ADDR+01H
                        851     ;               
                        852               
                        853     ;               CLR     A
00013F E4               854               CLR   A
                        855     ;               JMP     @A+DPTR
000140 73               856               JMP   @A+DPTR
                        857     ; 
                        858               
                        859     ;               //eco_page_function_call
                        860               
                        861     ;               //MOV     DPH,ECO_PAGE_ADDR
                        862               
                        863     ;               //MOV     DPH,ECO_PAGE_ADDR
                        864               
                        865     ;               //MOV     DPL,ECO_PAGE_ADDR+01H
                        866               
                        867     ;               //LJMP  @A + DPTR
                        868               
                        869     ;               //MOV     DPL,ECO_PAGE_ADDR+01H
                        870               
                        871     ;               //LCALL        ?C?ICALL2               
                        872               
                        873     ;               #pragma endasm
                        874     ; 
                        875     ;       }
                        876                             ; SOURCE LINE # 377
                        877     ; 
                        878     ; }
                        879                             ; SOURCE LINE # 379
000141                  880     ?C0012:
000141 22               881             RET     
                        882     ; END OF eco_page_manager
                        883     
                        884             END
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/05/09 17:03:41 PAGE    15

SYMBOL TABLE LISTING
------ ----- -------


N A M E                                    T Y P E  V A L U E     ATTRIBUTES

?C0002. . . . . . . . . . . . . . . . .    C  ADDR  003DH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0003. . . . . . . . . . . . . . . . .    C  ADDR  0042H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0004. . . . . . . . . . . . . . . . .    C  ADDR  006DH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0005. . . . . . . . . . . . . . . . .    C  ADDR  005FH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0007. . . . . . . . . . . . . . . . .    C  ADDR  00B0H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0009. . . . . . . . . . . . . . . . .    C  ADDR  00C5H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0010. . . . . . . . . . . . . . . . .    C  ADDR  00F3H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0012. . . . . . . . . . . . . . . . .    C  ADDR  0141H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0013. . . . . . . . . . . . . . . . .    C  ADDR  000DH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0015. . . . . . . . . . . . . . . . .    C  ADDR  0067H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0016. . . . . . . . . . . . . . . . .    C  ADDR  0075H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0017. . . . . . . . . . . . . . . . .    C  ADDR  00ECH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?DT?ECO_PAGE. . . . . . . . . . . . . .    D  SEG   00000AH       REL=UNIT, ALN=BYTE
?DT?ECO_PAGE_MANAGER?ECO_PAGE . . . . .    D  SEG   000006H       REL=UNIT, ALN=BYTE
?ECO_PAGE_MANAGER?BYTE. . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?ECO_PAGE_MANAGER?ECO_PAGE
?ID?ECO_PAGE. . . . . . . . . . . . . .    I  SEG   000007H       REL=UNIT, ALN=BYTE
?PR?ECO_PAGE_INIT?ECO_PAGE. . . . . . .    C  SEG   00000CH       REL=UNIT, ALN=BYTE
?PR?ECO_PAGE_MANAGER?ECO_PAGE . . . . .    C  SEG   000142H       REL=UNIT, ALN=BYTE
_EEPROM_READ. . . . . . . . . . . . . .    C  ADDR  -------       EXT
AC. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.6   A   
ACC . . . . . . . . . . . . . . . . . .    D  ADDR  00E0H     A   
ADCCON. . . . . . . . . . . . . . . . .    D  ADDR  00A1H     A   
ADCDATAH. . . . . . . . . . . . . . . .    D  ADDR  00A2H     A   
ADCDATAL. . . . . . . . . . . . . . . .    D  ADDR  00A3H     A   
ADCSTATIC . . . . . . . . . . . . . . .    D  ADDR  00A4H     A   
AR4 . . . . . . . . . . . . . . . . . .    D  ADDR  0004H     A   
AR5 . . . . . . . . . . . . . . . . . .    D  ADDR  0005H     A   
AR6 . . . . . . . . . . . . . . . . . .    D  ADDR  0006H     A   
AR7 . . . . . . . . . . . . . . . . . .    D  ADDR  0007H     A   
B . . . . . . . . . . . . . . . . . . .    D  ADDR  00F0H     A   
C_T2. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.1   A   
CE. . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.6   A   
CK_CTRL . . . . . . . . . . . . . . . .    D  ADDR  00B6H     A   
CKCON . . . . . . . . . . . . . . . . .    D  ADDR  008EH     A   
CLK1. . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.1   A   
CLK2. . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.5   A   
CP_RL2. . . . . . . . . . . . . . . . .    B  ADDR  00C8H.0   A   
CPRL2 . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.0   A   
CS. . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.3   A   
CT2 . . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.1   A   
CY. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.7   A   
DATA? . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.0   A   
DEV_OFFSET. . . . . . . . . . . . . . .    D  ADDR  00BEH     A   
DIN0. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.2   A   
DIO0. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.0   A   
DIO1. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.1   A   
DIO2. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.0   A   
DIO3. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.1   A   
DIO4. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.2   A   
DIO5. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.3   A   
DIO6. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.4   A   
DIO7. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.5   A   
DIO8. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.6   A   
DIO9. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.7   A   
DOUT2 . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.4   A   
DPH . . . . . . . . . . . . . . . . . .    D  ADDR  0083H     A   
DPH0. . . . . . . . . . . . . . . . . .    D  ADDR  0083H     A   
DPH1. . . . . . . . . . . . . . . . . .    D  ADDR  0085H     A   
DPL . . . . . . . . . . . . . . . . . .    D  ADDR  0082H     A   
DPL0. . . . . . . . . . . . . . . . . .    D  ADDR  0082H     A   
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/05/09 17:03:41 PAGE    16

DPL1. . . . . . . . . . . . . . . . . .    D  ADDR  0084H     A   
DPS . . . . . . . . . . . . . . . . . .    D  ADDR  0086H     A   
DR1 . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.2   A   
DR2 . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.6   A   
DR2_CE. . . . . . . . . . . . . . . . .    B  ADDR  00A0H.6   A   
EA. . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.7   A   
ECO_PAGE. . . . . . . . . . . . . . . .    -- ----  -------       
ECO_PAGE_ADDR . . . . . . . . . . . . .    D  ADDR  0007H     R   SEG=?DT?ECO_PAGE
ECO_PAGE_INIT . . . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?ECO_PAGE_INIT?ECO_PAGE
ECO_PAGE_MANAGER. . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
ECO_PAGE_PREV_PID . . . . . . . . . . .    D  ADDR  0005H     R   SEG=?DT?ECO_PAGE
ECO_PAGE_PREV_VID . . . . . . . . . . .    D  ADDR  0006H     R   SEG=?DT?ECO_PAGE
ECO_PAGE_REGISTER1. . . . . . . . . . .    I  ADDR  0000H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER2. . . . . . . . . . .    I  ADDR  0001H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER3. . . . . . . . . . .    I  ADDR  0002H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER4. . . . . . . . . . .    I  ADDR  0003H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER5. . . . . . . . . . .    I  ADDR  0004H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER6. . . . . . . . . . .    I  ADDR  0005H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER7. . . . . . . . . . .    I  ADDR  0006H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_SPI_CONN . . . . . . . . . . .    D  ADDR  0004H     R   SEG=?DT?ECO_PAGE
ECO_PAGE_TABLE. . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?ECO_PAGE
ECO_PAGE_TABLE_INDEX. . . . . . . . . .    D  ADDR  0009H     R   SEG=?DT?ECO_PAGE
EEPROM_INIT . . . . . . . . . . . . . .    C  ADDR  -------       EXT
EICON . . . . . . . . . . . . . . . . .    D  ADDR  00D8H     A   
EIE . . . . . . . . . . . . . . . . . .    D  ADDR  00E8H     A   
EIP . . . . . . . . . . . . . . . . . .    D  ADDR  00F8H     A   
ES. . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.4   A   
ET0 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.1   A   
ET1 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.3   A   
ET2 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.5   A   
EWDI. . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.4   A   
EX0 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.0   A   
EX1 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.2   A   
EX2 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.0   A   
EX3 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.1   A   
EX4 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.2   A   
EX5 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.3   A   
EXEN2 . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.3   A   
EXF2. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.6   A   
EXIF. . . . . . . . . . . . . . . . . .    D  ADDR  0091H     A   
F0. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.5   A   
F1. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.1   A   
I?141 . . . . . . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?ECO_PAGE_MANAGER?ECO_PAGE
IE. . . . . . . . . . . . . . . . . . .    D  ADDR  00A8H     A   
IE0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.1   A   
IE1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.3   A   
INT0_N. . . . . . . . . . . . . . . . .    B  ADDR  0080H.3   A   
INT1_N. . . . . . . . . . . . . . . . .    B  ADDR  0080H.4   A   
IP. . . . . . . . . . . . . . . . . . .    D  ADDR  00B8H     A   
IT0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.0   A   
IT1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.2   A   
MPAGE . . . . . . . . . . . . . . . . .    D  ADDR  0092H     A   
OV. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.2   A   
P . . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.0   A   
P0. . . . . . . . . . . . . . . . . . .    D  ADDR  0080H     A   
P0_0. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.0   A   
P0_1. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.1   A   
P0_2. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.2   A   
P0_3. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.3   A   
P0_4. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.4   A   
P0_5. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.5   A   
P0_6. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.6   A   
P0_7. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.7   A   
P0_ALT. . . . . . . . . . . . . . . . .    D  ADDR  0095H     A   
P0_DIR. . . . . . . . . . . . . . . . .    D  ADDR  0094H     A   
P1. . . . . . . . . . . . . . . . . . .    D  ADDR  0090H     A   
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/05/09 17:03:41 PAGE    17

P1_0. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.0   A   
P1_1. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.1   A   
P1_2. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.2   A   
P1_ALT. . . . . . . . . . . . . . . . .    D  ADDR  0097H     A   
P1_DIR. . . . . . . . . . . . . . . . .    D  ADDR  0096H     A   
PAGE_INDEX?142. . . . . . . . . . . . .    D  ADDR  0002H     R   SEG=?DT?ECO_PAGE_MANAGER?ECO_PAGE
PCON. . . . . . . . . . . . . . . . . .    D  ADDR  0087H     A   
PS. . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.4   A   
PSW . . . . . . . . . . . . . . . . . .    D  ADDR  00D0H     A   
PT0 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.1   A   
PT1 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.3   A   
PT2 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.5   A   
PWDI. . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.4   A   
PWM . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.7   A   
PWMCON. . . . . . . . . . . . . . . . .    D  ADDR  00A9H     A   
PWMDUTY . . . . . . . . . . . . . . . .    D  ADDR  00AAH     A   
PWR_UP. . . . . . . . . . . . . . . . .    B  ADDR  00A0H.7   A   
PX0 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.0   A   
PX1 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.2   A   
PX2 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.0   A   
PX3 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.1   A   
PX4 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.2   A   
PX5 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.3   A   
RADIO . . . . . . . . . . . . . . . . .    D  ADDR  00A0H     A   
RB8 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.2   A   
RCAP2H. . . . . . . . . . . . . . . . .    D  ADDR  00CBH     A   
RCAP2L. . . . . . . . . . . . . . . . .    D  ADDR  00CAH     A   
RCLK. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.5   A   
REGX_CTRL . . . . . . . . . . . . . . .    D  ADDR  00ADH     A   
REGX_LSB. . . . . . . . . . . . . . . .    D  ADDR  00ACH     A   
REGX_MSB. . . . . . . . . . . . . . . .    D  ADDR  00ABH     A   
REN . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.4   A   
RI. . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.0   A   
RS0 . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.3   A   
RS1 . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.4   A   
RSTREAS . . . . . . . . . . . . . . . .    D  ADDR  00B1H     A   
RXD . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.1   A   
SBUF. . . . . . . . . . . . . . . . . .    D  ADDR  0099H     A   
SCON. . . . . . . . . . . . . . . . . .    D  ADDR  0098H     A   
SEG?140 . . . . . . . . . . . . . . . .    D  ADDR  0004H     R   SEG=?DT?ECO_PAGE_MANAGER?ECO_PAGE
SM0 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.7   A   
SM1 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.6   A   
SM2 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.5   A   
SP. . . . . . . . . . . . . . . . . . .    D  ADDR  0081H     A   
SPC_FNC . . . . . . . . . . . . . . . .    D  ADDR  008FH     A   
SPI_CTRL. . . . . . . . . . . . . . . .    D  ADDR  00B3H     A   
SPI_DATA. . . . . . . . . . . . . . . .    D  ADDR  00B2H     A   
SPICLK. . . . . . . . . . . . . . . . .    D  ADDR  00B4H     A   
T0. . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.5   A   
T1. . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.6   A   
T1_1V2. . . . . . . . . . . . . . . . .    D  ADDR  00BCH     A   
T2. . . . . . . . . . . . . . . . . . .    B  ADDR  0090H.0   A   
T2_1V2. . . . . . . . . . . . . . . . .    D  ADDR  00BDH     A   
T2CON . . . . . . . . . . . . . . . . .    D  ADDR  00C8H     A   
TB8 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.3   A   
TCLK. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.4   A   
TCON. . . . . . . . . . . . . . . . . .    D  ADDR  0088H     A   
TEST_MODE . . . . . . . . . . . . . . .    D  ADDR  00B7H     A   
TF0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.5   A   
TF1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.7   A   
TF2 . . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.7   A   
TH0 . . . . . . . . . . . . . . . . . .    D  ADDR  008CH     A   
TH1 . . . . . . . . . . . . . . . . . .    D  ADDR  008DH     A   
TH2 . . . . . . . . . . . . . . . . . .    D  ADDR  00CDH     A   
TI. . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.1   A   
TICK_DV . . . . . . . . . . . . . . . .    D  ADDR  00B5H     A   
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/05/09 17:03:41 PAGE    18

TL0 . . . . . . . . . . . . . . . . . .    D  ADDR  008AH     A   
TL1 . . . . . . . . . . . . . . . . . .    D  ADDR  008BH     A   
TL2 . . . . . . . . . . . . . . . . . .    D  ADDR  00CCH     A   
TMOD. . . . . . . . . . . . . . . . . .    D  ADDR  0089H     A   
TR0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.4   A   
TR1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.6   A   
TR2 . . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.2   A   
TXD . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.2   A   
WDTI. . . . . . . . . . . . . . . . . .    B  ADDR  00D8H.3   A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S).
