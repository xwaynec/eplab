AX51 MACRO ASSEMBLER  MAIN                                                                  05/13/09 00:30:33 PAGE     1


MACRO ASSEMBLER AX51 V3.06a
OBJECT MODULE PLACED IN .\main.obj
ASSEMBLER INVOKED BY: C:\Keil\C51\BIN\AX51.exe .\main.src EP DEBUG SYMBOLS OJ(.\main.obj) PR(.\main.ls1) 

LOC    OBJ             LINE     SOURCE

                          1     ; ./main.src generated from: .\main.c
                          2     ; COMPILER INVOKED BY:
                          3     ;        C:\Keil\C51\BIN\C51.exe .\main.c BROWSE DEBUG CODE LISTINCLUDE SYMBOLS PREPRINT
                                ROM(LARGE) INCDIR(../../Include) SRC(./main.src)
                          4     
                          5     $nomod51 
                          6     
                          7     NAME    MAIN
                          8     
 00A0.7                   9     PWR_UP  BIT     0A0H.7
 0080                    10     P0      DATA    080H
 0090                    11     P1      DATA    090H
 00D0.6                  12     AC      BIT     0D0H.6
 0080.5                  13     T0      BIT     080H.5
 00B3                    14     SPI_CTRL        DATA    0B3H
 0080.6                  15     T1      BIT     080H.6
 00A8.7                  16     EA      BIT     0A8H.7
 0090.0                  17     T2      BIT     090H.0
 00A0.6                  18     CE      BIT     0A0H.6
 00BE                    19     DEV_OFFSET      DATA    0BEH
 00A0.1                  20     CLK1    BIT     0A0H.1
 0090.2                  21     DIN0    BIT     090H.2
 00A0.5                  22     CLK2    BIT     0A0H.5
 0090.0                  23     DIO0    BIT     090H.0
 0083                    24     DPH0    DATA    083H
 0090.1                  25     DIO1    BIT     090H.1
 00A8                    26     IE      DATA    0A8H
 0085                    27     DPH1    DATA    085H
 0080.0                  28     DIO2    BIT     080H.0
 0080.1                  29     DIO3    BIT     080H.1
 0080.0                  30     P0_0    BIT     080H.0
 0090.0                  31     P1_0    BIT     090H.0
 0080.2                  32     DIO4    BIT     080H.2
 0080.1                  33     P0_1    BIT     080H.1
 0082                    34     DPL0    DATA    082H
 0090.1                  35     P1_1    BIT     090H.1
 0080.3                  36     DIO5    BIT     080H.3
 0080.2                  37     P0_2    BIT     080H.2
 0084                    38     DPL1    DATA    084H
 0090.2                  39     P1_2    BIT     090H.2
 0080.4                  40     DIO6    BIT     080H.4
 0080.3                  41     P0_3    BIT     080H.3
 0080.5                  42     DIO7    BIT     080H.5
 0080.4                  43     P0_4    BIT     080H.4
 00A4                    44     ADCSTATIC       DATA    0A4H
 0080.6                  45     DIO8    BIT     080H.6
 0080.5                  46     P0_5    BIT     080H.5
 00C8.6                  47     EXF2    BIT     0C8H.6
 00A0.3                  48     CS      BIT     0A0H.3
 0080.7                  49     DIO9    BIT     080H.7
 0080.6                  50     P0_6    BIT     080H.6
 0080.7                  51     P0_7    BIT     080H.7
 00A8.4                  52     ES      BIT     0A8H.4
 00B8                    53     IP      DATA    0B8H
 00A0.0                  54     DATA?   BIT     0A0H.0
 0098.0                  55     RI      BIT     098H.0
 00D0.7                  56     CY      BIT     0D0H.7
 0098.1                  57     TI      BIT     098H.1
AX51 MACRO ASSEMBLER  MAIN                                                                  05/13/09 00:30:33 PAGE     2

 00BC                    58     T1_1V2  DATA    0BCH
 008F                    59     SPC_FNC DATA    08FH
 00BD                    60     T2_1V2  DATA    0BDH
 00CB                    61     RCAP2H  DATA    0CBH
 00B8.4                  62     PS      BIT     0B8H.4
 0081                    63     SP      DATA    081H
 00D0.2                  64     OV      BIT     0D0H.2
 00B6                    65     CK_CTRL DATA    0B6H
 00CA                    66     RCAP2L  DATA    0CAH
 00B5                    67     TICK_DV DATA    0B5H
 00B1                    68     RSTREAS DATA    0B1H
 00C8.1                  69     C_T2    BIT     0C8H.1
 00E8.4                  70     EWDI    BIT     0E8H.4
 00A1                    71     ADCCON  DATA    0A1H
 00C8.5                  72     RCLK    BIT     0C8H.5
 00A2                    73     ADCDATAH        DATA    0A2H
 0091                    74     EXIF    DATA    091H
 00C8.4                  75     TCLK    BIT     0C8H.4
 00A0.6                  76     DR2_CE  BIT     0A0H.6
 00A3                    77     ADCDATAL        DATA    0A3H
 0099                    78     SBUF    DATA    099H
 0087                    79     PCON    DATA    087H
 0098                    80     SCON    DATA    098H
 00F8.4                  81     PWDI    BIT     0F8H.4
 0089                    82     TMOD    DATA    089H
 0088                    83     TCON    DATA    088H
 00D8.3                  84     WDTI    BIT     0D8H.3
 00AA                    85     PWMDUTY DATA    0AAH
 0088.1                  86     IE0     BIT     088H.1
 0088.3                  87     IE1     BIT     088H.3
 0094                    88     P0_DIR  DATA    094H
 00F0                    89     B       DATA    0F0H
 0096                    90     P1_DIR  DATA    096H
 0095                    91     P0_ALT  DATA    095H
 0097                    92     P1_ALT  DATA    097H
 00C8.0                  93     CP_RL2  BIT     0C8H.0
 00A0.2                  94     DR1     BIT     0A0H.2
 00E0                    95     ACC     DATA    0E0H
 00A0.6                  96     DR2     BIT     0A0H.6
 00B7                    97     TEST_MODE       DATA    0B7H
 00B4                    98     SPICLK  DATA    0B4H
 00C8.1                  99     CT2     BIT     0C8H.1
 00A8.1                 100     ET0     BIT     0A8H.1
 00A8.3                 101     ET1     BIT     0A8H.3
 0088.5                 102     TF0     BIT     088H.5
 0080.3                 103     INT0_N  BIT     080H.3
 00A8.5                 104     ET2     BIT     0A8H.5
 0088.7                 105     TF1     BIT     088H.7
 0080.4                 106     INT1_N  BIT     080H.4
 00C8.7                 107     TF2     BIT     0C8H.7
 0098.2                 108     RB8     BIT     098H.2
 008C                   109     TH0     DATA    08CH
 00A8.0                 110     EX0     BIT     0A8H.0
 0088.0                 111     IT0     BIT     088H.0
 008D                   112     TH1     DATA    08DH
 00A8.2                 113     EX1     BIT     0A8H.2
 0098.3                 114     TB8     BIT     098H.3
 0088.2                 115     IT1     BIT     088H.2
 00CD                   116     TH2     DATA    0CDH
 00AD                   117     REGX_CTRL       DATA    0ADH
 00E8.0                 118     EX2     BIT     0E8H.0
 00D0.0                 119     P       BIT     0D0H.0
 00E8.1                 120     EX3     BIT     0E8H.1
 0098.7                 121     SM0     BIT     098H.7
 008A                   122     TL0     DATA    08AH
 00E8.2                 123     EX4     BIT     0E8H.2
AX51 MACRO ASSEMBLER  MAIN                                                                  05/13/09 00:30:33 PAGE     3

 0098.6                 124     SM1     BIT     098H.6
 008B                   125     TL1     DATA    08BH
 00E8.3                 126     EX5     BIT     0E8H.3
 0098.5                 127     SM2     BIT     098H.5
 00CC                   128     TL2     DATA    0CCH
 00E8                   129     EIE     DATA    0E8H
 00B8.1                 130     PT0     BIT     0B8H.1
 00D0.3                 131     RS0     BIT     0D0H.3
 00B8.3                 132     PT1     BIT     0B8H.3
 00D0.4                 133     RS1     BIT     0D0H.4
 00B8.5                 134     PT2     BIT     0B8H.5
 0088.4                 135     TR0     BIT     088H.4
 00A9                   136     PWMCON  DATA    0A9H
 0088.6                 137     TR1     BIT     088H.6
 00C8.2                 138     TR2     BIT     0C8H.2
 00B8.0                 139     PX0     BIT     0B8H.0
 00B8.2                 140     PX1     BIT     0B8H.2
 00F8.0                 141     PX2     BIT     0F8H.0
 00F8.1                 142     PX3     BIT     0F8H.1
 00F8.2                 143     PX4     BIT     0F8H.2
 0083                   144     DPH     DATA    083H
 00F8.3                 145     PX5     BIT     0F8H.3
 00F8                   146     EIP     DATA    0F8H
 0082                   147     DPL     DATA    082H
 00C8.3                 148     EXEN2   BIT     0C8H.3
 00C8.0                 149     CPRL2   BIT     0C8H.0
 0098.4                 150     REN     BIT     098H.4
 00C8                   151     T2CON   DATA    0C8H
 0086                   152     DPS     DATA    086H
 00B2                   153     SPI_DATA        DATA    0B2H
 0092                   154     MPAGE   DATA    092H
 0080.1                 155     RXD     BIT     080H.1
 00A0.4                 156     DOUT2   BIT     0A0H.4
 00D8                   157     EICON   DATA    0D8H
 008E                   158     CKCON   DATA    08EH
 0080.2                 159     TXD     BIT     080H.2
 00A0                   160     RADIO   DATA    0A0H
 0080.7                 161     PWM     BIT     080H.7
 00D0.5                 162     F0      BIT     0D0H.5
 00D0.1                 163     F1      BIT     0D0H.1
 00AC                   164     REGX_LSB        DATA    0ACH
 00D0                   165     PSW     DATA    0D0H
 00AB                   166     REGX_MSB        DATA    0ABH
------                  167     ?PR?printD?MAIN      SEGMENT CODE 
------                  168     ?PR?_dijkstra?MAIN   SEGMENT CODE 
------                  169     ?PR?main?MAIN        SEGMENT CODE 
------                  170     ?DT?main?MAIN        SEGMENT DATA OVERLAYABLE 
------                  171     ?CO?MAIN             SEGMENT CODE 
------                  172     ?C_INITSEG           SEGMENT CODE 
------                  173     ?DT?MAIN             SEGMENT DATA 
------                  174     ?ID?MAIN             SEGMENT IDATA 
------                  175     ?ID?printD?MAIN      SEGMENT IDATA OVERLAYABLE 
------                  176     ?ID?_dijkstra?MAIN   SEGMENT IDATA OVERLAYABLE 
                        177             EXTRN   CODE (_mdelay)
                        178             EXTRN   CODE (_serial_init)
                        179             EXTRN   CODE (_puts)
                        180             EXTRN   CODE (_?int_print)
                        181             EXTRN   CODE (_store_cpu_rate)
                        182             EXTRN   CODE (?C_STARTUP)
                        183             EXTRN   CODE (?C?SCDIV)
                        184             PUBLIC  n
                        185             PUBLIC  d
                        186             PUBLIC  dist
                        187             PUBLIC  dij_counter
                        188             PUBLIC  main
                        189             PUBLIC  _dijkstra
AX51 MACRO ASSEMBLER  MAIN                                                                  05/13/09 00:30:33 PAGE     4

                        190             PUBLIC  printD
                        191     
------                  192             RSEG  ?DT?main?MAIN
000000                  193     ?main?BYTE:
000000                  194               j?247:   DS   1
000001                  195             ORG  1
000001                  196               k?248:   DS   1
                        197     
------                  198             RSEG  ?DT?MAIN
000000                  199         dij_counter:   DS   2
000002                  200                   n:   DS   1
                        201     
------                  202             RSEG  ?ID?MAIN
000000                  203                dist:   DS   144
000090                  204                   d:   DS   12
                        205     
------                  206             RSEG  ?ID?printD?MAIN
000000                  207               i?040:   DS   2
                        208     
------                  209             RSEG  ?ID?_dijkstra?MAIN
000000                  210               i?142:   DS   1
                        211     
------                  212             RSEG  ?ID?_dijkstra?MAIN
000001                  213               k?143:   DS   1
                        214     
------                  215             RSEG  ?ID?_dijkstra?MAIN
000002                  216            mini?144:   DS   1
                        217     
------                  218             RSEG  ?ID?_dijkstra?MAIN
000003                  219         visited?145:   DS   12
                        220     
------                  221             RSEG  ?CO?MAIN
000000                  222     ?SC_0:
000000 313A00           223             DB  '1' ,':' ,000H
                        224     
000003                  225     ?SC_3:
000003 0D0A323A         226             DB  00DH,00AH,'2' ,':' ,000H
000007 00                       
                        227     
000008                  228     ?SC_8:
000008 0D0A00           229             DB  00DH,00AH,000H
                        230     
                        231     
------                  232             RSEG ?ID?printD?MAIN
                        233     
------                  234             RSEG  ?C_INITSEG
000000 02               235             DB      002H
000001 00         F     236             DB      dij_counter
000002 0000             237             DW      00000H
                        238     
                        239     ; //#include <stdio.h>
                        240     ; #include "Eco/reg24e1.h"
                        241     ; #include "Eco/eco_sys.h"
                        242     ; #include "utils/utils.h"
                        243     ; #include "serial/serial.h"
                        244     ; #include "isr/isr_rf.h"
                        245     ; #include "eeprom/eeprom.h"
                        246     ; #include "eco_page.h"
                        247     ; #include "adc/adc.h"
                        248     ; 
                        249     ; #define GRAPHSIZE 12
                        250     ; #define INFINITY GRAPHSIZE*GRAPHSIZE
                        251     ; #define MAX(a, b) ((a > b) ? (a) : (b))
                        252     ; 
                        253     ; //char e = 10; /* The number of nonzero edges in the graph */
                        254     ; char n; /* The number of nodes in the graph */
AX51 MACRO ASSEMBLER  MAIN                                                                  05/13/09 00:30:33 PAGE     5

                        255     ; char idata dist[GRAPHSIZE][GRAPHSIZE]; /* dist[i][j] is the distance between node i an
                               d j; or 0 if there is no direct connection */
                        256     ; char idata d[GRAPHSIZE]; /* d[i] is the length of the shortest path between the source
                                (s) and node i */
                        257     ; 
                        258     ; volatile int dij_counter = 0;
                        259     ; 
                        260     ; 
                        261     ; void printD() {
                        262     
------                  263             RSEG  ?PR?printD?MAIN
000000                  264     printD:
                        265             USING   0
                        266                             ; SOURCE LINE # 23
                        267     ;       int idata i;
                        268     ;       puts("1:");     
                        269                             ; SOURCE LINE # 25
000000 7BFF             270             MOV     R3,#0FFH
000002 7A00       F     271             MOV     R2,#HIGH (?SC_0)
000004 7900       F     272             MOV     R1,#LOW (?SC_0)
000006 120000     E     273             LCALL   _puts
                        274     ;       for (i = 1; i <= n; i++)
                        275                             ; SOURCE LINE # 26
000009 7800       F     276             MOV     R0,#LOW (i?040)
00000B 7600             277             MOV     @R0,#00H
00000D 08               278             INC     R0
00000E 7601             279             MOV     @R0,#01H
000010                  280     ?C0001:
000010 E500       F     281             MOV     A,n
000012 FD               282             MOV     R5,A
000013 33               283             RLC     A
000014 95E0             284             SUBB    A,ACC
000016 FC               285             MOV     R4,A
000017 7800       F     286             MOV     R0,#LOW (i?040)
000019 E6               287             MOV     A,@R0
00001A FE               288             MOV     R6,A
00001B 08               289             INC     R0
00001C E6               290             MOV     A,@R0
00001D FF               291             MOV     R7,A
00001E D3               292             SETB    C
00001F 9D               293             SUBB    A,R5
000020 EC               294             MOV     A,R4
000021 6480             295             XRL     A,#080H
000023 F8               296             MOV     R0,A
000024 EE               297             MOV     A,R6
000025 6480             298             XRL     A,#080H
000027 98               299             SUBB    A,R0
000028 500D             300             JNC     ?C0002
                        301     ;               int_print(i);
                        302                             ; SOURCE LINE # 27
00002A 120000     E     303             LCALL   _?int_print
00002D 7800       F     304             MOV     R0,#LOW (i?040+01H)
00002F 06               305             INC     @R0
000030 E6               306             MOV     A,@R0
000031 18               307             DEC     R0
000032 70DC             308             JNZ     ?C0001
000034 06               309             INC     @R0
000035                  310     ?C0040:
000035 80D9             311             SJMP    ?C0001
000037                  312     ?C0002:
                        313     ;       puts("\r\n2:");
                        314                             ; SOURCE LINE # 28
000037 7BFF             315             MOV     R3,#0FFH
000039 7A00       F     316             MOV     R2,#HIGH (?SC_3)
00003B 7900       F     317             MOV     R1,#LOW (?SC_3)
00003D 120000     E     318             LCALL   _puts
AX51 MACRO ASSEMBLER  MAIN                                                                  05/13/09 00:30:33 PAGE     6

                        319     ;       for (i = 1; i <= n; i++) 
                        320                             ; SOURCE LINE # 29
000040 7800       F     321             MOV     R0,#LOW (i?040)
000042 7600             322             MOV     @R0,#00H
000044 08               323             INC     R0
000045 7601             324             MOV     @R0,#01H
000047                  325     ?C0004:
000047 AF00       F     326             MOV     R7,n
000049 EF               327             MOV     A,R7
00004A 33               328             RLC     A
00004B 95E0             329             SUBB    A,ACC
00004D FE               330             MOV     R6,A
00004E 7800       F     331             MOV     R0,#LOW (i?040)
000050 E6               332             MOV     A,@R0
000051 FC               333             MOV     R4,A
000052 08               334             INC     R0
000053 E6               335             MOV     A,@R0
000054 FD               336             MOV     R5,A
000055 D3               337             SETB    C
000056 9F               338             SUBB    A,R7
000057 EE               339             MOV     A,R6
000058 6480             340             XRL     A,#080H
00005A F8               341             MOV     R0,A
00005B EC               342             MOV     A,R4
00005C 6480             343             XRL     A,#080H
00005E 98               344             SUBB    A,R0
00005F 5019             345             JNC     ?C0005
                        346     ;               int_print(d[i]);
                        347                             ; SOURCE LINE # 30
000061 AF05             348             MOV     R7,AR5
000063 7400       F     349             MOV     A,#LOW (d)
000065 2F               350             ADD     A,R7
000066 F8               351             MOV     R0,A
000067 E6               352             MOV     A,@R0
000068 FF               353             MOV     R7,A
000069 33               354             RLC     A
00006A 95E0             355             SUBB    A,ACC
00006C FE               356             MOV     R6,A
00006D 120000     E     357             LCALL   _?int_print
000070 7800       F     358             MOV     R0,#LOW (i?040+01H)
000072 06               359             INC     @R0
000073 E6               360             MOV     A,@R0
000074 18               361             DEC     R0
000075 70D0             362             JNZ     ?C0004
000077 06               363             INC     @R0
000078                  364     ?C0041:
000078 80CD             365             SJMP    ?C0004
00007A                  366     ?C0005:
                        367     ;       puts("\r\n");
                        368                             ; SOURCE LINE # 31
00007A 7BFF             369             MOV     R3,#0FFH
00007C 7A00       F     370             MOV     R2,#HIGH (?SC_8)
00007E 7900       F     371             MOV     R1,#LOW (?SC_8)
000080 020000     E     372             LJMP    _puts
                        373     ; END OF printD
                        374     
                        375     ; }
                        376     ; 
                        377     ; void dijkstra(char s) 
                        378     
------                  379             RSEG  ?PR?_dijkstra?MAIN
000000                  380     _dijkstra:
                        381             USING   0
                        382                             ; SOURCE LINE # 34
                        383     ;---- Variable 's?141' assigned to Register 'R7' ----
                        384     ; {
AX51 MACRO ASSEMBLER  MAIN                                                                  05/13/09 00:30:33 PAGE     7

                        385                             ; SOURCE LINE # 35
                        386     ;       idata char i, k, mini;
                        387     ;       char idata visited[GRAPHSIZE];
                        388     ; 
                        389     ;       for (i = 1; i <= n; i++) 
                        390                             ; SOURCE LINE # 39
000000 7800       F     391             MOV     R0,#LOW (i?142)
000002 7601             392             MOV     @R0,#01H
000004                  393     ?C0008:
000004 7800       F     394             MOV     R0,#LOW (i?142)
000006 E6               395             MOV     A,@R0
000007 FE               396             MOV     R6,A
000008 D3               397             SETB    C
000009 E500       F     398             MOV     A,n
00000B 6480             399             XRL     A,#080H
00000D F8               400             MOV     R0,A
00000E EE               401             MOV     A,R6
00000F 6480             402             XRL     A,#080H
000011 98               403             SUBB    A,R0
000012 5011             404             JNC     ?C0009
                        405     ;       {
                        406                             ; SOURCE LINE # 40
                        407     ;               d[i] = INFINITY;
                        408                             ; SOURCE LINE # 41
000014 7400       F     409             MOV     A,#LOW (d)
000016 2E               410             ADD     A,R6
000017 F8               411             MOV     R0,A
000018 7690             412             MOV     @R0,#090H
                        413     ;               visited[i] = 0; /* the i-th element has not yet been visited */
                        414                             ; SOURCE LINE # 42
00001A 7400       F     415             MOV     A,#LOW (visited?145)
00001C 2E               416             ADD     A,R6
00001D F8               417             MOV     R0,A
00001E E4               418             CLR     A
00001F F6               419             MOV     @R0,A
                        420     ;       }
                        421                             ; SOURCE LINE # 43
000020 7800       F     422             MOV     R0,#LOW (i?142)
000022 06               423             INC     @R0
000023 80DF             424             SJMP    ?C0008
000025                  425     ?C0009:
                        426     ; 
                        427     ;       d[s] = 0;
                        428                             ; SOURCE LINE # 45
000025 7400       F     429             MOV     A,#LOW (d)
000027 2F               430             ADD     A,R7
000028 F8               431             MOV     R0,A
000029 E4               432             CLR     A
00002A F6               433             MOV     @R0,A
                        434     ; 
                        435     ;       for (k = 1; k <= n; k++) 
                        436                             ; SOURCE LINE # 47
00002B 7800       F     437             MOV     R0,#LOW (k?143)
00002D 7601             438             MOV     @R0,#01H
00002F                  439     ?C0011:
00002F D3               440             SETB    C
000030 E500       F     441             MOV     A,n
000032 6480             442             XRL     A,#080H
000034 F5F0             443             MOV     B,A
000036 7800       F     444             MOV     R0,#LOW (k?143)
000038 E6               445             MOV     A,@R0
000039 6480             446             XRL     A,#080H
00003B 95F0             447             SUBB    A,B
00003D 4003             448             JC      $ + 5H
00003F 020000     F     449             LJMP    ?C0024
                        450     ;       {
AX51 MACRO ASSEMBLER  MAIN                                                                  05/13/09 00:30:33 PAGE     8

                        451                             ; SOURCE LINE # 48
                        452     ;               mini = -1;
                        453                             ; SOURCE LINE # 49
000042 08               454             INC     R0
000043 76FF             455             MOV     @R0,#0FFH
                        456     ;               for (i = 1; i <= n; i++)
                        457                             ; SOURCE LINE # 50
000045 7800       F     458             MOV     R0,#LOW (i?142)
000047 7601             459             MOV     @R0,#01H
000049                  460     ?C0014:
000049 7800       F     461             MOV     R0,#LOW (i?142)
00004B E6               462             MOV     A,@R0
00004C FF               463             MOV     R7,A
00004D D3               464             SETB    C
00004E E500       F     465             MOV     A,n
000050 6480             466             XRL     A,#080H
000052 F8               467             MOV     R0,A
000053 EF               468             MOV     A,R7
000054 6480             469             XRL     A,#080H
000056 98               470             SUBB    A,R0
000057 5030             471             JNC     ?C0015
                        472     ;                       if (!visited[i] && ((mini == -1) || (d[i] < d[mini])))
                        473                             ; SOURCE LINE # 51
000059 7400       F     474             MOV     A,#LOW (visited?145)
00005B 2F               475             ADD     A,R7
00005C F9               476             MOV     R1,A
00005D E7               477             MOV     A,@R1
00005E 7024             478             JNZ     ?C0016
000060 7800       F     479             MOV     R0,#LOW (mini?144)
000062 E6               480             MOV     A,@R0
000063 FF               481             MOV     R7,A
000064 F4               482             CPL     A
000065 6017             483             JZ      ?C0018
000067 7400       F     484             MOV     A,#LOW (d)
000069 2F               485             ADD     A,R7
00006A F9               486             MOV     R1,A
00006B 7800       F     487             MOV     R0,#LOW (i?142)
00006D E6               488             MOV     A,@R0
00006E 2400       F     489             ADD     A,#LOW (d)
000070 F8               490             MOV     R0,A
000071 E6               491             MOV     A,@R0
000072 FF               492             MOV     R7,A
000073 C3               493             CLR     C
000074 E7               494             MOV     A,@R1
000075 6480             495             XRL     A,#080H
000077 F8               496             MOV     R0,A
000078 EF               497             MOV     A,R7
000079 6480             498             XRL     A,#080H
00007B 98               499             SUBB    A,R0
00007C 5006             500             JNC     ?C0016
00007E                  501     ?C0018:
                        502     ;                               mini = i;
                        503                             ; SOURCE LINE # 52
00007E 7800       F     504             MOV     R0,#LOW (i?142)
000080 E6               505             MOV     A,@R0
000081 7800       F     506             MOV     R0,#LOW (mini?144)
000083 F6               507             MOV     @R0,A
000084                  508     ?C0016:
000084 7800       F     509             MOV     R0,#LOW (i?142)
000086 06               510             INC     @R0
000087 80C0             511             SJMP    ?C0014
000089                  512     ?C0015:
                        513     ; 
                        514     ;               visited[mini] = 1;
                        515                             ; SOURCE LINE # 54
000089 7800       F     516             MOV     R0,#LOW (mini?144)
AX51 MACRO ASSEMBLER  MAIN                                                                  05/13/09 00:30:33 PAGE     9

00008B E6               517             MOV     A,@R0
00008C 2400       F     518             ADD     A,#LOW (visited?145)
00008E F8               519             MOV     R0,A
00008F 7601             520             MOV     @R0,#01H
                        521     ; 
                        522     ;               for (i = 1; i <= n; ++i)
                        523                             ; SOURCE LINE # 56
000091 7800       F     524             MOV     R0,#LOW (i?142)
000093 7601             525             MOV     @R0,#01H
000095                  526     ?C0019:
000095 7800       F     527             MOV     R0,#LOW (i?142)
000097 E6               528             MOV     A,@R0
000098 FF               529             MOV     R7,A
000099 D3               530             SETB    C
00009A E500       F     531             MOV     A,n
00009C 6480             532             XRL     A,#080H
00009E F8               533             MOV     R0,A
00009F EF               534             MOV     A,R7
0000A0 6480             535             XRL     A,#080H
0000A2 98               536             SUBB    A,R0
0000A3 5062             537             JNC     ?C0013
                        538     ;                       if (dist[mini][i])
                        539                             ; SOURCE LINE # 57
0000A5 7800       F     540             MOV     R0,#LOW (mini?144)
0000A7 E6               541             MOV     A,@R0
0000A8 75F00C           542             MOV     B,#0CH
0000AB A4               543             MUL     AB
0000AC 2400       F     544             ADD     A,#LOW (dist)
0000AE 2F               545             ADD     A,R7
0000AF F8               546             MOV     R0,A
0000B0 E6               547             MOV     A,@R0
0000B1 FF               548             MOV     R7,A
0000B2 604E             549             JZ      ?C0021
                        550     ;                               if (d[mini] + dist[mini][i] < d[i]) 
                        551                             ; SOURCE LINE # 58
0000B4 7800       F     552             MOV     R0,#LOW (i?142)
0000B6 E6               553             MOV     A,@R0
0000B7 FE               554             MOV     R6,A
0000B8 7800       F     555             MOV     R0,#LOW (mini?144)
0000BA E6               556             MOV     A,@R0
0000BB FD               557             MOV     R5,A
0000BC EF               558             MOV     A,R7
0000BD FB               559             MOV     R3,A
0000BE 33               560             RLC     A
0000BF 95E0             561             SUBB    A,ACC
0000C1 FA               562             MOV     R2,A
0000C2 7400       F     563             MOV     A,#LOW (d)
0000C4 2D               564             ADD     A,R5
0000C5 F8               565             MOV     R0,A
0000C6 E6               566             MOV     A,@R0
0000C7 FF               567             MOV     R7,A
0000C8 FD               568             MOV     R5,A
0000C9 33               569             RLC     A
0000CA 95E0             570             SUBB    A,ACC
0000CC FC               571             MOV     R4,A
0000CD ED               572             MOV     A,R5
0000CE 2B               573             ADD     A,R3
0000CF FD               574             MOV     R5,A
0000D0 EC               575             MOV     A,R4
0000D1 3A               576             ADDC    A,R2
0000D2 FC               577             MOV     R4,A
0000D3 7400       F     578             MOV     A,#LOW (d)
0000D5 2E               579             ADD     A,R6
0000D6 F8               580             MOV     R0,A
0000D7 E6               581             MOV     A,@R0
0000D8 FB               582             MOV     R3,A
AX51 MACRO ASSEMBLER  MAIN                                                                  05/13/09 00:30:33 PAGE    10

0000D9 33               583             RLC     A
0000DA 95E0             584             SUBB    A,ACC
0000DC FA               585             MOV     R2,A
0000DD C3               586             CLR     C
0000DE ED               587             MOV     A,R5
0000DF 9B               588             SUBB    A,R3
0000E0 EA               589             MOV     A,R2
0000E1 6480             590             XRL     A,#080H
0000E3 F8               591             MOV     R0,A
0000E4 EC               592             MOV     A,R4
0000E5 6480             593             XRL     A,#080H
0000E7 98               594             SUBB    A,R0
0000E8 5018             595             JNC     ?C0021
                        596     ;                                       d[i] = d[mini] + dist[mini][i];
                        597                             ; SOURCE LINE # 59
0000EA 7800       F     598             MOV     R0,#LOW (i?142)
0000EC E6               599             MOV     A,@R0
0000ED FE               600             MOV     R6,A
0000EE 7800       F     601             MOV     R0,#LOW (mini?144)
0000F0 E6               602             MOV     A,@R0
0000F1 75F00C           603             MOV     B,#0CH
0000F4 A4               604             MUL     AB
0000F5 2400       F     605             ADD     A,#LOW (dist)
0000F7 2E               606             ADD     A,R6
0000F8 F8               607             MOV     R0,A
0000F9 EF               608             MOV     A,R7
0000FA 26               609             ADD     A,@R0
0000FB FF               610             MOV     R7,A
0000FC 7400       F     611             MOV     A,#LOW (d)
0000FE 2E               612             ADD     A,R6
0000FF F8               613             MOV     R0,A
000100 A607             614             MOV     @R0,AR7
000102                  615     ?C0021:
000102 7800       F     616             MOV     R0,#LOW (i?142)
000104 06               617             INC     @R0
000105 808E             618             SJMP    ?C0019
                        619     ;       }
                        620                             ; SOURCE LINE # 60
000107                  621     ?C0013:
000107 7800       F     622             MOV     R0,#LOW (k?143)
000109 06               623             INC     @R0
00010A 020000     F     624             LJMP    ?C0011
                        625     ; }
                        626                             ; SOURCE LINE # 61
00010D                  627     ?C0024:
00010D 22               628             RET     
                        629     ; END OF _dijkstra
                        630     
                        631     ; 
                        632     ; int main() 
                        633     
------                  634             RSEG  ?PR?main?MAIN
000000                  635     main:
                        636             USING   0
                        637                             ; SOURCE LINE # 63
                        638     ; {
                        639                             ; SOURCE LINE # 64
                        640     ;       char i, j , k = 5;
                        641                             ; SOURCE LINE # 65
000000 750005     F     642             MOV     k?248,#05H
                        643     ;       //char u = 1, v = 2, w = 4;
                        644     ; 
                        645     ;       store_cpu_rate(16);
                        646                             ; SOURCE LINE # 68
000003 7F10             647             MOV     R7,#010H
000005 7E00             648             MOV     R6,#00H
AX51 MACRO ASSEMBLER  MAIN                                                                  05/13/09 00:30:33 PAGE    11

000007 120000     E     649             LCALL   _store_cpu_rate
                        650     ; 
                        651     ;       P0_DIR &= ~0x28;
                        652                             ; SOURCE LINE # 70
00000A 5394D7           653             ANL     P0_DIR,#0D7H
                        654     ;       P0_ALT &= ~0x28;
                        655                             ; SOURCE LINE # 71
00000D 5395D7           656             ANL     P0_ALT,#0D7H
                        657     ; 
                        658     ;       serial_init(19200);
                        659                             ; SOURCE LINE # 73
000010 7F00             660             MOV     R7,#00H
000012 7E4B             661             MOV     R6,#04BH
000014 120000     E     662             LCALL   _serial_init
                        663     ; 
                        664     ;       for(n=0;n<6;n++)
                        665                             ; SOURCE LINE # 75
000017 E4               666             CLR     A
000018 F500       F     667             MOV     n,A
00001A                  668     ?C0025:
                        669     ;       {
                        670                             ; SOURCE LINE # 76
                        671     ;               blink_led();
                        672                             ; SOURCE LINE # 77
00001A 638020           673             XRL     P0,#020H
                        674     ;               mdelay(400);
                        675                             ; SOURCE LINE # 78
00001D 7F90             676             MOV     R7,#090H
00001F 7E01             677             MOV     R6,#01H
000021 120000     E     678             LCALL   _mdelay
                        679     ;       }
                        680                             ; SOURCE LINE # 79
000024 0500       F     681             INC     n
000026 C3               682             CLR     C
000027 E500       F     683             MOV     A,n
000029 6480             684             XRL     A,#080H
00002B 9486             685             SUBB    A,#086H
00002D 40EB             686             JC      ?C0025
00002F                  687     ?C0026:
                        688     ; 
                        689     ;       n = GRAPHSIZE;
                        690                             ; SOURCE LINE # 81
00002F 75000C     F     691             MOV     n,#0CH
000032                  692     ?C0028:
                        693     ; 
                        694     ; 
                        695     ;       while(1)
                        696                             ; SOURCE LINE # 84
                        697     ;       {
                        698                             ; SOURCE LINE # 85
                        699     ;               for (i = 0; i < n; i++)
                        700                             ; SOURCE LINE # 86
                        701     ;---- Variable 'i?246' assigned to Register 'R7' ----
000032 E4               702             CLR     A
000033 FF               703             MOV     R7,A
000034                  704     ?C0030:
000034 C3               705             CLR     C
000035 E500       F     706             MOV     A,n
000037 6480             707             XRL     A,#080H
000039 F8               708             MOV     R0,A
00003A EF               709             MOV     A,R7
00003B 6480             710             XRL     A,#080H
00003D 98               711             SUBB    A,R0
00003E 5030             712             JNC     ?C0031
                        713     ;                       for (j = 0; j < n; j++)
                        714                             ; SOURCE LINE # 87
AX51 MACRO ASSEMBLER  MAIN                                                                  05/13/09 00:30:33 PAGE    12

000040 E4               715             CLR     A
000041 F500       F     716             MOV     j?247,A
000043                  717     ?C0033:
000043 C3               718             CLR     C
000044 E500       F     719             MOV     A,n
000046 6480             720             XRL     A,#080H
000048 F8               721             MOV     R0,A
000049 E500       F     722             MOV     A,j?247
00004B 6480             723             XRL     A,#080H
00004D 98               724             SUBB    A,R0
00004E 501D             725             JNC     ?C0032
                        726     ;                               dist[i][j] = (k++)%30;
                        727                             ; SOURCE LINE # 88
000050 AE00       F     728             MOV     R6,k?248
000052 0500       F     729             INC     k?248
000054 EE               730             MOV     A,R6
000055 75F01E           731             MOV     B,#01EH
000058 120000     E     732             LCALL   ?C?SCDIV
00005B AEF0             733             MOV     R6,B
00005D EF               734             MOV     A,R7
00005E 75F00C           735             MOV     B,#0CH
000061 A4               736             MUL     AB
000062 2400       F     737             ADD     A,#LOW (dist)
000064 2500       F     738             ADD     A,j?247
000066 F8               739             MOV     R0,A
000067 A606             740             MOV     @R0,AR6
000069 0500       F     741             INC     j?247
00006B 80D6             742             SJMP    ?C0033
00006D                  743     ?C0032:
00006D 0F               744             INC     R7
00006E 80C4             745             SJMP    ?C0030
000070                  746     ?C0031:
                        747     ;               //n = -1;
                        748     ;               //for (i = 0; i < 6; i++) {
                        749     ;               //fscanf(fin, "%d%d%d", &u, &v, &w);
                        750     ;               //      dist[u][v] = w++;
                        751     ;               //      n = MAX(u, MAX(v+w, n));
                        752     ;               //}
                        753     ;               //fclose(fin);
                        754     ;               for(j=0;j<n;j++)        
                        755                             ; SOURCE LINE # 96
000070 E4               756             CLR     A
000071 F500       F     757             MOV     j?247,A
000073                  758     ?C0036:
000073 C3               759             CLR     C
000074 E500       F     760             MOV     A,n
000076 6480             761             XRL     A,#080H
000078 F8               762             MOV     R0,A
000079 E500       F     763             MOV     A,j?247
00007B 6480             764             XRL     A,#080H
00007D 98               765             SUBB    A,R0
00007E 5009             766             JNC     ?C0037
                        767     ;                       dijkstra(j);
                        768                             ; SOURCE LINE # 97
000080 AF00       F     769             MOV     R7,j?247
000082 120000     F     770             LCALL   _dijkstra
000085 0500       F     771             INC     j?247
000087 80EA             772             SJMP    ?C0036
000089                  773     ?C0037:
                        774     ; 
                        775     ;               dij_counter++;
                        776                             ; SOURCE LINE # 99
000089 0500       F     777             INC     dij_counter+01H
00008B E500       F     778             MOV     A,dij_counter+01H
00008D 7002             779             JNZ     ?C0042
00008F 0500       F     780             INC     dij_counter
AX51 MACRO ASSEMBLER  MAIN                                                                  05/13/09 00:30:33 PAGE    13

000091                  781     ?C0042:
                        782     ; 
                        783     ;               int_print(dij_counter);
                        784                             ; SOURCE LINE # 101
000091 AE00       F     785             MOV     R6,dij_counter
000093 AF00       F     786             MOV     R7,dij_counter+01H
000095 120000     E     787             LCALL   _?int_print
                        788     ;               puts("\r\n");
                        789                             ; SOURCE LINE # 102
000098 7BFF             790             MOV     R3,#0FFH
00009A 7A00       F     791             MOV     R2,#HIGH (?SC_8)
00009C 7900       F     792             MOV     R1,#LOW (?SC_8)
00009E 120000     E     793             LCALL   _puts
                        794     ;               
                        795     ;               printD();
                        796                             ; SOURCE LINE # 104
0000A1 120000     F     797             LCALL   printD
                        798     ;       }
                        799                             ; SOURCE LINE # 105
0000A4 808C             800             SJMP    ?C0028
                        801     ; END OF main
                        802     
                        803             END
AX51 MACRO ASSEMBLER  MAIN                                                                  05/13/09 00:30:33 PAGE    14

SYMBOL TABLE LISTING
------ ----- -------


N A M E                             T Y P E  V A L U E     ATTRIBUTES

?C0001 . . . . . . . . . . . . . .  C  ADDR  0010H     R   SEG=?PR?PRINTD?MAIN
?C0002 . . . . . . . . . . . . . .  C  ADDR  0037H     R   SEG=?PR?PRINTD?MAIN
?C0004 . . . . . . . . . . . . . .  C  ADDR  0047H     R   SEG=?PR?PRINTD?MAIN
?C0005 . . . . . . . . . . . . . .  C  ADDR  007AH     R   SEG=?PR?PRINTD?MAIN
?C0008 . . . . . . . . . . . . . .  C  ADDR  0004H     R   SEG=?PR?_DIJKSTRA?MAIN
?C0009 . . . . . . . . . . . . . .  C  ADDR  0025H     R   SEG=?PR?_DIJKSTRA?MAIN
?C0011 . . . . . . . . . . . . . .  C  ADDR  002FH     R   SEG=?PR?_DIJKSTRA?MAIN
?C0013 . . . . . . . . . . . . . .  C  ADDR  0107H     R   SEG=?PR?_DIJKSTRA?MAIN
?C0014 . . . . . . . . . . . . . .  C  ADDR  0049H     R   SEG=?PR?_DIJKSTRA?MAIN
?C0015 . . . . . . . . . . . . . .  C  ADDR  0089H     R   SEG=?PR?_DIJKSTRA?MAIN
?C0016 . . . . . . . . . . . . . .  C  ADDR  0084H     R   SEG=?PR?_DIJKSTRA?MAIN
?C0018 . . . . . . . . . . . . . .  C  ADDR  007EH     R   SEG=?PR?_DIJKSTRA?MAIN
?C0019 . . . . . . . . . . . . . .  C  ADDR  0095H     R   SEG=?PR?_DIJKSTRA?MAIN
?C0021 . . . . . . . . . . . . . .  C  ADDR  0102H     R   SEG=?PR?_DIJKSTRA?MAIN
?C0024 . . . . . . . . . . . . . .  C  ADDR  010DH     R   SEG=?PR?_DIJKSTRA?MAIN
?C0025 . . . . . . . . . . . . . .  C  ADDR  001AH     R   SEG=?PR?MAIN?MAIN
?C0026 . . . . . . . . . . . . . .  C  ADDR  002FH     R   SEG=?PR?MAIN?MAIN
?C0028 . . . . . . . . . . . . . .  C  ADDR  0032H     R   SEG=?PR?MAIN?MAIN
?C0030 . . . . . . . . . . . . . .  C  ADDR  0034H     R   SEG=?PR?MAIN?MAIN
?C0031 . . . . . . . . . . . . . .  C  ADDR  0070H     R   SEG=?PR?MAIN?MAIN
?C0032 . . . . . . . . . . . . . .  C  ADDR  006DH     R   SEG=?PR?MAIN?MAIN
?C0033 . . . . . . . . . . . . . .  C  ADDR  0043H     R   SEG=?PR?MAIN?MAIN
?C0036 . . . . . . . . . . . . . .  C  ADDR  0073H     R   SEG=?PR?MAIN?MAIN
?C0037 . . . . . . . . . . . . . .  C  ADDR  0089H     R   SEG=?PR?MAIN?MAIN
?C0040 . . . . . . . . . . . . . .  C  ADDR  0035H     R   SEG=?PR?PRINTD?MAIN
?C0041 . . . . . . . . . . . . . .  C  ADDR  0078H     R   SEG=?PR?PRINTD?MAIN
?C0042 . . . . . . . . . . . . . .  C  ADDR  0091H     R   SEG=?PR?MAIN?MAIN
?C?SCDIV . . . . . . . . . . . . .  C  ADDR  -------       EXT
?C_INITSEG . . . . . . . . . . . .  C  SEG   000004H       REL=UNIT, ALN=BYTE
?C_STARTUP . . . . . . . . . . . .  C  ADDR  -------       EXT
?CO?MAIN . . . . . . . . . . . . .  C  SEG   00000BH       REL=UNIT, ALN=BYTE
?DT?MAIN . . . . . . . . . . . . .  D  SEG   000003H       REL=UNIT, ALN=BYTE
?DT?MAIN?MAIN. . . . . . . . . . .  D  SEG   000002H       REL=UNIT, ALN=BYTE
?ID?_DIJKSTRA?MAIN . . . . . . . .  I  SEG   00000FH       REL=UNIT, ALN=BYTE
?ID?MAIN . . . . . . . . . . . . .  I  SEG   00009CH       REL=UNIT, ALN=BYTE
?ID?PRINTD?MAIN. . . . . . . . . .  I  SEG   000002H       REL=UNIT, ALN=BYTE
?MAIN?BYTE . . . . . . . . . . . .  D  ADDR  0000H     R   SEG=?DT?MAIN?MAIN
?PR?_DIJKSTRA?MAIN . . . . . . . .  C  SEG   00010EH       REL=UNIT, ALN=BYTE
?PR?MAIN?MAIN. . . . . . . . . . .  C  SEG   0000A6H       REL=UNIT, ALN=BYTE
?PR?PRINTD?MAIN. . . . . . . . . .  C  SEG   000083H       REL=UNIT, ALN=BYTE
?SC_0. . . . . . . . . . . . . . .  C  ADDR  0000H     R   SEG=?CO?MAIN
?SC_3. . . . . . . . . . . . . . .  C  ADDR  0003H     R   SEG=?CO?MAIN
?SC_8. . . . . . . . . . . . . . .  C  ADDR  0008H     R   SEG=?CO?MAIN
_?INT_PRINT. . . . . . . . . . . .  C  ADDR  -------       EXT
_DIJKSTRA. . . . . . . . . . . . .  C  ADDR  0000H     R   SEG=?PR?_DIJKSTRA?MAIN
_MDELAY. . . . . . . . . . . . . .  C  ADDR  -------       EXT
_PUTS. . . . . . . . . . . . . . .  C  ADDR  -------       EXT
_SERIAL_INIT . . . . . . . . . . .  C  ADDR  -------       EXT
_STORE_CPU_RATE. . . . . . . . . .  C  ADDR  -------       EXT
AC . . . . . . . . . . . . . . . .  B  ADDR  00D0H.6   A   
ACC. . . . . . . . . . . . . . . .  D  ADDR  00E0H     A   
ADCCON . . . . . . . . . . . . . .  D  ADDR  00A1H     A   
ADCDATAH . . . . . . . . . . . . .  D  ADDR  00A2H     A   
ADCDATAL . . . . . . . . . . . . .  D  ADDR  00A3H     A   
ADCSTATIC. . . . . . . . . . . . .  D  ADDR  00A4H     A   
AR5. . . . . . . . . . . . . . . .  D  ADDR  0005H     A   
AR6. . . . . . . . . . . . . . . .  D  ADDR  0006H     A   
AR7. . . . . . . . . . . . . . . .  D  ADDR  0007H     A   
B. . . . . . . . . . . . . . . . .  D  ADDR  00F0H     A   
C_T2 . . . . . . . . . . . . . . .  B  ADDR  00C8H.1   A   
AX51 MACRO ASSEMBLER  MAIN                                                                  05/13/09 00:30:33 PAGE    15

CE . . . . . . . . . . . . . . . .  B  ADDR  00A0H.6   A   
CK_CTRL. . . . . . . . . . . . . .  D  ADDR  00B6H     A   
CKCON. . . . . . . . . . . . . . .  D  ADDR  008EH     A   
CLK1 . . . . . . . . . . . . . . .  B  ADDR  00A0H.1   A   
CLK2 . . . . . . . . . . . . . . .  B  ADDR  00A0H.5   A   
CP_RL2 . . . . . . . . . . . . . .  B  ADDR  00C8H.0   A   
CPRL2. . . . . . . . . . . . . . .  B  ADDR  00C8H.0   A   
CS . . . . . . . . . . . . . . . .  B  ADDR  00A0H.3   A   
CT2. . . . . . . . . . . . . . . .  B  ADDR  00C8H.1   A   
CY . . . . . . . . . . . . . . . .  B  ADDR  00D0H.7   A   
D. . . . . . . . . . . . . . . . .  I  ADDR  0090H     R   SEG=?ID?MAIN
DATA?. . . . . . . . . . . . . . .  B  ADDR  00A0H.0   A   
DEV_OFFSET . . . . . . . . . . . .  D  ADDR  00BEH     A   
DIJ_COUNTER. . . . . . . . . . . .  D  ADDR  0000H     R   SEG=?DT?MAIN
DIN0 . . . . . . . . . . . . . . .  B  ADDR  0090H.2   A   
DIO0 . . . . . . . . . . . . . . .  B  ADDR  0090H.0   A   
DIO1 . . . . . . . . . . . . . . .  B  ADDR  0090H.1   A   
DIO2 . . . . . . . . . . . . . . .  B  ADDR  0080H.0   A   
DIO3 . . . . . . . . . . . . . . .  B  ADDR  0080H.1   A   
DIO4 . . . . . . . . . . . . . . .  B  ADDR  0080H.2   A   
DIO5 . . . . . . . . . . . . . . .  B  ADDR  0080H.3   A   
DIO6 . . . . . . . . . . . . . . .  B  ADDR  0080H.4   A   
DIO7 . . . . . . . . . . . . . . .  B  ADDR  0080H.5   A   
DIO8 . . . . . . . . . . . . . . .  B  ADDR  0080H.6   A   
DIO9 . . . . . . . . . . . . . . .  B  ADDR  0080H.7   A   
DIST . . . . . . . . . . . . . . .  I  ADDR  0000H     R   SEG=?ID?MAIN
DOUT2. . . . . . . . . . . . . . .  B  ADDR  00A0H.4   A   
DPH. . . . . . . . . . . . . . . .  D  ADDR  0083H     A   
DPH0 . . . . . . . . . . . . . . .  D  ADDR  0083H     A   
DPH1 . . . . . . . . . . . . . . .  D  ADDR  0085H     A   
DPL. . . . . . . . . . . . . . . .  D  ADDR  0082H     A   
DPL0 . . . . . . . . . . . . . . .  D  ADDR  0082H     A   
DPL1 . . . . . . . . . . . . . . .  D  ADDR  0084H     A   
DPS. . . . . . . . . . . . . . . .  D  ADDR  0086H     A   
DR1. . . . . . . . . . . . . . . .  B  ADDR  00A0H.2   A   
DR2. . . . . . . . . . . . . . . .  B  ADDR  00A0H.6   A   
DR2_CE . . . . . . . . . . . . . .  B  ADDR  00A0H.6   A   
EA . . . . . . . . . . . . . . . .  B  ADDR  00A8H.7   A   
EICON. . . . . . . . . . . . . . .  D  ADDR  00D8H     A   
EIE. . . . . . . . . . . . . . . .  D  ADDR  00E8H     A   
EIP. . . . . . . . . . . . . . . .  D  ADDR  00F8H     A   
ES . . . . . . . . . . . . . . . .  B  ADDR  00A8H.4   A   
ET0. . . . . . . . . . . . . . . .  B  ADDR  00A8H.1   A   
ET1. . . . . . . . . . . . . . . .  B  ADDR  00A8H.3   A   
ET2. . . . . . . . . . . . . . . .  B  ADDR  00A8H.5   A   
EWDI . . . . . . . . . . . . . . .  B  ADDR  00E8H.4   A   
EX0. . . . . . . . . . . . . . . .  B  ADDR  00A8H.0   A   
EX1. . . . . . . . . . . . . . . .  B  ADDR  00A8H.2   A   
EX2. . . . . . . . . . . . . . . .  B  ADDR  00E8H.0   A   
EX3. . . . . . . . . . . . . . . .  B  ADDR  00E8H.1   A   
EX4. . . . . . . . . . . . . . . .  B  ADDR  00E8H.2   A   
EX5. . . . . . . . . . . . . . . .  B  ADDR  00E8H.3   A   
EXEN2. . . . . . . . . . . . . . .  B  ADDR  00C8H.3   A   
EXF2 . . . . . . . . . . . . . . .  B  ADDR  00C8H.6   A   
EXIF . . . . . . . . . . . . . . .  D  ADDR  0091H     A   
F0 . . . . . . . . . . . . . . . .  B  ADDR  00D0H.5   A   
F1 . . . . . . . . . . . . . . . .  B  ADDR  00D0H.1   A   
I?040. . . . . . . . . . . . . . .  I  ADDR  0000H     R   SEG=?ID?PRINTD?MAIN
I?142. . . . . . . . . . . . . . .  I  ADDR  0000H     R   SEG=?ID?_DIJKSTRA?MAIN
IE . . . . . . . . . . . . . . . .  D  ADDR  00A8H     A   
IE0. . . . . . . . . . . . . . . .  B  ADDR  0088H.1   A   
IE1. . . . . . . . . . . . . . . .  B  ADDR  0088H.3   A   
INT0_N . . . . . . . . . . . . . .  B  ADDR  0080H.3   A   
INT1_N . . . . . . . . . . . . . .  B  ADDR  0080H.4   A   
IP . . . . . . . . . . . . . . . .  D  ADDR  00B8H     A   
IT0. . . . . . . . . . . . . . . .  B  ADDR  0088H.0   A   
AX51 MACRO ASSEMBLER  MAIN                                                                  05/13/09 00:30:33 PAGE    16

IT1. . . . . . . . . . . . . . . .  B  ADDR  0088H.2   A   
J?247. . . . . . . . . . . . . . .  D  ADDR  0000H     R   SEG=?DT?MAIN?MAIN
K?143. . . . . . . . . . . . . . .  I  ADDR  0001H     R   SEG=?ID?_DIJKSTRA?MAIN
K?248. . . . . . . . . . . . . . .  D  ADDR  0001H     R   SEG=?DT?MAIN?MAIN
MAIN . . . . . . . . . . . . . . .  C  ADDR  0000H     R   SEG=?PR?MAIN?MAIN
MINI?144 . . . . . . . . . . . . .  I  ADDR  0002H     R   SEG=?ID?_DIJKSTRA?MAIN
MPAGE. . . . . . . . . . . . . . .  D  ADDR  0092H     A   
N. . . . . . . . . . . . . . . . .  D  ADDR  0002H     R   SEG=?DT?MAIN
OV . . . . . . . . . . . . . . . .  B  ADDR  00D0H.2   A   
P. . . . . . . . . . . . . . . . .  B  ADDR  00D0H.0   A   
P0 . . . . . . . . . . . . . . . .  D  ADDR  0080H     A   
P0_0 . . . . . . . . . . . . . . .  B  ADDR  0080H.0   A   
P0_1 . . . . . . . . . . . . . . .  B  ADDR  0080H.1   A   
P0_2 . . . . . . . . . . . . . . .  B  ADDR  0080H.2   A   
P0_3 . . . . . . . . . . . . . . .  B  ADDR  0080H.3   A   
P0_4 . . . . . . . . . . . . . . .  B  ADDR  0080H.4   A   
P0_5 . . . . . . . . . . . . . . .  B  ADDR  0080H.5   A   
P0_6 . . . . . . . . . . . . . . .  B  ADDR  0080H.6   A   
P0_7 . . . . . . . . . . . . . . .  B  ADDR  0080H.7   A   
P0_ALT . . . . . . . . . . . . . .  D  ADDR  0095H     A   
P0_DIR . . . . . . . . . . . . . .  D  ADDR  0094H     A   
P1 . . . . . . . . . . . . . . . .  D  ADDR  0090H     A   
P1_0 . . . . . . . . . . . . . . .  B  ADDR  0090H.0   A   
P1_1 . . . . . . . . . . . . . . .  B  ADDR  0090H.1   A   
P1_2 . . . . . . . . . . . . . . .  B  ADDR  0090H.2   A   
P1_ALT . . . . . . . . . . . . . .  D  ADDR  0097H     A   
P1_DIR . . . . . . . . . . . . . .  D  ADDR  0096H     A   
PCON . . . . . . . . . . . . . . .  D  ADDR  0087H     A   
PRINTD . . . . . . . . . . . . . .  C  ADDR  0000H     R   SEG=?PR?PRINTD?MAIN
PS . . . . . . . . . . . . . . . .  B  ADDR  00B8H.4   A   
PSW. . . . . . . . . . . . . . . .  D  ADDR  00D0H     A   
PT0. . . . . . . . . . . . . . . .  B  ADDR  00B8H.1   A   
PT1. . . . . . . . . . . . . . . .  B  ADDR  00B8H.3   A   
PT2. . . . . . . . . . . . . . . .  B  ADDR  00B8H.5   A   
PWDI . . . . . . . . . . . . . . .  B  ADDR  00F8H.4   A   
PWM. . . . . . . . . . . . . . . .  B  ADDR  0080H.7   A   
PWMCON . . . . . . . . . . . . . .  D  ADDR  00A9H     A   
PWMDUTY. . . . . . . . . . . . . .  D  ADDR  00AAH     A   
PWR_UP . . . . . . . . . . . . . .  B  ADDR  00A0H.7   A   
PX0. . . . . . . . . . . . . . . .  B  ADDR  00B8H.0   A   
PX1. . . . . . . . . . . . . . . .  B  ADDR  00B8H.2   A   
PX2. . . . . . . . . . . . . . . .  B  ADDR  00F8H.0   A   
PX3. . . . . . . . . . . . . . . .  B  ADDR  00F8H.1   A   
PX4. . . . . . . . . . . . . . . .  B  ADDR  00F8H.2   A   
PX5. . . . . . . . . . . . . . . .  B  ADDR  00F8H.3   A   
RADIO. . . . . . . . . . . . . . .  D  ADDR  00A0H     A   
RB8. . . . . . . . . . . . . . . .  B  ADDR  0098H.2   A   
RCAP2H . . . . . . . . . . . . . .  D  ADDR  00CBH     A   
RCAP2L . . . . . . . . . . . . . .  D  ADDR  00CAH     A   
RCLK . . . . . . . . . . . . . . .  B  ADDR  00C8H.5   A   
REGX_CTRL. . . . . . . . . . . . .  D  ADDR  00ADH     A   
REGX_LSB . . . . . . . . . . . . .  D  ADDR  00ACH     A   
REGX_MSB . . . . . . . . . . . . .  D  ADDR  00ABH     A   
REN. . . . . . . . . . . . . . . .  B  ADDR  0098H.4   A   
RI . . . . . . . . . . . . . . . .  B  ADDR  0098H.0   A   
RS0. . . . . . . . . . . . . . . .  B  ADDR  00D0H.3   A   
RS1. . . . . . . . . . . . . . . .  B  ADDR  00D0H.4   A   
RSTREAS. . . . . . . . . . . . . .  D  ADDR  00B1H     A   
RXD. . . . . . . . . . . . . . . .  B  ADDR  0080H.1   A   
SBUF . . . . . . . . . . . . . . .  D  ADDR  0099H     A   
SCON . . . . . . . . . . . . . . .  D  ADDR  0098H     A   
SM0. . . . . . . . . . . . . . . .  B  ADDR  0098H.7   A   
SM1. . . . . . . . . . . . . . . .  B  ADDR  0098H.6   A   
SM2. . . . . . . . . . . . . . . .  B  ADDR  0098H.5   A   
SP . . . . . . . . . . . . . . . .  D  ADDR  0081H     A   
SPC_FNC. . . . . . . . . . . . . .  D  ADDR  008FH     A   
AX51 MACRO ASSEMBLER  MAIN                                                                  05/13/09 00:30:33 PAGE    17

SPI_CTRL . . . . . . . . . . . . .  D  ADDR  00B3H     A   
SPI_DATA . . . . . . . . . . . . .  D  ADDR  00B2H     A   
SPICLK . . . . . . . . . . . . . .  D  ADDR  00B4H     A   
T0 . . . . . . . . . . . . . . . .  B  ADDR  0080H.5   A   
T1 . . . . . . . . . . . . . . . .  B  ADDR  0080H.6   A   
T1_1V2 . . . . . . . . . . . . . .  D  ADDR  00BCH     A   
T2 . . . . . . . . . . . . . . . .  B  ADDR  0090H.0   A   
T2_1V2 . . . . . . . . . . . . . .  D  ADDR  00BDH     A   
T2CON. . . . . . . . . . . . . . .  D  ADDR  00C8H     A   
TB8. . . . . . . . . . . . . . . .  B  ADDR  0098H.3   A   
TCLK . . . . . . . . . . . . . . .  B  ADDR  00C8H.4   A   
TCON . . . . . . . . . . . . . . .  D  ADDR  0088H     A   
TEST_MODE. . . . . . . . . . . . .  D  ADDR  00B7H     A   
TF0. . . . . . . . . . . . . . . .  B  ADDR  0088H.5   A   
TF1. . . . . . . . . . . . . . . .  B  ADDR  0088H.7   A   
TF2. . . . . . . . . . . . . . . .  B  ADDR  00C8H.7   A   
TH0. . . . . . . . . . . . . . . .  D  ADDR  008CH     A   
TH1. . . . . . . . . . . . . . . .  D  ADDR  008DH     A   
TH2. . . . . . . . . . . . . . . .  D  ADDR  00CDH     A   
TI . . . . . . . . . . . . . . . .  B  ADDR  0098H.1   A   
TICK_DV. . . . . . . . . . . . . .  D  ADDR  00B5H     A   
TL0. . . . . . . . . . . . . . . .  D  ADDR  008AH     A   
TL1. . . . . . . . . . . . . . . .  D  ADDR  008BH     A   
TL2. . . . . . . . . . . . . . . .  D  ADDR  00CCH     A   
TMOD . . . . . . . . . . . . . . .  D  ADDR  0089H     A   
TR0. . . . . . . . . . . . . . . .  B  ADDR  0088H.4   A   
TR1. . . . . . . . . . . . . . . .  B  ADDR  0088H.6   A   
TR2. . . . . . . . . . . . . . . .  B  ADDR  00C8H.2   A   
TXD. . . . . . . . . . . . . . . .  B  ADDR  0080H.2   A   
VISITED?145. . . . . . . . . . . .  I  ADDR  0003H     R   SEG=?ID?_DIJKSTRA?MAIN
WDTI . . . . . . . . . . . . . . .  B  ADDR  00D8H.3   A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S).
