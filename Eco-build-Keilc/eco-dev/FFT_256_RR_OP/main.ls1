AX51 MACRO ASSEMBLER  MAIN                                                                  05/10/09 15:50:48 PAGE     1


MACRO ASSEMBLER AX51 V3.06a
OBJECT MODULE PLACED IN .\main.obj
ASSEMBLER INVOKED BY: C:\Keil\C51\BIN\AX51.exe .\main.src EP DEBUG SYMBOLS OJ(.\main.obj) PR(.\main.ls1) 

LOC    OBJ             LINE     SOURCE

                          1     ; ./main.src generated from: .\main.c
                          2     ; COMPILER INVOKED BY:
                          3     ;        C:\Keil\C51\BIN\C51.exe .\main.c BROWSE DEBUG CODE LISTINCLUDE SYMBOLS PREPRINT
                                ROM(LARGE) INCDIR(../../Include) SRC(./main.src)
                          4     
                          5     $nomod51 
                          6     
                          7     NAME    MAIN
                          8     
 00A0.7                   9     PWR_UP  BIT     0A0H.7
 0080                    10     P0      DATA    080H
 0090                    11     P1      DATA    090H
 00D0.6                  12     AC      BIT     0D0H.6
 0080.5                  13     T0      BIT     080H.5
 00B3                    14     SPI_CTRL        DATA    0B3H
 0080.6                  15     T1      BIT     080H.6
 00A8.7                  16     EA      BIT     0A8H.7
 0090.0                  17     T2      BIT     090H.0
 00A0.6                  18     CE      BIT     0A0H.6
 00BE                    19     DEV_OFFSET      DATA    0BEH
 00A0.1                  20     CLK1    BIT     0A0H.1
 0090.2                  21     DIN0    BIT     090H.2
 00A0.5                  22     CLK2    BIT     0A0H.5
 0090.0                  23     DIO0    BIT     090H.0
 0083                    24     DPH0    DATA    083H
 0090.1                  25     DIO1    BIT     090H.1
 00A8                    26     IE      DATA    0A8H
 0085                    27     DPH1    DATA    085H
 0080.0                  28     DIO2    BIT     080H.0
 0080.1                  29     DIO3    BIT     080H.1
 0080.0                  30     P0_0    BIT     080H.0
 0090.0                  31     P1_0    BIT     090H.0
 0080.2                  32     DIO4    BIT     080H.2
 0080.1                  33     P0_1    BIT     080H.1
 0082                    34     DPL0    DATA    082H
 0090.1                  35     P1_1    BIT     090H.1
 0080.3                  36     DIO5    BIT     080H.3
 0080.2                  37     P0_2    BIT     080H.2
 0084                    38     DPL1    DATA    084H
 0090.2                  39     P1_2    BIT     090H.2
 0080.4                  40     DIO6    BIT     080H.4
 0080.3                  41     P0_3    BIT     080H.3
 0080.5                  42     DIO7    BIT     080H.5
 0080.4                  43     P0_4    BIT     080H.4
 00A4                    44     ADCSTATIC       DATA    0A4H
 0080.6                  45     DIO8    BIT     080H.6
 0080.5                  46     P0_5    BIT     080H.5
 00C8.6                  47     EXF2    BIT     0C8H.6
 00A0.3                  48     CS      BIT     0A0H.3
 0080.7                  49     DIO9    BIT     080H.7
 0080.6                  50     P0_6    BIT     080H.6
 0080.7                  51     P0_7    BIT     080H.7
 00A8.4                  52     ES      BIT     0A8H.4
 00B8                    53     IP      DATA    0B8H
 00A0.0                  54     DATA?   BIT     0A0H.0
 0098.0                  55     RI      BIT     098H.0
 00D0.7                  56     CY      BIT     0D0H.7
 0098.1                  57     TI      BIT     098H.1
AX51 MACRO ASSEMBLER  MAIN                                                                  05/10/09 15:50:48 PAGE     2

 00BC                    58     T1_1V2  DATA    0BCH
 008F                    59     SPC_FNC DATA    08FH
 00BD                    60     T2_1V2  DATA    0BDH
 00CB                    61     RCAP2H  DATA    0CBH
 00B8.4                  62     PS      BIT     0B8H.4
 0081                    63     SP      DATA    081H
 00D0.2                  64     OV      BIT     0D0H.2
 00B6                    65     CK_CTRL DATA    0B6H
 00CA                    66     RCAP2L  DATA    0CAH
 00B5                    67     TICK_DV DATA    0B5H
 00B1                    68     RSTREAS DATA    0B1H
 00C8.1                  69     C_T2    BIT     0C8H.1
 00E8.4                  70     EWDI    BIT     0E8H.4
 00A1                    71     ADCCON  DATA    0A1H
 00C8.5                  72     RCLK    BIT     0C8H.5
 00A2                    73     ADCDATAH        DATA    0A2H
 0091                    74     EXIF    DATA    091H
 00C8.4                  75     TCLK    BIT     0C8H.4
 00A0.6                  76     DR2_CE  BIT     0A0H.6
 00A3                    77     ADCDATAL        DATA    0A3H
 0099                    78     SBUF    DATA    099H
 0087                    79     PCON    DATA    087H
 0098                    80     SCON    DATA    098H
 00F8.4                  81     PWDI    BIT     0F8H.4
 0089                    82     TMOD    DATA    089H
 0088                    83     TCON    DATA    088H
 00D8.3                  84     WDTI    BIT     0D8H.3
 00AA                    85     PWMDUTY DATA    0AAH
 0088.1                  86     IE0     BIT     088H.1
 0088.3                  87     IE1     BIT     088H.3
 0094                    88     P0_DIR  DATA    094H
 00F0                    89     B       DATA    0F0H
 0096                    90     P1_DIR  DATA    096H
 0095                    91     P0_ALT  DATA    095H
 0097                    92     P1_ALT  DATA    097H
 00C8.0                  93     CP_RL2  BIT     0C8H.0
 00A0.2                  94     DR1     BIT     0A0H.2
 00E0                    95     ACC     DATA    0E0H
 00A0.6                  96     DR2     BIT     0A0H.6
 00B7                    97     TEST_MODE       DATA    0B7H
 00B4                    98     SPICLK  DATA    0B4H
 00C8.1                  99     CT2     BIT     0C8H.1
 00A8.1                 100     ET0     BIT     0A8H.1
 00A8.3                 101     ET1     BIT     0A8H.3
 0088.5                 102     TF0     BIT     088H.5
 0080.3                 103     INT0_N  BIT     080H.3
 00A8.5                 104     ET2     BIT     0A8H.5
 0088.7                 105     TF1     BIT     088H.7
 0080.4                 106     INT1_N  BIT     080H.4
 00C8.7                 107     TF2     BIT     0C8H.7
 0098.2                 108     RB8     BIT     098H.2
 008C                   109     TH0     DATA    08CH
 00A8.0                 110     EX0     BIT     0A8H.0
 0088.0                 111     IT0     BIT     088H.0
 008D                   112     TH1     DATA    08DH
 00A8.2                 113     EX1     BIT     0A8H.2
 0098.3                 114     TB8     BIT     098H.3
 0088.2                 115     IT1     BIT     088H.2
 00CD                   116     TH2     DATA    0CDH
 00AD                   117     REGX_CTRL       DATA    0ADH
 00E8.0                 118     EX2     BIT     0E8H.0
 00D0.0                 119     P       BIT     0D0H.0
 00E8.1                 120     EX3     BIT     0E8H.1
 0098.7                 121     SM0     BIT     098H.7
 008A                   122     TL0     DATA    08AH
 00E8.2                 123     EX4     BIT     0E8H.2
AX51 MACRO ASSEMBLER  MAIN                                                                  05/10/09 15:50:48 PAGE     3

 0098.6                 124     SM1     BIT     098H.6
 008B                   125     TL1     DATA    08BH
 00E8.3                 126     EX5     BIT     0E8H.3
 0098.5                 127     SM2     BIT     098H.5
 00CC                   128     TL2     DATA    0CCH
 00E8                   129     EIE     DATA    0E8H
 00B8.1                 130     PT0     BIT     0B8H.1
 00D0.3                 131     RS0     BIT     0D0H.3
 00B8.3                 132     PT1     BIT     0B8H.3
 00D0.4                 133     RS1     BIT     0D0H.4
 00B8.5                 134     PT2     BIT     0B8H.5
 0088.4                 135     TR0     BIT     088H.4
 00A9                   136     PWMCON  DATA    0A9H
 0088.6                 137     TR1     BIT     088H.6
 00C8.2                 138     TR2     BIT     0C8H.2
 00B8.0                 139     PX0     BIT     0B8H.0
 00B8.2                 140     PX1     BIT     0B8H.2
 00F8.0                 141     PX2     BIT     0F8H.0
 00F8.1                 142     PX3     BIT     0F8H.1
 00F8.2                 143     PX4     BIT     0F8H.2
 0083                   144     DPH     DATA    083H
 00F8.3                 145     PX5     BIT     0F8H.3
 00F8                   146     EIP     DATA    0F8H
 0082                   147     DPL     DATA    082H
 00C8.3                 148     EXEN2   BIT     0C8H.3
 00C8.0                 149     CPRL2   BIT     0C8H.0
 0098.4                 150     REN     BIT     098H.4
 00C8                   151     T2CON   DATA    0C8H
 0086                   152     DPS     DATA    086H
 00B2                   153     SPI_DATA        DATA    0B2H
 0092                   154     MPAGE   DATA    092H
 0080.1                 155     RXD     BIT     080H.1
 00A0.4                 156     DOUT2   BIT     0A0H.4
 00D8                   157     EICON   DATA    0D8H
 008E                   158     CKCON   DATA    08EH
 0080.2                 159     TXD     BIT     080H.2
 00A0                   160     RADIO   DATA    0A0H
 0080.7                 161     PWM     BIT     080H.7
 00D0.5                 162     F0      BIT     0D0H.5
 00D0.1                 163     F1      BIT     0D0H.1
 00AC                   164     REGX_LSB        DATA    0ACH
 00D0                   165     PSW     DATA    0D0H
 00AB                   166     REGX_MSB        DATA    0ABH
------                  167     ?PR?_bitrev?MAIN     SEGMENT CODE 
------                  168     ?DT?_bitrev?MAIN     SEGMENT DATA OVERLAYABLE 
------                  169     ?PR?_log_2?MAIN      SEGMENT CODE 
------                  170     ?PR?_compute_W?MAIN  SEGMENT CODE 
------                  171     ?DT?_compute_W?MAIN  SEGMENT DATA OVERLAYABLE 
------                  172     ?PR?_permute_bitrev?MAIN                 SEGMENT CODE 
------                  173     ?DT?_permute_bitrev?MAIN                 SEGMENT DATA OVERLAYABLE 
------                  174     ?PR?_permute_bitrev_2?MAIN                 SEGMENT CODE 
------                  175     ?PR?_fft?MAIN        SEGMENT CODE 
------                  176     ?DT?_fft?MAIN        SEGMENT DATA OVERLAYABLE 
------                  177     ?PR?_fft_2?MAIN        SEGMENT CODE 
------                  178     ?PR?_fft_3?MAIN        SEGMENT CODE 
------                  179     ?PR?main?MAIN        SEGMENT CODE 
------                  180     ?CO?MAIN             SEGMENT CODE 
------                  181     ?DT?MAIN             SEGMENT DATA 
------                  182     ?ID?_bitrev?MAIN     SEGMENT IDATA OVERLAYABLE 
------                  183     ?ID?_log_2?MAIN      SEGMENT IDATA OVERLAYABLE 
------                  184     ?ID?_compute_W?MAIN  SEGMENT IDATA OVERLAYABLE 
------                  185     ?ID?_permute_bitrev?MAIN                 SEGMENT IDATA OVERLAYABLE 
------                  186     ?ID?_fft?MAIN        SEGMENT IDATA OVERLAYABLE 
------                  187     ?ID?main?MAIN        SEGMENT IDATA OVERLAYABLE 
                        188             EXTRN   CODE (_mdelay)
                        189             EXTRN   CODE (_serial_init)
AX51 MACRO ASSEMBLER  MAIN                                                                  05/10/09 15:50:48 PAGE     4

                        190             EXTRN   CODE (_cos)
                        191             EXTRN   CODE (_sin)
                        192             EXTRN   CODE (_puts)
                        193             EXTRN   CODE (_?int_print)
                        194             EXTRN   CODE (_store_cpu_rate)
                        195             EXTRN   CODE (?C?SIDIV)
                        196             EXTRN   CODE (?C?IMUL)
                        197             EXTRN   CODE (?C?FCASTI)
                        198             EXTRN   CODE (?C?CASTF)
                        199             EXTRN   CODE (?C?ISTOPTR)
                        200             EXTRN   CODE (?C?ILDOPTR)
                        201             EXTRN   CODE (?C_STARTUP)
                        202             
                        203             EXTRN   CODE (eco_page_manager)
                        204         EXTRN   DATA (ECO_PAGE_ADDR)
                        205         EXTRN   DATA (ECO_PAGE_SPI_CONN)
                        206         EXTRN   IDATA (ECO_PAGE_REGISTER1)
                        207         EXTRN   IDATA (ECO_PAGE_REGISTER2)
                        208         EXTRN   IDATA (ECO_PAGE_REGISTER3)
                        209         EXTRN   IDATA (ECO_PAGE_REGISTER4)
                        210         EXTRN   IDATA (ECO_PAGE_REGISTER5)
                        211         EXTRN   IDATA (ECO_PAGE_REGISTER6)
                        212         EXTRN   IDATA (ECO_PAGE_REGISTER7)
                        213     
                        214             PUBLIC  test_counter
                        215             PUBLIC  main
                        216             PUBLIC  ?_fft?BYTE
                        217             PUBLIC  _fft
                        218             PUBLIC  _fft_2
                        219             PUBLIC  _fft_3
                        220             PUBLIC  ?_permute_bitrev?BYTE
                        221             PUBLIC  _permute_bitrev
                        222             PUBLIC  _permute_bitrev_2
                        223             PUBLIC  ?_compute_W?BYTE
                        224             PUBLIC  _compute_W
                        225             PUBLIC  _log_2
                        226             PUBLIC  _bitrev
                        227     
------                  228             RSEG  ?DT?_bitrev?MAIN
000000                  229     ?_bitrev?BYTE:
000000                  230         numbits?041:   DS   2
                        231     
------                  232             RSEG  ?DT?_compute_W?MAIN
000000                  233     ?_compute_W?BYTE:
000000                  234               n?246:   DS   2
000002                  235             ORG  2
000002                  236            W_re?247:   DS   3
000005                  237             ORG  5
000005                  238            W_im?248:   DS   3
000008                  239             ORG  8
000008                  240           log2n?251:   DS   2
                        241     
------                  242             RSEG  ?DT?_fft?MAIN
000000                  243     ?_fft?BYTE:
000000                  244               n?460:   DS   2
000002                  245             ORG  2
000002                  246            A_re?461:   DS   3
000005                  247             ORG  5
000005                  248            A_im?462:   DS   3
000008                  249             ORG  8
000008                  250            W_re?463:   DS   3
00000B                  251             ORG  11
00000B                  252            W_im?464:   DS   3
                        253     
------                  254             RSEG  ?DT?_permute_bitrev?MAIN
000000                  255     ?_permute_bitrev?BYTE:
AX51 MACRO ASSEMBLER  MAIN                                                                  05/10/09 15:50:48 PAGE     5

000000                  256               n?352:   DS   2
000002                  257             ORG  2
000002                  258            A_re?353:   DS   3
000005                  259             ORG  5
000005                  260            A_im?354:   DS   3
                        261     
------                  262             RSEG  ?DT?MAIN
000000                  263        test_counter:   DS   2
                        264     
------                  265             RSEG  ?ID?_bitrev?MAIN
000000                  266               i?042:   DS   2
                        267     
------                  268             RSEG  ?ID?_bitrev?MAIN
000002                  269             rev?043:   DS   2
                        270     
------                  271             RSEG  ?ID?_log_2?MAIN
000000                  272             res?145:   DS   2
                        273     
------                  274             RSEG  ?ID?_compute_W?MAIN
000000                  275               i?249:   DS   2
                        276     
------                  277             RSEG  ?ID?_compute_W?MAIN
000002                  278              br?250:   DS   2
                        279     
------                  280             RSEG  ?ID?_permute_bitrev?MAIN
000000                  281               i?355:   DS   2
                        282     
------                  283             RSEG  ?ID?_permute_bitrev?MAIN
000002                  284             bri?356:   DS   2
                        285     
------                  286             RSEG  ?ID?_permute_bitrev?MAIN
000004                  287           log2n?357:   DS   2
                        288     
------                  289             RSEG  ?ID?_permute_bitrev?MAIN
000006                  290            t_re?358:   DS   2
                        291     
------                  292             RSEG  ?ID?_permute_bitrev?MAIN
000008                  293            t_im?359:   DS   2
                        294     
------                  295             RSEG  ?ID?_fft?MAIN
000000                  296            w_re?465:   DS   2
                        297     
------                  298             RSEG  ?ID?_fft?MAIN
000002                  299            w_im?466:   DS   2
                        300     
------                  301             RSEG  ?ID?_fft?MAIN
000004                  302            u_re?467:   DS   2
                        303     
------                  304             RSEG  ?ID?_fft?MAIN
000006                  305            u_im?468:   DS   2
                        306     
------                  307             RSEG  ?ID?_fft?MAIN
000008                  308            t_re?469:   DS   2
                        309     
------                  310             RSEG  ?ID?_fft?MAIN
00000A                  311            t_im?470:   DS   2
                        312     
------                  313             RSEG  ?ID?_fft?MAIN
00000C                  314               m?471:   DS   2
                        315     
------                  316             RSEG  ?ID?_fft?MAIN
00000E                  317               g?472:   DS   2
                        318     
------                  319             RSEG  ?ID?_fft?MAIN
000010                  320               b?473:   DS   2
                        321     
AX51 MACRO ASSEMBLER  MAIN                                                                  05/10/09 15:50:48 PAGE     6

------                  322             RSEG  ?ID?_fft?MAIN
000012                  323              mt?474:   DS   2
                        324     
------                  325             RSEG  ?ID?_fft?MAIN
000014                  326               k?475:   DS   2
                        327     
------                  328             RSEG  ?ID?main?MAIN
000000                  329               n?576:   DS   2
                        330     
------                  331             RSEG  ?ID?main?MAIN
000002                  332            A_re?577:   DS   16
                        333     
------                  334             RSEG  ?ID?main?MAIN
000012                  335            A_im?578:   DS   16
                        336     
------                  337             RSEG  ?ID?main?MAIN
000022                  338            W_re?579:   DS   8
                        339     
------                  340             RSEG  ?ID?main?MAIN
00002A                  341            W_im?580:   DS   8
                        342     
------                  343             RSEG  ?CO?MAIN
000000                  344     ?SC_0:
000000 0D0A00           345             DB  00DH,00AH,000H
                        346     
                        347     ; /* gets no. of points from the user, initialize the points and roots of unity lookup t
                               able 
                        348     ;  * and lets fft go. finally bit-reverses the results and outputs them into a file. 
                        349     ;  * n should be a power of 2. 
                        350     ;  */
                        351     ; #include "Eco/reg24e1.h"
                        352     ; #include "Eco/eco_sys.h"
                        353     ; #include "utils/utils.h"
                        354     ; #include "serial/serial.h"
                        355     ; #include "isr/isr_rf.h"
                        356     ; #include "eeprom/eeprom.h"
                        357     ; #include "eco_page.h"
                        358     ; #include "adc/adc.h"
                        359     ; 
                        360     ; #include <math.h>
                        361     ; 
                        362     ; volatile unsigned int test_counter;
                        363     ; /* treats inp as a numbits number and bitreverses it. 
                        364     ;  * inp < 2^(numbits) for meaningful bit-reversal
                        365     ;  */ 
                        366     ; int bitrev(int idata inp, int idata numbits)
                        367     
------                  368             RSEG  ?PR?_bitrev?MAIN
000000                  369     _bitrev:
                        370             USING   0
                        371                             ; SOURCE LINE # 20
000000 8C00       F     372             MOV     numbits?041,R4
000002 8D00       F     373             MOV     numbits?041+01H,R5
                        374     ;---- Variable 'inp?040' assigned to Register 'R2/R3' ----
000004 AB07             375             MOV     R3,AR7
000006 AA06             376             MOV     R2,AR6
                        377     ; {
                        378                             ; SOURCE LINE # 21
                        379     ;       int idata i;
                        380     ;       int idata rev=0;
                        381                             ; SOURCE LINE # 23
000008 E4               382             CLR     A
000009 7800       F     383             MOV     R0,#LOW (rev?043)
00000B F6               384             MOV     @R0,A
00000C 08               385             INC     R0
00000D F6               386             MOV     @R0,A
AX51 MACRO ASSEMBLER  MAIN                                                                  05/10/09 15:50:48 PAGE     7

                        387     ;       for (i=0; i < numbits; i++)
                        388                             ; SOURCE LINE # 24
00000E 7800       F     389             MOV     R0,#LOW (i?042)
000010 F6               390             MOV     @R0,A
000011 08               391             INC     R0
000012 F6               392             MOV     @R0,A
000013                  393     ?C0001:
000013 C3               394             CLR     C
000014 7800       F     395             MOV     R0,#LOW (i?042+01H)
000016 E6               396             MOV     A,@R0
000017 9500       F     397             SUBB    A,numbits?041+01H
000019 E500       F     398             MOV     A,numbits?041
00001B 6480             399             XRL     A,#080H
00001D F5F0             400             MOV     B,A
00001F 18               401             DEC     R0
000020 E6               402             MOV     A,@R0
000021 6480             403             XRL     A,#080H
000023 95F0             404             SUBB    A,B
000025 5026             405             JNC     ?C0002
                        406     ;       {
                        407                             ; SOURCE LINE # 25
                        408     ;               rev = (rev << 1) | (inp & 1);
                        409                             ; SOURCE LINE # 26
000027 7800       F     410             MOV     R0,#LOW (rev?043+01H)
000029 E6               411             MOV     A,@R0
00002A 25E0             412             ADD     A,ACC
00002C FF               413             MOV     R7,A
00002D 18               414             DEC     R0
00002E E6               415             MOV     A,@R0
00002F 33               416             RLC     A
000030 FE               417             MOV     R6,A
000031 EB               418             MOV     A,R3
000032 5401             419             ANL     A,#01H
000034 FD               420             MOV     R5,A
000035 EE               421             MOV     A,R6
000036 F6               422             MOV     @R0,A
000037 EF               423             MOV     A,R7
000038 4D               424             ORL     A,R5
000039 08               425             INC     R0
00003A F6               426             MOV     @R0,A
                        427     ;               inp >>= 1;
                        428                             ; SOURCE LINE # 27
00003B EA               429             MOV     A,R2
00003C A2E7             430             MOV     C,ACC.7
00003E 13               431             RRC     A
00003F FA               432             MOV     R2,A
000040 EB               433             MOV     A,R3
000041 13               434             RRC     A
000042 FB               435             MOV     R3,A
                        436     ;       }
                        437                             ; SOURCE LINE # 28
000043 7800       F     438             MOV     R0,#LOW (i?042+01H)
000045 06               439             INC     @R0
000046 E6               440             MOV     A,@R0
000047 18               441             DEC     R0
000048 70C9             442             JNZ     ?C0001
00004A 06               443             INC     @R0
00004B                  444     ?C0034:
00004B 80C6             445             SJMP    ?C0001
00004D                  446     ?C0002:
                        447     ;       return rev;
                        448                             ; SOURCE LINE # 29
00004D 7800       F     449             MOV     R0,#LOW (rev?043)
00004F E6               450             MOV     A,@R0
000050 FE               451             MOV     R6,A
000051 08               452             INC     R0
AX51 MACRO ASSEMBLER  MAIN                                                                  05/10/09 15:50:48 PAGE     8

000052 E6               453             MOV     A,@R0
000053 FF               454             MOV     R7,A
                        455     ; }
                        456                             ; SOURCE LINE # 30
000054                  457     ?C0004:
                        458             ;XRL    P0,#020H
000054 22               459             RET     
                        460     ; END OF _bitrev
                        461     
                        462     ; 
                        463     ; 
                        464     ; /* returns log n (to the base 2), if n is positive and power of 2 */ 
                        465     ; int log_2(int idata n) 
                        466     
------                  467             RSEG  ?PR?_log_2?MAIN
000000                  468     _log_2:
                        469             USING   0
                        470                             ; SOURCE LINE # 34
                        471     ;---- Variable 'n?144' assigned to Register 'R6/R7' ----
                        472     ; {
                        473                             ; SOURCE LINE # 35
                        474     ;       int idata res; 
                        475     ;       for (res=0; n >= 2; res++) 
                        476                             ; SOURCE LINE # 37
000000 E4               477             CLR     A
000001 7800       F     478             MOV     R0,#LOW (res?145)
000003 F6               479             MOV     @R0,A
000004 08               480             INC     R0
000005 F6               481             MOV     @R0,A
000006                  482     ?C0005:
000006 C3               483             CLR     C
000007 EF               484             MOV     A,R7
000008 9402             485             SUBB    A,#02H
00000A EE               486             MOV     A,R6
00000B 6480             487             XRL     A,#080H
00000D 9480             488             SUBB    A,#080H
00000F 4012             489             JC      ?C0006
                        490     ;               n = n >> 1; 
                        491                             ; SOURCE LINE # 38
000011 EE               492             MOV     A,R6
000012 A2E7             493             MOV     C,ACC.7
000014 13               494             RRC     A
000015 FE               495             MOV     R6,A
000016 EF               496             MOV     A,R7
000017 13               497             RRC     A
000018 FF               498             MOV     R7,A
000019 7800       F     499             MOV     R0,#LOW (res?145+01H)
00001B 06               500             INC     @R0
00001C E6               501             MOV     A,@R0
00001D 18               502             DEC     R0
00001E 70E6             503             JNZ     ?C0005
000020 06               504             INC     @R0
000021                  505     ?C0035:
000021 80E3             506             SJMP    ?C0005
000023                  507     ?C0006:
                        508     ;       return res; 
                        509                             ; SOURCE LINE # 39
000023 7800       F     510             MOV     R0,#LOW (res?145)
000025 E6               511             MOV     A,@R0
000026 FE               512             MOV     R6,A
000027 08               513             INC     R0
000028 E6               514             MOV     A,@R0
000029 FF               515             MOV     R7,A
                        516     ; }
                        517                             ; SOURCE LINE # 40
00002A                  518     ?C0008:
AX51 MACRO ASSEMBLER  MAIN                                                                  05/10/09 15:50:48 PAGE     9

                        519             ;XRL    P0,#020H
00002A 22               520             RET     
                        521     ; END OF _log_2
                        522     
                        523     ; 
                        524     ; 
                        525     ; 
                        526     ; /* W will contain roots of unity so that W[bitrev(i,log2n-1)] = e^(2*pi*i/n)
                        527     ;  * n should be a power of 2
                        528     ;  * Note: W is bit-reversal permuted because fft(..) goes faster if this is done.
                        529     ;  *       see that function for more details on why we treat 'i' as a (log2n-1) bit num
                               ber.
                        530     ;  */
                        531     ; void compute_W(int idata n, int idata W_re[], int idata W_im[])
                        532     
------                  533             RSEG  ?PR?_compute_W?MAIN
000000                  534     _compute_W:
                        535             USING   0
                        536                             ; SOURCE LINE # 49
000000 8E00       F     537             MOV     n?246,R6
000002 8F00       F     538             MOV     n?246+01H,R7
000004 8B00       F     539             MOV     W_re?247,R3
000006 8A00       F     540             MOV     W_re?247+01H,R2
000008 8900       F     541             MOV     W_re?247+02H,R1
                        542     ; {
                        543                             ; SOURCE LINE # 50
                        544     ;       int idata i;
                        545     ;       int idata br;
                        546     ;       int log2n = log_2(n);
                        547                             ; SOURCE LINE # 53
00000A 120000     F     548             LCALL   _log_2
00000D 8E00       F     549             MOV     log2n?251,R6
00000F 8F00       F     550             MOV     log2n?251+01H,R7
                        551     ; 
                        552     ;       for (i=0; i<(n/2); i++)
                        553                             ; SOURCE LINE # 55
000011 E4               554             CLR     A
000012 7800       F     555             MOV     R0,#LOW (i?249)
000014 F6               556             MOV     @R0,A
000015 08               557             INC     R0
000016 F6               558             MOV     @R0,A
000017                  559     ?C0009:
000017 AE00       F     560             MOV     R6,n?246
000019 AF00       F     561             MOV     R7,n?246+01H
00001B 7C00             562             MOV     R4,#00H
00001D 7D02             563             MOV     R5,#02H
00001F 120000     E     564             LCALL   ?C?SIDIV
000022 AC06             565             MOV     R4,AR6
000024 AD07             566             MOV     R5,AR7
000026 7800       F     567             MOV     R0,#LOW (i?249)
000028 E6               568             MOV     A,@R0
000029 FE               569             MOV     R6,A
00002A 08               570             INC     R0
00002B E6               571             MOV     A,@R0
00002C FF               572             MOV     R7,A
00002D C3               573             CLR     C
00002E 9D               574             SUBB    A,R5
00002F EC               575             MOV     A,R4
000030 6480             576             XRL     A,#080H
000032 F8               577             MOV     R0,A
000033 EE               578             MOV     A,R6
000034 6480             579             XRL     A,#080H
000036 98               580             SUBB    A,R0
000037 4009             581             JC      $ + 0BH
                        582             ;LJMP   ?C0012
000039 750000     F     583             MOV ECO_PAGE_ADDR,#HIGH (?C0012)
AX51 MACRO ASSEMBLER  MAIN                                                                  05/10/09 15:50:48 PAGE    10

00003C 750000     F     584         MOV ECO_PAGE_ADDR+01H,#LOW (?C0012)
00003F 020000     E     585         LJMP   eco_page_manager
                        586     ;       {
                        587                             ; SOURCE LINE # 56
                        588     ;               br = bitrev(i,log2n-1); 
                        589                             ; SOURCE LINE # 57
000042 E500       F     590             MOV     A,log2n?251+01H
000044 24FF             591             ADD     A,#0FFH
000046 FD               592             MOV     R5,A
000047 E500       F     593             MOV     A,log2n?251
000049 34FF             594             ADDC    A,#0FFH
00004B FC               595             MOV     R4,A
                        596             ;LCALL  _bitrev
                        597             ;MOV R0,#LOW (ECO_PAGE_REGISTER4)
                        598         ;MOV @R0,A
                        599     
                        600         ;MOV R0,#LOW (ECO_PAGE_REGISTER5)
                        601         ;MOV @R0,A
                        602     
00004C 120000     F     603         LCALL  _bitrev
                        604         ;MOV ECO_PAGE_ADDR,#HIGH (_bitrev)
                        605         ;MOV ECO_PAGE_ADDR+01H,#LOW (_bitrev)
                        606         ;LCALL   eco_page_manager
                        607     
00004F 7800       F     608             MOV     R0,#LOW (br?250)
000051 A606             609             MOV     @R0,AR6
000053 08               610             INC     R0
000054 A607             611             MOV     @R0,AR7
                        612     ;               W_re[br] = cos((i*2*3)/(n));  
                        613                             ; SOURCE LINE # 58
000056 7800       F     614             MOV     R0,#LOW (i?249)
000058 E6               615             MOV     A,@R0
000059 FE               616             MOV     R6,A
00005A 08               617             INC     R0
00005B E6               618             MOV     A,@R0
00005C FF               619             MOV     R7,A
00005D 7C00             620             MOV     R4,#00H
00005F 7D06             621             MOV     R5,#06H
000061 120000     E     622             LCALL   ?C?IMUL
000064 AC00       F     623             MOV     R4,n?246
000066 AD00       F     624             MOV     R5,n?246+01H
000068 120000     E     625             LCALL   ?C?SIDIV
00006B AC06             626             MOV     R4,AR6
00006D AD07             627             MOV     R5,AR7
00006F EC               628             MOV     A,R4
000070 120000     E     629             LCALL   ?C?FCASTI
000073 120000     E     630             LCALL   _cos
000076 120000     E     631             LCALL   ?C?CASTF
000079 AD07             632             MOV     R5,AR7
00007B 7800       F     633             MOV     R0,#LOW (br?250+01H)
00007D E6               634             MOV     A,@R0
00007E 25E0             635             ADD     A,ACC
000080 FF               636             MOV     R7,A
000081 18               637             DEC     R0
000082 E6               638             MOV     A,@R0
000083 33               639             RLC     A
000084 AB00       F     640             MOV     R3,W_re?247
000086 AA00       F     641             MOV     R2,W_re?247+01H
000088 A900       F     642             MOV     R1,W_re?247+02H
00008A 8F82             643             MOV     DPL,R7
00008C F583             644             MOV     DPH,A
00008E EE               645             MOV     A,R6
00008F 8DF0             646             MOV     B,R5
000091 120000     E     647             LCALL   ?C?ISTOPTR
                        648     ;               W_im[br] = sin((i*2*3)/(n));  
                        649                             ; SOURCE LINE # 59
AX51 MACRO ASSEMBLER  MAIN                                                                  05/10/09 15:50:48 PAGE    11

000094 7800       F     650             MOV     R0,#LOW (i?249)
000096 E6               651             MOV     A,@R0
000097 FE               652             MOV     R6,A
000098 08               653             INC     R0
000099 E6               654             MOV     A,@R0
00009A FF               655             MOV     R7,A
00009B 7C00             656             MOV     R4,#00H
00009D 7D06             657             MOV     R5,#06H
00009F 120000     E     658             LCALL   ?C?IMUL
0000A2 AC00       F     659             MOV     R4,n?246
0000A4 AD00       F     660             MOV     R5,n?246+01H
0000A6 120000     E     661             LCALL   ?C?SIDIV
0000A9 AC06             662             MOV     R4,AR6
0000AB AD07             663             MOV     R5,AR7
0000AD EC               664             MOV     A,R4
0000AE 120000     E     665             LCALL   ?C?FCASTI
0000B1 120000     E     666             LCALL   _sin
0000B4 120000     E     667             LCALL   ?C?CASTF
0000B7 AD07             668             MOV     R5,AR7
0000B9 7800       F     669             MOV     R0,#LOW (br?250+01H)
0000BB E6               670             MOV     A,@R0
0000BC 25E0             671             ADD     A,ACC
0000BE FF               672             MOV     R7,A
0000BF 18               673             DEC     R0
0000C0 E6               674             MOV     A,@R0
0000C1 33               675             RLC     A
0000C2 AB00       F     676             MOV     R3,W_im?248
0000C4 AA00       F     677             MOV     R2,W_im?248+01H
0000C6 A900       F     678             MOV     R1,W_im?248+02H
0000C8 8F82             679             MOV     DPL,R7
0000CA F583             680             MOV     DPH,A
0000CC EE               681             MOV     A,R6
0000CD 8DF0             682             MOV     B,R5
0000CF 120000     E     683             LCALL   ?C?ISTOPTR
                        684     ;       }
                        685                             ; SOURCE LINE # 60
0000D2 7800       F     686             MOV     R0,#LOW (i?249+01H)
0000D4 06               687             INC     @R0
0000D5 E6               688             MOV     A,@R0
0000D6 18               689             DEC     R0
0000D7 6009             690             JZ      $ + 0BH
                        691             ;LJMP   ?C0009
0000D9 750000     F     692             MOV ECO_PAGE_ADDR,#HIGH (?C0009)
0000DC 750000     F     693         MOV ECO_PAGE_ADDR+01H,#LOW (?C0009)
0000DF 020000     E     694         LJMP   eco_page_manager
0000E2 06               695             INC     @R0
0000E3                  696     ?C0036:
                        697             ;LJMP   ?C0009
0000E3 750000     F     698             MOV ECO_PAGE_ADDR,#HIGH (?C0009)
0000E6 750000     F     699         MOV ECO_PAGE_ADDR+01H,#LOW (?C0009)
0000E9 020000     E     700         LJMP   eco_page_manager
                        701     ; //#ifdef COMMENT_ONLY 
                        702     ; //    for (i=0;i<(n/2);i++)
                        703     ; //    { 
                        704     ; //            br = i; //bitrev(i,log2n-1); 
                        705     ; //            printf("(%g\t%g)\n", W_re[br], W_im[br]);
                        706     ; //    }  
                        707     ; //#endif 
                        708     ; }
                        709                             ; SOURCE LINE # 68
0000EC                  710     ?C0012:
0000EC 22               711             RET     
                        712     ; END OF _compute_W
                        713     
                        714     ; 
                        715     ; 
AX51 MACRO ASSEMBLER  MAIN                                                                  05/10/09 15:50:48 PAGE    12

                        716     ; /* permutes the array using a bit-reversal permutation */ 
                        717     ; void permute_bitrev(int n, int *A_re, int *A_im) 
                        718     
------                  719             RSEG  ?PR?_permute_bitrev?MAIN
000000                  720     _permute_bitrev:
                        721             USING   0
                        722                             ; SOURCE LINE # 72
000000 8E00       F     723             MOV     n?352,R6
000002 8F00       F     724             MOV     n?352+01H,R7
000004 8B00       F     725             MOV     A_re?353,R3
000006 8A00       F     726             MOV     A_re?353+01H,R2
000008 8900       F     727             MOV     A_re?353+02H,R1
                        728     ; { 
                        729                             ; SOURCE LINE # 73
                        730     ;       int idata i;
                        731     ;       int idata bri;
                        732     ;       int idata log2n;
                        733     ;       int idata t_re;
                        734     ;       int idata t_im;
                        735     ; 
                        736     ;       log2n = log_2(n); 
                        737                             ; SOURCE LINE # 80
00000A 120000     F     738             LCALL   _log_2
00000D 7800       F     739             MOV     R0,#LOW (log2n?357)
00000F A606             740             MOV     @R0,AR6
000011 08               741             INC     R0
000012 A607             742             MOV     @R0,AR7
                        743     ; 
                        744     ;       for (i=0; i<n; i++)
                        745                             ; SOURCE LINE # 82
000014 E4               746             CLR     A
000015 7800       F     747             MOV     R0,#LOW (i?355)
000017 F6               748             MOV     @R0,A
000018 08               749             INC     R0
000019 F6               750             MOV     @R0,A
00001A                  751     ?C0013:
00001A 7800       F     752             MOV     R0,#LOW (i?355)
00001C E6               753             MOV     A,@R0
00001D FE               754             MOV     R6,A
00001E 08               755             INC     R0
00001F E6               756             MOV     A,@R0
000020 FF               757             MOV     R7,A
000021 C3               758             CLR     C
000022 9500       F     759             SUBB    A,n?352+01H
000024 E500       F     760             MOV     A,n?352
000026 6480             761             XRL     A,#080H
000028 F8               762             MOV     R0,A
000029 EE               763             MOV     A,R6
00002A 6480             764             XRL     A,#080H
00002C 98               765             SUBB    A,R0
00002D 4009             766             JC      $ + 0BH
                        767             ;LJMP   ?C0017
00002F 750000     F     768             MOV ECO_PAGE_ADDR,#HIGH (?C0017)
000032 750000     F     769         MOV ECO_PAGE_ADDR+01H,#LOW (?C0017)
000035 020000     E     770         LJMP   eco_page_manager
                        771     ;       {
                        772                             ; SOURCE LINE # 83
                        773     ;               bri  = bitrev(i, log2n);
                        774                             ; SOURCE LINE # 84
000038 7800       F     775             MOV     R0,#LOW (log2n?357)
00003A E6               776             MOV     A,@R0
00003B FC               777             MOV     R4,A
00003C 08               778             INC     R0
00003D E6               779             MOV     A,@R0
00003E FD               780             MOV     R5,A
                        781             ;MOV R0,#LOW (ECO_PAGE_REGISTER4)
AX51 MACRO ASSEMBLER  MAIN                                                                  05/10/09 15:50:48 PAGE    13

                        782         ;MOV @R0,A
                        783     
                        784         ;MOV R0,#LOW (ECO_PAGE_REGISTER5)
                        785         ;MOV @R0,A
                        786     
00003F 120000     F     787             LCALL   _bitrev
                        788         ;MOV ECO_PAGE_ADDR,#HIGH (_bitrev)
                        789         ;MOV ECO_PAGE_ADDR+01H,#LOW (_bitrev)
                        790         ;LCALL   eco_page_manager
                        791     
000042 7800       F     792             MOV     R0,#LOW (bri?356)
000044 EE               793             MOV     A,R6
000045 F6               794             MOV     @R0,A
000046 08               795             INC     R0
000047 EF               796             MOV     A,R7
000048 F6               797             MOV     @R0,A
                        798     ; 
                        799     ;               /* skip already swapped elements */
                        800     ;               if (bri <= i) continue;
                        801                             ; SOURCE LINE # 87
000049 7800       F     802             MOV     R0,#LOW (i?355)
00004B E6               803             MOV     A,@R0
00004C FC               804             MOV     R4,A
00004D 08               805             INC     R0
00004E E6               806             MOV     A,@R0
00004F FD               807             MOV     R5,A
000050 D3               808             SETB    C
000051 EF               809             MOV     A,R7
000052 9D               810             SUBB    A,R5
000053 EC               811             MOV     A,R4
000054 6480             812             XRL     A,#080H
000056 F8               813             MOV     R0,A
000057 EE               814             MOV     A,R6
000058 6480             815             XRL     A,#080H
00005A 98               816             SUBB    A,R0
00005B 5009             817             JNC     $ + 0BH
                        818             ;LJMP   ?C0015
00005D 750000     F     819             MOV ECO_PAGE_ADDR,#HIGH (?C0015)
000060 750000     F     820         MOV ECO_PAGE_ADDR+01H,#LOW (?C0015)
000063 020000     E     821         LJMP   eco_page_manager
000066                  822     ?C0016:
                        823     ; 
                        824     ;               t_re = A_re[i];
                        825                             ; SOURCE LINE # 89
000066 7800       F     826             MOV     R0,#LOW (i?355+01H)
000068 E6               827             MOV     A,@R0
000069 25E0             828             ADD     A,ACC
00006B FF               829             MOV     R7,A
00006C 18               830             DEC     R0
00006D E6               831             MOV     A,@R0
00006E 33               832             RLC     A
00006F FE               833             MOV     R6,A
000070 AB00       F     834             MOV     R3,A_re?353
000072 AA00       F     835             MOV     R2,A_re?353+01H
000074 A900       F     836             MOV     R1,A_re?353+02H
000076 8F82             837             MOV     DPL,R7
000078 F583             838             MOV     DPH,A
00007A 120000     E     839             LCALL   ?C?ILDOPTR
00007D 7800       F     840             MOV     R0,#LOW (t_re?358)
00007F A6F0             841             MOV     @R0,B
000081 08               842             INC     R0
000082 F6               843             MOV     @R0,A
                        844     ;               t_im = A_im[i];
                        845                             ; SOURCE LINE # 90
000083 750000     F     846             MOV ECO_PAGE_ADDR,#HIGH (_permute_bitrev_2)
000086 750000     F     847         MOV ECO_PAGE_ADDR+01H,#LOW (_permute_bitrev_2)
AX51 MACRO ASSEMBLER  MAIN                                                                  05/10/09 15:50:48 PAGE    14

000089 020000     E     848         LJMP   eco_page_manager
                        849     
                        850     
                        851     
------                  852         RSEG  ?PR?_permute_bitrev_2?MAIN
000000                  853     _permute_bitrev_2:
                        854         USING   0
                        855     
000000 AB00       F     856             MOV     R3,A_im?354
000002 AA00       F     857             MOV     R2,A_im?354+01H
000004 A900       F     858             MOV     R1,A_im?354+02H
000006 8F82             859             MOV     DPL,R7
000008 8E83             860             MOV     DPH,R6
00000A 120000     E     861             LCALL   ?C?ILDOPTR
00000D 7800       F     862             MOV     R0,#LOW (t_im?359)
00000F A6F0             863             MOV     @R0,B
000011 08               864             INC     R0
000012 F6               865             MOV     @R0,A
                        866     ;               A_re[i]= A_re[bri];
                        867                             ; SOURCE LINE # 91
000013 7800       F     868             MOV     R0,#LOW (bri?356+01H)
000015 E6               869             MOV     A,@R0
000016 25E0             870             ADD     A,ACC
000018 FF               871             MOV     R7,A
000019 18               872             DEC     R0
00001A E6               873             MOV     A,@R0
00001B 33               874             RLC     A
00001C AB00       F     875             MOV     R3,A_re?353
00001E AA00       F     876             MOV     R2,A_re?353+01H
000020 A900       F     877             MOV     R1,A_re?353+02H
000022 8F82             878             MOV     DPL,R7
000024 F583             879             MOV     DPH,A
000026 120000     E     880             LCALL   ?C?ILDOPTR
000029 FD               881             MOV     R5,A
00002A 7800       F     882             MOV     R0,#LOW (i?355+01H)
00002C E6               883             MOV     A,@R0
00002D 25E0             884             ADD     A,ACC
00002F FF               885             MOV     R7,A
000030 18               886             DEC     R0
000031 E6               887             MOV     A,@R0
000032 33               888             RLC     A
000033 8F82             889             MOV     DPL,R7
000035 F583             890             MOV     DPH,A
000037 E5F0             891             MOV     A,B
000039 8DF0             892             MOV     B,R5
00003B 120000     E     893             LCALL   ?C?ISTOPTR
                        894     ;               A_im[i]= A_im[bri];
                        895                             ; SOURCE LINE # 92
00003E 7800       F     896             MOV     R0,#LOW (bri?356+01H)
000040 E6               897             MOV     A,@R0
000041 25E0             898             ADD     A,ACC
000043 FF               899             MOV     R7,A
000044 18               900             DEC     R0
000045 E6               901             MOV     A,@R0
000046 33               902             RLC     A
000047 AB00       F     903             MOV     R3,A_im?354
000049 AA00       F     904             MOV     R2,A_im?354+01H
00004B A900       F     905             MOV     R1,A_im?354+02H
00004D 8F82             906             MOV     DPL,R7
00004F F583             907             MOV     DPH,A
000051 120000     E     908             LCALL   ?C?ILDOPTR
000054 FD               909             MOV     R5,A
000055 7800       F     910             MOV     R0,#LOW (i?355+01H)
000057 E6               911             MOV     A,@R0
000058 25E0             912             ADD     A,ACC
00005A FF               913             MOV     R7,A
AX51 MACRO ASSEMBLER  MAIN                                                                  05/10/09 15:50:48 PAGE    15

00005B 18               914             DEC     R0
00005C E6               915             MOV     A,@R0
00005D 33               916             RLC     A
00005E 8F82             917             MOV     DPL,R7
000060 F583             918             MOV     DPH,A
000062 E5F0             919             MOV     A,B
000064 8DF0             920             MOV     B,R5
000066 120000     E     921             LCALL   ?C?ISTOPTR
                        922     ;               A_re[bri]= t_re;
                        923                             ; SOURCE LINE # 93
000069 7800       F     924             MOV     R0,#LOW (t_re?358)
00006B E6               925             MOV     A,@R0
00006C FC               926             MOV     R4,A
00006D 08               927             INC     R0
00006E E6               928             MOV     A,@R0
00006F FD               929             MOV     R5,A
000070 7800       F     930             MOV     R0,#LOW (bri?356+01H)
000072 E6               931             MOV     A,@R0
000073 25E0             932             ADD     A,ACC
000075 FF               933             MOV     R7,A
000076 18               934             DEC     R0
000077 E6               935             MOV     A,@R0
000078 33               936             RLC     A
000079 FE               937             MOV     R6,A
00007A AB00       F     938             MOV     R3,A_re?353
00007C AA00       F     939             MOV     R2,A_re?353+01H
00007E A900       F     940             MOV     R1,A_re?353+02H
000080 8F82             941             MOV     DPL,R7
000082 F583             942             MOV     DPH,A
000084 EC               943             MOV     A,R4
000085 8DF0             944             MOV     B,R5
000087 120000     E     945             LCALL   ?C?ISTOPTR
                        946     ;               A_im[bri]= t_im;
                        947                             ; SOURCE LINE # 94
00008A 7800       F     948             MOV     R0,#LOW (t_im?359)
00008C E6               949             MOV     A,@R0
00008D FD               950             MOV     R5,A
00008E 08               951             INC     R0
00008F E6               952             MOV     A,@R0
000090 AB00       F     953             MOV     R3,A_im?354
000092 AA00       F     954             MOV     R2,A_im?354+01H
000094 A900       F     955             MOV     R1,A_im?354+02H
000096 8F82             956             MOV     DPL,R7
000098 8E83             957             MOV     DPH,R6
00009A CD               958             XCH     A,R5
00009B 8DF0             959             MOV     B,R5
00009D 120000     E     960             LCALL   ?C?ISTOPTR
                        961     ;       }  
                        962                             ; SOURCE LINE # 95
0000A0                  963     ?C0015:
0000A0 7800       F     964             MOV     R0,#LOW (i?355+01H)
0000A2 06               965             INC     @R0
0000A3 E6               966             MOV     A,@R0
0000A4 18               967             DEC     R0
0000A5 6009             968             JZ      $ + 0BH
                        969             ;LJMP   ?C0013
0000A7 750000     F     970             MOV ECO_PAGE_ADDR,#HIGH (?C0013)
0000AA 750000     F     971         MOV ECO_PAGE_ADDR+01H,#LOW (?C0013)
0000AD 020000     E     972         LJMP   eco_page_manager
0000B0 06               973             INC     @R0
0000B1                  974     ?C0037:
                        975             ;LJMP   ?C0013
0000B1 750000     F     976             MOV ECO_PAGE_ADDR,#HIGH (?C0013)
0000B4 750000     F     977         MOV ECO_PAGE_ADDR+01H,#LOW (?C0013)
0000B7 020000     E     978         LJMP   eco_page_manager
                        979     ; } 
AX51 MACRO ASSEMBLER  MAIN                                                                  05/10/09 15:50:48 PAGE    16

                        980                             ; SOURCE LINE # 96
0000BA                  981     ?C0017:
0000BA 22               982             RET     
                        983     ; END OF _permute_bitrev
                        984     
                        985     ; 
                        986     ; 
                        987     ; /* fft on a set of n points given by A_re and A_im. Bit-reversal permuted roots-of-uni
                               ty lookup table
                        988     ;  * is given by W_re and W_im. More specifically,  W is the array of first n/2 nth root
                               s of unity stored
                        989     ;  * in a permuted bitreversal order.
                        990     ;  *
                        991     ;  * FFT - Decimation In Time FFT with input array in correct order and output array in 
                               bit-reversed order.
                        992     ;  *
                        993     ;  * REQ: n should be a power of 2 to work. 
                        994     ;  *
                        995     ;  * Note: - See www.cs.berkeley.edu/~randit for her thesis on VIRAM FFTs and other deta
                               ils about VHALF section of the algo
                        996     ;  *         (thesis link - http://www.cs.berkeley.edu/~randit/papers/csd-00-1106.pdf)
                        997     ;  *       - See the foll. CS267 website for details of the Decimation In Time FFT imple
                               mented here.
                        998     ;  *         (www.cs.berkeley.edu/~demmel/cs267/lecture24/lecture24.html)
                        999     ;  *       - Also, look "Cormen Leicester Rivest [CLR] - Introduction to Algorithms" boo
                               k for another variant of Iterative-FFT
                       1000     ;  */
                       1001     ; 
                       1002     ; //void fft(int n, double *A_re, double *A_im, double *W_re, double *W_im) 
                       1003     ; void fft(int n, int A_re[], int A_im[], int W_re[], int W_im[]) 
                       1004     
------                 1005             RSEG  ?PR?_fft?MAIN
000000                 1006     _fft:
                       1007             USING   0
                       1008                             ; SOURCE LINE # 115
000000 8E00       F    1009             MOV     n?460,R6
000002 8F00       F    1010             MOV     n?460+01H,R7
000004 8B00       F    1011             MOV     A_re?461,R3
000006 8A00       F    1012             MOV     A_re?461+01H,R2
000008 8900       F    1013             MOV     A_re?461+02H,R1
                       1014     ; {
                       1015                             ; SOURCE LINE # 116
                       1016     ;       int idata w_re, w_im, u_re, u_im, t_re, t_im;
                       1017     ;       int idata m, g, b;
                       1018     ;       //int i;
                       1019     ;       int idata mt, k;
                       1020     ; 
                       1021     ;       /* for each stage */  
                       1022     ;       for (m=n; m>=2; m=m>>1) 
                       1023                             ; SOURCE LINE # 123
00000A 7800       F    1024             MOV     R0,#LOW (m?471)
00000C A600       F    1025             MOV     @R0,n?460
00000E 08              1026             INC     R0
00000F A600       F    1027             MOV     @R0,n?460+01H
000011                 1028     ?C0018:
000011 7800       F    1029             MOV     R0,#LOW (m?471)
000013 E6              1030             MOV     A,@R0
000014 FE              1031             MOV     R6,A
000015 08              1032             INC     R0
000016 E6              1033             MOV     A,@R0
000017 FF              1034             MOV     R7,A
000018 C3              1035             CLR     C
000019 9402            1036             SUBB    A,#02H
00001B EE              1037             MOV     A,R6
00001C 6480            1038             XRL     A,#080H
00001E 9480            1039             SUBB    A,#080H
AX51 MACRO ASSEMBLER  MAIN                                                                  05/10/09 15:50:48 PAGE    17

000020 5009            1040             JNC     $ + 0BH
                       1041             ;LJMP   ?C0027
000022 750000     F    1042             MOV ECO_PAGE_ADDR,#HIGH (?C0027)
000025 750000     F    1043         MOV ECO_PAGE_ADDR+01H,#LOW (?C0027)
000028 020000     E    1044         LJMP   eco_page_manager
                       1045     ;       {
                       1046                             ; SOURCE LINE # 124
                       1047     ;               /* m = n/2^s; mt = m/2; */
                       1048     ;               mt = m >> 1;
                       1049                             ; SOURCE LINE # 126
00002B EE              1050             MOV     A,R6
00002C A2E7            1051             MOV     C,ACC.7
00002E 13              1052             RRC     A
00002F 7900       F    1053             MOV     R1,#LOW (mt?474)
000031 F7              1054             MOV     @R1,A
000032 EF              1055             MOV     A,R7
000033 13              1056             RRC     A
000034 09              1057             INC     R1
000035 F7              1058             MOV     @R1,A
                       1059     ; 
                       1060     ;               /* for each group of butterfly */ 
                       1061     ;               for (g=0,k=0; g<n; g+=m,k++) 
                       1062                             ; SOURCE LINE # 129
000036 E4              1063             CLR     A
000037 08              1064             INC     R0
000038 F6              1065             MOV     @R0,A
000039 08              1066             INC     R0
00003A F6              1067             MOV     @R0,A
00003B 7800       F    1068             MOV     R0,#LOW (k?475)
00003D F6              1069             MOV     @R0,A
00003E 08              1070             INC     R0
00003F F6              1071             MOV     @R0,A
000040                 1072     ?C0021:
000040 C3              1073             CLR     C
000041 7800       F    1074             MOV     R0,#LOW (g?472+01H)
000043 E6              1075             MOV     A,@R0
000044 9500       F    1076             SUBB    A,n?460+01H
000046 E500       F    1077             MOV     A,n?460
000048 6480            1078             XRL     A,#080H
00004A F5F0            1079             MOV     B,A
00004C 18              1080             DEC     R0
00004D E6              1081             MOV     A,@R0
00004E 6480            1082             XRL     A,#080H
000050 95F0            1083             SUBB    A,B
000052 4009            1084             JC      $ + 0BH
                       1085             ;LJMP   ?C0020
000054 750000     F    1086             MOV ECO_PAGE_ADDR,#HIGH (?C0020)
000057 750000     F    1087         MOV ECO_PAGE_ADDR+01H,#LOW (?C0020)
00005A 020000     E    1088         LJMP   eco_page_manager
                       1089     ;               {
                       1090                             ; SOURCE LINE # 130
                       1091     ;                       /* each butterfly group uses only one root of unity. actually, i
                               t is the bitrev of this group's number k.
                       1092     ;                        * BUT 'bitrev' it as a log2n-1 bit number because we are using 
                               a lookup array of nth root of unity and
                       1093     ;                        * using cancellation lemma to scale nth root to n/2, n/4,... th
                                root.
                       1094     ;                        *
                       1095     ;                        * It turns out like the foll.
                       1096     ;                        *   w.re = W[bitrev(k, log2n-1)].re;
                       1097     ;                        *   w.im = W[bitrev(k, log2n-1)].im;
                       1098     ;                        * Still, we just use k, because the lookup array itself is bit-
                               reversal permuted. 
                       1099     ;                        */
                       1100     ;                       w_re = W_re[k];
                       1101                             ; SOURCE LINE # 140
AX51 MACRO ASSEMBLER  MAIN                                                                  05/10/09 15:50:48 PAGE    18

00005D 7800       F    1102             MOV     R0,#LOW (k?475+01H)
00005F E6              1103             MOV     A,@R0
000060 25E0            1104             ADD     A,ACC
000062 FF              1105             MOV     R7,A
000063 18              1106             DEC     R0
000064 E6              1107             MOV     A,@R0
000065 33              1108             RLC     A
000066 FE              1109             MOV     R6,A
000067 AB00       F    1110             MOV     R3,W_re?463
000069 AA00       F    1111             MOV     R2,W_re?463+01H
00006B A900       F    1112             MOV     R1,W_re?463+02H
00006D 8F82            1113             MOV     DPL,R7
00006F F583            1114             MOV     DPH,A
000071 120000     E    1115             LCALL   ?C?ILDOPTR
000074 7800       F    1116             MOV     R0,#LOW (w_re?465)
000076 A6F0            1117             MOV     @R0,B
000078 08              1118             INC     R0
000079 F6              1119             MOV     @R0,A
                       1120     ;                       w_im = W_im[k];
                       1121                             ; SOURCE LINE # 141
00007A AB00       F    1122             MOV     R3,W_im?464
00007C AA00       F    1123             MOV     R2,W_im?464+01H
00007E A900       F    1124             MOV     R1,W_im?464+02H
000080 8F82            1125             MOV     DPL,R7
000082 8E83            1126             MOV     DPH,R6
000084 120000     E    1127             LCALL   ?C?ILDOPTR
000087 7800       F    1128             MOV     R0,#LOW (w_im?466)
000089 A6F0            1129             MOV     @R0,B
00008B 08              1130             INC     R0
00008C F6              1131             MOV     @R0,A
                       1132     ; 
                       1133     ;                       /* for each butterfly */ 
                       1134     ;                       for (b=g; b<(g+mt); b++) 
                       1135                             ; SOURCE LINE # 144
00008D 7800       F    1136             MOV     R0,#LOW (g?472)
00008F E6              1137             MOV     A,@R0
000090 FE              1138             MOV     R6,A
000091 08              1139             INC     R0
000092 E6              1140             MOV     A,@R0
000093 FF              1141             MOV     R7,A
000094 08              1142             INC     R0
000095 A606            1143             MOV     @R0,AR6
000097 08              1144             INC     R0
000098 A607            1145             MOV     @R0,AR7
00009A                 1146     ?C0024:
00009A 7900       F    1147             MOV     R1,#LOW (g?472+01H)
00009C E7              1148             MOV     A,@R1
00009D 7800       F    1149             MOV     R0,#LOW (mt?474+01H)
00009F 26              1150             ADD     A,@R0
0000A0 FF              1151             MOV     R7,A
0000A1 19              1152             DEC     R1
0000A2 E7              1153             MOV     A,@R1
0000A3 18              1154             DEC     R0
0000A4 36              1155             ADDC    A,@R0
0000A5 FE              1156             MOV     R6,A
0000A6 C3              1157             CLR     C
0000A7 18              1158             DEC     R0
0000A8 E6              1159             MOV     A,@R0
0000A9 9F              1160             SUBB    A,R7
0000AA EE              1161             MOV     A,R6
0000AB 6480            1162             XRL     A,#080H
0000AD F5F0            1163             MOV     B,A
0000AF 18              1164             DEC     R0
0000B0 E6              1165             MOV     A,@R0
0000B1 6480            1166             XRL     A,#080H
0000B3 95F0            1167             SUBB    A,B
AX51 MACRO ASSEMBLER  MAIN                                                                  05/10/09 15:50:48 PAGE    19

0000B5 4009            1168             JC      $ + 0BH
                       1169             ;LJMP   ?C0023
0000B7 750000     F    1170             MOV ECO_PAGE_ADDR,#HIGH (?C0023)
0000BA 750000     F    1171         MOV ECO_PAGE_ADDR+01H,#LOW (?C0023)
0000BD 020000     E    1172         LJMP   eco_page_manager
                       1173     ;                       {
                       1174                             ; SOURCE LINE # 145
                       1175     ;                               /* printf("bf %d %d %d %f %f %f %f\n", m, g, b, A_re[b],
                                A_im[b], A_re[b+mt], A_im[b+mt]);
                       1176     ;                                */ 
                       1177     ;                               //printf("bf %d %d %d (u,t) %g %g %g %g (w) %g %g\n", m,
                                g, b, A_re[b], A_im[b], A_re[b+mt], A_im[b+mt], w_re, w_im);
                       1178     ; 
                       1179     ;                               /* t = w * A[b+mt] */
                       1180     ;                               t_re = w_re * A_re[b+mt] - w_im * A_im[b+mt];
                       1181                             ; SOURCE LINE # 151
0000C0 7900       F    1182             MOV     R1,#LOW (b?473+01H)
0000C2 E7              1183             MOV     A,@R1
0000C3 7800       F    1184             MOV     R0,#LOW (mt?474+01H)
0000C5 26              1185             ADD     A,@R0
0000C6 FF              1186             MOV     R7,A
0000C7 19              1187             DEC     R1
0000C8 E7              1188             MOV     A,@R1
0000C9 18              1189             DEC     R0
0000CA 36              1190             ADDC    A,@R0
0000CB FE              1191             MOV     R6,A
0000CC EF              1192             MOV     A,R7
0000CD 25E0            1193             ADD     A,ACC
0000CF FF              1194             MOV     R7,A
0000D0 EE              1195             MOV     A,R6
0000D1 33              1196             RLC     A
0000D2 AB00       F    1197             MOV     R3,A_im?462
0000D4 AA00       F    1198             MOV     R2,A_im?462+01H
0000D6 A900       F    1199             MOV     R1,A_im?462+02H
0000D8 8F82            1200             MOV     DPL,R7
0000DA F583            1201             MOV     DPH,A
0000DC 120000     E    1202             LCALL   ?C?ILDOPTR
                       1203             ;MOV    R5,A
                       1204             ;MOV    R4,B
0000DF 7800       E    1205             MOV R0,#LOW (ECO_PAGE_REGISTER5)
0000E1 F6              1206         MOV @R0,A
0000E2 7800       E    1207         MOV R0,#LOW (ECO_PAGE_REGISTER4)
0000E4 A6F0            1208         MOV @R0,B
                       1209         ;XRL    P0,#020H
                       1210     
                       1211         ;MOV ECO_PAGE_SPI_CONN,SPI_CTRL
0000E6 750000     F    1212         MOV ECO_PAGE_ADDR,#HIGH (_fft_2)
0000E9 750000     F    1213         MOV ECO_PAGE_ADDR+01H,#LOW (_fft_2)
0000EC 020000     E    1214         LJMP   eco_page_manager
                       1215     
                       1216     
------                 1217         RSEG  ?PR?_fft_2?MAIN
000000                 1218     _fft_2:
                       1219         USING   0
                       1220     
000000 7800       F    1221             MOV     R0,#LOW (w_im?466)
000002 E6              1222             MOV     A,@R0
000003 FE              1223             MOV     R6,A
000004 08              1224             INC     R0
000005 E6              1225             MOV     A,@R0
000006 FF              1226             MOV     R7,A
000007 120000     E    1227             LCALL   ?C?IMUL
00000A C006            1228             PUSH    AR6
00000C C007            1229             PUSH    AR7
00000E 7900       F    1230             MOV     R1,#LOW (b?473+01H)
000010 E7              1231             MOV     A,@R1
AX51 MACRO ASSEMBLER  MAIN                                                                  05/10/09 15:50:48 PAGE    20

000011 7800       F    1232             MOV     R0,#LOW (mt?474+01H)
000013 26              1233             ADD     A,@R0
000014 FF              1234             MOV     R7,A
000015 19              1235             DEC     R1
000016 E7              1236             MOV     A,@R1
000017 18              1237             DEC     R0
000018 36              1238             ADDC    A,@R0
000019 FE              1239             MOV     R6,A
00001A EF              1240             MOV     A,R7
00001B 25E0            1241             ADD     A,ACC
00001D FF              1242             MOV     R7,A
00001E EE              1243             MOV     A,R6
00001F 33              1244             RLC     A
000020 AB00       F    1245             MOV     R3,A_re?461
000022 AA00       F    1246             MOV     R2,A_re?461+01H
000024 A900       F    1247             MOV     R1,A_re?461+02H
000026 8F82            1248             MOV     DPL,R7
000028 F583            1249             MOV     DPH,A
00002A 120000     E    1250             LCALL   ?C?ILDOPTR
00002D FB              1251             MOV     R3,A
00002E AAF0            1252             MOV     R2,B
000030 7800       F    1253             MOV     R0,#LOW (w_re?465)
000032 E6              1254             MOV     A,@R0
000033 FE              1255             MOV     R6,A
000034 08              1256             INC     R0
000035 E6              1257             MOV     A,@R0
000036 FF              1258             MOV     R7,A
000037 AD03            1259             MOV     R5,AR3
000039 AC02            1260             MOV     R4,AR2
00003B 120000     E    1261             LCALL   ?C?IMUL
00003E AC06            1262             MOV     R4,AR6
000040 AD07            1263             MOV     R5,AR7
000042 D007            1264             POP     AR7
000044 D006            1265             POP     AR6
000046 C3              1266             CLR     C
000047 ED              1267             MOV     A,R5
000048 9F              1268             SUBB    A,R7
000049 7800       F    1269             MOV     R0,#LOW (t_re?469+01H)
00004B F6              1270             MOV     @R0,A
00004C EC              1271             MOV     A,R4
00004D 9E              1272             SUBB    A,R6
00004E 18              1273             DEC     R0
00004F F6              1274             MOV     @R0,A
                       1275     ;                               t_im = w_re * A_im[b+mt] + w_im * A_re[b+mt];
                       1276                             ; SOURCE LINE # 152
000050 7800       F    1277             MOV     R0,#LOW (w_im?466)
000052 E6              1278             MOV     A,@R0
000053 FE              1279             MOV     R6,A
000054 08              1280             INC     R0
000055 E6              1281             MOV     A,@R0
000056 FF              1282             MOV     R7,A
000057 AD03            1283             MOV     R5,AR3
000059 AC02            1284             MOV     R4,AR2
00005B 120000     E    1285             LCALL   ?C?IMUL
00005E C006            1286             PUSH    AR6
000060 C007            1287             PUSH    AR7
000062 7900       F    1288             MOV     R1,#LOW (b?473+01H)
000064 E7              1289             MOV     A,@R1
000065 7800       F    1290             MOV     R0,#LOW (mt?474+01H)
000067 26              1291             ADD     A,@R0
000068 FF              1292             MOV     R7,A
000069 19              1293             DEC     R1
00006A E7              1294             MOV     A,@R1
00006B 18              1295             DEC     R0
00006C 36              1296             ADDC    A,@R0
00006D FE              1297             MOV     R6,A
AX51 MACRO ASSEMBLER  MAIN                                                                  05/10/09 15:50:48 PAGE    21

00006E EF              1298             MOV     A,R7
00006F 25E0            1299             ADD     A,ACC
000071 FF              1300             MOV     R7,A
000072 EE              1301             MOV     A,R6
000073 33              1302             RLC     A
000074 AB00       F    1303             MOV     R3,A_im?462
000076 AA00       F    1304             MOV     R2,A_im?462+01H
000078 A900       F    1305             MOV     R1,A_im?462+02H
00007A 8F82            1306             MOV     DPL,R7
00007C F583            1307             MOV     DPH,A
00007E 120000     E    1308             LCALL   ?C?ILDOPTR
000081 FD              1309             MOV     R5,A
000082 ACF0            1310             MOV     R4,B
000084 7800       F    1311             MOV     R0,#LOW (w_re?465)
000086 E6              1312             MOV     A,@R0
000087 FE              1313             MOV     R6,A
000088 08              1314             INC     R0
000089 E6              1315             MOV     A,@R0
00008A FF              1316             MOV     R7,A
00008B 120000     E    1317             LCALL   ?C?IMUL
00008E D0E0            1318             POP     ACC
000090 2F              1319             ADD     A,R7
000091 7800       F    1320             MOV     R0,#LOW (t_im?470+01H)
000093 F6              1321             MOV     @R0,A
000094 D0E0            1322             POP     ACC
000096 3E              1323             ADDC    A,R6
000097 18              1324             DEC     R0
000098 F6              1325             MOV     @R0,A
                       1326     ; 
                       1327     ;                               /* u = A[b]; in[b] = u + t; in[b+mt] = u - t; */
                       1328     ;                               u_re = A_re[b];
                       1329                             ; SOURCE LINE # 155
000099 7800       F    1330             MOV     R0,#LOW (b?473+01H)
00009B E6              1331             MOV     A,@R0
00009C 25E0            1332             ADD     A,ACC
00009E FF              1333             MOV     R7,A
00009F 18              1334             DEC     R0
0000A0 E6              1335             MOV     A,@R0
0000A1 33              1336             RLC     A
0000A2 FE              1337             MOV     R6,A
0000A3 AB00       F    1338             MOV     R3,A_re?461
0000A5 AA00       F    1339             MOV     R2,A_re?461+01H
0000A7 A900       F    1340             MOV     R1,A_re?461+02H
0000A9 8F82            1341             MOV     DPL,R7
0000AB F583            1342             MOV     DPH,A
0000AD 120000     E    1343             LCALL   ?C?ILDOPTR
0000B0 7800       F    1344             MOV     R0,#LOW (u_re?467)
0000B2 A6F0            1345             MOV     @R0,B
0000B4 08              1346             INC     R0
0000B5 F6              1347             MOV     @R0,A
                       1348     ;                               u_im = A_im[b];
                       1349                             ; SOURCE LINE # 156
0000B6 AB00       F    1350             MOV     R3,A_im?462
0000B8 AA00       F    1351             MOV     R2,A_im?462+01H
0000BA A900       F    1352             MOV     R1,A_im?462+02H
0000BC 8F82            1353             MOV     DPL,R7
0000BE 8E83            1354             MOV     DPH,R6
0000C0 120000     E    1355             LCALL   ?C?ILDOPTR
0000C3 7800       F    1356             MOV     R0,#LOW (u_im?468)
0000C5 A6F0            1357             MOV     @R0,B
0000C7 08              1358             INC     R0
0000C8 F6              1359             MOV     @R0,A
                       1360     ;                               A_re[b] = u_re + t_re;
                       1361                             ; SOURCE LINE # 157
0000C9 7900       F    1362             MOV     R1,#LOW (u_re?467+01H)
0000CB E7              1363             MOV     A,@R1
AX51 MACRO ASSEMBLER  MAIN                                                                  05/10/09 15:50:48 PAGE    22

0000CC 7800       F    1364             MOV     R0,#LOW (t_re?469+01H)
0000CE 26              1365             ADD     A,@R0
0000CF FD              1366             MOV     R5,A
0000D0 19              1367             DEC     R1
0000D1 E7              1368             MOV     A,@R1
0000D2 18              1369             DEC     R0
0000D3 36              1370             ADDC    A,@R0
0000D4 FC              1371             MOV     R4,A
0000D5 7800       F    1372             MOV     R0,#LOW (b?473+01H)
0000D7 E6              1373             MOV     A,@R0
0000D8 25E0            1374             ADD     A,ACC
0000DA FF              1375             MOV     R7,A
0000DB 18              1376             DEC     R0
0000DC E6              1377             MOV     A,@R0
0000DD 33              1378             RLC     A
0000DE AB00       F    1379             MOV     R3,A_re?461
0000E0 AA00       F    1380             MOV     R2,A_re?461+01H
0000E2 A900       F    1381             MOV     R1,A_re?461+02H
0000E4 8F82            1382             MOV     DPL,R7
0000E6 F583            1383             MOV     DPH,A
0000E8 EC              1384             MOV     A,R4
0000E9 8DF0            1385             MOV     B,R5
0000EB 120000     E    1386             LCALL   ?C?ISTOPTR
                       1387     ;                               A_im[b] = u_im + t_im;
                       1388                             ; SOURCE LINE # 158
                       1389     
0000EE 750000     F    1390             MOV ECO_PAGE_ADDR,#HIGH (_fft_3)
0000F1 750000     F    1391         MOV ECO_PAGE_ADDR+01H,#LOW (_fft_3)
0000F4 020000     E    1392         LJMP   eco_page_manager
                       1393     
                       1394     
------                 1395         RSEG  ?PR?_fft_3?MAIN
000000                 1396     _fft_3:
                       1397         USING   0
                       1398     
000000 7900       F    1399             MOV     R1,#LOW (u_im?468+01H)
000002 E7              1400             MOV     A,@R1
000003 7800       F    1401             MOV     R0,#LOW (t_im?470+01H)
000005 26              1402             ADD     A,@R0
000006 FD              1403             MOV     R5,A
000007 19              1404             DEC     R1
000008 E7              1405             MOV     A,@R1
000009 18              1406             DEC     R0
00000A 36              1407             ADDC    A,@R0
00000B FC              1408             MOV     R4,A
00000C 7800       F    1409             MOV     R0,#LOW (b?473+01H)
00000E E6              1410             MOV     A,@R0
00000F 25E0            1411             ADD     A,ACC
000011 FF              1412             MOV     R7,A
000012 18              1413             DEC     R0
000013 E6              1414             MOV     A,@R0
000014 33              1415             RLC     A
000015 AB00       F    1416             MOV     R3,A_im?462
000017 AA00       F    1417             MOV     R2,A_im?462+01H
000019 A900       F    1418             MOV     R1,A_im?462+02H
00001B 8F82            1419             MOV     DPL,R7
00001D F583            1420             MOV     DPH,A
00001F EC              1421             MOV     A,R4
000020 8DF0            1422             MOV     B,R5
000022 120000     E    1423             LCALL   ?C?ISTOPTR
                       1424     ;                               A_re[b+mt] = u_re - t_re;
                       1425                             ; SOURCE LINE # 159
000025 C3              1426             CLR     C
000026 7900       F    1427             MOV     R1,#LOW (u_re?467+01H)
000028 E7              1428             MOV     A,@R1
000029 7800       F    1429             MOV     R0,#LOW (t_re?469+01H)
AX51 MACRO ASSEMBLER  MAIN                                                                  05/10/09 15:50:48 PAGE    23

00002B 96              1430             SUBB    A,@R0
00002C FD              1431             MOV     R5,A
00002D 19              1432             DEC     R1
00002E E7              1433             MOV     A,@R1
00002F 18              1434             DEC     R0
000030 96              1435             SUBB    A,@R0
000031 FC              1436             MOV     R4,A
000032 7900       F    1437             MOV     R1,#LOW (b?473+01H)
000034 E7              1438             MOV     A,@R1
000035 7800       F    1439             MOV     R0,#LOW (mt?474+01H)
000037 26              1440             ADD     A,@R0
000038 FF              1441             MOV     R7,A
000039 19              1442             DEC     R1
00003A E7              1443             MOV     A,@R1
00003B 18              1444             DEC     R0
00003C 36              1445             ADDC    A,@R0
00003D FE              1446             MOV     R6,A
00003E EF              1447             MOV     A,R7
00003F 25E0            1448             ADD     A,ACC
000041 FF              1449             MOV     R7,A
000042 EE              1450             MOV     A,R6
000043 33              1451             RLC     A
000044 AB00       F    1452             MOV     R3,A_re?461
000046 AA00       F    1453             MOV     R2,A_re?461+01H
000048 A900       F    1454             MOV     R1,A_re?461+02H
00004A 8F82            1455             MOV     DPL,R7
00004C F583            1456             MOV     DPH,A
00004E EC              1457             MOV     A,R4
00004F 8DF0            1458             MOV     B,R5
000051 120000     E    1459             LCALL   ?C?ISTOPTR
                       1460     ;                               A_im[b+mt] = u_im - t_im;
                       1461                             ; SOURCE LINE # 160
000054 C3              1462             CLR     C
000055 7900       F    1463             MOV     R1,#LOW (u_im?468+01H)
000057 E7              1464             MOV     A,@R1
000058 7800       F    1465             MOV     R0,#LOW (t_im?470+01H)
00005A 96              1466             SUBB    A,@R0
00005B FD              1467             MOV     R5,A
00005C 19              1468             DEC     R1
00005D E7              1469             MOV     A,@R1
00005E 18              1470             DEC     R0
00005F 96              1471             SUBB    A,@R0
000060 FC              1472             MOV     R4,A
000061 7900       F    1473             MOV     R1,#LOW (b?473+01H)
000063 E7              1474             MOV     A,@R1
000064 7800       F    1475             MOV     R0,#LOW (mt?474+01H)
000066 26              1476             ADD     A,@R0
000067 FF              1477             MOV     R7,A
000068 19              1478             DEC     R1
000069 E7              1479             MOV     A,@R1
00006A 18              1480             DEC     R0
00006B 36              1481             ADDC    A,@R0
00006C FE              1482             MOV     R6,A
00006D EF              1483             MOV     A,R7
00006E 25E0            1484             ADD     A,ACC
000070 FF              1485             MOV     R7,A
000071 EE              1486             MOV     A,R6
000072 33              1487             RLC     A
000073 AB00       F    1488             MOV     R3,A_im?462
000075 AA00       F    1489             MOV     R2,A_im?462+01H
000077 A900       F    1490             MOV     R1,A_im?462+02H
000079 8F82            1491             MOV     DPL,R7
00007B F583            1492             MOV     DPH,A
00007D EC              1493             MOV     A,R4
00007E 8DF0            1494             MOV     B,R5
000080 120000     E    1495             LCALL   ?C?ISTOPTR
AX51 MACRO ASSEMBLER  MAIN                                                                  05/10/09 15:50:48 PAGE    24

                       1496     ; 
                       1497     ;                               /*  printf("af %d %d %d %f %f %f %f\n", m, g, b, A_re[b]
                               , A_im[b], A_re[b+mt], A_im[b+mt]);
                       1498     ;                                */         
                       1499     ;                               //printf("af %d %d %d (u,t) %g %g %g %g (w) %g %g\n", m,
                                g, b, A_re[b], A_im[b], A_re[b+mt], A_im[b+mt], w_re, w_im);
                       1500     ;                       }
                       1501                             ; SOURCE LINE # 165
000083 7800       F    1502             MOV     R0,#LOW (b?473+01H)
000085 06              1503             INC     @R0
000086 E6              1504             MOV     A,@R0
000087 18              1505             DEC     R0
000088 7001            1506             JNZ     ?C0038
00008A 06              1507             INC     @R0
00008B                 1508     ?C0038:
                       1509             ;LJMP   ?C0024
00008B 750000     F    1510             MOV ECO_PAGE_ADDR,#HIGH (?C0024)
00008E 750000     F    1511         MOV ECO_PAGE_ADDR+01H,#LOW (?C0024)
000091 020000     E    1512         LJMP   eco_page_manager
                       1513     ;               }
                       1514                             ; SOURCE LINE # 166
000094                 1515     ?C0023:
000094 7800       F    1516             MOV     R0,#LOW (m?471)
000096 E6              1517             MOV     A,@R0
000097 FE              1518             MOV     R6,A
000098 08              1519             INC     R0
000099 E6              1520             MOV     A,@R0
00009A 7800       F    1521             MOV     R0,#LOW (g?472+01H)
00009C 26              1522             ADD     A,@R0
00009D F6              1523             MOV     @R0,A
00009E 18              1524             DEC     R0
00009F EE              1525             MOV     A,R6
0000A0 36              1526             ADDC    A,@R0
0000A1 F6              1527             MOV     @R0,A
0000A2 7800       F    1528             MOV     R0,#LOW (k?475+01H)
0000A4 06              1529             INC     @R0
0000A5 E6              1530             MOV     A,@R0
0000A6 18              1531             DEC     R0
0000A7 6009            1532             JZ      $ + 0BH
                       1533             ;LJMP   ?C0021
0000A9 750000     F    1534             MOV ECO_PAGE_ADDR,#HIGH (?C0021)
0000AC 750000     F    1535         MOV ECO_PAGE_ADDR+01H,#LOW (?C0021)
0000AF 020000     E    1536         LJMP   eco_page_manager
0000B2 06              1537             INC     @R0
0000B3                 1538     ?C0039:
                       1539             ;LJMP   ?C0021
0000B3 750000     F    1540             MOV ECO_PAGE_ADDR,#HIGH (?C0021)
0000B6 750000     F    1541         MOV ECO_PAGE_ADDR+01H,#LOW (?C0021)
0000B9 020000     E    1542         LJMP   eco_page_manager
                       1543     ;       }
                       1544                             ; SOURCE LINE # 167
0000BC                 1545     ?C0020:
0000BC 7800       F    1546             MOV     R0,#LOW (m?471)
0000BE E6              1547             MOV     A,@R0
0000BF A2E7            1548             MOV     C,ACC.7
0000C1 13              1549             RRC     A
0000C2 7900       F    1550             MOV     R1,#LOW (m?471)
0000C4 F7              1551             MOV     @R1,A
0000C5 08              1552             INC     R0
0000C6 E6              1553             MOV     A,@R0
0000C7 13              1554             RRC     A
0000C8 09              1555             INC     R1
0000C9 F7              1556             MOV     @R1,A
                       1557             ;LJMP   ?C0018
0000CA 750000     F    1558             MOV ECO_PAGE_ADDR,#HIGH (?C0018)
0000CD 750000     F    1559         MOV ECO_PAGE_ADDR+01H,#LOW (?C0018)
AX51 MACRO ASSEMBLER  MAIN                                                                  05/10/09 15:50:48 PAGE    25

0000D0 020000     E    1560         LJMP   eco_page_manager
                       1561     ; }
                       1562                             ; SOURCE LINE # 168
0000D3                 1563     ?C0027:
0000D3 22              1564             RET     
                       1565     ; END OF _fft
                       1566     
                       1567     ; 
                       1568     ; int main()
                       1569     
------                 1570             RSEG  ?PR?main?MAIN
000000                 1571     main:
                       1572             USING   0
                       1573                             ; SOURCE LINE # 170
                       1574     ; {
                       1575                             ; SOURCE LINE # 171
                       1576     ;       int idata n;
                       1577     ;       //int idata i;
                       1578     ;       int idata A_re[8];
                       1579     ;       int idata A_im[8];
                       1580     ;       int idata W_re[4];
                       1581     ;       int idata W_im[4]; 
                       1582     ;       //int idata A_re[16];
                       1583     ;       //int idata A_im[16];
                       1584     ;       //int idata W_re[8];
                       1585     ;       //int idata W_im[8]; 
                       1586     ; 
                       1587     ;       store_cpu_rate(16);
                       1588                             ; SOURCE LINE # 183
000000 7F10            1589             MOV     R7,#010H
000002 7E00            1590             MOV     R6,#00H
000004 120000     E    1591             LCALL   _store_cpu_rate
                       1592     ; 
                       1593     ;       P0_DIR &= ~0x28;
                       1594                             ; SOURCE LINE # 185
000007 5394D7          1595             ANL     P0_DIR,#0D7H
                       1596     ;       P0_ALT &= ~0x28;
                       1597                             ; SOURCE LINE # 186
00000A 5395D7          1598             ANL     P0_ALT,#0D7H
                       1599     ; 
                       1600     ;       test_counter = 0;       
                       1601                             ; SOURCE LINE # 188
00000D E4              1602             CLR     A
00000E F500       F    1603             MOV     test_counter,A
000010 F500       F    1604             MOV     test_counter+01H,A
                       1605     ; 
                       1606     ;       serial_init(19200);
                       1607                             ; SOURCE LINE # 190
000012 FF              1608             MOV     R7,A
000013 7E4B            1609             MOV     R6,#04BH
000015 120000     E    1610             LCALL   _serial_init
                       1611     ;       int_print(test_counter);
                       1612                             ; SOURCE LINE # 191
000018 AE00       F    1613             MOV     R6,test_counter
00001A AF00       F    1614             MOV     R7,test_counter+01H
00001C 120000     E    1615             LCALL   _?int_print
                       1616     ;       puts("\r\n");   
                       1617                             ; SOURCE LINE # 192
00001F 7BFF            1618             MOV     R3,#0FFH
000021 7A00       F    1619             MOV     R2,#HIGH (?SC_0)
000023 7900       F    1620             MOV     R1,#LOW (?SC_0)
000025 120000     E    1621             LCALL   _puts
                       1622     ;       for(n=0;n<6;n++)
                       1623                             ; SOURCE LINE # 193
000028 E4              1624             CLR     A
000029 7800       F    1625             MOV     R0,#LOW (n?576)
AX51 MACRO ASSEMBLER  MAIN                                                                  05/10/09 15:50:48 PAGE    26

00002B F6              1626             MOV     @R0,A
00002C 08              1627             INC     R0
00002D F6              1628             MOV     @R0,A
00002E                 1629     ?C0028:
                       1630     ;       {
                       1631                             ; SOURCE LINE # 194
                       1632     ;               blink_led();
                       1633                             ; SOURCE LINE # 195
00002E 638020          1634             XRL     P0,#020H
                       1635     ;               mdelay(400);
                       1636                             ; SOURCE LINE # 196
000031 7F90            1637             MOV     R7,#090H
000033 7E01            1638             MOV     R6,#01H
000035 120000     E    1639             LCALL   _mdelay
                       1640     ;       }
                       1641                             ; SOURCE LINE # 197
000038 7800       F    1642             MOV     R0,#LOW (n?576+01H)
00003A 06              1643             INC     @R0
00003B E6              1644             MOV     A,@R0
00003C 18              1645             DEC     R0
00003D 7001            1646             JNZ     ?C0040
00003F 06              1647             INC     @R0
000040                 1648     ?C0040:
000040 C3              1649             CLR     C
000041 7800       F    1650             MOV     R0,#LOW (n?576+01H)
000043 E6              1651             MOV     A,@R0
000044 9406            1652             SUBB    A,#06H
000046 18              1653             DEC     R0
000047 E6              1654             MOV     A,@R0
000048 6480            1655             XRL     A,#080H
00004A 9480            1656             SUBB    A,#080H
00004C 40E0            1657             JC      ?C0028
00004E                 1658     ?C0031:
                       1659     ;       //A_re = (double*)malloc(sizeof(double)*n); 
                       1660     ;       //A_im = (double*)malloc(sizeof(double)*n); 
                       1661     ;       //W_re = (double*)malloc(sizeof(double)*n/2); 
                       1662     ;       //W_im = (double*)malloc(sizeof(double)*n/2); 
                       1663     ;       //assert(A_re != NULL && A_im != NULL && W_re != NULL && W_im != NULL); 
                       1664     ;       
                       1665     ;       while(1)
                       1666                             ; SOURCE LINE # 204
                       1667     ;       {
                       1668                             ; SOURCE LINE # 205
                       1669     ;       //for (i=0; i<3; i++) {
                       1670     ;               //init_array(n, A_re, A_im); 
                       1671     ;               n = 8;
                       1672                             ; SOURCE LINE # 208
00004E 7800       F    1673             MOV     R0,#LOW (n?576)
000050 7600            1674             MOV     @R0,#00H
000052 08              1675             INC     R0
000053 7608            1676             MOV     @R0,#08H
                       1677     ; 
                       1678     ;               compute_W(n, W_re, W_im); 
                       1679                             ; SOURCE LINE # 210
000055 750000     F    1680             MOV     ?_compute_W?BYTE+05H,#00H
000058 750000     F    1681             MOV     ?_compute_W?BYTE+06H,#HIGH (W_im?580)
00005B 750000     F    1682             MOV     ?_compute_W?BYTE+07H,#LOW (W_im?580)
                       1683             ;MOV    R3,#00H
                       1684             ;MOV    R2,#HIGH (W_re?579)
                       1685             ;MOV    R1,#LOW (W_re?579)
                       1686             ;MOV    R7,#08H
                       1687             ;MOV    R6,#00H
                       1688     
00005E 7800       E    1689             MOV R0,#LOW (ECO_PAGE_REGISTER3)
000060 7600            1690         MOV @R0,#00H
                       1691     
AX51 MACRO ASSEMBLER  MAIN                                                                  05/10/09 15:50:48 PAGE    27

000062 7800       E    1692         MOV R0,#LOW (ECO_PAGE_REGISTER2)
000064 7600       F    1693         MOV @R0,#HIGH (W_re?579)
                       1694     
000066 7800       E    1695         MOV R0,#LOW (ECO_PAGE_REGISTER1)
000068 7600       F    1696         MOV @R0,#LOW (W_re?579)
                       1697     
00006A 7800       E    1698             MOV R0,#LOW (ECO_PAGE_REGISTER7)
00006C 7608            1699         MOV @R0,#08H
                       1700     
00006E 7800       E    1701         MOV R0,#LOW (ECO_PAGE_REGISTER6)
000070 7600            1702         MOV @R0,#00H
                       1703     
                       1704             ;LCALL  _compute_W
000072 85B300     E    1705             MOV ECO_PAGE_SPI_CONN,SPI_CTRL
000075 750000     F    1706         MOV ECO_PAGE_ADDR,#HIGH (_compute_W)
000078 750000     F    1707         MOV ECO_PAGE_ADDR+01H,#LOW (_compute_W)
00007B 120000     E    1708         LCALL   eco_page_manager
                       1709     ;               fft(n, A_re, A_im, W_re, W_im);
                       1710                             ; SOURCE LINE # 211
00007E 7800       F    1711             MOV     R0,#LOW (n?576)
000080 E6              1712             MOV     A,@R0
000081 FE              1713             MOV     R6,A
000082 08              1714             INC     R0
000083 E6              1715             MOV     A,@R0
000084 FF              1716             MOV     R7,A
                       1717     
000085 7800       E    1718             MOV R0,#LOW (ECO_PAGE_REGISTER6)
000087 EE              1719         MOV A,R6
000088 F6              1720         MOV @R0,A
000089 7800       E    1721         MOV R0,#LOW (ECO_PAGE_REGISTER7)
00008B EF              1722         MOV A,R7
00008C F6              1723         MOV @R0,A
                       1724     
00008D 750000     F    1725             MOV     ?_fft?BYTE+05H,#00H
000090 750000     F    1726             MOV     ?_fft?BYTE+06H,#HIGH (A_im?578)
000093 750000     F    1727             MOV     ?_fft?BYTE+07H,#LOW (A_im?578)
000096 750000     F    1728             MOV     ?_fft?BYTE+08H,#00H
000099 750000     F    1729             MOV     ?_fft?BYTE+09H,#HIGH (W_re?579)
00009C 750000     F    1730             MOV     ?_fft?BYTE+0AH,#LOW (W_re?579)
00009F 750000     F    1731             MOV     ?_fft?BYTE+0BH,#00H
0000A2 750000     F    1732             MOV     ?_fft?BYTE+0CH,#HIGH (W_im?580)
0000A5 750000     F    1733             MOV     ?_fft?BYTE+0DH,#LOW (W_im?580)
                       1734             ;MOV    R3,#00H
                       1735             ;MOV    R2,#HIGH (A_re?577)
                       1736             ;MOV    R1,#LOW (A_re?577)
0000A8 7800       E    1737             MOV R0,#LOW (ECO_PAGE_REGISTER3)
0000AA 7600            1738         MOV @R0,#00H
                       1739     
0000AC 7800       E    1740         MOV R0,#LOW (ECO_PAGE_REGISTER2)
0000AE 7600       F    1741         MOV @R0,#HIGH (A_re?577)
                       1742     
0000B0 7800       E    1743         MOV R0,#LOW (ECO_PAGE_REGISTER1)
0000B2 7600       F    1744         MOV @R0,#LOW (A_re?577)
                       1745             ;LCALL  _fft
0000B4 85B300     E    1746             MOV ECO_PAGE_SPI_CONN,SPI_CTRL
0000B7 750000     F    1747         MOV ECO_PAGE_ADDR,#HIGH (_fft)
0000BA 750000     F    1748         MOV ECO_PAGE_ADDR+01H,#LOW (_fft)
0000BD 120000     E    1749         LCALL   eco_page_manager
                       1750     
                       1751     ;               permute_bitrev(n, A_re, A_im);
                       1752                             ; SOURCE LINE # 212
0000C0 7800       F    1753             MOV     R0,#LOW (n?576)
0000C2 E6              1754             MOV     A,@R0
0000C3 FE              1755             MOV     R6,A
0000C4 08              1756             INC     R0
0000C5 E6              1757             MOV     A,@R0
AX51 MACRO ASSEMBLER  MAIN                                                                  05/10/09 15:50:48 PAGE    28

0000C6 FF              1758             MOV     R7,A
                       1759     
0000C7 7800       E    1760             MOV R0,#LOW (ECO_PAGE_REGISTER6)
0000C9 EE              1761         MOV A,R6
0000CA F6              1762         MOV @R0,A
0000CB 7800       E    1763         MOV R0,#LOW (ECO_PAGE_REGISTER7)
0000CD EF              1764         MOV A,R7
0000CE F6              1765         MOV @R0,A
                       1766     
0000CF 750000     F    1767             MOV     ?_permute_bitrev?BYTE+05H,#00H
0000D2 750000     F    1768             MOV     ?_permute_bitrev?BYTE+06H,#HIGH (A_im?578)
0000D5 750000     F    1769             MOV     ?_permute_bitrev?BYTE+07H,#LOW (A_im?578)
                       1770             ;MOV    R3,#00H
                       1771             ;MOV    R2,#HIGH (A_re?577)
                       1772             ;MOV    R1,#LOW (A_re?577)
0000D8 7800       E    1773             MOV R0,#LOW (ECO_PAGE_REGISTER3)
0000DA 7600            1774         MOV @R0,#00H
                       1775     
0000DC 7800       E    1776         MOV R0,#LOW (ECO_PAGE_REGISTER2)
0000DE 7600       F    1777         MOV @R0,#HIGH (A_re?577)
                       1778     
0000E0 7800       E    1779         MOV R0,#LOW (ECO_PAGE_REGISTER1)
0000E2 7600       F    1780         MOV @R0,#LOW (A_re?577)
                       1781             ;LCALL  _permute_bitrev
0000E4 85B300     E    1782             MOV ECO_PAGE_SPI_CONN,SPI_CTRL
0000E7 750000     F    1783         MOV ECO_PAGE_ADDR,#HIGH (_permute_bitrev)
0000EA 750000     F    1784         MOV ECO_PAGE_ADDR+01H,#LOW (_permute_bitrev)
0000ED 120000     E    1785         LCALL   eco_page_manager
                       1786     ; 
                       1787     ;               blink_led();
                       1788                             ; SOURCE LINE # 214
                       1789             ;XRL    P0,#020H
                       1790     ;               mdelay(100);
                       1791                             ; SOURCE LINE # 215
                       1792             ;MOV    R7,#064H
                       1793             ;MOV    R6,#00H
                       1794             ;LCALL  _mdelay
                       1795     ; 
                       1796     ;               test_counter++;
                       1797                             ; SOURCE LINE # 217
0000F0 0500       F    1798             INC     test_counter+01H
0000F2 E500       F    1799             MOV     A,test_counter+01H
0000F4 7002            1800             JNZ     ?C0041
0000F6 0500       F    1801             INC     test_counter
0000F8                 1802     ?C0041:
                       1803     ; 
                       1804     ;               int_print(test_counter);
                       1805                             ; SOURCE LINE # 219
0000F8 AE00       F    1806             MOV     R6,test_counter
0000FA AF00       F    1807             MOV     R7,test_counter+01H
0000FC 120000     E    1808             LCALL   _?int_print
                       1809     ;               puts("\r\n");
                       1810                             ; SOURCE LINE # 220
0000FF 7BFF            1811             MOV     R3,#0FFH
000101 7A00       F    1812             MOV     R2,#HIGH (?SC_0)
000103 7900       F    1813             MOV     R1,#LOW (?SC_0)
000105 120000     E    1814             LCALL   _puts
                       1815     ;       //}
                       1816     ;       }
                       1817                             ; SOURCE LINE # 222
000108 020000     F    1818             LJMP    ?C0031
                       1819     ; END OF main
                       1820     
                       1821             END
AX51 MACRO ASSEMBLER  MAIN                                                                  05/10/09 15:50:48 PAGE    29

SYMBOL TABLE LISTING
------ ----- -------


N A M E                                    T Y P E  V A L U E     ATTRIBUTES

?_BITREV?BYTE . . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?_BITREV?MAIN
?_COMPUTE_W?BYTE. . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?_COMPUTE_W?MAIN
?_FFT?BYTE. . . . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?_FFT?MAIN
?_PERMUTE_BITREV?BYTE . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?_PERMUTE_BITREV?MAIN
?C0001. . . . . . . . . . . . . . . . .    C  ADDR  0013H     R   SEG=?PR?_BITREV?MAIN
?C0002. . . . . . . . . . . . . . . . .    C  ADDR  004DH     R   SEG=?PR?_BITREV?MAIN
?C0004. . . . . . . . . . . . . . . . .    C  ADDR  0054H     R   SEG=?PR?_BITREV?MAIN
?C0005. . . . . . . . . . . . . . . . .    C  ADDR  0006H     R   SEG=?PR?_LOG_2?MAIN
?C0006. . . . . . . . . . . . . . . . .    C  ADDR  0023H     R   SEG=?PR?_LOG_2?MAIN
?C0008. . . . . . . . . . . . . . . . .    C  ADDR  002AH     R   SEG=?PR?_LOG_2?MAIN
?C0009. . . . . . . . . . . . . . . . .    C  ADDR  0017H     R   SEG=?PR?_COMPUTE_W?MAIN
?C0012. . . . . . . . . . . . . . . . .    C  ADDR  00ECH     R   SEG=?PR?_COMPUTE_W?MAIN
?C0013. . . . . . . . . . . . . . . . .    C  ADDR  001AH     R   SEG=?PR?_PERMUTE_BITREV?MAIN
?C0015. . . . . . . . . . . . . . . . .    C  ADDR  00A0H     R   SEG=?PR?_PERMUTE_BITREV_2?MAIN
?C0016. . . . . . . . . . . . . . . . .    C  ADDR  0066H     R   SEG=?PR?_PERMUTE_BITREV?MAIN
?C0017. . . . . . . . . . . . . . . . .    C  ADDR  00BAH     R   SEG=?PR?_PERMUTE_BITREV_2?MAIN
?C0018. . . . . . . . . . . . . . . . .    C  ADDR  0011H     R   SEG=?PR?_FFT?MAIN
?C0020. . . . . . . . . . . . . . . . .    C  ADDR  00BCH     R   SEG=?PR?_FFT_3?MAIN
?C0021. . . . . . . . . . . . . . . . .    C  ADDR  0040H     R   SEG=?PR?_FFT?MAIN
?C0023. . . . . . . . . . . . . . . . .    C  ADDR  0094H     R   SEG=?PR?_FFT_3?MAIN
?C0024. . . . . . . . . . . . . . . . .    C  ADDR  009AH     R   SEG=?PR?_FFT?MAIN
?C0027. . . . . . . . . . . . . . . . .    C  ADDR  00D3H     R   SEG=?PR?_FFT_3?MAIN
?C0028. . . . . . . . . . . . . . . . .    C  ADDR  002EH     R   SEG=?PR?MAIN?MAIN
?C0031. . . . . . . . . . . . . . . . .    C  ADDR  004EH     R   SEG=?PR?MAIN?MAIN
?C0034. . . . . . . . . . . . . . . . .    C  ADDR  004BH     R   SEG=?PR?_BITREV?MAIN
?C0035. . . . . . . . . . . . . . . . .    C  ADDR  0021H     R   SEG=?PR?_LOG_2?MAIN
?C0036. . . . . . . . . . . . . . . . .    C  ADDR  00E3H     R   SEG=?PR?_COMPUTE_W?MAIN
?C0037. . . . . . . . . . . . . . . . .    C  ADDR  00B1H     R   SEG=?PR?_PERMUTE_BITREV_2?MAIN
?C0038. . . . . . . . . . . . . . . . .    C  ADDR  008BH     R   SEG=?PR?_FFT_3?MAIN
?C0039. . . . . . . . . . . . . . . . .    C  ADDR  00B3H     R   SEG=?PR?_FFT_3?MAIN
?C0040. . . . . . . . . . . . . . . . .    C  ADDR  0040H     R   SEG=?PR?MAIN?MAIN
?C0041. . . . . . . . . . . . . . . . .    C  ADDR  00F8H     R   SEG=?PR?MAIN?MAIN
?C?CASTF. . . . . . . . . . . . . . . .    C  ADDR  -------       EXT
?C?FCASTI . . . . . . . . . . . . . . .    C  ADDR  -------       EXT
?C?ILDOPTR. . . . . . . . . . . . . . .    C  ADDR  -------       EXT
?C?IMUL . . . . . . . . . . . . . . . .    C  ADDR  -------       EXT
?C?ISTOPTR. . . . . . . . . . . . . . .    C  ADDR  -------       EXT
?C?SIDIV. . . . . . . . . . . . . . . .    C  ADDR  -------       EXT
?C_STARTUP. . . . . . . . . . . . . . .    C  ADDR  -------       EXT
?CO?MAIN. . . . . . . . . . . . . . . .    C  SEG   000003H       REL=UNIT, ALN=BYTE
?DT?_BITREV?MAIN. . . . . . . . . . . .    D  SEG   000002H       REL=UNIT, ALN=BYTE
?DT?_COMPUTE_W?MAIN . . . . . . . . . .    D  SEG   00000AH       REL=UNIT, ALN=BYTE
?DT?_FFT?MAIN . . . . . . . . . . . . .    D  SEG   00000EH       REL=UNIT, ALN=BYTE
?DT?_PERMUTE_BITREV?MAIN. . . . . . . .    D  SEG   000008H       REL=UNIT, ALN=BYTE
?DT?MAIN. . . . . . . . . . . . . . . .    D  SEG   000002H       REL=UNIT, ALN=BYTE
?ID?_BITREV?MAIN. . . . . . . . . . . .    I  SEG   000004H       REL=UNIT, ALN=BYTE
?ID?_COMPUTE_W?MAIN . . . . . . . . . .    I  SEG   000004H       REL=UNIT, ALN=BYTE
?ID?_FFT?MAIN . . . . . . . . . . . . .    I  SEG   000016H       REL=UNIT, ALN=BYTE
?ID?_LOG_2?MAIN . . . . . . . . . . . .    I  SEG   000002H       REL=UNIT, ALN=BYTE
?ID?_PERMUTE_BITREV?MAIN. . . . . . . .    I  SEG   00000AH       REL=UNIT, ALN=BYTE
?ID?MAIN?MAIN . . . . . . . . . . . . .    I  SEG   000032H       REL=UNIT, ALN=BYTE
?PR?_BITREV?MAIN. . . . . . . . . . . .    C  SEG   000055H       REL=UNIT, ALN=BYTE
?PR?_COMPUTE_W?MAIN . . . . . . . . . .    C  SEG   0000EDH       REL=UNIT, ALN=BYTE
?PR?_FFT?MAIN . . . . . . . . . . . . .    C  SEG   0000EFH       REL=UNIT, ALN=BYTE
?PR?_FFT_2?MAIN . . . . . . . . . . . .    C  SEG   0000F7H       REL=UNIT, ALN=BYTE
?PR?_FFT_3?MAIN . . . . . . . . . . . .    C  SEG   0000D4H       REL=UNIT, ALN=BYTE
?PR?_LOG_2?MAIN . . . . . . . . . . . .    C  SEG   00002BH       REL=UNIT, ALN=BYTE
?PR?_PERMUTE_BITREV?MAIN. . . . . . . .    C  SEG   00008CH       REL=UNIT, ALN=BYTE
?PR?_PERMUTE_BITREV_2?MAIN. . . . . . .    C  SEG   0000BBH       REL=UNIT, ALN=BYTE
?PR?MAIN?MAIN . . . . . . . . . . . . .    C  SEG   00010BH       REL=UNIT, ALN=BYTE
AX51 MACRO ASSEMBLER  MAIN                                                                  05/10/09 15:50:48 PAGE    30

?SC_0 . . . . . . . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?CO?MAIN
_?INT_PRINT . . . . . . . . . . . . . .    C  ADDR  -------       EXT
_BITREV . . . . . . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?_BITREV?MAIN
_COMPUTE_W. . . . . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?_COMPUTE_W?MAIN
_COS. . . . . . . . . . . . . . . . . .    C  ADDR  -------       EXT
_FFT. . . . . . . . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?_FFT?MAIN
_FFT_2. . . . . . . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?_FFT_2?MAIN
_FFT_3. . . . . . . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?_FFT_3?MAIN
_LOG_2. . . . . . . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?_LOG_2?MAIN
_MDELAY . . . . . . . . . . . . . . . .    C  ADDR  -------       EXT
_PERMUTE_BITREV . . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?_PERMUTE_BITREV?MAIN
_PERMUTE_BITREV_2 . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?_PERMUTE_BITREV_2?MAIN
_PUTS . . . . . . . . . . . . . . . . .    C  ADDR  -------       EXT
_SERIAL_INIT. . . . . . . . . . . . . .    C  ADDR  -------       EXT
_SIN. . . . . . . . . . . . . . . . . .    C  ADDR  -------       EXT
_STORE_CPU_RATE . . . . . . . . . . . .    C  ADDR  -------       EXT
A_IM?354. . . . . . . . . . . . . . . .    D  ADDR  0005H     R   SEG=?DT?_PERMUTE_BITREV?MAIN
A_IM?462. . . . . . . . . . . . . . . .    D  ADDR  0005H     R   SEG=?DT?_FFT?MAIN
A_IM?578. . . . . . . . . . . . . . . .    I  ADDR  0012H     R   SEG=?ID?MAIN?MAIN
A_RE?353. . . . . . . . . . . . . . . .    D  ADDR  0002H     R   SEG=?DT?_PERMUTE_BITREV?MAIN
A_RE?461. . . . . . . . . . . . . . . .    D  ADDR  0002H     R   SEG=?DT?_FFT?MAIN
A_RE?577. . . . . . . . . . . . . . . .    I  ADDR  0002H     R   SEG=?ID?MAIN?MAIN
AC. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.6   A   
ACC . . . . . . . . . . . . . . . . . .    D  ADDR  00E0H     A   
ADCCON. . . . . . . . . . . . . . . . .    D  ADDR  00A1H     A   
ADCDATAH. . . . . . . . . . . . . . . .    D  ADDR  00A2H     A   
ADCDATAL. . . . . . . . . . . . . . . .    D  ADDR  00A3H     A   
ADCSTATIC . . . . . . . . . . . . . . .    D  ADDR  00A4H     A   
AR2 . . . . . . . . . . . . . . . . . .    D  ADDR  0002H     A   
AR3 . . . . . . . . . . . . . . . . . .    D  ADDR  0003H     A   
AR6 . . . . . . . . . . . . . . . . . .    D  ADDR  0006H     A   
AR7 . . . . . . . . . . . . . . . . . .    D  ADDR  0007H     A   
B . . . . . . . . . . . . . . . . . . .    D  ADDR  00F0H     A   
B?473 . . . . . . . . . . . . . . . . .    I  ADDR  0010H     R   SEG=?ID?_FFT?MAIN
BR?250. . . . . . . . . . . . . . . . .    I  ADDR  0002H     R   SEG=?ID?_COMPUTE_W?MAIN
BRI?356 . . . . . . . . . . . . . . . .    I  ADDR  0002H     R   SEG=?ID?_PERMUTE_BITREV?MAIN
C_T2. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.1   A   
CE. . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.6   A   
CK_CTRL . . . . . . . . . . . . . . . .    D  ADDR  00B6H     A   
CKCON . . . . . . . . . . . . . . . . .    D  ADDR  008EH     A   
CLK1. . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.1   A   
CLK2. . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.5   A   
CP_RL2. . . . . . . . . . . . . . . . .    B  ADDR  00C8H.0   A   
CPRL2 . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.0   A   
CS. . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.3   A   
CT2 . . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.1   A   
CY. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.7   A   
DATA? . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.0   A   
DEV_OFFSET. . . . . . . . . . . . . . .    D  ADDR  00BEH     A   
DIN0. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.2   A   
DIO0. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.0   A   
DIO1. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.1   A   
DIO2. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.0   A   
DIO3. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.1   A   
DIO4. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.2   A   
DIO5. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.3   A   
DIO6. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.4   A   
DIO7. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.5   A   
DIO8. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.6   A   
DIO9. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.7   A   
DOUT2 . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.4   A   
DPH . . . . . . . . . . . . . . . . . .    D  ADDR  0083H     A   
DPH0. . . . . . . . . . . . . . . . . .    D  ADDR  0083H     A   
DPH1. . . . . . . . . . . . . . . . . .    D  ADDR  0085H     A   
DPL . . . . . . . . . . . . . . . . . .    D  ADDR  0082H     A   
DPL0. . . . . . . . . . . . . . . . . .    D  ADDR  0082H     A   
AX51 MACRO ASSEMBLER  MAIN                                                                  05/10/09 15:50:48 PAGE    31

DPL1. . . . . . . . . . . . . . . . . .    D  ADDR  0084H     A   
DPS . . . . . . . . . . . . . . . . . .    D  ADDR  0086H     A   
DR1 . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.2   A   
DR2 . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.6   A   
DR2_CE. . . . . . . . . . . . . . . . .    B  ADDR  00A0H.6   A   
EA. . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.7   A   
ECO_PAGE_ADDR . . . . . . . . . . . . .    D  ADDR  -------       EXT
ECO_PAGE_MANAGER. . . . . . . . . . . .    C  ADDR  -------       EXT
ECO_PAGE_REGISTER1. . . . . . . . . . .    I  ADDR  -------       EXT
ECO_PAGE_REGISTER2. . . . . . . . . . .    I  ADDR  -------       EXT
ECO_PAGE_REGISTER3. . . . . . . . . . .    I  ADDR  -------       EXT
ECO_PAGE_REGISTER4. . . . . . . . . . .    I  ADDR  -------       EXT
ECO_PAGE_REGISTER5. . . . . . . . . . .    I  ADDR  -------       EXT
ECO_PAGE_REGISTER6. . . . . . . . . . .    I  ADDR  -------       EXT
ECO_PAGE_REGISTER7. . . . . . . . . . .    I  ADDR  -------       EXT
ECO_PAGE_SPI_CONN . . . . . . . . . . .    D  ADDR  -------       EXT
EICON . . . . . . . . . . . . . . . . .    D  ADDR  00D8H     A   
EIE . . . . . . . . . . . . . . . . . .    D  ADDR  00E8H     A   
EIP . . . . . . . . . . . . . . . . . .    D  ADDR  00F8H     A   
ES. . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.4   A   
ET0 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.1   A   
ET1 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.3   A   
ET2 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.5   A   
EWDI. . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.4   A   
EX0 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.0   A   
EX1 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.2   A   
EX2 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.0   A   
EX3 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.1   A   
EX4 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.2   A   
EX5 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.3   A   
EXEN2 . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.3   A   
EXF2. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.6   A   
EXIF. . . . . . . . . . . . . . . . . .    D  ADDR  0091H     A   
F0. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.5   A   
F1. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.1   A   
G?472 . . . . . . . . . . . . . . . . .    I  ADDR  000EH     R   SEG=?ID?_FFT?MAIN
I?042 . . . . . . . . . . . . . . . . .    I  ADDR  0000H     R   SEG=?ID?_BITREV?MAIN
I?249 . . . . . . . . . . . . . . . . .    I  ADDR  0000H     R   SEG=?ID?_COMPUTE_W?MAIN
I?355 . . . . . . . . . . . . . . . . .    I  ADDR  0000H     R   SEG=?ID?_PERMUTE_BITREV?MAIN
IE. . . . . . . . . . . . . . . . . . .    D  ADDR  00A8H     A   
IE0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.1   A   
IE1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.3   A   
INT0_N. . . . . . . . . . . . . . . . .    B  ADDR  0080H.3   A   
INT1_N. . . . . . . . . . . . . . . . .    B  ADDR  0080H.4   A   
IP. . . . . . . . . . . . . . . . . . .    D  ADDR  00B8H     A   
IT0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.0   A   
IT1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.2   A   
K?475 . . . . . . . . . . . . . . . . .    I  ADDR  0014H     R   SEG=?ID?_FFT?MAIN
LOG2N?251 . . . . . . . . . . . . . . .    D  ADDR  0008H     R   SEG=?DT?_COMPUTE_W?MAIN
LOG2N?357 . . . . . . . . . . . . . . .    I  ADDR  0004H     R   SEG=?ID?_PERMUTE_BITREV?MAIN
M?471 . . . . . . . . . . . . . . . . .    I  ADDR  000CH     R   SEG=?ID?_FFT?MAIN
MAIN. . . . . . . . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?MAIN?MAIN
MPAGE . . . . . . . . . . . . . . . . .    D  ADDR  0092H     A   
MT?474. . . . . . . . . . . . . . . . .    I  ADDR  0012H     R   SEG=?ID?_FFT?MAIN
N?246 . . . . . . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?_COMPUTE_W?MAIN
N?352 . . . . . . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?_PERMUTE_BITREV?MAIN
N?460 . . . . . . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?_FFT?MAIN
N?576 . . . . . . . . . . . . . . . . .    I  ADDR  0000H     R   SEG=?ID?MAIN?MAIN
NUMBITS?041 . . . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?_BITREV?MAIN
OV. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.2   A   
P . . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.0   A   
P0. . . . . . . . . . . . . . . . . . .    D  ADDR  0080H     A   
P0_0. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.0   A   
P0_1. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.1   A   
P0_2. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.2   A   
P0_3. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.3   A   
AX51 MACRO ASSEMBLER  MAIN                                                                  05/10/09 15:50:48 PAGE    32

P0_4. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.4   A   
P0_5. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.5   A   
P0_6. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.6   A   
P0_7. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.7   A   
P0_ALT. . . . . . . . . . . . . . . . .    D  ADDR  0095H     A   
P0_DIR. . . . . . . . . . . . . . . . .    D  ADDR  0094H     A   
P1. . . . . . . . . . . . . . . . . . .    D  ADDR  0090H     A   
P1_0. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.0   A   
P1_1. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.1   A   
P1_2. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.2   A   
P1_ALT. . . . . . . . . . . . . . . . .    D  ADDR  0097H     A   
P1_DIR. . . . . . . . . . . . . . . . .    D  ADDR  0096H     A   
PCON. . . . . . . . . . . . . . . . . .    D  ADDR  0087H     A   
PS. . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.4   A   
PSW . . . . . . . . . . . . . . . . . .    D  ADDR  00D0H     A   
PT0 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.1   A   
PT1 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.3   A   
PT2 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.5   A   
PWDI. . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.4   A   
PWM . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.7   A   
PWMCON. . . . . . . . . . . . . . . . .    D  ADDR  00A9H     A   
PWMDUTY . . . . . . . . . . . . . . . .    D  ADDR  00AAH     A   
PWR_UP. . . . . . . . . . . . . . . . .    B  ADDR  00A0H.7   A   
PX0 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.0   A   
PX1 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.2   A   
PX2 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.0   A   
PX3 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.1   A   
PX4 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.2   A   
PX5 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.3   A   
RADIO . . . . . . . . . . . . . . . . .    D  ADDR  00A0H     A   
RB8 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.2   A   
RCAP2H. . . . . . . . . . . . . . . . .    D  ADDR  00CBH     A   
RCAP2L. . . . . . . . . . . . . . . . .    D  ADDR  00CAH     A   
RCLK. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.5   A   
REGX_CTRL . . . . . . . . . . . . . . .    D  ADDR  00ADH     A   
REGX_LSB. . . . . . . . . . . . . . . .    D  ADDR  00ACH     A   
REGX_MSB. . . . . . . . . . . . . . . .    D  ADDR  00ABH     A   
REN . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.4   A   
RES?145 . . . . . . . . . . . . . . . .    I  ADDR  0000H     R   SEG=?ID?_LOG_2?MAIN
REV?043 . . . . . . . . . . . . . . . .    I  ADDR  0002H     R   SEG=?ID?_BITREV?MAIN
RI. . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.0   A   
RS0 . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.3   A   
RS1 . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.4   A   
RSTREAS . . . . . . . . . . . . . . . .    D  ADDR  00B1H     A   
RXD . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.1   A   
SBUF. . . . . . . . . . . . . . . . . .    D  ADDR  0099H     A   
SCON. . . . . . . . . . . . . . . . . .    D  ADDR  0098H     A   
SM0 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.7   A   
SM1 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.6   A   
SM2 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.5   A   
SP. . . . . . . . . . . . . . . . . . .    D  ADDR  0081H     A   
SPC_FNC . . . . . . . . . . . . . . . .    D  ADDR  008FH     A   
SPI_CTRL. . . . . . . . . . . . . . . .    D  ADDR  00B3H     A   
SPI_DATA. . . . . . . . . . . . . . . .    D  ADDR  00B2H     A   
SPICLK. . . . . . . . . . . . . . . . .    D  ADDR  00B4H     A   
T0. . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.5   A   
T1. . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.6   A   
T1_1V2. . . . . . . . . . . . . . . . .    D  ADDR  00BCH     A   
T2. . . . . . . . . . . . . . . . . . .    B  ADDR  0090H.0   A   
T2_1V2. . . . . . . . . . . . . . . . .    D  ADDR  00BDH     A   
T2CON . . . . . . . . . . . . . . . . .    D  ADDR  00C8H     A   
T_IM?359. . . . . . . . . . . . . . . .    I  ADDR  0008H     R   SEG=?ID?_PERMUTE_BITREV?MAIN
T_IM?470. . . . . . . . . . . . . . . .    I  ADDR  000AH     R   SEG=?ID?_FFT?MAIN
T_RE?358. . . . . . . . . . . . . . . .    I  ADDR  0006H     R   SEG=?ID?_PERMUTE_BITREV?MAIN
T_RE?469. . . . . . . . . . . . . . . .    I  ADDR  0008H     R   SEG=?ID?_FFT?MAIN
TB8 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.3   A   
AX51 MACRO ASSEMBLER  MAIN                                                                  05/10/09 15:50:48 PAGE    33

TCLK. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.4   A   
TCON. . . . . . . . . . . . . . . . . .    D  ADDR  0088H     A   
TEST_COUNTER. . . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?MAIN
TEST_MODE . . . . . . . . . . . . . . .    D  ADDR  00B7H     A   
TF0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.5   A   
TF1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.7   A   
TF2 . . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.7   A   
TH0 . . . . . . . . . . . . . . . . . .    D  ADDR  008CH     A   
TH1 . . . . . . . . . . . . . . . . . .    D  ADDR  008DH     A   
TH2 . . . . . . . . . . . . . . . . . .    D  ADDR  00CDH     A   
TI. . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.1   A   
TICK_DV . . . . . . . . . . . . . . . .    D  ADDR  00B5H     A   
TL0 . . . . . . . . . . . . . . . . . .    D  ADDR  008AH     A   
TL1 . . . . . . . . . . . . . . . . . .    D  ADDR  008BH     A   
TL2 . . . . . . . . . . . . . . . . . .    D  ADDR  00CCH     A   
TMOD. . . . . . . . . . . . . . . . . .    D  ADDR  0089H     A   
TR0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.4   A   
TR1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.6   A   
TR2 . . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.2   A   
TXD . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.2   A   
U_IM?468. . . . . . . . . . . . . . . .    I  ADDR  0006H     R   SEG=?ID?_FFT?MAIN
U_RE?467. . . . . . . . . . . . . . . .    I  ADDR  0004H     R   SEG=?ID?_FFT?MAIN
W_IM?248. . . . . . . . . . . . . . . .    D  ADDR  0005H     R   SEG=?DT?_COMPUTE_W?MAIN
W_IM?464. . . . . . . . . . . . . . . .    D  ADDR  000BH     R   SEG=?DT?_FFT?MAIN
W_IM?466. . . . . . . . . . . . . . . .    I  ADDR  0002H     R   SEG=?ID?_FFT?MAIN
W_IM?580. . . . . . . . . . . . . . . .    I  ADDR  002AH     R   SEG=?ID?MAIN?MAIN
W_RE?247. . . . . . . . . . . . . . . .    D  ADDR  0002H     R   SEG=?DT?_COMPUTE_W?MAIN
W_RE?463. . . . . . . . . . . . . . . .    D  ADDR  0008H     R   SEG=?DT?_FFT?MAIN
W_RE?465. . . . . . . . . . . . . . . .    I  ADDR  0000H     R   SEG=?ID?_FFT?MAIN
W_RE?579. . . . . . . . . . . . . . . .    I  ADDR  0022H     R   SEG=?ID?MAIN?MAIN
WDTI. . . . . . . . . . . . . . . . . .    B  ADDR  00D8H.3   A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S).
