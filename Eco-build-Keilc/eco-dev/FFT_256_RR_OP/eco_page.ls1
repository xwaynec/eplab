AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/10/09 15:23:58 PAGE     1


MACRO ASSEMBLER AX51 V3.06a
OBJECT MODULE PLACED IN .\eco_page.obj
ASSEMBLER INVOKED BY: C:\Keil\C51\BIN\AX51.exe .\eco_page.src EP DEBUG SYMBOLS OJ(.\eco_page.obj) PR(.\eco_page.ls1) 

LOC    OBJ             LINE     SOURCE

                          1     ; ./eco_page.src generated from: .\eco_page.c
                          2     ; COMPILER INVOKED BY:
                          3     ;        C:\Keil\C51\BIN\C51.exe .\eco_page.c BROWSE DEBUG CODE LISTINCLUDE SYMBOLS PREP
                               RINT ROM(LARGE) INCDIR(../../Include) SRC(./eco_page.src)
                          4     
                          5     $nomod51 
                          6     
                          7     NAME    ECO_PAGE
                          8     
 00A0.7                   9     PWR_UP  BIT     0A0H.7
 0080                    10     P0      DATA    080H
 0090                    11     P1      DATA    090H
 00D0.6                  12     AC      BIT     0D0H.6
 0080.5                  13     T0      BIT     080H.5
 00B3                    14     SPI_CTRL        DATA    0B3H
 0080.6                  15     T1      BIT     080H.6
 00A8.7                  16     EA      BIT     0A8H.7
 0090.0                  17     T2      BIT     090H.0
 00A0.6                  18     CE      BIT     0A0H.6
 00BE                    19     DEV_OFFSET      DATA    0BEH
 00A0.1                  20     CLK1    BIT     0A0H.1
 0090.2                  21     DIN0    BIT     090H.2
 00A0.5                  22     CLK2    BIT     0A0H.5
 0090.0                  23     DIO0    BIT     090H.0
 0083                    24     DPH0    DATA    083H
 0090.1                  25     DIO1    BIT     090H.1
 00A8                    26     IE      DATA    0A8H
 0085                    27     DPH1    DATA    085H
 0080.0                  28     DIO2    BIT     080H.0
 0080.1                  29     DIO3    BIT     080H.1
 0080.0                  30     P0_0    BIT     080H.0
 0090.0                  31     P1_0    BIT     090H.0
 0080.2                  32     DIO4    BIT     080H.2
 0080.1                  33     P0_1    BIT     080H.1
 0082                    34     DPL0    DATA    082H
 0090.1                  35     P1_1    BIT     090H.1
 0080.3                  36     DIO5    BIT     080H.3
 0080.2                  37     P0_2    BIT     080H.2
 0084                    38     DPL1    DATA    084H
 0090.2                  39     P1_2    BIT     090H.2
 0080.4                  40     DIO6    BIT     080H.4
 0080.3                  41     P0_3    BIT     080H.3
 0080.5                  42     DIO7    BIT     080H.5
 0080.4                  43     P0_4    BIT     080H.4
 00A4                    44     ADCSTATIC       DATA    0A4H
 0080.6                  45     DIO8    BIT     080H.6
 0080.5                  46     P0_5    BIT     080H.5
 00C8.6                  47     EXF2    BIT     0C8H.6
 00A0.3                  48     CS      BIT     0A0H.3
 0080.7                  49     DIO9    BIT     080H.7
 0080.6                  50     P0_6    BIT     080H.6
 0080.7                  51     P0_7    BIT     080H.7
 00A8.4                  52     ES      BIT     0A8H.4
 00B8                    53     IP      DATA    0B8H
 00A0.0                  54     DATA?   BIT     0A0H.0
 0098.0                  55     RI      BIT     098H.0
 00D0.7                  56     CY      BIT     0D0H.7
 0098.1                  57     TI      BIT     098H.1
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/10/09 15:23:58 PAGE     2

 00BC                    58     T1_1V2  DATA    0BCH
 008F                    59     SPC_FNC DATA    08FH
 00BD                    60     T2_1V2  DATA    0BDH
 00CB                    61     RCAP2H  DATA    0CBH
 00B8.4                  62     PS      BIT     0B8H.4
 0081                    63     SP      DATA    081H
 00D0.2                  64     OV      BIT     0D0H.2
 00B6                    65     CK_CTRL DATA    0B6H
 00CA                    66     RCAP2L  DATA    0CAH
 00B5                    67     TICK_DV DATA    0B5H
 00B1                    68     RSTREAS DATA    0B1H
 00C8.1                  69     C_T2    BIT     0C8H.1
 00E8.4                  70     EWDI    BIT     0E8H.4
 00A1                    71     ADCCON  DATA    0A1H
 00C8.5                  72     RCLK    BIT     0C8H.5
 00A2                    73     ADCDATAH        DATA    0A2H
 0091                    74     EXIF    DATA    091H
 00C8.4                  75     TCLK    BIT     0C8H.4
 00A0.6                  76     DR2_CE  BIT     0A0H.6
 00A3                    77     ADCDATAL        DATA    0A3H
 0099                    78     SBUF    DATA    099H
 0087                    79     PCON    DATA    087H
 0098                    80     SCON    DATA    098H
 00F8.4                  81     PWDI    BIT     0F8H.4
 0089                    82     TMOD    DATA    089H
 0088                    83     TCON    DATA    088H
 00D8.3                  84     WDTI    BIT     0D8H.3
 00AA                    85     PWMDUTY DATA    0AAH
 0088.1                  86     IE0     BIT     088H.1
 0088.3                  87     IE1     BIT     088H.3
 0094                    88     P0_DIR  DATA    094H
 00F0                    89     B       DATA    0F0H
 0096                    90     P1_DIR  DATA    096H
 0095                    91     P0_ALT  DATA    095H
 0097                    92     P1_ALT  DATA    097H
 00C8.0                  93     CP_RL2  BIT     0C8H.0
 00A0.2                  94     DR1     BIT     0A0H.2
 00E0                    95     ACC     DATA    0E0H
 00A0.6                  96     DR2     BIT     0A0H.6
 00B7                    97     TEST_MODE       DATA    0B7H
 00B4                    98     SPICLK  DATA    0B4H
 00C8.1                  99     CT2     BIT     0C8H.1
 00A8.1                 100     ET0     BIT     0A8H.1
 00A8.3                 101     ET1     BIT     0A8H.3
 0088.5                 102     TF0     BIT     088H.5
 0080.3                 103     INT0_N  BIT     080H.3
 00A8.5                 104     ET2     BIT     0A8H.5
 0088.7                 105     TF1     BIT     088H.7
 0080.4                 106     INT1_N  BIT     080H.4
 00C8.7                 107     TF2     BIT     0C8H.7
 0098.2                 108     RB8     BIT     098H.2
 008C                   109     TH0     DATA    08CH
 00A8.0                 110     EX0     BIT     0A8H.0
 0088.0                 111     IT0     BIT     088H.0
 008D                   112     TH1     DATA    08DH
 00A8.2                 113     EX1     BIT     0A8H.2
 0098.3                 114     TB8     BIT     098H.3
 0088.2                 115     IT1     BIT     088H.2
 00CD                   116     TH2     DATA    0CDH
 00AD                   117     REGX_CTRL       DATA    0ADH
 00E8.0                 118     EX2     BIT     0E8H.0
 00D0.0                 119     P       BIT     0D0H.0
 00E8.1                 120     EX3     BIT     0E8H.1
 0098.7                 121     SM0     BIT     098H.7
 008A                   122     TL0     DATA    08AH
 00E8.2                 123     EX4     BIT     0E8H.2
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/10/09 15:23:58 PAGE     3

 0098.6                 124     SM1     BIT     098H.6
 008B                   125     TL1     DATA    08BH
 00E8.3                 126     EX5     BIT     0E8H.3
 0098.5                 127     SM2     BIT     098H.5
 00CC                   128     TL2     DATA    0CCH
 00E8                   129     EIE     DATA    0E8H
 00B8.1                 130     PT0     BIT     0B8H.1
 00D0.3                 131     RS0     BIT     0D0H.3
 00B8.3                 132     PT1     BIT     0B8H.3
 00D0.4                 133     RS1     BIT     0D0H.4
 00B8.5                 134     PT2     BIT     0B8H.5
 0088.4                 135     TR0     BIT     088H.4
 00A9                   136     PWMCON  DATA    0A9H
 0088.6                 137     TR1     BIT     088H.6
 00C8.2                 138     TR2     BIT     0C8H.2
 00B8.0                 139     PX0     BIT     0B8H.0
 00B8.2                 140     PX1     BIT     0B8H.2
 00F8.0                 141     PX2     BIT     0F8H.0
 00F8.1                 142     PX3     BIT     0F8H.1
 00F8.2                 143     PX4     BIT     0F8H.2
 0083                   144     DPH     DATA    083H
 00F8.3                 145     PX5     BIT     0F8H.3
 00F8                   146     EIP     DATA    0F8H
 0082                   147     DPL     DATA    082H
 00C8.3                 148     EXEN2   BIT     0C8H.3
 00C8.0                 149     CPRL2   BIT     0C8H.0
 0098.4                 150     REN     BIT     098H.4
 00C8                   151     T2CON   DATA    0C8H
 0086                   152     DPS     DATA    086H
 00B2                   153     SPI_DATA        DATA    0B2H
 0092                   154     MPAGE   DATA    092H
 0080.1                 155     RXD     BIT     080H.1
 00A0.4                 156     DOUT2   BIT     0A0H.4
 00D8                   157     EICON   DATA    0D8H
 008E                   158     CKCON   DATA    08EH
 0080.2                 159     TXD     BIT     080H.2
 00A0                   160     RADIO   DATA    0A0H
 0080.7                 161     PWM     BIT     080H.7
 00D0.5                 162     F0      BIT     0D0H.5
 00D0.1                 163     F1      BIT     0D0H.1
 00AC                   164     REGX_LSB        DATA    0ACH
 00D0                   165     PSW     DATA    0D0H
 00AB                   166     REGX_MSB        DATA    0ABH
------                  167     ?PR?eco_page_init?ECO_PAGE               SEGMENT CODE 
------                  168     ?PR?eco_page_manager?ECO_PAGE            SEGMENT CODE 
------                  169     ?DT?eco_page_manager?ECO_PAGE            SEGMENT DATA OVERLAYABLE 
------                  170     ?DT?ECO_PAGE         SEGMENT DATA 
------                  171     ?ID?ECO_PAGE         SEGMENT IDATA 
------                  172     ?ID?eco_page_manager?ECO_PAGE            SEGMENT IDATA OVERLAYABLE 
                        173             EXTRN   CODE (_eeprom_read)
                        174             EXTRN   CODE (eeprom_init)
                        175             EXTRN   CODE (?C?UIDIV)
                        176             PUBLIC  ECO_PAGE_TABLE_INDEX
                        177             PUBLIC  ECO_PAGE_REGISTER7
                        178             PUBLIC  ECO_PAGE_REGISTER6
                        179             PUBLIC  ECO_PAGE_REGISTER5
                        180             PUBLIC  ECO_PAGE_REGISTER4
                        181             PUBLIC  ECO_PAGE_ADDR
                        182             PUBLIC  ECO_PAGE_REGISTER3
                        183             PUBLIC  ECO_PAGE_REGISTER2
                        184             PUBLIC  ECO_PAGE_REGISTER1
                        185             PUBLIC  ECO_PAGE_PREV_VID
                        186             PUBLIC  ECO_PAGE_PREV_PID
                        187             PUBLIC  ECO_PAGE_SPI_CONN
                        188             PUBLIC  ECO_PAGE_TABLE
                        189             PUBLIC  eco_page_manager
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/10/09 15:23:58 PAGE     4

                        190             PUBLIC  eco_page_init
                        191     
------                  192             RSEG  ?DT?eco_page_manager?ECO_PAGE
000000                  193     ?eco_page_manager?BYTE:
000000                  194             seg?140:   DS   2
                        195     
------                  196             RSEG  ?DT?ECO_PAGE
000000                  197      ECO_PAGE_TABLE:   DS   6
000006                  198     ECO_PAGE_SPI_CONN:   DS   1
000007                  199     ECO_PAGE_PREV_PID:   DS   1
000008                  200     ECO_PAGE_PREV_VID:   DS   1
000009                  201       ECO_PAGE_ADDR:   DS   2
00000B                  202     ECO_PAGE_TABLE_INDEX:   DS   1
                        203     
------                  204             RSEG  ?ID?ECO_PAGE
000000                  205     ECO_PAGE_REGISTER1:   DS   1
000001                  206     ECO_PAGE_REGISTER2:   DS   1
000002                  207     ECO_PAGE_REGISTER3:   DS   1
000003                  208     ECO_PAGE_REGISTER4:   DS   1
000004                  209     ECO_PAGE_REGISTER5:   DS   1
000005                  210     ECO_PAGE_REGISTER6:   DS   1
000006                  211     ECO_PAGE_REGISTER7:   DS   1
                        212     
------                  213             RSEG  ?ID?eco_page_manager?ECO_PAGE
000000                  214               i?141:   DS   2
                        215     
------                  216             RSEG  ?ID?eco_page_manager?ECO_PAGE
000002                  217      page_index?142:   DS   2
                        218     ; /*
                        219     ;  * Author(s): Wei-Han Chen (Embedded Platform Lab, NTHU)
                        220     ;  * Copyright (c) 2009 National Tsing Hua University (NTHU) 
                        221     ;  * Permission to copy, modify, and distribute this program is granted 
                        222     ;  * for noncommercial purposes, provided the author(s) and copyright
                        223     ;  * notice are retained. All other uses require explicit written
                        224     ;  * permission from NTHU. 
                        225     ;  *
                        226     ;  * Eco Paging Library 
                        227     ;  *
                        228     ;  * Wei-Han Chen <xwaynec@gmail.com> 
                        229     ;  * 2009/2/13
                        230     ;  */
                        231     ; 
                        232     ; #include "eco_page.h"
                        233     ; #include "eeprom/eeprom.h"
                        234     ; 
                        235     ; //control page replacement policy is LRU or Round-Robin
                        236     ; #define PAGE_REPLACEMENT 1
                        237     ; 
                        238     ; //#define ECO_PAGE_SIZE 256
                        239     ; //#define ECO_PAGE_ADDR_OFFSET 11 
                        240     ; 
                        241     ; 
                        242     ; //#define ECO_PAGE_SIZE 128
                        243     ; //#define ECO_PAGE_ADDR_OFFSET 23
                        244     ; 
                        245     ; 
                        246     ; 
                        247     ; //#define ECO_PAGE_SIZE 64
                        248     ; //#define ECO_PAGE_ADDR_OFFSET 47
                        249     ; 
                        250     ; 
                        251     ; #define ECO_PAGE_SIZE 256
                        252     ; #define ECO_PAGE_ADDR_OFFSET 13
                        253     ; 
                        254     ; 
                        255     ; #if ECO_PAGE_SIZE == 64
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/10/09 15:23:58 PAGE     5

                        256     ;       
                        257     ;       #define ECO_PAGE_ENTRY  (64-ECO_PAGE_ADDR_OFFSET)
                        258     ;       #define ECO_PAGE_SHIFT  6
                        259     ;       #define ECO_PAGE_MASK   0x003F
                        260     ;       #define ECO_PAGE_MOV_MASK       0xFFC0
                        261     ; 
                        262     ;       unsigned int idata ECO_PAGE_TABLE[ECO_PAGE_ENTRY];
                        263     ;       //Eco page virtual address id
                        264     ;       unsigned int ECO_PAGE_PREV_VID;
                        265     ;       //Eco page physical address id 
                        266     ;       unsigned int ECO_PAGE_PREV_PID;
                        267     ; 
                        268     ; #elif ECO_PAGE_SIZE == 128
                        269     ;       
                        270     ;       #define ECO_PAGE_ENTRY (32-ECO_PAGE_ADDR_OFFSET)
                        271     ;       #define ECO_PAGE_SHIFT  7
                        272     ;       #define ECO_PAGE_MASK   0x007F
                        273     ;       #define ECO_PAGE_MOV_MASK       0xFF80
                        274     ; 
                        275     ;       unsigned int idata ECO_PAGE_TABLE[ECO_PAGE_ENTRY];
                        276     ;       //Eco page virtual address id
                        277     ;       unsigned int ECO_PAGE_PREV_VID;
                        278     ;       //Eco page physical address id 
                        279     ;       unsigned int ECO_PAGE_PREV_PID;
                        280     ; 
                        281     ; #elif ECO_PAGE_SIZE == 256
                        282     ;       
                        283     ;       #define ECO_PAGE_ENTRY  (16-ECO_PAGE_ADDR_OFFSET)
                        284     ;       #define ECO_PAGE_SHIFT  8       
                        285     ;       #define ECO_PAGE_MASK   0x00FF
                        286     ;       #define ECO_PAGE_MOV_MASK       0xFF00
                        287     ; 
                        288     ;       //unsigned int ECO_PAGE_TABLE[ECO_PAGE_ENTRY]={13,14,15};
                        289     ;       unsigned int ECO_PAGE_TABLE[ECO_PAGE_ENTRY];
                        290     ;       //Eco page virtual address id
                        291     ;       unsigned char ECO_PAGE_PREV_VID;
                        292     ;       //Eco page physical address id 
                        293     ;       unsigned char ECO_PAGE_PREV_PID;
                        294     ; 
                        295     ; #endif
                        296     ; 
                        297     ; unsigned char ECO_PAGE_TABLE_INDEX;
                        298     ; unsigned int ECO_PAGE_ADDR;
                        299     ; unsigned char ECO_PAGE_SPI_CONN;
                        300     ; 
                        301     ; unsigned char idata ECO_PAGE_REGISTER1;
                        302     ; unsigned char idata ECO_PAGE_REGISTER2;
                        303     ; unsigned char idata ECO_PAGE_REGISTER3;
                        304     ; unsigned char idata ECO_PAGE_REGISTER4;
                        305     ; unsigned char idata ECO_PAGE_REGISTER5;
                        306     ; unsigned char idata ECO_PAGE_REGISTER6;
                        307     ; unsigned char idata ECO_PAGE_REGISTER7;
                        308     ; 
                        309     ; 
                        310     ; void eco_page_init()
                        311     
------                  312             RSEG  ?PR?eco_page_init?ECO_PAGE
000000                  313     eco_page_init:
                        314                             ; SOURCE LINE # 93
                        315     ; {
                        316                             ; SOURCE LINE # 94
                        317     ;       //ECO_PAGE_TABLE_INDEX = ECO_PAGE_ENTRY - 1;
                        318     ;       ECO_PAGE_TABLE_INDEX = 0;       
                        319                             ; SOURCE LINE # 96
000000 E4               320             CLR     A
000001 F500       F     321             MOV     ECO_PAGE_TABLE_INDEX,A
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/10/09 15:23:58 PAGE     6

                        322     ;       ECO_PAGE_ADDR = 0;
                        323                             ; SOURCE LINE # 97
000003 F500       F     324             MOV     ECO_PAGE_ADDR,A
000005 F500       F     325             MOV     ECO_PAGE_ADDR+01H,A
                        326     ;       ECO_PAGE_PREV_VID = 0;
                        327                             ; SOURCE LINE # 98
000007 F500       F     328             MOV     ECO_PAGE_PREV_VID,A
                        329     ;       ECO_PAGE_PREV_PID = 0;
                        330                             ; SOURCE LINE # 99
000009 F500       F     331             MOV     ECO_PAGE_PREV_PID,A
                        332     ; }
                        333                             ; SOURCE LINE # 100
00000B 22               334             RET     
                        335     ; END OF eco_page_init
                        336     
                        337     ; 
                        338     ; 
                        339     ; #if PAGE_REPLACEMENT == 0 
                        340     ; //LRU page replacement
                        341     ; void eco_page_manager()
                        342     ; {
                        343     ;       unsigned int i;
                        344     ;       unsigned int page_index = -1;
                        345     ; 
                        346     ;       //if page id is the same with the last page id
                        347     ;       if((ECO_PAGE_ADDR >> ECO_PAGE_SHIFT) == ECO_PAGE_PREV_PID)
                        348     ;       {
                        349     ;               //virtual address id + function offset
                        350     ;               ECO_PAGE_ADDR = (ECO_PAGE_PREV_VID << ECO_PAGE_SHIFT) + (ECO_PAGE_ADDR &
                                ECO_PAGE_MASK);
                        351     ;               #pragma asm
                        352     ; 
                        353     ;               MOV R0,#LOW (ECO_PAGE_REGISTER1)
                        354     ;               MOV A,@R0
                        355     ;               MOV     R1,A
                        356     ; 
                        357     ;               MOV R0,#LOW (ECO_PAGE_REGISTER2)
                        358     ;               MOV A,@R0
                        359     ;               MOV     R2,A
                        360     ; 
                        361     ;               MOV R0,#LOW (ECO_PAGE_REGISTER3)
                        362     ;               MOV A,@R0
                        363     ;               MOV     R3,A
                        364     ; 
                        365     ;               MOV R0,#LOW (ECO_PAGE_REGISTER4)
                        366     ;               MOV A,@R0
                        367     ;               MOV     R4,A
                        368     ; 
                        369     ;               MOV R0,#LOW (ECO_PAGE_REGISTER5)
                        370     ;               MOV A,@R0
                        371     ;               MOV     R5,A
                        372     ; 
                        373     ;               MOV R0,#LOW (ECO_PAGE_REGISTER6)
                        374     ;               MOV A,@R0
                        375     ;               MOV     R6,A
                        376     ; 
                        377     ;               MOV R0,#LOW (ECO_PAGE_REGISTER7)
                        378     ;               MOV A,@R0
                        379     ;               MOV     R7,A
                        380     ;       
                        381     ;               MOV     SPI_CTRL,ECO_PAGE_SPI_CONN
                        382     ;               MOV     DPH,ECO_PAGE_ADDR
                        383     ;               MOV     DPL,ECO_PAGE_ADDR+01H
                        384     ;                               
                        385     ;               CLR     A
                        386     ;               JMP     @A+DPTR
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/10/09 15:23:58 PAGE     7

                        387     ;               #pragma endasm
                        388     ;       }
                        389     ; 
                        390     ;       //Check Table   
                        391     ;       for(i=0;i<ECO_PAGE_ENTRY;i++)
                        392     ;       {   
                        393     ;               if((ECO_PAGE_ADDR >> ECO_PAGE_SHIFT) == (ECO_PAGE_TABLE[i] & 0x7FFF))
                        394     ;               {
                        395     ;                       page_index = i;
                        396     ; 
                        397     ;                       //set LRU bit is 1
                        398     ;                       ECO_PAGE_TABLE[i] = ECO_PAGE_TABLE[i] | 0x8000;
                        399     ;                       break;
                        400     ;               }
                        401     ;       }
                        402     ; 
                        403     ;       if(page_index != -1)
                        404     ;       {
                        405     ;               //store function physical addres id 
                        406     ;               ECO_PAGE_PREV_PID = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;
                        407     ;       
                        408     ;               //memory page is in ram
                        409     ;               ECO_PAGE_ADDR = ((page_index + ECO_PAGE_ADDR_OFFSET) << ECO_PAGE_SHIFT) 
                               + (ECO_PAGE_ADDR & ECO_PAGE_MASK);
                        410     ; 
                        411     ;               //cache the virtual address id
                        412     ;               ECO_PAGE_PREV_VID = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;
                        413     ; 
                        414     ; 
                        415     ;               #pragma asm
                        416     ;               MOV R0,#LOW (ECO_PAGE_REGISTER1)
                        417     ;               MOV A,@R0
                        418     ;               MOV     R1,A
                        419     ; 
                        420     ;               MOV R0,#LOW (ECO_PAGE_REGISTER2)
                        421     ;               MOV A,@R0
                        422     ;               MOV     R2,A
                        423     ; 
                        424     ;               MOV R0,#LOW (ECO_PAGE_REGISTER3)
                        425     ;               MOV A,@R0
                        426     ;               MOV     R3,A
                        427     ; 
                        428     ;               MOV R0,#LOW (ECO_PAGE_REGISTER4)
                        429     ;               MOV A,@R0
                        430     ;               MOV     R4,A
                        431     ; 
                        432     ;               MOV R0,#LOW (ECO_PAGE_REGISTER5)
                        433     ;               MOV A,@R0
                        434     ;               MOV     R5,A
                        435     ; 
                        436     ;               MOV R0,#LOW (ECO_PAGE_REGISTER6)
                        437     ;               MOV A,@R0
                        438     ;               MOV     R6,A
                        439     ; 
                        440     ;               MOV R0,#LOW (ECO_PAGE_REGISTER7)
                        441     ;               MOV A,@R0
                        442     ;               MOV     R7,A
                        443     ; 
                        444     ;               MOV     SPI_CTRL,ECO_PAGE_SPI_CONN
                        445     ;               MOV     DPH,ECO_PAGE_ADDR
                        446     ;               MOV     DPL,ECO_PAGE_ADDR+01H
                        447     ;                               
                        448     ;               CLR     A
                        449     ;               JMP     @A+DPTR
                        450     ;               #pragma endasm
                        451     ; 
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/10/09 15:23:58 PAGE     8

                        452     ;       }       
                        453     ;       else
                        454     ;       {
                        455     ;               //page fault
                        456     ;               for(i=(ECO_PAGE_TABLE_INDEX+1)%ECO_PAGE_ENTRY; ;i=(i+1)%ECO_PAGE_ENTRY)
                        457     ;               {
                        458     ;                       if((ECO_PAGE_TABLE[i] & 0x8000) == 0x8000)
                        459     ;                       {
                        460     ;                               //LRU bit is 1 and then set this bit is 0
                        461     ;                               ECO_PAGE_TABLE[i] = ECO_PAGE_TABLE[i] & 0x7FFF;
                        462     ;                       }
                        463     ;                       else
                        464     ;                       {
                        465     ;                               unsigned char xdata *seg = (unsigned char xdata *)((i + 
                               ECO_PAGE_ADDR_OFFSET) << ECO_PAGE_SHIFT);
                        466     ;                               unsigned int j;
                        467     ;                               
                        468     ;                               //memory page is in ram
                        469     ;                               eeprom_init();
                        470     ; 
                        471     ;                               //mov code from eeprom to external ram
                        472     ;                               for(j=0;j<ECO_PAGE_SIZE;j++)
                        473     ;                               {
                        474     ;                                       *(seg+j) = eeprom_read(ECO_ADDR_SHIFT(ECO_PAGE_A
                               DDR & ECO_PAGE_MOV_MASK ) +j);
                        475     ;                               }
                        476     ;                               
                        477     ;                               //update page table to connect this physical address id 
                               with virtual address id 
                        478     ;                               ECO_PAGE_TABLE[i] = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;
                        479     ; 
                        480     ;                               //store physical address id
                        481     ;                               ECO_PAGE_PREV_PID = ECO_PAGE_TABLE[i];
                        482     ; 
                        483     ;                               //update page address e.g.  (page_id<<8) + page_offset
                        484     ;                               ECO_PAGE_ADDR = ((i + ECO_PAGE_ADDR_OFFSET) << ECO_PAGE_
                               SHIFT) + (ECO_PAGE_ADDR & ECO_PAGE_MASK);
                        485     ; 
                        486     ;                               //store virtual address id 
                        487     ;                               ECO_PAGE_PREV_VID = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;    
                        488     ; 
                        489     ;                               //mov to the next index
                        490     ;                               ECO_PAGE_TABLE_INDEX = i;
                        491     ;                               #pragma asm
                        492     ; 
                        493     ;                               MOV R0,#LOW (ECO_PAGE_REGISTER1)
                        494     ;                               MOV A,@R0
                        495     ;                               MOV     R1,A
                        496     ; 
                        497     ;                               MOV R0,#LOW (ECO_PAGE_REGISTER2)
                        498     ;                               MOV A,@R0
                        499     ;                               MOV     R2,A
                        500     ; 
                        501     ;                               MOV R0,#LOW (ECO_PAGE_REGISTER3)
                        502     ;                               MOV A,@R0
                        503     ;                               MOV     R3,A
                        504     ; 
                        505     ;                               MOV R0,#LOW (ECO_PAGE_REGISTER4)
                        506     ;                               MOV A,@R0
                        507     ;                               MOV     R4,A
                        508     ; 
                        509     ;                               MOV R0,#LOW (ECO_PAGE_REGISTER5)
                        510     ;                               MOV A,@R0
                        511     ;                               MOV     R5,A
                        512     ; 
                        513     ;                               MOV R0,#LOW (ECO_PAGE_REGISTER6)
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/10/09 15:23:58 PAGE     9

                        514     ;                               MOV A,@R0
                        515     ;                               MOV     R6,A
                        516     ; 
                        517     ;                               MOV R0,#LOW (ECO_PAGE_REGISTER7)
                        518     ;                               MOV A,@R0
                        519     ;                               MOV     R7,A
                        520     ; 
                        521     ;                               MOV     SPI_CTRL,ECO_PAGE_SPI_CONN
                        522     ;                               MOV     DPH,ECO_PAGE_ADDR
                        523     ;                               MOV     DPL,ECO_PAGE_ADDR+01H
                        524     ;                               
                        525     ;                               CLR     A
                        526     ;                               JMP     @A+DPTR
                        527     ;                               #pragma endasm
                        528     ; 
                        529     ;                       }
                        530     ;               }
                        531     ;                       
                        532     ;       }
                        533     ;                               
                        534     ; }
                        535     ; 
                        536     ; #else
                        537     ; 
                        538     ; void eco_page_manager()
                        539     
------                  540             RSEG  ?PR?eco_page_manager?ECO_PAGE
000000                  541     eco_page_manager:
                        542             USING   0
                        543                             ; SOURCE LINE # 302
                        544     ; {
                        545                             ; SOURCE LINE # 303
                        546     ;       unsigned int idata i;
                        547     ;       unsigned int idata page_index = -1; 
                        548                             ; SOURCE LINE # 305
000000 74FF             549             MOV     A,#0FFH
000002 7800       F     550             MOV     R0,#LOW (page_index?142)
000004 F6               551             MOV     @R0,A
000005 08               552             INC     R0
000006 F6               553             MOV     @R0,A
                        554     ; 
                        555     ;       //Check POP instruction 
                        556     ;       //for(i=0;i<10;i++)
                        557     ;       //{    
                        558     ;       //      blink_led();
                        559     ;       //      mdelay(200);
                        560     ;       //}    
                        561     ;       //mdelay(1000);
                        562     ;       
                        563     ;       //if page id is the same with the last page id
                        564     ;       if((ECO_PAGE_ADDR >> ECO_PAGE_SHIFT) == ECO_PAGE_PREV_PID)
                        565                             ; SOURCE LINE # 316
000007 E500       F     566             MOV     A,ECO_PAGE_ADDR
000009 6500       F     567             XRL     A,ECO_PAGE_PREV_PID
00000B 7001             568             JNZ     ?C0013
00000D E4               569             CLR     A
00000E                  570     ?C0013:
00000E 7035             571             JNZ     ?C0002
                        572     ;       {
                        573                             ; SOURCE LINE # 317
                        574     ;               //virtual address id + function offset
                        575     ;               ECO_PAGE_ADDR = (ECO_PAGE_PREV_VID << ECO_PAGE_SHIFT) + (ECO_PAGE_ADDR &
                                ECO_PAGE_MASK);
                        576                             ; SOURCE LINE # 319
000010 E500       F     577             MOV     A,ECO_PAGE_PREV_VID
000012 FE               578             MOV     R6,A
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/10/09 15:23:58 PAGE    10

000013 7C00             579             MOV     R4,#00H
000015 E4               580             CLR     A
000016 2500       F     581             ADD     A,ECO_PAGE_ADDR+01H
000018 F500       F     582             MOV     ECO_PAGE_ADDR+01H,A
00001A EC               583             MOV     A,R4
00001B 3E               584             ADDC    A,R6
00001C F500       F     585             MOV     ECO_PAGE_ADDR,A
                        586     ;               #pragma asm
                        587     ; 
                        588               
                        589     ;               MOV R0,#LOW (ECO_PAGE_REGISTER1)
00001E 7800       F     590               MOV R0,#LOW (ECO_PAGE_REGISTER1)
                        591     ;               MOV A,@R0
000020 E6               592               MOV A,@R0
                        593     ;               MOV     R1,A
000021 F9               594               MOV   R1,A
                        595     ; 
                        596               
                        597     ;               MOV R0,#LOW (ECO_PAGE_REGISTER2)
000022 7800       F     598               MOV R0,#LOW (ECO_PAGE_REGISTER2)
                        599     ;               MOV A,@R0
000024 E6               600               MOV A,@R0
                        601     ;               MOV     R2,A
000025 FA               602               MOV   R2,A
                        603     ; 
                        604               
                        605     ;               MOV R0,#LOW (ECO_PAGE_REGISTER3)
000026 7800       F     606               MOV R0,#LOW (ECO_PAGE_REGISTER3)
                        607     ;               MOV A,@R0
000028 E6               608               MOV A,@R0
                        609     ;               MOV     R3,A
000029 FB               610               MOV   R3,A
                        611     ; 
                        612               
                        613     ;               MOV R0,#LOW (ECO_PAGE_REGISTER4)
00002A 7800       F     614               MOV R0,#LOW (ECO_PAGE_REGISTER4)
                        615     ;               MOV A,@R0
00002C E6               616               MOV A,@R0
                        617     ;               MOV     R4,A
00002D FC               618               MOV   R4,A
                        619     ; 
                        620               
                        621     ;               MOV R0,#LOW (ECO_PAGE_REGISTER5)
00002E 7800       F     622               MOV R0,#LOW (ECO_PAGE_REGISTER5)
                        623     ;               MOV A,@R0
000030 E6               624               MOV A,@R0
                        625     ;               MOV     R5,A
000031 FD               626               MOV   R5,A
                        627     ; 
                        628               
                        629     ;               MOV R0,#LOW (ECO_PAGE_REGISTER6)
000032 7800       F     630               MOV R0,#LOW (ECO_PAGE_REGISTER6)
                        631     ;               MOV A,@R0
000034 E6               632               MOV A,@R0
                        633     ;               MOV     R6,A
000035 FE               634               MOV   R6,A
                        635     ; 
                        636               
                        637     ;               MOV R0,#LOW (ECO_PAGE_REGISTER7)
000036 7800       F     638               MOV R0,#LOW (ECO_PAGE_REGISTER7)
                        639     ;               MOV A,@R0
000038 E6               640               MOV A,@R0
                        641     ;               MOV     R7,A
000039 FF               642               MOV   R7,A
                        643     ; 
                        644               
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/10/09 15:23:58 PAGE    11

                        645     ;       
                        646               
                        647     ;               MOV     SPI_CTRL,ECO_PAGE_SPI_CONN
00003A 8500B3     F     648               MOV   SPI_CTRL,ECO_PAGE_SPI_CONN
                        649     ;               MOV     DPH,ECO_PAGE_ADDR
00003D 850083     F     650               MOV   DPH,ECO_PAGE_ADDR
                        651     ;               MOV     DPL,ECO_PAGE_ADDR+01H
000040 850082     F     652               MOV   DPL,ECO_PAGE_ADDR+01H
                        653     ;               
                        654               
                        655     ;               CLR     A
000043 E4               656               CLR   A
                        657     ;               JMP     @A+DPTR
000044 73               658               JMP   @A+DPTR
                        659     ;               #pragma endasm
                        660     ;       }       
                        661                             ; SOURCE LINE # 358
000045                  662     ?C0002:
                        663     ;                               
                        664     ;       //Check Table   
                        665     ;       for(i=0;i<ECO_PAGE_ENTRY;i++)
                        666                             ; SOURCE LINE # 361
000045 E4               667             CLR     A
000046 7800       F     668             MOV     R0,#LOW (i?141)
000048 F6               669             MOV     @R0,A
000049 08               670             INC     R0
00004A F6               671             MOV     @R0,A
00004B                  672     ?C0003:
00004B 7800       F     673             MOV     R0,#LOW (i?141)
00004D E6               674             MOV     A,@R0
00004E FE               675             MOV     R6,A
00004F 08               676             INC     R0
000050 E6               677             MOV     A,@R0
000051 FF               678             MOV     R7,A
000052 C3               679             CLR     C
000053 9403             680             SUBB    A,#03H
000055 EE               681             MOV     A,R6
000056 9400             682             SUBB    A,#00H
000058 502D             683             JNC     ?C0004
                        684     ;       {   
                        685                             ; SOURCE LINE # 362
                        686     ;               if((ECO_PAGE_ADDR >> ECO_PAGE_SHIFT) == ECO_PAGE_TABLE[i])
                        687                             ; SOURCE LINE # 363
00005A EF               688             MOV     A,R7
00005B 25E0             689             ADD     A,ACC
00005D 2400       F     690             ADD     A,#LOW (ECO_PAGE_TABLE)
00005F F8               691             MOV     R0,A
000060 E6               692             MOV     A,@R0
000061 FC               693             MOV     R4,A
000062 08               694             INC     R0
000063 E6               695             MOV     A,@R0
000064 FD               696             MOV     R5,A
000065 E500       F     697             MOV     A,ECO_PAGE_ADDR
000067 B50513           698             CJNE    A,AR5,?C0005
00006A E4               699             CLR     A
00006B B5040F           700             CJNE    A,AR4,?C0005
                        701     ;               {
                        702                             ; SOURCE LINE # 364
                        703     ;                       page_index = i;
                        704                             ; SOURCE LINE # 365
00006E 7800       F     705             MOV     R0,#LOW (i?141)
000070 E6               706             MOV     A,@R0
000071 FE               707             MOV     R6,A
000072 08               708             INC     R0
000073 E6               709             MOV     A,@R0
000074 FF               710             MOV     R7,A
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/10/09 15:23:58 PAGE    12

000075 08               711             INC     R0
000076 A606             712             MOV     @R0,AR6
000078 08               713             INC     R0
000079 A607             714             MOV     @R0,AR7
                        715     ;                       break;
                        716                             ; SOURCE LINE # 366
00007B 800A             717             SJMP    ?C0004
                        718     ;               }
                        719                             ; SOURCE LINE # 367
                        720     ;       }
                        721                             ; SOURCE LINE # 368
00007D                  722     ?C0005:
00007D 7800       F     723             MOV     R0,#LOW (i?141+01H)
00007F 06               724             INC     @R0
000080 E6               725             MOV     A,@R0
000081 18               726             DEC     R0
000082 7001             727             JNZ     ?C0015
000084 06               728             INC     @R0
000085                  729     ?C0015:
000085 80C4             730             SJMP    ?C0003
000087                  731     ?C0004:
                        732     ; 
                        733     ;       if(page_index != -1) 
                        734                             ; SOURCE LINE # 370
000087 7800       F     735             MOV     R0,#LOW (page_index?142)
000089 E6               736             MOV     A,@R0
00008A FC               737             MOV     R4,A
00008B 08               738             INC     R0
00008C E6               739             MOV     A,@R0
00008D FD               740             MOV     R5,A
00008E F4               741             CPL     A
00008F 7002             742             JNZ     ?C0016
000091 EC               743             MOV     A,R4
000092 F4               744             CPL     A
000093                  745     ?C0016:
000093 7003             746             JNZ     $ + 5H
000095 020000     F     747             LJMP    ?C0007
                        748     ;       {  
                        749                             ; SOURCE LINE # 371
                        750     ;               //store function physical addres id 
                        751     ;               ECO_PAGE_PREV_PID = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;
                        752                             ; SOURCE LINE # 373
000098 E500       F     753             MOV     A,ECO_PAGE_ADDR
00009A F500       F     754             MOV     ECO_PAGE_PREV_PID,A
                        755     ;       
                        756     ;               //memory page is in ram
                        757     ;               ECO_PAGE_ADDR = ((page_index + ECO_PAGE_ADDR_OFFSET) << ECO_PAGE_SHIFT) 
                               + (ECO_PAGE_ADDR & ECO_PAGE_MASK);
                        758                             ; SOURCE LINE # 376
00009C ED               759             MOV     A,R5
00009D 240D             760             ADD     A,#0DH
00009F FF               761             MOV     R7,A
0000A0 EF               762             MOV     A,R7
0000A1 FE               763             MOV     R6,A
0000A2 7C00             764             MOV     R4,#00H
0000A4 E4               765             CLR     A
0000A5 2500       F     766             ADD     A,ECO_PAGE_ADDR+01H
0000A7 F500       F     767             MOV     ECO_PAGE_ADDR+01H,A
0000A9 EC               768             MOV     A,R4
0000AA 3E               769             ADDC    A,R6
0000AB F500       F     770             MOV     ECO_PAGE_ADDR,A
                        771     ; 
                        772     ;               //cache the virtual address id
                        773     ;               ECO_PAGE_PREV_VID = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;
                        774                             ; SOURCE LINE # 379
0000AD F500       F     775             MOV     ECO_PAGE_PREV_VID,A
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/10/09 15:23:58 PAGE    13

                        776     ; 
                        777     ;               #pragma asm
                        778     ; 
                        779               
                        780     ;               MOV R0,#LOW (ECO_PAGE_REGISTER1)
0000AF 7800       F     781               MOV R0,#LOW (ECO_PAGE_REGISTER1)
                        782     ;               MOV A,@R0
0000B1 E6               783               MOV A,@R0
                        784     ;               MOV     R1,A
0000B2 F9               785               MOV   R1,A
                        786     ; 
                        787               
                        788     ;               MOV R0,#LOW (ECO_PAGE_REGISTER2)
0000B3 7800       F     789               MOV R0,#LOW (ECO_PAGE_REGISTER2)
                        790     ;               MOV A,@R0
0000B5 E6               791               MOV A,@R0
                        792     ;               MOV     R2,A
0000B6 FA               793               MOV   R2,A
                        794     ; 
                        795               
                        796     ;               MOV R0,#LOW (ECO_PAGE_REGISTER3)
0000B7 7800       F     797               MOV R0,#LOW (ECO_PAGE_REGISTER3)
                        798     ;               MOV A,@R0
0000B9 E6               799               MOV A,@R0
                        800     ;               MOV     R3,A
0000BA FB               801               MOV   R3,A
                        802     ; 
                        803               
                        804     ;               MOV R0,#LOW (ECO_PAGE_REGISTER4)
0000BB 7800       F     805               MOV R0,#LOW (ECO_PAGE_REGISTER4)
                        806     ;               MOV A,@R0
0000BD E6               807               MOV A,@R0
                        808     ;               MOV     R4,A
0000BE FC               809               MOV   R4,A
                        810     ; 
                        811               
                        812     ;               MOV R0,#LOW (ECO_PAGE_REGISTER5)
0000BF 7800       F     813               MOV R0,#LOW (ECO_PAGE_REGISTER5)
                        814     ;               MOV A,@R0
0000C1 E6               815               MOV A,@R0
                        816     ;               MOV     R5,A
0000C2 FD               817               MOV   R5,A
                        818     ; 
                        819               
                        820     ;               MOV R0,#LOW (ECO_PAGE_REGISTER6)
0000C3 7800       F     821               MOV R0,#LOW (ECO_PAGE_REGISTER6)
                        822     ;               MOV A,@R0
0000C5 E6               823               MOV A,@R0
                        824     ;               MOV     R6,A
0000C6 FE               825               MOV   R6,A
                        826     ; 
                        827               
                        828     ;               MOV R0,#LOW (ECO_PAGE_REGISTER7)
0000C7 7800       F     829               MOV R0,#LOW (ECO_PAGE_REGISTER7)
                        830     ;               MOV A,@R0
0000C9 E6               831               MOV A,@R0
                        832     ;               MOV     R7,A
0000CA FF               833               MOV   R7,A
                        834     ; 
                        835               
                        836     ; 
                        837               
                        838     ;               MOV     SPI_CTRL,ECO_PAGE_SPI_CONN
0000CB 8500B3     F     839               MOV   SPI_CTRL,ECO_PAGE_SPI_CONN
                        840     ;               MOV     DPH,ECO_PAGE_ADDR
0000CE 850083     F     841               MOV   DPH,ECO_PAGE_ADDR
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/10/09 15:23:58 PAGE    14

                        842     ;               MOV     DPL,ECO_PAGE_ADDR+01H
0000D1 850082     F     843               MOV   DPL,ECO_PAGE_ADDR+01H
                        844     ;               
                        845               
                        846     ;               CLR     A
0000D4 E4               847               CLR   A
                        848     ;               JMP     @A+DPTR
0000D5 73               849               JMP   @A+DPTR
                        850     ;               #pragma endasm
                        851     ;       }   
                        852                             ; SOURCE LINE # 419
0000D6 22               853             RET     
0000D7                  854     ?C0007:
                        855     ;       else
                        856     ;       {
                        857                             ; SOURCE LINE # 421
                        858     ;               //page fault
                        859     ;               // Move Data from EEPROM to iRAM 
                        860     ;               unsigned char xdata *seg = (unsigned char xdata *)((ECO_PAGE_TABLE_INDEX
                                + ECO_PAGE_ADDR_OFFSET) << ECO_PAGE_SHIFT);
                        861                             ; SOURCE LINE # 424
0000D7 E500       F     862             MOV     A,ECO_PAGE_TABLE_INDEX
0000D9 240D             863             ADD     A,#0DH
0000DB FF               864             MOV     R7,A
0000DC E4               865             CLR     A
0000DD 33               866             RLC     A
0000DE EF               867             MOV     A,R7
0000DF F500       F     868             MOV     seg?140,A
0000E1 750000     F     869             MOV     seg?140+01H,#00H
                        870     ;               
                        871     ;               //memory page is in ram
                        872     ;               eeprom_init();
                        873                             ; SOURCE LINE # 427
0000E4 120000     E     874             LCALL   eeprom_init
                        875     ; 
                        876     ;               //mov code from eeprom to external ram
                        877     ;               for(i=0;i<ECO_PAGE_SIZE;i++)
                        878                             ; SOURCE LINE # 430
0000E7 E4               879             CLR     A
0000E8 7800       F     880             MOV     R0,#LOW (i?141)
0000EA F6               881             MOV     @R0,A
0000EB 08               882             INC     R0
0000EC F6               883             MOV     @R0,A
0000ED                  884     ?C0009:
0000ED 7800       F     885             MOV     R0,#LOW (i?141)
0000EF E6               886             MOV     A,@R0
0000F0 FE               887             MOV     R6,A
0000F1 08               888             INC     R0
0000F2 E6               889             MOV     A,@R0
0000F3 FF               890             MOV     R7,A
0000F4 C3               891             CLR     C
0000F5 EE               892             MOV     A,R6
0000F6 9401             893             SUBB    A,#01H
0000F8 5029             894             JNC     ?C0010
                        895     ;               {
                        896                             ; SOURCE LINE # 431
                        897     ;                       *(seg+i) = eeprom_read(ECO_ADDR_SHIFT(ECO_PAGE_ADDR & ECO_PAGE_M
                               OV_MASK) +i);
                        898                             ; SOURCE LINE # 432
0000FA E4               899             CLR     A
0000FB 2403             900             ADD     A,#03H
0000FD FD               901             MOV     R5,A
0000FE E4               902             CLR     A
0000FF 3500       F     903             ADDC    A,ECO_PAGE_ADDR
000101 CD               904             XCH     A,R5
000102 2F               905             ADD     A,R7
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/10/09 15:23:58 PAGE    15

000103 FF               906             MOV     R7,A
000104 ED               907             MOV     A,R5
000105 3E               908             ADDC    A,R6
000106 FE               909             MOV     R6,A
000107 120000     E     910             LCALL   _eeprom_read
00010A 7800       F     911             MOV     R0,#LOW (i?141)
00010C E6               912             MOV     A,@R0
00010D FC               913             MOV     R4,A
00010E 08               914             INC     R0
00010F E6               915             MOV     A,@R0
000110 2500       F     916             ADD     A,seg?140+01H
000112 F582             917             MOV     DPL,A
000114 E500       F     918             MOV     A,seg?140
000116 3C               919             ADDC    A,R4
000117 F583             920             MOV     DPH,A
000119 EF               921             MOV     A,R7
00011A F0               922             MOVX    @DPTR,A
                        923     ;               }
                        924                             ; SOURCE LINE # 433
00011B 06               925             INC     @R0
00011C E6               926             MOV     A,@R0
00011D 18               927             DEC     R0
00011E 7001             928             JNZ     ?C0017
000120 06               929             INC     @R0
000121                  930     ?C0017:
000121 80CA             931             SJMP    ?C0009
000123                  932     ?C0010:
                        933     ;               
                        934     ;               //update page table to connect this physical address id with virtual add
                               ress id 
                        935     ;               ECO_PAGE_TABLE[ECO_PAGE_TABLE_INDEX] = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;
                        936                             ; SOURCE LINE # 436
000123 E500       F     937             MOV     A,ECO_PAGE_ADDR
000125 FF               938             MOV     R7,A
000126 7E00             939             MOV     R6,#00H
000128 E500       F     940             MOV     A,ECO_PAGE_TABLE_INDEX
00012A 25E0             941             ADD     A,ACC
00012C 2400       F     942             ADD     A,#LOW (ECO_PAGE_TABLE)
00012E F8               943             MOV     R0,A
00012F A606             944             MOV     @R0,AR6
000131 08               945             INC     R0
000132 A607             946             MOV     @R0,AR7
                        947     ; 
                        948     ;               //store physical address id
                        949     ;               //ECO_PAGE_PREV_PID = ECO_PAGE_TABLE[ECO_PAGE_TABLE_INDEX];
                        950     ;               ECO_PAGE_PREV_PID = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;
                        951                             ; SOURCE LINE # 440
000134 8F00       F     952             MOV     ECO_PAGE_PREV_PID,R7
                        953     ; 
                        954     ;               //update page address
                        955     ;               ECO_PAGE_ADDR = ((ECO_PAGE_TABLE_INDEX + ECO_PAGE_ADDR_OFFSET) << ECO_PA
                               GE_SHIFT) + (ECO_PAGE_ADDR & ECO_PAGE_MASK);
                        956                             ; SOURCE LINE # 443
000136 E500       F     957             MOV     A,ECO_PAGE_TABLE_INDEX
000138 FD               958             MOV     R5,A
000139 7C00             959             MOV     R4,#00H
00013B 240D             960             ADD     A,#0DH
00013D FF               961             MOV     R7,A
00013E EF               962             MOV     A,R7
00013F FE               963             MOV     R6,A
000140 7A00             964             MOV     R2,#00H
000142 E4               965             CLR     A
000143 2500       F     966             ADD     A,ECO_PAGE_ADDR+01H
000145 F500       F     967             MOV     ECO_PAGE_ADDR+01H,A
000147 EA               968             MOV     A,R2
000148 3E               969             ADDC    A,R6
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/10/09 15:23:58 PAGE    16

000149 F500       F     970             MOV     ECO_PAGE_ADDR,A
                        971     ; 
                        972     ;               //store virtual address id 
                        973     ;               ECO_PAGE_PREV_VID = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;    
                        974                             ; SOURCE LINE # 446
00014B F500       F     975             MOV     ECO_PAGE_PREV_VID,A
                        976     ; 
                        977     ;               //mov to the next index
                        978     ;               ECO_PAGE_TABLE_INDEX = (ECO_PAGE_TABLE_INDEX + 1) % ECO_PAGE_ENTRY;
                        979                             ; SOURCE LINE # 449
00014D ED               980             MOV     A,R5
00014E 2401             981             ADD     A,#01H
000150 FF               982             MOV     R7,A
000151 EC               983             MOV     A,R4
000152 33               984             RLC     A
000153 FE               985             MOV     R6,A
000154 7D03             986             MOV     R5,#03H
000156 120000     E     987             LCALL   ?C?UIDIV
000159 8D00       F     988             MOV     ECO_PAGE_TABLE_INDEX,R5
                        989     ;                       
                        990     ;               //jump  to function address
                        991     ;               #pragma asm
                        992     ; 
                        993               
                        994     ;               MOV R0,#LOW (ECO_PAGE_REGISTER1)
00015B 7800       F     995               MOV R0,#LOW (ECO_PAGE_REGISTER1)
                        996     ;               MOV A,@R0
00015D E6               997               MOV A,@R0
                        998     ;               MOV     R1,A
00015E F9               999               MOV   R1,A
                       1000     ; 
                       1001               
                       1002     ;               MOV R0,#LOW (ECO_PAGE_REGISTER2)
00015F 7800       F    1003               MOV R0,#LOW (ECO_PAGE_REGISTER2)
                       1004     ;               MOV A,@R0
000161 E6              1005               MOV A,@R0
                       1006     ;               MOV     R2,A
000162 FA              1007               MOV   R2,A
                       1008     ; 
                       1009               
                       1010     ;               MOV R0,#LOW (ECO_PAGE_REGISTER3)
000163 7800       F    1011               MOV R0,#LOW (ECO_PAGE_REGISTER3)
                       1012     ;               MOV A,@R0
000165 E6              1013               MOV A,@R0
                       1014     ;               MOV     R3,A
000166 FB              1015               MOV   R3,A
                       1016     ; 
                       1017               
                       1018     ;               MOV R0,#LOW (ECO_PAGE_REGISTER4)
000167 7800       F    1019               MOV R0,#LOW (ECO_PAGE_REGISTER4)
                       1020     ;               MOV A,@R0
000169 E6              1021               MOV A,@R0
                       1022     ;               MOV     R4,A
00016A FC              1023               MOV   R4,A
                       1024     ; 
                       1025               
                       1026     ;               MOV R0,#LOW (ECO_PAGE_REGISTER5)
00016B 7800       F    1027               MOV R0,#LOW (ECO_PAGE_REGISTER5)
                       1028     ;               MOV A,@R0
00016D E6              1029               MOV A,@R0
                       1030     ;               MOV     R5,A
00016E FD              1031               MOV   R5,A
                       1032     ; 
                       1033               
                       1034     ;               MOV R0,#LOW (ECO_PAGE_REGISTER6)
00016F 7800       F    1035               MOV R0,#LOW (ECO_PAGE_REGISTER6)
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/10/09 15:23:58 PAGE    17

                       1036     ;               MOV A,@R0
000171 E6              1037               MOV A,@R0
                       1038     ;               MOV     R6,A
000172 FE              1039               MOV   R6,A
                       1040     ; 
                       1041               
                       1042     ;               MOV R0,#LOW (ECO_PAGE_REGISTER7)
000173 7800       F    1043               MOV R0,#LOW (ECO_PAGE_REGISTER7)
                       1044     ;               MOV A,@R0
000175 E6              1045               MOV A,@R0
                       1046     ;               MOV     R7,A
000176 FF              1047               MOV   R7,A
                       1048     ;       
                       1049               
                       1050     ;               MOV     SPI_CTRL,ECO_PAGE_SPI_CONN
000177 8500B3     F    1051               MOV   SPI_CTRL,ECO_PAGE_SPI_CONN
                       1052     ;               MOV     DPH,ECO_PAGE_ADDR
00017A 850083     F    1053               MOV   DPH,ECO_PAGE_ADDR
                       1054     ;               MOV     DPL,ECO_PAGE_ADDR+01H
00017D 850082     F    1055               MOV   DPL,ECO_PAGE_ADDR+01H
                       1056     ;               
                       1057               
                       1058     ;               CLR     A
000180 E4              1059               CLR   A
                       1060     ;               JMP     @A+DPTR
000181 73              1061               JMP   @A+DPTR
                       1062     ;               #pragma endasm
                       1063     ; 
                       1064     ;       }
                       1065                             ; SOURCE LINE # 490
                       1066     ; 
                       1067     ; }
                       1068                             ; SOURCE LINE # 492
000182                 1069     ?C0012:
000182 22              1070             RET     
                       1071     ; END OF eco_page_manager
                       1072     
                       1073             END
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/10/09 15:23:58 PAGE    18

SYMBOL TABLE LISTING
------ ----- -------


N A M E                                    T Y P E  V A L U E     ATTRIBUTES

?C0002. . . . . . . . . . . . . . . . .    C  ADDR  0045H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0003. . . . . . . . . . . . . . . . .    C  ADDR  004BH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0004. . . . . . . . . . . . . . . . .    C  ADDR  0087H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0005. . . . . . . . . . . . . . . . .    C  ADDR  007DH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0007. . . . . . . . . . . . . . . . .    C  ADDR  00D7H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0009. . . . . . . . . . . . . . . . .    C  ADDR  00EDH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0010. . . . . . . . . . . . . . . . .    C  ADDR  0123H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0012. . . . . . . . . . . . . . . . .    C  ADDR  0182H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0013. . . . . . . . . . . . . . . . .    C  ADDR  000EH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0015. . . . . . . . . . . . . . . . .    C  ADDR  0085H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0016. . . . . . . . . . . . . . . . .    C  ADDR  0093H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0017. . . . . . . . . . . . . . . . .    C  ADDR  0121H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C?UIDIV. . . . . . . . . . . . . . . .    C  ADDR  -------       EXT
?DT?ECO_PAGE. . . . . . . . . . . . . .    D  SEG   00000CH       REL=UNIT, ALN=BYTE
?DT?ECO_PAGE_MANAGER?ECO_PAGE . . . . .    D  SEG   000002H       REL=UNIT, ALN=BYTE
?ECO_PAGE_MANAGER?BYTE. . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?ECO_PAGE_MANAGER?ECO_PAGE
?ID?ECO_PAGE. . . . . . . . . . . . . .    I  SEG   000007H       REL=UNIT, ALN=BYTE
?ID?ECO_PAGE_MANAGER?ECO_PAGE . . . . .    I  SEG   000004H       REL=UNIT, ALN=BYTE
?PR?ECO_PAGE_INIT?ECO_PAGE. . . . . . .    C  SEG   00000CH       REL=UNIT, ALN=BYTE
?PR?ECO_PAGE_MANAGER?ECO_PAGE . . . . .    C  SEG   000183H       REL=UNIT, ALN=BYTE
_EEPROM_READ. . . . . . . . . . . . . .    C  ADDR  -------       EXT
AC. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.6   A   
ACC . . . . . . . . . . . . . . . . . .    D  ADDR  00E0H     A   
ADCCON. . . . . . . . . . . . . . . . .    D  ADDR  00A1H     A   
ADCDATAH. . . . . . . . . . . . . . . .    D  ADDR  00A2H     A   
ADCDATAL. . . . . . . . . . . . . . . .    D  ADDR  00A3H     A   
ADCSTATIC . . . . . . . . . . . . . . .    D  ADDR  00A4H     A   
AR4 . . . . . . . . . . . . . . . . . .    D  ADDR  0004H     A   
AR5 . . . . . . . . . . . . . . . . . .    D  ADDR  0005H     A   
AR6 . . . . . . . . . . . . . . . . . .    D  ADDR  0006H     A   
AR7 . . . . . . . . . . . . . . . . . .    D  ADDR  0007H     A   
B . . . . . . . . . . . . . . . . . . .    D  ADDR  00F0H     A   
C_T2. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.1   A   
CE. . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.6   A   
CK_CTRL . . . . . . . . . . . . . . . .    D  ADDR  00B6H     A   
CKCON . . . . . . . . . . . . . . . . .    D  ADDR  008EH     A   
CLK1. . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.1   A   
CLK2. . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.5   A   
CP_RL2. . . . . . . . . . . . . . . . .    B  ADDR  00C8H.0   A   
CPRL2 . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.0   A   
CS. . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.3   A   
CT2 . . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.1   A   
CY. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.7   A   
DATA? . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.0   A   
DEV_OFFSET. . . . . . . . . . . . . . .    D  ADDR  00BEH     A   
DIN0. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.2   A   
DIO0. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.0   A   
DIO1. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.1   A   
DIO2. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.0   A   
DIO3. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.1   A   
DIO4. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.2   A   
DIO5. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.3   A   
DIO6. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.4   A   
DIO7. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.5   A   
DIO8. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.6   A   
DIO9. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.7   A   
DOUT2 . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.4   A   
DPH . . . . . . . . . . . . . . . . . .    D  ADDR  0083H     A   
DPH0. . . . . . . . . . . . . . . . . .    D  ADDR  0083H     A   
DPH1. . . . . . . . . . . . . . . . . .    D  ADDR  0085H     A   
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/10/09 15:23:58 PAGE    19

DPL . . . . . . . . . . . . . . . . . .    D  ADDR  0082H     A   
DPL0. . . . . . . . . . . . . . . . . .    D  ADDR  0082H     A   
DPL1. . . . . . . . . . . . . . . . . .    D  ADDR  0084H     A   
DPS . . . . . . . . . . . . . . . . . .    D  ADDR  0086H     A   
DR1 . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.2   A   
DR2 . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.6   A   
DR2_CE. . . . . . . . . . . . . . . . .    B  ADDR  00A0H.6   A   
EA. . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.7   A   
ECO_PAGE. . . . . . . . . . . . . . . .    -- ----  -------       
ECO_PAGE_ADDR . . . . . . . . . . . . .    D  ADDR  0009H     R   SEG=?DT?ECO_PAGE
ECO_PAGE_INIT . . . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?ECO_PAGE_INIT?ECO_PAGE
ECO_PAGE_MANAGER. . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
ECO_PAGE_PREV_PID . . . . . . . . . . .    D  ADDR  0007H     R   SEG=?DT?ECO_PAGE
ECO_PAGE_PREV_VID . . . . . . . . . . .    D  ADDR  0008H     R   SEG=?DT?ECO_PAGE
ECO_PAGE_REGISTER1. . . . . . . . . . .    I  ADDR  0000H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER2. . . . . . . . . . .    I  ADDR  0001H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER3. . . . . . . . . . .    I  ADDR  0002H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER4. . . . . . . . . . .    I  ADDR  0003H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER5. . . . . . . . . . .    I  ADDR  0004H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER6. . . . . . . . . . .    I  ADDR  0005H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER7. . . . . . . . . . .    I  ADDR  0006H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_SPI_CONN . . . . . . . . . . .    D  ADDR  0006H     R   SEG=?DT?ECO_PAGE
ECO_PAGE_TABLE. . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?ECO_PAGE
ECO_PAGE_TABLE_INDEX. . . . . . . . . .    D  ADDR  000BH     R   SEG=?DT?ECO_PAGE
EEPROM_INIT . . . . . . . . . . . . . .    C  ADDR  -------       EXT
EICON . . . . . . . . . . . . . . . . .    D  ADDR  00D8H     A   
EIE . . . . . . . . . . . . . . . . . .    D  ADDR  00E8H     A   
EIP . . . . . . . . . . . . . . . . . .    D  ADDR  00F8H     A   
ES. . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.4   A   
ET0 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.1   A   
ET1 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.3   A   
ET2 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.5   A   
EWDI. . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.4   A   
EX0 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.0   A   
EX1 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.2   A   
EX2 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.0   A   
EX3 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.1   A   
EX4 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.2   A   
EX5 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.3   A   
EXEN2 . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.3   A   
EXF2. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.6   A   
EXIF. . . . . . . . . . . . . . . . . .    D  ADDR  0091H     A   
F0. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.5   A   
F1. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.1   A   
I?141 . . . . . . . . . . . . . . . . .    I  ADDR  0000H     R   SEG=?ID?ECO_PAGE_MANAGER?ECO_PAGE
IE. . . . . . . . . . . . . . . . . . .    D  ADDR  00A8H     A   
IE0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.1   A   
IE1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.3   A   
INT0_N. . . . . . . . . . . . . . . . .    B  ADDR  0080H.3   A   
INT1_N. . . . . . . . . . . . . . . . .    B  ADDR  0080H.4   A   
IP. . . . . . . . . . . . . . . . . . .    D  ADDR  00B8H     A   
IT0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.0   A   
IT1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.2   A   
MPAGE . . . . . . . . . . . . . . . . .    D  ADDR  0092H     A   
OV. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.2   A   
P . . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.0   A   
P0. . . . . . . . . . . . . . . . . . .    D  ADDR  0080H     A   
P0_0. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.0   A   
P0_1. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.1   A   
P0_2. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.2   A   
P0_3. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.3   A   
P0_4. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.4   A   
P0_5. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.5   A   
P0_6. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.6   A   
P0_7. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.7   A   
P0_ALT. . . . . . . . . . . . . . . . .    D  ADDR  0095H     A   
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/10/09 15:23:58 PAGE    20

P0_DIR. . . . . . . . . . . . . . . . .    D  ADDR  0094H     A   
P1. . . . . . . . . . . . . . . . . . .    D  ADDR  0090H     A   
P1_0. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.0   A   
P1_1. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.1   A   
P1_2. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.2   A   
P1_ALT. . . . . . . . . . . . . . . . .    D  ADDR  0097H     A   
P1_DIR. . . . . . . . . . . . . . . . .    D  ADDR  0096H     A   
PAGE_INDEX?142. . . . . . . . . . . . .    I  ADDR  0002H     R   SEG=?ID?ECO_PAGE_MANAGER?ECO_PAGE
PCON. . . . . . . . . . . . . . . . . .    D  ADDR  0087H     A   
PS. . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.4   A   
PSW . . . . . . . . . . . . . . . . . .    D  ADDR  00D0H     A   
PT0 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.1   A   
PT1 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.3   A   
PT2 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.5   A   
PWDI. . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.4   A   
PWM . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.7   A   
PWMCON. . . . . . . . . . . . . . . . .    D  ADDR  00A9H     A   
PWMDUTY . . . . . . . . . . . . . . . .    D  ADDR  00AAH     A   
PWR_UP. . . . . . . . . . . . . . . . .    B  ADDR  00A0H.7   A   
PX0 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.0   A   
PX1 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.2   A   
PX2 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.0   A   
PX3 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.1   A   
PX4 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.2   A   
PX5 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.3   A   
RADIO . . . . . . . . . . . . . . . . .    D  ADDR  00A0H     A   
RB8 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.2   A   
RCAP2H. . . . . . . . . . . . . . . . .    D  ADDR  00CBH     A   
RCAP2L. . . . . . . . . . . . . . . . .    D  ADDR  00CAH     A   
RCLK. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.5   A   
REGX_CTRL . . . . . . . . . . . . . . .    D  ADDR  00ADH     A   
REGX_LSB. . . . . . . . . . . . . . . .    D  ADDR  00ACH     A   
REGX_MSB. . . . . . . . . . . . . . . .    D  ADDR  00ABH     A   
REN . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.4   A   
RI. . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.0   A   
RS0 . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.3   A   
RS1 . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.4   A   
RSTREAS . . . . . . . . . . . . . . . .    D  ADDR  00B1H     A   
RXD . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.1   A   
SBUF. . . . . . . . . . . . . . . . . .    D  ADDR  0099H     A   
SCON. . . . . . . . . . . . . . . . . .    D  ADDR  0098H     A   
SEG?140 . . . . . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?ECO_PAGE_MANAGER?ECO_PAGE
SM0 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.7   A   
SM1 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.6   A   
SM2 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.5   A   
SP. . . . . . . . . . . . . . . . . . .    D  ADDR  0081H     A   
SPC_FNC . . . . . . . . . . . . . . . .    D  ADDR  008FH     A   
SPI_CTRL. . . . . . . . . . . . . . . .    D  ADDR  00B3H     A   
SPI_DATA. . . . . . . . . . . . . . . .    D  ADDR  00B2H     A   
SPICLK. . . . . . . . . . . . . . . . .    D  ADDR  00B4H     A   
T0. . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.5   A   
T1. . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.6   A   
T1_1V2. . . . . . . . . . . . . . . . .    D  ADDR  00BCH     A   
T2. . . . . . . . . . . . . . . . . . .    B  ADDR  0090H.0   A   
T2_1V2. . . . . . . . . . . . . . . . .    D  ADDR  00BDH     A   
T2CON . . . . . . . . . . . . . . . . .    D  ADDR  00C8H     A   
TB8 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.3   A   
TCLK. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.4   A   
TCON. . . . . . . . . . . . . . . . . .    D  ADDR  0088H     A   
TEST_MODE . . . . . . . . . . . . . . .    D  ADDR  00B7H     A   
TF0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.5   A   
TF1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.7   A   
TF2 . . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.7   A   
TH0 . . . . . . . . . . . . . . . . . .    D  ADDR  008CH     A   
TH1 . . . . . . . . . . . . . . . . . .    D  ADDR  008DH     A   
TH2 . . . . . . . . . . . . . . . . . .    D  ADDR  00CDH     A   
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/10/09 15:23:58 PAGE    21

TI. . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.1   A   
TICK_DV . . . . . . . . . . . . . . . .    D  ADDR  00B5H     A   
TL0 . . . . . . . . . . . . . . . . . .    D  ADDR  008AH     A   
TL1 . . . . . . . . . . . . . . . . . .    D  ADDR  008BH     A   
TL2 . . . . . . . . . . . . . . . . . .    D  ADDR  00CCH     A   
TMOD. . . . . . . . . . . . . . . . . .    D  ADDR  0089H     A   
TR0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.4   A   
TR1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.6   A   
TR2 . . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.2   A   
TXD . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.2   A   
WDTI. . . . . . . . . . . . . . . . . .    B  ADDR  00D8H.3   A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S).
