AX51 MACRO ASSEMBLER  ISR_RF                                                                05/13/09 22:32:29 PAGE     1


MACRO ASSEMBLER AX51 V3.06a
OBJECT MODULE PLACED IN .\isr_rf.obj
ASSEMBLER INVOKED BY: C:\Keil\C51\BIN\AX51.exe .\isr_rf.src EP DEBUG SYMBOLS OJ(.\isr_rf.obj) PR(.\eco_page.ls1) 

LOC    OBJ             LINE     SOURCE

                          1     ; ./isr_rf.src generated from: .\..\..\include\isr\isr_rf.c
                          2     ; COMPILER INVOKED BY:
                          3     ;        C:\Keil\C51\BIN\C51.exe .\..\..\include\isr\isr_rf.c BROWSE DEBUG CODE LISTINCL
                               UDE SYMBOLS PREPRINT INCDIR(../../Include) SRC(./isr_rf.src)
                          4     
                          5     $nomod51 
                          6     
                          7     NAME    ISR_RF
                          8     
 00A0.7                   9     PWR_UP  BIT     0A0H.7
 0080                    10     P0      DATA    080H
 0090                    11     P1      DATA    090H
 00D0.6                  12     AC      BIT     0D0H.6
 0080.5                  13     T0      BIT     080H.5
 00B3                    14     SPI_CTRL        DATA    0B3H
 0080.6                  15     T1      BIT     080H.6
 00A8.7                  16     EA      BIT     0A8H.7
 0090.0                  17     T2      BIT     090H.0
 00A0.6                  18     CE      BIT     0A0H.6
 00BE                    19     DEV_OFFSET      DATA    0BEH
 00A0.1                  20     CLK1    BIT     0A0H.1
 0090.2                  21     DIN0    BIT     090H.2
 00A0.5                  22     CLK2    BIT     0A0H.5
 0090.0                  23     DIO0    BIT     090H.0
 0083                    24     DPH0    DATA    083H
 0090.1                  25     DIO1    BIT     090H.1
 00A8                    26     IE      DATA    0A8H
 0085                    27     DPH1    DATA    085H
 0080.0                  28     DIO2    BIT     080H.0
 0080.1                  29     DIO3    BIT     080H.1
 0080.0                  30     P0_0    BIT     080H.0
 0090.0                  31     P1_0    BIT     090H.0
 0080.2                  32     DIO4    BIT     080H.2
 0080.1                  33     P0_1    BIT     080H.1
 0082                    34     DPL0    DATA    082H
 0090.1                  35     P1_1    BIT     090H.1
 0080.3                  36     DIO5    BIT     080H.3
 0080.2                  37     P0_2    BIT     080H.2
 0084                    38     DPL1    DATA    084H
 0090.2                  39     P1_2    BIT     090H.2
 0080.4                  40     DIO6    BIT     080H.4
 0080.3                  41     P0_3    BIT     080H.3
 0080.5                  42     DIO7    BIT     080H.5
 0080.4                  43     P0_4    BIT     080H.4
 00A4                    44     ADCSTATIC       DATA    0A4H
 0080.6                  45     DIO8    BIT     080H.6
 0080.5                  46     P0_5    BIT     080H.5
 00C8.6                  47     EXF2    BIT     0C8H.6
 00A0.3                  48     CS      BIT     0A0H.3
 0080.7                  49     DIO9    BIT     080H.7
 0080.6                  50     P0_6    BIT     080H.6
 0080.7                  51     P0_7    BIT     080H.7
 00A8.4                  52     ES      BIT     0A8H.4
 00B8                    53     IP      DATA    0B8H
 00A0.0                  54     DATA?   BIT     0A0H.0
 0098.0                  55     RI      BIT     098H.0
 00D0.7                  56     CY      BIT     0D0H.7
 0098.1                  57     TI      BIT     098H.1
AX51 MACRO ASSEMBLER  ISR_RF                                                                05/13/09 22:32:29 PAGE     2

 00BC                    58     T1_1V2  DATA    0BCH
 008F                    59     SPC_FNC DATA    08FH
 00BD                    60     T2_1V2  DATA    0BDH
 00CB                    61     RCAP2H  DATA    0CBH
 00B8.4                  62     PS      BIT     0B8H.4
 0081                    63     SP      DATA    081H
 00D0.2                  64     OV      BIT     0D0H.2
 00B6                    65     CK_CTRL DATA    0B6H
 00CA                    66     RCAP2L  DATA    0CAH
 00B5                    67     TICK_DV DATA    0B5H
 00B1                    68     RSTREAS DATA    0B1H
 00C8.1                  69     C_T2    BIT     0C8H.1
 00E8.4                  70     EWDI    BIT     0E8H.4
 00A1                    71     ADCCON  DATA    0A1H
 00C8.5                  72     RCLK    BIT     0C8H.5
 00A2                    73     ADCDATAH        DATA    0A2H
 0091                    74     EXIF    DATA    091H
 00C8.4                  75     TCLK    BIT     0C8H.4
 00A0.6                  76     DR2_CE  BIT     0A0H.6
 00A3                    77     ADCDATAL        DATA    0A3H
 0099                    78     SBUF    DATA    099H
 0087                    79     PCON    DATA    087H
 0098                    80     SCON    DATA    098H
 00F8.4                  81     PWDI    BIT     0F8H.4
 0089                    82     TMOD    DATA    089H
 0088                    83     TCON    DATA    088H
 00D8.3                  84     WDTI    BIT     0D8H.3
 00AA                    85     PWMDUTY DATA    0AAH
 0088.1                  86     IE0     BIT     088H.1
 0088.3                  87     IE1     BIT     088H.3
 0094                    88     P0_DIR  DATA    094H
 00F0                    89     B       DATA    0F0H
 0096                    90     P1_DIR  DATA    096H
 0095                    91     P0_ALT  DATA    095H
 0097                    92     P1_ALT  DATA    097H
 00C8.0                  93     CP_RL2  BIT     0C8H.0
 00A0.2                  94     DR1     BIT     0A0H.2
 00E0                    95     ACC     DATA    0E0H
 00A0.6                  96     DR2     BIT     0A0H.6
 00B7                    97     TEST_MODE       DATA    0B7H
 00B4                    98     SPICLK  DATA    0B4H
 00C8.1                  99     CT2     BIT     0C8H.1
 00A8.1                 100     ET0     BIT     0A8H.1
 00A8.3                 101     ET1     BIT     0A8H.3
 0088.5                 102     TF0     BIT     088H.5
 0080.3                 103     INT0_N  BIT     080H.3
 00A8.5                 104     ET2     BIT     0A8H.5
 0088.7                 105     TF1     BIT     088H.7
 0080.4                 106     INT1_N  BIT     080H.4
 00C8.7                 107     TF2     BIT     0C8H.7
 0098.2                 108     RB8     BIT     098H.2
 008C                   109     TH0     DATA    08CH
 00A8.0                 110     EX0     BIT     0A8H.0
 0088.0                 111     IT0     BIT     088H.0
 008D                   112     TH1     DATA    08DH
 00A8.2                 113     EX1     BIT     0A8H.2
 0098.3                 114     TB8     BIT     098H.3
 0088.2                 115     IT1     BIT     088H.2
 00CD                   116     TH2     DATA    0CDH
 00AD                   117     REGX_CTRL       DATA    0ADH
 00E8.0                 118     EX2     BIT     0E8H.0
 00D0.0                 119     P       BIT     0D0H.0
 00E8.1                 120     EX3     BIT     0E8H.1
 0098.7                 121     SM0     BIT     098H.7
 008A                   122     TL0     DATA    08AH
 00E8.2                 123     EX4     BIT     0E8H.2
AX51 MACRO ASSEMBLER  ISR_RF                                                                05/13/09 22:32:29 PAGE     3

 0098.6                 124     SM1     BIT     098H.6
 008B                   125     TL1     DATA    08BH
 00E8.3                 126     EX5     BIT     0E8H.3
 0098.5                 127     SM2     BIT     098H.5
 00CC                   128     TL2     DATA    0CCH
 00E8                   129     EIE     DATA    0E8H
 00B8.1                 130     PT0     BIT     0B8H.1
 00D0.3                 131     RS0     BIT     0D0H.3
 00B8.3                 132     PT1     BIT     0B8H.3
 00D0.4                 133     RS1     BIT     0D0H.4
 00B8.5                 134     PT2     BIT     0B8H.5
 0088.4                 135     TR0     BIT     088H.4
 00A9                   136     PWMCON  DATA    0A9H
 0088.6                 137     TR1     BIT     088H.6
 00C8.2                 138     TR2     BIT     0C8H.2
 00B8.0                 139     PX0     BIT     0B8H.0
 00B8.2                 140     PX1     BIT     0B8H.2
 00F8.0                 141     PX2     BIT     0F8H.0
 00F8.1                 142     PX3     BIT     0F8H.1
 00F8.2                 143     PX4     BIT     0F8H.2
 0083                   144     DPH     DATA    083H
 00F8.3                 145     PX5     BIT     0F8H.3
 00F8                   146     EIP     DATA    0F8H
 0082                   147     DPL     DATA    082H
 00C8.3                 148     EXEN2   BIT     0C8H.3
 00C8.0                 149     CPRL2   BIT     0C8H.0
 0098.4                 150     REN     BIT     098H.4
 00C8                   151     T2CON   DATA    0C8H
 0086                   152     DPS     DATA    086H
 00B2                   153     SPI_DATA        DATA    0B2H
 0092                   154     MPAGE   DATA    092H
 0080.1                 155     RXD     BIT     080H.1
 00A0.4                 156     DOUT2   BIT     0A0H.4
 00D8                   157     EICON   DATA    0D8H
 008E                   158     CKCON   DATA    08EH
 0080.2                 159     TXD     BIT     080H.2
 00A0                   160     RADIO   DATA    0A0H
 0080.7                 161     PWM     BIT     080H.7
 00D0.5                 162     F0      BIT     0D0H.5
 00D0.1                 163     F1      BIT     0D0H.1
 00AC                   164     REGX_LSB        DATA    0ACH
 00D0                   165     PSW     DATA    0D0H
 00AB                   166     REGX_MSB        DATA    0ABH
------                  167     ?PR?rf_init?ISR_RF   SEGMENT CODE 
------                  168     ?PR?_rf_configure?ISR_RF                 SEGMENT CODE 
------                  169     ?DT?_rf_configure?ISR_RF                 SEGMENT DATA OVERLAYABLE 
------                  170     ?PR?_rf_send?ISR_RF  SEGMENT CODE 
------                  171     ?DT?_rf_send?ISR_RF  SEGMENT DATA OVERLAYABLE 
------                  172     ?PR?rf_ch1_recv?ISR_RF                   SEGMENT CODE 
------                  173     ?DT?rf_ch1_recv?ISR_RF                   SEGMENT DATA OVERLAYABLE 
------                  174     ?PR?rf_wait_msg?ISR_RF                   SEGMENT CODE 
------                  175     ?C_INITSEG           SEGMENT CODE 
------                  176     ?DT?ISR_RF           SEGMENT DATA 
                        177             EXTRN   CODE (_spi_init)
                        178             EXTRN   CODE (_spi_write_then_read)
                        179             EXTRN   CODE (?C?CLDOPTR)
                        180             PUBLIC  rf_buf
                        181             PUBLIC  rf_wait_msg
                        182             PUBLIC  rf_ch1_recv
                        183             PUBLIC  ?_rf_send?BYTE
                        184             PUBLIC  _rf_send
                        185             PUBLIC  _rf_configure
                        186             PUBLIC  rf_init
                        187     
------                  188             RSEG  ?DT?_rf_configure?ISR_RF
000000                  189     ?_rf_configure?BYTE:
AX51 MACRO ASSEMBLER  ISR_RF                                                                05/13/09 22:32:29 PAGE     4

000000                  190               p?141:   DS   3
000003                  191             ORG  3
000003                  192               i?142:   DS   2
                        193     
------                  194             RSEG  ?DT?rf_ch1_recv?ISR_RF
000000                  195     ?rf_ch1_recv?BYTE:
000000                  196               i?348:   DS   2
                        197     
------                  198             RSEG  ?DT?_rf_send?ISR_RF
000000                  199     ?_rf_send?BYTE:
000000                  200            addr?243:   DS   3
000003                  201             ORG  3
000003                  202        addr_len?244:   DS   1
000004                  203             ORG  4
000004                  204         payload?245:   DS   3
000007                  205             ORG  7
000007                  206          pl_len?246:   DS   1
000008                  207             ORG  8
000008                  208               i?247:   DS   2
                        209     
------                  210             RSEG  ?DT?ISR_RF
000000                  211              rf_buf:   DS   24
                        212     
------                  213             RSEG  ?C_INITSEG
000000 18               214             DB      018H
000001 00         F     215             DB      rf_buf
000002 00               216             DB      000H
000003 00               217             DB      000H
000004 00000000         218             DB  000H,000H,000H,000H,000H,000H,000H,000H,000H,000H
000008 00000000                 
00000C 0000                     
00000E 00000000         219             DB  000H,000H,000H,000H,000H,000H,000H,000H,000H,000H
000012 00000000                 
000016 0000                     
000018 0000             220             DB  000H,000H
                        221     
                        222     
                        223     ; /*
                        224     ;  * Author(s): Min-Hua Chen (Embedded Platform Lab, NTHU)
                        225     ;  * Copyright (c) 2008 National Tsing Hua University (NTHU) 
                        226     ;  * Permission to copy, modify, and distribute this program is granted 
                        227     ;  * for noncommercial purposes, provided the author(s) and copyright
                        228     ;  * notice are retained. All other uses require explicit written
                        229     ;  * permission from NTHU. 
                        230     ;  *
                        231     ;  * radio driver - ISR
                        232     ;  * Nordic transceiver subsystem
                        233     ;  * NOTE: DuoCeiver (two parallel independent channels) is not supported, 
                        234     ;  * hence only data channel 1 is used.
                        235     ;  *
                        236     ;  * note: This ISR only has basic function, users should modify this ISR
                        237     ;  * for his purpose. Users has to handle the timing to receive /
                        238     ;  * transmit.
                        239     ;  *
                        240     ;  * Min-Hua Chen <orca.chen@gmail.com> 
                        241     ;  * 2008/03/16
                        242     ;  *
                        243     ;  * *set the radio to low power mode after receiving data by set CE = 0
                        244     ;  * 2008/06/05
                        245     ;  */
                        246     ; 
                        247     ; #include <eco/reg24e1.h>
                        248     ; #include <isr/isr_rf.h>
                        249     ; #include <spi/spi.h>
                        250     ; struct radio_buffer rf_buf = { 0, {0}};
                        251     ; 
AX51 MACRO ASSEMBLER  ISR_RF                                                                05/13/09 22:32:29 PAGE     5

                        252     ; /* radio_init - basic initialization for radio
                        253     ;  * the radio should be configured by rf_configure after radio_init */
                        254     ; void rf_init()
                        255     
------                  256             RSEG  ?PR?rf_init?ISR_RF
000000                  257     rf_init:
                        258             USING   0
                        259                             ; SOURCE LINE # 32
                        260     ; {
                        261                             ; SOURCE LINE # 33
                        262     ;       /* RADIO init value: 0x80;*/
                        263     ;       PWR_UP = 1;     /* turn on radio power */
                        264                             ; SOURCE LINE # 35
000000 D2A7             265             SETB    PWR_UP
                        266     ;       /* connect spi to radio and setup clock rate to 1/8 of CPU */
                        267     ;       spi_init(SPI_CONN_RADIO, SPI_CLK_D8);
                        268                             ; SOURCE LINE # 37
000002 E4               269             CLR     A
000003 FD               270             MOV     R5,A
000004 7F02             271             MOV     R7,#02H
000006 120000     E     272             LCALL   _spi_init
                        273     ;       EA = 1; /* enable global interrupt */
                        274                             ; SOURCE LINE # 38
000009 D2AF             275             SETB    EA
                        276     ;       EX4 = 1;        /* enable radio interrupt */
                        277                             ; SOURCE LINE # 39
00000B D2EA             278             SETB    EX4
                        279     ; }
                        280                             ; SOURCE LINE # 40
00000D 22               281             RET     
                        282     ; END OF rf_init
                        283     
                        284     ; 
                        285     ; /* rf_configure - write configure data to radio subsystem, software 
                        286     ;  * should use construct the rf_config struct first
                        287     ;  * @*cfg: rf_config struct, which contains the configuration 
                        288     ;  * data for the radio subsystem.
                        289     ;  */
                        290     ; void rf_configure(struct rf_config *cfg)
                        291     
------                  292             RSEG  ?PR?_rf_configure?ISR_RF
000000                  293     _rf_configure:
                        294             USING   0
                        295                             ; SOURCE LINE # 47
                        296     ;---- Variable 'cfg?140' assigned to Register 'R1/R2/R3' ----
                        297     ; {
                        298                             ; SOURCE LINE # 48
                        299     ;       char *p;
                        300     ;       int i;
                        301     ; 
                        302     ;       CS = 1; /* enter configure mode */
                        303                             ; SOURCE LINE # 52
000000 D2A3             304             SETB    CS
                        305     ; 
                        306     ;       p = (char *)cfg;
                        307                             ; SOURCE LINE # 54
000002 8B00       F     308             MOV     p?141,R3
000004 8A00       F     309             MOV     p?141+01H,R2
000006 8900       F     310             MOV     p?141+02H,R1
                        311     ;       /* write configure data to radio */
                        312     ;       for (i = 0; i < sizeof(*cfg); i++) {
                        313                             ; SOURCE LINE # 56
000008 E4               314             CLR     A
000009 F500       F     315             MOV     i?142,A
00000B F500       F     316             MOV     i?142+01H,A
00000D                  317     ?C0002:
AX51 MACRO ASSEMBLER  ISR_RF                                                                05/13/09 22:32:29 PAGE     6

                        318     ;               spi_write_then_read(*(p + i));
                        319                             ; SOURCE LINE # 57
00000D AB00       F     320             MOV     R3,p?141
00000F AA00       F     321             MOV     R2,p?141+01H
000011 A900       F     322             MOV     R1,p?141+02H
000013 850082     F     323             MOV     DPL,i?142+01H
000016 850083     F     324             MOV     DPH,i?142
000019 120000     E     325             LCALL   ?C?CLDOPTR
00001C FF               326             MOV     R7,A
00001D 120000     E     327             LCALL   _spi_write_then_read
                        328     ;       }
                        329                             ; SOURCE LINE # 58
000020 0500       F     330             INC     i?142+01H
000022 E500       F     331             MOV     A,i?142+01H
000024 7002             332             JNZ     ?C0021
000026 0500       F     333             INC     i?142
000028                  334     ?C0021:
000028 C3               335             CLR     C
000029 940F             336             SUBB    A,#0FH
00002B E500       F     337             MOV     A,i?142
00002D 6480             338             XRL     A,#080H
00002F 9480             339             SUBB    A,#080H
000031 40DA             340             JC      ?C0002
000033                  341     ?C0003:
                        342     ; 
                        343     ;       CS = 0; /* back to standby mode */
                        344                             ; SOURCE LINE # 60
000033 C2A3             345             CLR     CS
                        346     ; }
                        347                             ; SOURCE LINE # 61
000035 22               348             RET     
                        349     ; END OF _rf_configure
                        350     
                        351     ; 
                        352     ; /* 
                        353     ;  * radio_send - send payload to specified address
                        354     ;  * @*addr: receiver's address
                        355     ;  * @addr_len: receiver's address length (in bytes)
                        356     ;  * @*payload: payload to receiver
                        357     ;  * @pl_len: payload to receiver length (in bytes)
                        358     ;  */
                        359     ; void rf_send(char *addr, unsigned char addr_len,
                        360     
------                  361             RSEG  ?PR?_rf_send?ISR_RF
000000                  362     _rf_send:
                        363             USING   0
                        364                             ; SOURCE LINE # 70
000000 8B00       F     365             MOV     addr?243,R3
000002 8A00       F     366             MOV     addr?243+01H,R2
000004 8900       F     367             MOV     addr?243+02H,R1
000006 8D00       F     368             MOV     addr_len?244,R5
                        369     ;               char *payload, unsigned char pl_len)
                        370     ; {
                        371                             ; SOURCE LINE # 72
                        372     ;       int i;
                        373     ; 
                        374     ;       CE = 1; /* enable on board processing */
                        375                             ; SOURCE LINE # 75
000008 D2A6             376             SETB    CE
                        377     ; 
                        378     ;       /* send address */
                        379     ;       for (i = 0; i < addr_len; i++)
                        380                             ; SOURCE LINE # 78
00000A E4               381             CLR     A
00000B F500       F     382             MOV     i?247,A
00000D F500       F     383             MOV     i?247+01H,A
AX51 MACRO ASSEMBLER  ISR_RF                                                                05/13/09 22:32:29 PAGE     7

00000F                  384     ?C0006:
00000F C3               385             CLR     C
000010 E500       F     386             MOV     A,i?247+01H
000012 9500       F     387             SUBB    A,addr_len?244
000014 7480             388             MOV     A,#080H
000016 F8               389             MOV     R0,A
000017 6500       F     390             XRL     A,i?247
000019 98               391             SUBB    A,R0
00001A 501D             392             JNC     ?C0007
                        393     ;               spi_write_then_read(*(addr + i));
                        394                             ; SOURCE LINE # 79
00001C AB00       F     395             MOV     R3,addr?243
00001E AA00       F     396             MOV     R2,addr?243+01H
000020 A900       F     397             MOV     R1,addr?243+02H
000022 850082     F     398             MOV     DPL,i?247+01H
000025 850083     F     399             MOV     DPH,i?247
000028 120000     E     400             LCALL   ?C?CLDOPTR
00002B FF               401             MOV     R7,A
00002C 120000     E     402             LCALL   _spi_write_then_read
00002F 0500       F     403             INC     i?247+01H
000031 E500       F     404             MOV     A,i?247+01H
000033 70DA             405             JNZ     ?C0006
000035 0500       F     406             INC     i?247
000037                  407     ?C0022:
000037 80D6             408             SJMP    ?C0006
000039                  409     ?C0007:
                        410     ;       /* send payload */
                        411     ;       for (i = 0; i < pl_len; i++)
                        412                             ; SOURCE LINE # 81
000039 E4               413             CLR     A
00003A F500       F     414             MOV     i?247,A
00003C F500       F     415             MOV     i?247+01H,A
00003E                  416     ?C0009:
00003E C3               417             CLR     C
00003F E500       F     418             MOV     A,i?247+01H
000041 9500       F     419             SUBB    A,pl_len?246
000043 7480             420             MOV     A,#080H
000045 F8               421             MOV     R0,A
000046 6500       F     422             XRL     A,i?247
000048 98               423             SUBB    A,R0
000049 501D             424             JNC     ?C0010
                        425     ;               spi_write_then_read(*(payload + i));
                        426                             ; SOURCE LINE # 82
00004B AB00       F     427             MOV     R3,payload?245
00004D AA00       F     428             MOV     R2,payload?245+01H
00004F A900       F     429             MOV     R1,payload?245+02H
000051 850082     F     430             MOV     DPL,i?247+01H
000054 850083     F     431             MOV     DPH,i?247
000057 120000     E     432             LCALL   ?C?CLDOPTR
00005A FF               433             MOV     R7,A
00005B 120000     E     434             LCALL   _spi_write_then_read
00005E 0500       F     435             INC     i?247+01H
000060 E500       F     436             MOV     A,i?247+01H
000062 70DA             437             JNZ     ?C0009
000064 0500       F     438             INC     i?247
000066                  439     ?C0023:
000066 80D6             440             SJMP    ?C0009
000068                  441     ?C0010:
                        442     ; 
                        443     ;       CE = 0; /* enable transmission */
                        444                             ; SOURCE LINE # 84
000068 C2A6             445             CLR     CE
                        446     ; }
                        447                             ; SOURCE LINE # 85
00006A 22               448             RET     
                        449     ; END OF _rf_send
AX51 MACRO ASSEMBLER  ISR_RF                                                                05/13/09 22:32:29 PAGE     8

                        450     
000053                  451     CSEG    AT      00053H
000053 020000     F     452             LJMP    rf_ch1_recv
                        453     
                        454     ; 
                        455     ; /* rf_ch1_recv - read a packet from radio channel 1 */
                        456     ; void rf_ch1_recv() interrupt 10
                        457     
------                  458             RSEG  ?PR?rf_ch1_recv?ISR_RF
                        459             USING   0
000000                  460     rf_ch1_recv:
000000 C0E0             461             PUSH    ACC
000002 C0F0             462             PUSH    B
000004 C083             463             PUSH    DPH
000006 C082             464             PUSH    DPL
000008 C0D0             465             PUSH    PSW
00000A 75D000           466             MOV     PSW,#00H
00000D C000             467             PUSH    AR0
00000F C001             468             PUSH    AR1
000011 C002             469             PUSH    AR2
000013 C003             470             PUSH    AR3
000015 C004             471             PUSH    AR4
000017 C005             472             PUSH    AR5
000019 C006             473             PUSH    AR6
00001B C007             474             PUSH    AR7
                        475             USING   0
                        476                             ; SOURCE LINE # 88
                        477     ; {
                        478     ;       int i = 0;
                        479                             ; SOURCE LINE # 90
00001D 750000     F     480             MOV     i?348,#00H
000020 750000     F     481             MOV     i?348+01H,#00H
                        482     ;       /* 
                        483     ;        * read the data and write the data to the buffer 
                        484     ;        * DR1 is set to low when all data is clocked out 
                        485     ;        */ 
                        486     ;       if (rf_buf.ready)
                        487                             ; SOURCE LINE # 95
000023 E500       F     488             MOV     A,rf_buf
000025 701B             489             JNZ     ?rf_ch1_recv?out
                        490     ;               goto out;
                        491                             ; SOURCE LINE # 96
000027                  492     ?C0015:
                        493     ;       while (DR1) {
                        494                             ; SOURCE LINE # 97
000027 30A215           495             JNB     DR1,?C0016
                        496     ;               rf_buf.buffer[i++] = spi_write_then_read(0);
                        497                             ; SOURCE LINE # 98
00002A E4               498             CLR     A
00002B FF               499             MOV     R7,A
00002C 120000     E     500             LCALL   _spi_write_then_read
00002F 0500       F     501             INC     i?348+01H
000031 E500       F     502             MOV     A,i?348+01H
000033 7002             503             JNZ     ?C0024
000035 0500       F     504             INC     i?348
000037                  505     ?C0024:
000037 14               506             DEC     A
000038 2400       F     507             ADD     A,#LOW (rf_buf+01H)
00003A F8               508             MOV     R0,A
00003B A607             509             MOV     @R0,AR7
                        510     ;       }
                        511                             ; SOURCE LINE # 99
00003D 80E8             512             SJMP    ?C0015
00003F                  513     ?C0016:
                        514     ;       rf_buf.ready = 1;       /* data ready */
                        515                             ; SOURCE LINE # 100
AX51 MACRO ASSEMBLER  ISR_RF                                                                05/13/09 22:32:29 PAGE     9

00003F 750001     F     516             MOV     rf_buf,#01H
                        517     ; out:
                        518                             ; SOURCE LINE # 101
000042                  519     ?rf_ch1_recv?out:
                        520     ;       /* clean interrupt flag (or the interrupt is always on */ 
                        521     ;       EXIF &= ~0x40;
                        522                             ; SOURCE LINE # 103
000042 5391BF           523             ANL     EXIF,#0BFH
                        524     ; }
                        525                             ; SOURCE LINE # 104
000045 D007             526             POP     AR7
000047 D006             527             POP     AR6
000049 D005             528             POP     AR5
00004B D004             529             POP     AR4
00004D D003             530             POP     AR3
00004F D002             531             POP     AR2
000051 D001             532             POP     AR1
000053 D000             533             POP     AR0
000055 D0D0             534             POP     PSW
000057 D082             535             POP     DPL
000059 D083             536             POP     DPH
00005B D0F0             537             POP     B
00005D D0E0             538             POP     ACC
00005F 32               539             RETI    
                        540     ; END OF rf_ch1_recv
                        541     
                        542     ; 
                        543     ; /* 
                        544     ;  * rf_wait_msg - wait for data packet
                        545     ;  */
                        546     ; void rf_wait_msg()
                        547     
------                  548             RSEG  ?PR?rf_wait_msg?ISR_RF
000000                  549     rf_wait_msg:
                        550                             ; SOURCE LINE # 109
                        551     ; {
                        552                             ; SOURCE LINE # 110
                        553     ;       CE = 1; /* enable radio transceiver (ch1) */
                        554                             ; SOURCE LINE # 111
000000 D2A6             555             SETB    CE
000002                  556     ?C0018:
                        557     ;       while (!rf_buf.ready)   /* wait for data */
                        558                             ; SOURCE LINE # 112
000002 E500       F     559             MOV     A,rf_buf
000004 60FC             560             JZ      ?C0018
000006                  561     ?C0019:
                        562     ;               ;
                        563     ;       CE = 0; /* disable radio to save power */
                        564                             ; SOURCE LINE # 114
000006 C2A6             565             CLR     CE
                        566     ; }
                        567                             ; SOURCE LINE # 115
000008 22               568             RET     
                        569     ; END OF rf_wait_msg
                        570     
                        571             END
AX51 MACRO ASSEMBLER  ISR_RF                                                                05/13/09 22:32:29 PAGE    10

SYMBOL TABLE LISTING
------ ----- -------


N A M E                                   T Y P E  V A L U E     ATTRIBUTES

?_RF_CONFIGURE?BYTE. . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?_RF_CONFIGURE?ISR_RF
?_RF_SEND?BYTE . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?_RF_SEND?ISR_RF
?C0002 . . . . . . . . . . . . . . . .    C  ADDR  000DH     R   SEG=?PR?_RF_CONFIGURE?ISR_RF
?C0003 . . . . . . . . . . . . . . . .    C  ADDR  0033H     R   SEG=?PR?_RF_CONFIGURE?ISR_RF
?C0006 . . . . . . . . . . . . . . . .    C  ADDR  000FH     R   SEG=?PR?_RF_SEND?ISR_RF
?C0007 . . . . . . . . . . . . . . . .    C  ADDR  0039H     R   SEG=?PR?_RF_SEND?ISR_RF
?C0009 . . . . . . . . . . . . . . . .    C  ADDR  003EH     R   SEG=?PR?_RF_SEND?ISR_RF
?C0010 . . . . . . . . . . . . . . . .    C  ADDR  0068H     R   SEG=?PR?_RF_SEND?ISR_RF
?C0015 . . . . . . . . . . . . . . . .    C  ADDR  0027H     R   SEG=?PR?RF_CH1_RECV?ISR_RF
?C0016 . . . . . . . . . . . . . . . .    C  ADDR  003FH     R   SEG=?PR?RF_CH1_RECV?ISR_RF
?C0018 . . . . . . . . . . . . . . . .    C  ADDR  0002H     R   SEG=?PR?RF_WAIT_MSG?ISR_RF
?C0019 . . . . . . . . . . . . . . . .    C  ADDR  0006H     R   SEG=?PR?RF_WAIT_MSG?ISR_RF
?C0021 . . . . . . . . . . . . . . . .    C  ADDR  0028H     R   SEG=?PR?_RF_CONFIGURE?ISR_RF
?C0022 . . . . . . . . . . . . . . . .    C  ADDR  0037H     R   SEG=?PR?_RF_SEND?ISR_RF
?C0023 . . . . . . . . . . . . . . . .    C  ADDR  0066H     R   SEG=?PR?_RF_SEND?ISR_RF
?C0024 . . . . . . . . . . . . . . . .    C  ADDR  0037H     R   SEG=?PR?RF_CH1_RECV?ISR_RF
?C?CLDOPTR . . . . . . . . . . . . . .    C  ADDR  -------       EXT
?C_INITSEG . . . . . . . . . . . . . .    C  SEG   00001AH       REL=UNIT, ALN=BYTE
?DT?_RF_CONFIGURE?ISR_RF . . . . . . .    D  SEG   000005H       REL=UNIT, ALN=BYTE
?DT?_RF_SEND?ISR_RF. . . . . . . . . .    D  SEG   00000AH       REL=UNIT, ALN=BYTE
?DT?ISR_RF . . . . . . . . . . . . . .    D  SEG   000018H       REL=UNIT, ALN=BYTE
?DT?RF_CH1_RECV?ISR_RF . . . . . . . .    D  SEG   000002H       REL=UNIT, ALN=BYTE
?PR?_RF_CONFIGURE?ISR_RF . . . . . . .    C  SEG   000036H       REL=UNIT, ALN=BYTE
?PR?_RF_SEND?ISR_RF. . . . . . . . . .    C  SEG   00006BH       REL=UNIT, ALN=BYTE
?PR?RF_CH1_RECV?ISR_RF . . . . . . . .    C  SEG   000060H       REL=UNIT, ALN=BYTE
?PR?RF_INIT?ISR_RF . . . . . . . . . .    C  SEG   00000EH       REL=UNIT, ALN=BYTE
?PR?RF_WAIT_MSG?ISR_RF . . . . . . . .    C  SEG   000009H       REL=UNIT, ALN=BYTE
?RF_CH1_RECV?BYTE. . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?RF_CH1_RECV?ISR_RF
?RF_CH1_RECV?OUT . . . . . . . . . . .    C  ADDR  0042H     R   SEG=?PR?RF_CH1_RECV?ISR_RF
_RF_CONFIGURE. . . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?_RF_CONFIGURE?ISR_RF
_RF_SEND . . . . . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?_RF_SEND?ISR_RF
_SPI_INIT. . . . . . . . . . . . . . .    C  ADDR  -------       EXT
_SPI_WRITE_THEN_READ . . . . . . . . .    C  ADDR  -------       EXT
AC . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.6   A   
ACC. . . . . . . . . . . . . . . . . .    D  ADDR  00E0H     A   
ADCCON . . . . . . . . . . . . . . . .    D  ADDR  00A1H     A   
ADCDATAH . . . . . . . . . . . . . . .    D  ADDR  00A2H     A   
ADCDATAL . . . . . . . . . . . . . . .    D  ADDR  00A3H     A   
ADCSTATIC. . . . . . . . . . . . . . .    D  ADDR  00A4H     A   
ADDR?243 . . . . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?_RF_SEND?ISR_RF
ADDR_LEN?244 . . . . . . . . . . . . .    D  ADDR  0003H     R   SEG=?DT?_RF_SEND?ISR_RF
AR0. . . . . . . . . . . . . . . . . .    D  ADDR  0000H     A   
AR1. . . . . . . . . . . . . . . . . .    D  ADDR  0001H     A   
AR2. . . . . . . . . . . . . . . . . .    D  ADDR  0002H     A   
AR3. . . . . . . . . . . . . . . . . .    D  ADDR  0003H     A   
AR4. . . . . . . . . . . . . . . . . .    D  ADDR  0004H     A   
AR5. . . . . . . . . . . . . . . . . .    D  ADDR  0005H     A   
AR6. . . . . . . . . . . . . . . . . .    D  ADDR  0006H     A   
AR7. . . . . . . . . . . . . . . . . .    D  ADDR  0007H     A   
B. . . . . . . . . . . . . . . . . . .    D  ADDR  00F0H     A   
C_T2 . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.1   A   
CE . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.6   A   
CK_CTRL. . . . . . . . . . . . . . . .    D  ADDR  00B6H     A   
CKCON. . . . . . . . . . . . . . . . .    D  ADDR  008EH     A   
CLK1 . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.1   A   
CLK2 . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.5   A   
CP_RL2 . . . . . . . . . . . . . . . .    B  ADDR  00C8H.0   A   
CPRL2. . . . . . . . . . . . . . . . .    B  ADDR  00C8H.0   A   
CS . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.3   A   
CT2. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.1   A   
AX51 MACRO ASSEMBLER  ISR_RF                                                                05/13/09 22:32:29 PAGE    11

CY . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.7   A   
DATA?. . . . . . . . . . . . . . . . .    B  ADDR  00A0H.0   A   
DEV_OFFSET . . . . . . . . . . . . . .    D  ADDR  00BEH     A   
DIN0 . . . . . . . . . . . . . . . . .    B  ADDR  0090H.2   A   
DIO0 . . . . . . . . . . . . . . . . .    B  ADDR  0090H.0   A   
DIO1 . . . . . . . . . . . . . . . . .    B  ADDR  0090H.1   A   
DIO2 . . . . . . . . . . . . . . . . .    B  ADDR  0080H.0   A   
DIO3 . . . . . . . . . . . . . . . . .    B  ADDR  0080H.1   A   
DIO4 . . . . . . . . . . . . . . . . .    B  ADDR  0080H.2   A   
DIO5 . . . . . . . . . . . . . . . . .    B  ADDR  0080H.3   A   
DIO6 . . . . . . . . . . . . . . . . .    B  ADDR  0080H.4   A   
DIO7 . . . . . . . . . . . . . . . . .    B  ADDR  0080H.5   A   
DIO8 . . . . . . . . . . . . . . . . .    B  ADDR  0080H.6   A   
DIO9 . . . . . . . . . . . . . . . . .    B  ADDR  0080H.7   A   
DOUT2. . . . . . . . . . . . . . . . .    B  ADDR  00A0H.4   A   
DPH. . . . . . . . . . . . . . . . . .    D  ADDR  0083H     A   
DPH0 . . . . . . . . . . . . . . . . .    D  ADDR  0083H     A   
DPH1 . . . . . . . . . . . . . . . . .    D  ADDR  0085H     A   
DPL. . . . . . . . . . . . . . . . . .    D  ADDR  0082H     A   
DPL0 . . . . . . . . . . . . . . . . .    D  ADDR  0082H     A   
DPL1 . . . . . . . . . . . . . . . . .    D  ADDR  0084H     A   
DPS. . . . . . . . . . . . . . . . . .    D  ADDR  0086H     A   
DR1. . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.2   A   
DR2. . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.6   A   
DR2_CE . . . . . . . . . . . . . . . .    B  ADDR  00A0H.6   A   
EA . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.7   A   
EICON. . . . . . . . . . . . . . . . .    D  ADDR  00D8H     A   
EIE. . . . . . . . . . . . . . . . . .    D  ADDR  00E8H     A   
EIP. . . . . . . . . . . . . . . . . .    D  ADDR  00F8H     A   
ES . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.4   A   
ET0. . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.1   A   
ET1. . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.3   A   
ET2. . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.5   A   
EWDI . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.4   A   
EX0. . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.0   A   
EX1. . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.2   A   
EX2. . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.0   A   
EX3. . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.1   A   
EX4. . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.2   A   
EX5. . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.3   A   
EXEN2. . . . . . . . . . . . . . . . .    B  ADDR  00C8H.3   A   
EXF2 . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.6   A   
EXIF . . . . . . . . . . . . . . . . .    D  ADDR  0091H     A   
F0 . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.5   A   
F1 . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.1   A   
I?142. . . . . . . . . . . . . . . . .    D  ADDR  0003H     R   SEG=?DT?_RF_CONFIGURE?ISR_RF
I?247. . . . . . . . . . . . . . . . .    D  ADDR  0008H     R   SEG=?DT?_RF_SEND?ISR_RF
I?348. . . . . . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?RF_CH1_RECV?ISR_RF
IE . . . . . . . . . . . . . . . . . .    D  ADDR  00A8H     A   
IE0. . . . . . . . . . . . . . . . . .    B  ADDR  0088H.1   A   
IE1. . . . . . . . . . . . . . . . . .    B  ADDR  0088H.3   A   
INT0_N . . . . . . . . . . . . . . . .    B  ADDR  0080H.3   A   
INT1_N . . . . . . . . . . . . . . . .    B  ADDR  0080H.4   A   
IP . . . . . . . . . . . . . . . . . .    D  ADDR  00B8H     A   
ISR_RF . . . . . . . . . . . . . . . .    -- ----  -------       
IT0. . . . . . . . . . . . . . . . . .    B  ADDR  0088H.0   A   
IT1. . . . . . . . . . . . . . . . . .    B  ADDR  0088H.2   A   
MPAGE. . . . . . . . . . . . . . . . .    D  ADDR  0092H     A   
OV . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.2   A   
P. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.0   A   
P0 . . . . . . . . . . . . . . . . . .    D  ADDR  0080H     A   
P0_0 . . . . . . . . . . . . . . . . .    B  ADDR  0080H.0   A   
P0_1 . . . . . . . . . . . . . . . . .    B  ADDR  0080H.1   A   
P0_2 . . . . . . . . . . . . . . . . .    B  ADDR  0080H.2   A   
P0_3 . . . . . . . . . . . . . . . . .    B  ADDR  0080H.3   A   
P0_4 . . . . . . . . . . . . . . . . .    B  ADDR  0080H.4   A   
AX51 MACRO ASSEMBLER  ISR_RF                                                                05/13/09 22:32:29 PAGE    12

P0_5 . . . . . . . . . . . . . . . . .    B  ADDR  0080H.5   A   
P0_6 . . . . . . . . . . . . . . . . .    B  ADDR  0080H.6   A   
P0_7 . . . . . . . . . . . . . . . . .    B  ADDR  0080H.7   A   
P0_ALT . . . . . . . . . . . . . . . .    D  ADDR  0095H     A   
P0_DIR . . . . . . . . . . . . . . . .    D  ADDR  0094H     A   
P1 . . . . . . . . . . . . . . . . . .    D  ADDR  0090H     A   
P1_0 . . . . . . . . . . . . . . . . .    B  ADDR  0090H.0   A   
P1_1 . . . . . . . . . . . . . . . . .    B  ADDR  0090H.1   A   
P1_2 . . . . . . . . . . . . . . . . .    B  ADDR  0090H.2   A   
P1_ALT . . . . . . . . . . . . . . . .    D  ADDR  0097H     A   
P1_DIR . . . . . . . . . . . . . . . .    D  ADDR  0096H     A   
P?141. . . . . . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?_RF_CONFIGURE?ISR_RF
PAYLOAD?245. . . . . . . . . . . . . .    D  ADDR  0004H     R   SEG=?DT?_RF_SEND?ISR_RF
PCON . . . . . . . . . . . . . . . . .    D  ADDR  0087H     A   
PL_LEN?246 . . . . . . . . . . . . . .    D  ADDR  0007H     R   SEG=?DT?_RF_SEND?ISR_RF
PS . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.4   A   
PSW. . . . . . . . . . . . . . . . . .    D  ADDR  00D0H     A   
PT0. . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.1   A   
PT1. . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.3   A   
PT2. . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.5   A   
PWDI . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.4   A   
PWM. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.7   A   
PWMCON . . . . . . . . . . . . . . . .    D  ADDR  00A9H     A   
PWMDUTY. . . . . . . . . . . . . . . .    D  ADDR  00AAH     A   
PWR_UP . . . . . . . . . . . . . . . .    B  ADDR  00A0H.7   A   
PX0. . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.0   A   
PX1. . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.2   A   
PX2. . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.0   A   
PX3. . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.1   A   
PX4. . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.2   A   
PX5. . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.3   A   
RADIO. . . . . . . . . . . . . . . . .    D  ADDR  00A0H     A   
RB8. . . . . . . . . . . . . . . . . .    B  ADDR  0098H.2   A   
RCAP2H . . . . . . . . . . . . . . . .    D  ADDR  00CBH     A   
RCAP2L . . . . . . . . . . . . . . . .    D  ADDR  00CAH     A   
RCLK . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.5   A   
REGX_CTRL. . . . . . . . . . . . . . .    D  ADDR  00ADH     A   
REGX_LSB . . . . . . . . . . . . . . .    D  ADDR  00ACH     A   
REGX_MSB . . . . . . . . . . . . . . .    D  ADDR  00ABH     A   
REN. . . . . . . . . . . . . . . . . .    B  ADDR  0098H.4   A   
RF_BUF . . . . . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?ISR_RF
RF_CH1_RECV. . . . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?RF_CH1_RECV?ISR_RF
RF_INIT. . . . . . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?RF_INIT?ISR_RF
RF_WAIT_MSG. . . . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?RF_WAIT_MSG?ISR_RF
RI . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.0   A   
RS0. . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.3   A   
RS1. . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.4   A   
RSTREAS. . . . . . . . . . . . . . . .    D  ADDR  00B1H     A   
RXD. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.1   A   
SBUF . . . . . . . . . . . . . . . . .    D  ADDR  0099H     A   
SCON . . . . . . . . . . . . . . . . .    D  ADDR  0098H     A   
SM0. . . . . . . . . . . . . . . . . .    B  ADDR  0098H.7   A   
SM1. . . . . . . . . . . . . . . . . .    B  ADDR  0098H.6   A   
SM2. . . . . . . . . . . . . . . . . .    B  ADDR  0098H.5   A   
SP . . . . . . . . . . . . . . . . . .    D  ADDR  0081H     A   
SPC_FNC. . . . . . . . . . . . . . . .    D  ADDR  008FH     A   
SPI_CTRL . . . . . . . . . . . . . . .    D  ADDR  00B3H     A   
SPI_DATA . . . . . . . . . . . . . . .    D  ADDR  00B2H     A   
SPICLK . . . . . . . . . . . . . . . .    D  ADDR  00B4H     A   
T0 . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.5   A   
T1 . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.6   A   
T1_1V2 . . . . . . . . . . . . . . . .    D  ADDR  00BCH     A   
T2 . . . . . . . . . . . . . . . . . .    B  ADDR  0090H.0   A   
T2_1V2 . . . . . . . . . . . . . . . .    D  ADDR  00BDH     A   
T2CON. . . . . . . . . . . . . . . . .    D  ADDR  00C8H     A   
TB8. . . . . . . . . . . . . . . . . .    B  ADDR  0098H.3   A   
AX51 MACRO ASSEMBLER  ISR_RF                                                                05/13/09 22:32:29 PAGE    13

TCLK . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.4   A   
TCON . . . . . . . . . . . . . . . . .    D  ADDR  0088H     A   
TEST_MODE. . . . . . . . . . . . . . .    D  ADDR  00B7H     A   
TF0. . . . . . . . . . . . . . . . . .    B  ADDR  0088H.5   A   
TF1. . . . . . . . . . . . . . . . . .    B  ADDR  0088H.7   A   
TF2. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.7   A   
TH0. . . . . . . . . . . . . . . . . .    D  ADDR  008CH     A   
TH1. . . . . . . . . . . . . . . . . .    D  ADDR  008DH     A   
TH2. . . . . . . . . . . . . . . . . .    D  ADDR  00CDH     A   
TI . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.1   A   
TICK_DV. . . . . . . . . . . . . . . .    D  ADDR  00B5H     A   
TL0. . . . . . . . . . . . . . . . . .    D  ADDR  008AH     A   
TL1. . . . . . . . . . . . . . . . . .    D  ADDR  008BH     A   
TL2. . . . . . . . . . . . . . . . . .    D  ADDR  00CCH     A   
TMOD . . . . . . . . . . . . . . . . .    D  ADDR  0089H     A   
TR0. . . . . . . . . . . . . . . . . .    B  ADDR  0088H.4   A   
TR1. . . . . . . . . . . . . . . . . .    B  ADDR  0088H.6   A   
TR2. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.2   A   
TXD. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.2   A   
WDTI . . . . . . . . . . . . . . . . .    B  ADDR  00D8H.3   A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S).
