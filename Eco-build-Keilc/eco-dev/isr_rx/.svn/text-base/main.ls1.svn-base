AX51 MACRO ASSEMBLER  MAIN                                                                  02/24/09 16:06:56 PAGE     1


MACRO ASSEMBLER AX51 V3.06a
OBJECT MODULE PLACED IN .\main.obj
ASSEMBLER INVOKED BY: C:\Keil\C51\BIN\AX51.exe .\main.src EP DEBUG SYMBOLS OJ(.\main.obj) PR(.\main.ls1) 

LOC    OBJ             LINE     SOURCE

                          1     ; ./main.src generated from: .\main.c
                          2     ; COMPILER INVOKED BY:
                          3     ;        C:\Keil\C51\BIN\C51.exe .\main.c BROWSE DEBUG CODE LISTINCLUDE SYMBOLS PREPRINT
                                INCDIR(../../Include) SRC(./main.src)
                          4     
                          5     $nomod51 
                          6     
                          7     NAME    MAIN
                          8     
 00A0.7                   9     PWR_UP  BIT     0A0H.7
 0080                    10     P0      DATA    080H
 0090                    11     P1      DATA    090H
 00D0.6                  12     AC      BIT     0D0H.6
 0080.5                  13     T0      BIT     080H.5
 00B3                    14     SPI_CTRL        DATA    0B3H
 0080.6                  15     T1      BIT     080H.6
 00A8.7                  16     EA      BIT     0A8H.7
 0090.0                  17     T2      BIT     090H.0
 00A0.6                  18     CE      BIT     0A0H.6
 00BE                    19     DEV_OFFSET      DATA    0BEH
 00A0.1                  20     CLK1    BIT     0A0H.1
 0090.2                  21     DIN0    BIT     090H.2
 00A0.5                  22     CLK2    BIT     0A0H.5
 0090.0                  23     DIO0    BIT     090H.0
 0083                    24     DPH0    DATA    083H
 0090.1                  25     DIO1    BIT     090H.1
 00A8                    26     IE      DATA    0A8H
 0085                    27     DPH1    DATA    085H
 0080.0                  28     DIO2    BIT     080H.0
 0080.1                  29     DIO3    BIT     080H.1
 0080.0                  30     P0_0    BIT     080H.0
 0090.0                  31     P1_0    BIT     090H.0
 0080.2                  32     DIO4    BIT     080H.2
 0080.1                  33     P0_1    BIT     080H.1
 0082                    34     DPL0    DATA    082H
 0090.1                  35     P1_1    BIT     090H.1
 0080.3                  36     DIO5    BIT     080H.3
 0080.2                  37     P0_2    BIT     080H.2
 0084                    38     DPL1    DATA    084H
 0090.2                  39     P1_2    BIT     090H.2
 0080.4                  40     DIO6    BIT     080H.4
 0080.3                  41     P0_3    BIT     080H.3
 0080.5                  42     DIO7    BIT     080H.5
 0080.4                  43     P0_4    BIT     080H.4
 00A4                    44     ADCSTATIC       DATA    0A4H
 0080.6                  45     DIO8    BIT     080H.6
 0080.5                  46     P0_5    BIT     080H.5
 00C8.6                  47     EXF2    BIT     0C8H.6
 00A0.3                  48     CS      BIT     0A0H.3
 0080.7                  49     DIO9    BIT     080H.7
 0080.6                  50     P0_6    BIT     080H.6
 0080.7                  51     P0_7    BIT     080H.7
 00A8.4                  52     ES      BIT     0A8H.4
 00B8                    53     IP      DATA    0B8H
 00A0.0                  54     DATA?   BIT     0A0H.0
 0098.0                  55     RI      BIT     098H.0
 00D0.7                  56     CY      BIT     0D0H.7
 0098.1                  57     TI      BIT     098H.1
AX51 MACRO ASSEMBLER  MAIN                                                                  02/24/09 16:06:56 PAGE     2

 00BC                    58     T1_1V2  DATA    0BCH
 008F                    59     SPC_FNC DATA    08FH
 00BD                    60     T2_1V2  DATA    0BDH
 00CB                    61     RCAP2H  DATA    0CBH
 00B8.4                  62     PS      BIT     0B8H.4
 0081                    63     SP      DATA    081H
 00D0.2                  64     OV      BIT     0D0H.2
 00B6                    65     CK_CTRL DATA    0B6H
 00CA                    66     RCAP2L  DATA    0CAH
 00B5                    67     TICK_DV DATA    0B5H
 00B1                    68     RSTREAS DATA    0B1H
 00C8.1                  69     C_T2    BIT     0C8H.1
 00E8.4                  70     EWDI    BIT     0E8H.4
 00A1                    71     ADCCON  DATA    0A1H
 00C8.5                  72     RCLK    BIT     0C8H.5
 00A2                    73     ADCDATAH        DATA    0A2H
 0091                    74     EXIF    DATA    091H
 00C8.4                  75     TCLK    BIT     0C8H.4
 00A0.6                  76     DR2_CE  BIT     0A0H.6
 00A3                    77     ADCDATAL        DATA    0A3H
 0099                    78     SBUF    DATA    099H
 0087                    79     PCON    DATA    087H
 0098                    80     SCON    DATA    098H
 00F8.4                  81     PWDI    BIT     0F8H.4
 0089                    82     TMOD    DATA    089H
 0088                    83     TCON    DATA    088H
 00D8.3                  84     WDTI    BIT     0D8H.3
 00AA                    85     PWMDUTY DATA    0AAH
 0088.1                  86     IE0     BIT     088H.1
 0088.3                  87     IE1     BIT     088H.3
 0094                    88     P0_DIR  DATA    094H
 00F0                    89     B       DATA    0F0H
 0096                    90     P1_DIR  DATA    096H
 0095                    91     P0_ALT  DATA    095H
 0097                    92     P1_ALT  DATA    097H
 00C8.0                  93     CP_RL2  BIT     0C8H.0
 00A0.2                  94     DR1     BIT     0A0H.2
 00E0                    95     ACC     DATA    0E0H
 00A0.6                  96     DR2     BIT     0A0H.6
 00B7                    97     TEST_MODE       DATA    0B7H
 00B4                    98     SPICLK  DATA    0B4H
 00C8.1                  99     CT2     BIT     0C8H.1
 00A8.1                 100     ET0     BIT     0A8H.1
 00A8.3                 101     ET1     BIT     0A8H.3
 0088.5                 102     TF0     BIT     088H.5
 0080.3                 103     INT0_N  BIT     080H.3
 00A8.5                 104     ET2     BIT     0A8H.5
 0088.7                 105     TF1     BIT     088H.7
 0080.4                 106     INT1_N  BIT     080H.4
 00C8.7                 107     TF2     BIT     0C8H.7
 0098.2                 108     RB8     BIT     098H.2
 008C                   109     TH0     DATA    08CH
 00A8.0                 110     EX0     BIT     0A8H.0
 0088.0                 111     IT0     BIT     088H.0
 008D                   112     TH1     DATA    08DH
 00A8.2                 113     EX1     BIT     0A8H.2
 0098.3                 114     TB8     BIT     098H.3
 0088.2                 115     IT1     BIT     088H.2
 00CD                   116     TH2     DATA    0CDH
 00AD                   117     REGX_CTRL       DATA    0ADH
 00E8.0                 118     EX2     BIT     0E8H.0
 00D0.0                 119     P       BIT     0D0H.0
 00E8.1                 120     EX3     BIT     0E8H.1
 0098.7                 121     SM0     BIT     098H.7
 008A                   122     TL0     DATA    08AH
 00E8.2                 123     EX4     BIT     0E8H.2
AX51 MACRO ASSEMBLER  MAIN                                                                  02/24/09 16:06:56 PAGE     3

 0098.6                 124     SM1     BIT     098H.6
 008B                   125     TL1     DATA    08BH
 00E8.3                 126     EX5     BIT     0E8H.3
 0098.5                 127     SM2     BIT     098H.5
 00CC                   128     TL2     DATA    0CCH
 00E8                   129     EIE     DATA    0E8H
 00B8.1                 130     PT0     BIT     0B8H.1
 00D0.3                 131     RS0     BIT     0D0H.3
 00B8.3                 132     PT1     BIT     0B8H.3
 00D0.4                 133     RS1     BIT     0D0H.4
 00B8.5                 134     PT2     BIT     0B8H.5
 0088.4                 135     TR0     BIT     088H.4
 00A9                   136     PWMCON  DATA    0A9H
 0088.6                 137     TR1     BIT     088H.6
 00C8.2                 138     TR2     BIT     0C8H.2
 00B8.0                 139     PX0     BIT     0B8H.0
 00B8.2                 140     PX1     BIT     0B8H.2
 00F8.0                 141     PX2     BIT     0F8H.0
 00F8.1                 142     PX3     BIT     0F8H.1
 00F8.2                 143     PX4     BIT     0F8H.2
 0083                   144     DPH     DATA    083H
 00F8.3                 145     PX5     BIT     0F8H.3
 00F8                   146     EIP     DATA    0F8H
 0082                   147     DPL     DATA    082H
 00C8.3                 148     EXEN2   BIT     0C8H.3
 00C8.0                 149     CPRL2   BIT     0C8H.0
 0098.4                 150     REN     BIT     098H.4
 00C8                   151     T2CON   DATA    0C8H
 0086                   152     DPS     DATA    086H
 00B2                   153     SPI_DATA        DATA    0B2H
 0092                   154     MPAGE   DATA    092H
 0080.1                 155     RXD     BIT     080H.1
 00A0.4                 156     DOUT2   BIT     0A0H.4
 00D8                   157     EICON   DATA    0D8H
 008E                   158     CKCON   DATA    08EH
 0080.2                 159     TXD     BIT     080H.2
 00A0                   160     RADIO   DATA    0A0H
 0080.7                 161     PWM     BIT     080H.7
 00D0.5                 162     F0      BIT     0D0H.5
 00D0.1                 163     F1      BIT     0D0H.1
 00AC                   164     REGX_LSB        DATA    0ACH
 00D0                   165     PSW     DATA    0D0H
 00AB                   166     REGX_MSB        DATA    0ABH
------                  167     ?PR?main?MAIN        SEGMENT CODE 
------                  168     ?DT?main?MAIN        SEGMENT DATA OVERLAYABLE 
------                  169     ?CO?MAIN             SEGMENT CODE 
------                  170     ?C_INITSEG           SEGMENT CODE 
------                  171     ?DT?MAIN             SEGMENT DATA 
                        172             EXTRN   CODE (_mdelay)
                        173             EXTRN   CODE (_rf_configure)
                        174             EXTRN   CODE (rf_wait_msg)
                        175             EXTRN   CODE (_serial_init)
                        176             EXTRN   CODE (_adc_init)
                        177             EXTRN   CODE (_puts)
                        178             EXTRN   CODE (_?int_print)
                        179             EXTRN   CODE (_store_cpu_rate)
                        180             EXTRN   CODE (rf_init)
                        181             EXTRN   DATA (rf_buf)
                        182             EXTRN   CODE (?C_STARTUP)
                        183             PUBLIC  rf_data
                        184             PUBLIC  dst_addr
                        185             PUBLIC  cfg
                        186             PUBLIC  main
                        187     
------                  188             RSEG  ?DT?main?MAIN
000000                  189     ?main?BYTE:
AX51 MACRO ASSEMBLER  MAIN                                                                  02/24/09 16:06:56 PAGE     4

000000                  190               i?040:   DS   2
000002                  191             ORG  2
000002                  192             acc?041:   DS   2
                        193     
------                  194             RSEG  ?DT?MAIN
000000                  195                 cfg:   DS   3
000003                  196            dst_addr:   DS   5
000008                  197             rf_data:   DS   15
                        198     
------                  199             RSEG  ?CO?MAIN
000000                  200     ?SC_0:
000000 72662074         201             DB  'r' ,'f' ,' ' ,'t' ,'e' ,'s' ,'t' ,'i' ,'n' ,'g' 
000004 65737469                 
000008 6E67                     
00000A 2070726F         202             DB  ' ' ,'p' ,'r' ,'o' ,'g' ,'r' ,'a' ,'m' ,' ' ,'s' 
00000E 6772616D                 
000012 2073                     
000014 74617274         203             DB  't' ,'a' ,'r' ,'t' ,'s' ,00AH,00DH,000H
000018 730A0D00                 
                        204     
00001C                  205     ?SC_28:
00001C 72662072         206             DB  'r' ,'f' ,' ' ,'r' ,'e' ,'c' ,'v' ,':' ,00AH,00DH
000020 6563763A                 
000024 0A0D                     
000026 00               207             DB  000H
                        208     
000027                  209     ?SC_39:
000027 583A00           210             DB  'X' ,':' ,000H
                        211     
00002A                  212     ?SC_42:
00002A 20202020         213             DB  ' ' ,' ' ,' ' ,' ' ,000H
00002E 00                       
                        214     
00002F                  215     ?SC_47:
00002F 593A00           216             DB  'Y' ,':' ,000H
                        217     
000032                  218     ?SC_50:
000032 5A3A00           219             DB  'Z' ,':' ,000H
                        220     
000035                  221     ?SC_53:
000035 0A0D00           222             DB  00AH,00DH,000H
                        223     
                        224     
------                  225             RSEG  ?C_INITSEG
000000 0F               226             DB      00FH
000001 00         F     227             DB      rf_data
000002 00               228             DB      000H
000003 A8               229             DB      0A8H
000004 00               230             DB      000H
000005 00               231             DB      000H
000006 00               232             DB      000H
000007 00               233             DB      000H
000008 00               234             DB      000H
000009 F1               235             DB      0F1H
00000A F2               236             DB      0F2H
00000B F3               237             DB      0F3H
00000C F4               238             DB      0F4H
00000D F5               239             DB      0F5H
00000E A3               240             DB      0A3H
00000F 6F               241             DB      06FH
000010 ED               242             DB      0EDH
                        243     
000011 03               244             DB      003H
000012 00         F     245             DB      cfg
000013 00               246             DB      000H
000014 0000       F     247             DW      rf_data + 0
AX51 MACRO ASSEMBLER  MAIN                                                                  02/24/09 16:06:56 PAGE     5

                        248     
000016 05               249             DB      005H
000017 00         F     250             DB      dst_addr
000018 01               251             DB      001H
000019 01               252             DB      001H
00001A 01               253             DB      001H
00001B 0000             254             DB  000H,000H
                        255     
                        256     
                        257     ; #include "Eco/reg24e1.h"
                        258     ; #include "Eco/eco_sys.h"
                        259     ; #include "utils/utils.h"
                        260     ; #include "eeprom/eeprom.h"
                        261     ; #include "adc/adc.h"
                        262     ; #include "eco_page.h"
                        263     ; #include "serial/serial.h"
                        264     ; //#include "rf/rf.h"
                        265     ; #include "isr/isr_rf.h"
                        266     ; 
                        267     ; //extern char rf_buf[RF_BUF_LEN];
                        268     ; extern struct radio_buffer rf_buf;
                        269     ; struct rf_config rf_data = { {0x00}, /* data2 width */
                        270     ;       {0xA8}, /* data1 width */
                        271     ;       {0x00, 0x00, 0x00, 0x00, 0x00}, /* addr2 */
                        272     ;       {0xF1, 0xF2, 0xF3, 0xF4, 0xF5}, /* addr1, host addr */
                        273     ;       {0xA3}, /* 24-bit address, 8-bit CRC */
                        274     ;       {0x6F, 0xED} };
                        275     ; struct rf_config *cfg = &rf_data;
                        276     ; char dst_addr[5] = {0x01, 0x01, 0x01};
                        277     ; /* utils.c */
                        278     ; 
                        279     ; 
                        280     ; int main()
                        281     
------                  282             RSEG  ?PR?main?MAIN
000000                  283     main:
                        284             USING   0
                        285                             ; SOURCE LINE # 24
                        286     ; {
                        287                             ; SOURCE LINE # 25
                        288     ;       int i;
                        289     ;       int acc = 0;
                        290                             ; SOURCE LINE # 27
000000 E4               291             CLR     A
000001 F500       F     292             MOV     acc?041,A
000003 F500       F     293             MOV     acc?041+01H,A
                        294     ;       store_cpu_rate(16);
                        295                             ; SOURCE LINE # 28
000005 7F10             296             MOV     R7,#010H
000007 FE               297             MOV     R6,A
000008 120000     E     298             LCALL   _store_cpu_rate
                        299     ;       /* init led */
                        300     ;       P0_DIR &= ~0x28;
                        301                             ; SOURCE LINE # 30
00000B 5394D7           302             ANL     P0_DIR,#0D7H
                        303     ;       P0_ALT &= ~0x28;
                        304                             ; SOURCE LINE # 31
00000E 5395D7           305             ANL     P0_ALT,#0D7H
                        306     ;       TMOD = 0x02;
                        307                             ; SOURCE LINE # 32
000011 758902           308             MOV     TMOD,#02H
                        309     ;     TH0 = 0xA4;
                        310                             ; SOURCE LINE # 33
000014 758CA4           311             MOV     TH0,#0A4H
                        312     ;       EA = 1;
                        313                             ; SOURCE LINE # 34
AX51 MACRO ASSEMBLER  MAIN                                                                  02/24/09 16:06:56 PAGE     6

000017 D2AF             314             SETB    EA
                        315     ;     ET0 = 1;
                        316                             ; SOURCE LINE # 35
000019 D2A9             317             SETB    ET0
                        318     ;     TR0 = 1;
                        319                             ; SOURCE LINE # 36
00001B D28C             320             SETB    TR0
                        321     ; 
                        322     ;       for (i = 0; i < 6; i++) {
                        323                             ; SOURCE LINE # 38
00001D E4               324             CLR     A
00001E F500       F     325             MOV     i?040,A
000020 F500       F     326             MOV     i?040+01H,A
000022                  327     ?C0001:
                        328     ;               blink_led();
                        329                             ; SOURCE LINE # 39
000022 638020           330             XRL     P0,#020H
                        331     ;               mdelay(400);
                        332                             ; SOURCE LINE # 40
000025 7F90             333             MOV     R7,#090H
000027 7E01             334             MOV     R6,#01H
000029 120000     E     335             LCALL   _mdelay
                        336     ;       }
                        337                             ; SOURCE LINE # 41
00002C 0500       F     338             INC     i?040+01H
00002E E500       F     339             MOV     A,i?040+01H
000030 7002             340             JNZ     ?C0007
000032 0500       F     341             INC     i?040
000034                  342     ?C0007:
000034 C3               343             CLR     C
000035 9406             344             SUBB    A,#06H
000037 E500       F     345             MOV     A,i?040
000039 6480             346             XRL     A,#080H
00003B 9480             347             SUBB    A,#080H
00003D 40E3             348             JC      ?C0001
00003F                  349     ?C0002:
                        350     ;       
                        351     ;       /* init adc */
                        352     ;     adc_init(ADC_CLK_D8, ADC_RES_12, EXTREF);
                        353                             ; SOURCE LINE # 44
00003F 7B10             354             MOV     R3,#010H
000041 7D03             355             MOV     R5,#03H
000043 7F20             356             MOV     R7,#020H
000045 120000     E     357             LCALL   _adc_init
                        358     ;       
                        359     ;       /* serial */
                        360     ;       serial_init(19200);
                        361                             ; SOURCE LINE # 47
000048 7F00             362             MOV     R7,#00H
00004A 7E4B             363             MOV     R6,#04BH
00004C 120000     E     364             LCALL   _serial_init
                        365     ;       puts("rf testing program starts\n\r");
                        366                             ; SOURCE LINE # 48
00004F 7BFF             367             MOV     R3,#0FFH
000051 7A00       F     368             MOV     R2,#HIGH (?SC_0)
000053 7900       F     369             MOV     R1,#LOW (?SC_0)
000055 120000     E     370             LCALL   _puts
                        371     ; 
                        372     ;       /* rf */
                        373     ;       rf_init();
                        374                             ; SOURCE LINE # 51
000058 120000     E     375             LCALL   rf_init
                        376     ;       rf_configure(cfg);
                        377                             ; SOURCE LINE # 52
00005B AB00       F     378             MOV     R3,cfg
00005D AA00       F     379             MOV     R2,cfg+01H
AX51 MACRO ASSEMBLER  MAIN                                                                  02/24/09 16:06:56 PAGE     7

00005F A900       F     380             MOV     R1,cfg+02H
000061 120000     E     381             LCALL   _rf_configure
000064                  382     ?C0004:
                        383     ; 
                        384     ;       /* init IO port */
                        385     ;       //P0_ALT &= ~0x06;
                        386     ;       //P0_DIR &= ~0x06;
                        387     ; 
                        388     ;       while (1) {
                        389                             ; SOURCE LINE # 58
                        390     ;               
                        391     ;               puts("rf recv:\n\r");
                        392                             ; SOURCE LINE # 60
000064 7BFF             393             MOV     R3,#0FFH
000066 7A00       F     394             MOV     R2,#HIGH (?SC_28)
000068 7900       F     395             MOV     R1,#LOW (?SC_28)
00006A 120000     E     396             LCALL   _puts
                        397     ;               rf_buf.ready = 0;
                        398                             ; SOURCE LINE # 61
00006D E4               399             CLR     A
00006E F500       E     400             MOV     rf_buf,A
                        401     ;               rf_wait_msg();
                        402                             ; SOURCE LINE # 62
000070 120000     E     403             LCALL   rf_wait_msg
                        404     ; 
                        405     ;               acc = rf_buf.buffer[1] + (rf_buf.buffer[0] << 8);
                        406                             ; SOURCE LINE # 64
000073 E500       E     407             MOV     A,rf_buf+01H
000075 FE               408             MOV     R6,A
000076 7C00             409             MOV     R4,#00H
000078 E4               410             CLR     A
000079 2500       E     411             ADD     A,rf_buf+02H
00007B F500       F     412             MOV     acc?041+01H,A
00007D EC               413             MOV     A,R4
00007E 3E               414             ADDC    A,R6
00007F F500       F     415             MOV     acc?041,A
                        416     ;               puts("X:");
                        417                             ; SOURCE LINE # 65
000081 7BFF             418             MOV     R3,#0FFH
000083 7A00       F     419             MOV     R2,#HIGH (?SC_39)
000085 7900       F     420             MOV     R1,#LOW (?SC_39)
000087 120000     E     421             LCALL   _puts
                        422     ;               int_print(acc);
                        423                             ; SOURCE LINE # 66
00008A AE00       F     424             MOV     R6,acc?041
00008C AF00       F     425             MOV     R7,acc?041+01H
00008E 120000     E     426             LCALL   _?int_print
                        427     ;               puts("    ");
                        428                             ; SOURCE LINE # 67
000091 7BFF             429             MOV     R3,#0FFH
000093 7A00       F     430             MOV     R2,#HIGH (?SC_42)
000095 7900       F     431             MOV     R1,#LOW (?SC_42)
000097 120000     E     432             LCALL   _puts
                        433     ;               acc = rf_buf.buffer[3] + (rf_buf.buffer[2] << 8);
                        434                             ; SOURCE LINE # 68
00009A E500       E     435             MOV     A,rf_buf+03H
00009C FE               436             MOV     R6,A
00009D 7C00             437             MOV     R4,#00H
00009F E4               438             CLR     A
0000A0 2500       E     439             ADD     A,rf_buf+04H
0000A2 F500       F     440             MOV     acc?041+01H,A
0000A4 EC               441             MOV     A,R4
0000A5 3E               442             ADDC    A,R6
0000A6 F500       F     443             MOV     acc?041,A
                        444     ;               puts("Y:");
                        445                             ; SOURCE LINE # 69
AX51 MACRO ASSEMBLER  MAIN                                                                  02/24/09 16:06:56 PAGE     8

0000A8 7BFF             446             MOV     R3,#0FFH
0000AA 7A00       F     447             MOV     R2,#HIGH (?SC_47)
0000AC 7900       F     448             MOV     R1,#LOW (?SC_47)
0000AE 120000     E     449             LCALL   _puts
                        450     ;               int_print(acc);
                        451                             ; SOURCE LINE # 70
0000B1 AE00       F     452             MOV     R6,acc?041
0000B3 AF00       F     453             MOV     R7,acc?041+01H
0000B5 120000     E     454             LCALL   _?int_print
                        455     ;               puts("    ");
                        456                             ; SOURCE LINE # 71
0000B8 7BFF             457             MOV     R3,#0FFH
0000BA 7A00       F     458             MOV     R2,#HIGH (?SC_42)
0000BC 7900       F     459             MOV     R1,#LOW (?SC_42)
0000BE 120000     E     460             LCALL   _puts
                        461     ;               acc = rf_buf.buffer[5] + (rf_buf.buffer[4] << 8);
                        462                             ; SOURCE LINE # 72
0000C1 E500       E     463             MOV     A,rf_buf+05H
0000C3 FE               464             MOV     R6,A
0000C4 7C00             465             MOV     R4,#00H
0000C6 E4               466             CLR     A
0000C7 2500       E     467             ADD     A,rf_buf+06H
0000C9 F500       F     468             MOV     acc?041+01H,A
0000CB EC               469             MOV     A,R4
0000CC 3E               470             ADDC    A,R6
0000CD F500       F     471             MOV     acc?041,A
                        472     ;               puts("Z:");
                        473                             ; SOURCE LINE # 73
0000CF 7BFF             474             MOV     R3,#0FFH
0000D1 7A00       F     475             MOV     R2,#HIGH (?SC_50)
0000D3 7900       F     476             MOV     R1,#LOW (?SC_50)
0000D5 120000     E     477             LCALL   _puts
                        478     ;               int_print(acc);
                        479                             ; SOURCE LINE # 74
0000D8 AE00       F     480             MOV     R6,acc?041
0000DA AF00       F     481             MOV     R7,acc?041+01H
0000DC 120000     E     482             LCALL   _?int_print
                        483     ;               puts("\n\r");
                        484                             ; SOURCE LINE # 75
0000DF 7BFF             485             MOV     R3,#0FFH
0000E1 7A00       F     486             MOV     R2,#HIGH (?SC_53)
0000E3 7900       F     487             MOV     R1,#LOW (?SC_53)
0000E5 120000     E     488             LCALL   _puts
                        489     ; 
                        490     ;               blink_led();
                        491                             ; SOURCE LINE # 77
0000E8 638020           492             XRL     P0,#020H
                        493     ;               mdelay(10);
                        494                             ; SOURCE LINE # 78
0000EB 7F0A             495             MOV     R7,#0AH
0000ED 7E00             496             MOV     R6,#00H
0000EF 120000     E     497             LCALL   _mdelay
                        498     ;       }
                        499                             ; SOURCE LINE # 79
0000F2 020000     F     500             LJMP    ?C0004
                        501     ; END OF main
                        502     
                        503             END
AX51 MACRO ASSEMBLER  MAIN                                                                  02/24/09 16:06:56 PAGE     9

SYMBOL TABLE LISTING
------ ----- -------


N A M E                        T Y P E  V A L U E     ATTRIBUTES

?C0001. . . . . . . . . . . .  C  ADDR  0022H     R   SEG=?PR?MAIN?MAIN
?C0002. . . . . . . . . . . .  C  ADDR  003FH     R   SEG=?PR?MAIN?MAIN
?C0004. . . . . . . . . . . .  C  ADDR  0064H     R   SEG=?PR?MAIN?MAIN
?C0007. . . . . . . . . . . .  C  ADDR  0034H     R   SEG=?PR?MAIN?MAIN
?C_INITSEG. . . . . . . . . .  C  SEG   00001DH       REL=UNIT, ALN=BYTE
?C_STARTUP. . . . . . . . . .  C  ADDR  -------       EXT
?CO?MAIN. . . . . . . . . . .  C  SEG   000038H       REL=UNIT, ALN=BYTE
?DT?MAIN. . . . . . . . . . .  D  SEG   000017H       REL=UNIT, ALN=BYTE
?DT?MAIN?MAIN . . . . . . . .  D  SEG   000004H       REL=UNIT, ALN=BYTE
?MAIN?BYTE. . . . . . . . . .  D  ADDR  0000H     R   SEG=?DT?MAIN?MAIN
?PR?MAIN?MAIN . . . . . . . .  C  SEG   0000F5H       REL=UNIT, ALN=BYTE
?SC_0 . . . . . . . . . . . .  C  ADDR  0000H     R   SEG=?CO?MAIN
?SC_28. . . . . . . . . . . .  C  ADDR  001CH     R   SEG=?CO?MAIN
?SC_39. . . . . . . . . . . .  C  ADDR  0027H     R   SEG=?CO?MAIN
?SC_42. . . . . . . . . . . .  C  ADDR  002AH     R   SEG=?CO?MAIN
?SC_47. . . . . . . . . . . .  C  ADDR  002FH     R   SEG=?CO?MAIN
?SC_50. . . . . . . . . . . .  C  ADDR  0032H     R   SEG=?CO?MAIN
?SC_53. . . . . . . . . . . .  C  ADDR  0035H     R   SEG=?CO?MAIN
_?INT_PRINT . . . . . . . . .  C  ADDR  -------       EXT
_ADC_INIT . . . . . . . . . .  C  ADDR  -------       EXT
_MDELAY . . . . . . . . . . .  C  ADDR  -------       EXT
_PUTS . . . . . . . . . . . .  C  ADDR  -------       EXT
_RF_CONFIGURE . . . . . . . .  C  ADDR  -------       EXT
_SERIAL_INIT. . . . . . . . .  C  ADDR  -------       EXT
_STORE_CPU_RATE . . . . . . .  C  ADDR  -------       EXT
AC. . . . . . . . . . . . . .  B  ADDR  00D0H.6   A   
ACC . . . . . . . . . . . . .  D  ADDR  00E0H     A   
ACC?041 . . . . . . . . . . .  D  ADDR  0002H     R   SEG=?DT?MAIN?MAIN
ADCCON. . . . . . . . . . . .  D  ADDR  00A1H     A   
ADCDATAH. . . . . . . . . . .  D  ADDR  00A2H     A   
ADCDATAL. . . . . . . . . . .  D  ADDR  00A3H     A   
ADCSTATIC . . . . . . . . . .  D  ADDR  00A4H     A   
B . . . . . . . . . . . . . .  D  ADDR  00F0H     A   
C_T2. . . . . . . . . . . . .  B  ADDR  00C8H.1   A   
CE. . . . . . . . . . . . . .  B  ADDR  00A0H.6   A   
CFG . . . . . . . . . . . . .  D  ADDR  0000H     R   SEG=?DT?MAIN
CK_CTRL . . . . . . . . . . .  D  ADDR  00B6H     A   
CKCON . . . . . . . . . . . .  D  ADDR  008EH     A   
CLK1. . . . . . . . . . . . .  B  ADDR  00A0H.1   A   
CLK2. . . . . . . . . . . . .  B  ADDR  00A0H.5   A   
CP_RL2. . . . . . . . . . . .  B  ADDR  00C8H.0   A   
CPRL2 . . . . . . . . . . . .  B  ADDR  00C8H.0   A   
CS. . . . . . . . . . . . . .  B  ADDR  00A0H.3   A   
CT2 . . . . . . . . . . . . .  B  ADDR  00C8H.1   A   
CY. . . . . . . . . . . . . .  B  ADDR  00D0H.7   A   
DATA? . . . . . . . . . . . .  B  ADDR  00A0H.0   A   
DEV_OFFSET. . . . . . . . . .  D  ADDR  00BEH     A   
DIN0. . . . . . . . . . . . .  B  ADDR  0090H.2   A   
DIO0. . . . . . . . . . . . .  B  ADDR  0090H.0   A   
DIO1. . . . . . . . . . . . .  B  ADDR  0090H.1   A   
DIO2. . . . . . . . . . . . .  B  ADDR  0080H.0   A   
DIO3. . . . . . . . . . . . .  B  ADDR  0080H.1   A   
DIO4. . . . . . . . . . . . .  B  ADDR  0080H.2   A   
DIO5. . . . . . . . . . . . .  B  ADDR  0080H.3   A   
DIO6. . . . . . . . . . . . .  B  ADDR  0080H.4   A   
DIO7. . . . . . . . . . . . .  B  ADDR  0080H.5   A   
DIO8. . . . . . . . . . . . .  B  ADDR  0080H.6   A   
DIO9. . . . . . . . . . . . .  B  ADDR  0080H.7   A   
DOUT2 . . . . . . . . . . . .  B  ADDR  00A0H.4   A   
DPH . . . . . . . . . . . . .  D  ADDR  0083H     A   
AX51 MACRO ASSEMBLER  MAIN                                                                  02/24/09 16:06:56 PAGE    10

DPH0. . . . . . . . . . . . .  D  ADDR  0083H     A   
DPH1. . . . . . . . . . . . .  D  ADDR  0085H     A   
DPL . . . . . . . . . . . . .  D  ADDR  0082H     A   
DPL0. . . . . . . . . . . . .  D  ADDR  0082H     A   
DPL1. . . . . . . . . . . . .  D  ADDR  0084H     A   
DPS . . . . . . . . . . . . .  D  ADDR  0086H     A   
DR1 . . . . . . . . . . . . .  B  ADDR  00A0H.2   A   
DR2 . . . . . . . . . . . . .  B  ADDR  00A0H.6   A   
DR2_CE. . . . . . . . . . . .  B  ADDR  00A0H.6   A   
DST_ADDR. . . . . . . . . . .  D  ADDR  0003H     R   SEG=?DT?MAIN
EA. . . . . . . . . . . . . .  B  ADDR  00A8H.7   A   
EICON . . . . . . . . . . . .  D  ADDR  00D8H     A   
EIE . . . . . . . . . . . . .  D  ADDR  00E8H     A   
EIP . . . . . . . . . . . . .  D  ADDR  00F8H     A   
ES. . . . . . . . . . . . . .  B  ADDR  00A8H.4   A   
ET0 . . . . . . . . . . . . .  B  ADDR  00A8H.1   A   
ET1 . . . . . . . . . . . . .  B  ADDR  00A8H.3   A   
ET2 . . . . . . . . . . . . .  B  ADDR  00A8H.5   A   
EWDI. . . . . . . . . . . . .  B  ADDR  00E8H.4   A   
EX0 . . . . . . . . . . . . .  B  ADDR  00A8H.0   A   
EX1 . . . . . . . . . . . . .  B  ADDR  00A8H.2   A   
EX2 . . . . . . . . . . . . .  B  ADDR  00E8H.0   A   
EX3 . . . . . . . . . . . . .  B  ADDR  00E8H.1   A   
EX4 . . . . . . . . . . . . .  B  ADDR  00E8H.2   A   
EX5 . . . . . . . . . . . . .  B  ADDR  00E8H.3   A   
EXEN2 . . . . . . . . . . . .  B  ADDR  00C8H.3   A   
EXF2. . . . . . . . . . . . .  B  ADDR  00C8H.6   A   
EXIF. . . . . . . . . . . . .  D  ADDR  0091H     A   
F0. . . . . . . . . . . . . .  B  ADDR  00D0H.5   A   
F1. . . . . . . . . . . . . .  B  ADDR  00D0H.1   A   
I?040 . . . . . . . . . . . .  D  ADDR  0000H     R   SEG=?DT?MAIN?MAIN
IE. . . . . . . . . . . . . .  D  ADDR  00A8H     A   
IE0 . . . . . . . . . . . . .  B  ADDR  0088H.1   A   
IE1 . . . . . . . . . . . . .  B  ADDR  0088H.3   A   
INT0_N. . . . . . . . . . . .  B  ADDR  0080H.3   A   
INT1_N. . . . . . . . . . . .  B  ADDR  0080H.4   A   
IP. . . . . . . . . . . . . .  D  ADDR  00B8H     A   
IT0 . . . . . . . . . . . . .  B  ADDR  0088H.0   A   
IT1 . . . . . . . . . . . . .  B  ADDR  0088H.2   A   
MAIN. . . . . . . . . . . . .  C  ADDR  0000H     R   SEG=?PR?MAIN?MAIN
MPAGE . . . . . . . . . . . .  D  ADDR  0092H     A   
OV. . . . . . . . . . . . . .  B  ADDR  00D0H.2   A   
P . . . . . . . . . . . . . .  B  ADDR  00D0H.0   A   
P0. . . . . . . . . . . . . .  D  ADDR  0080H     A   
P0_0. . . . . . . . . . . . .  B  ADDR  0080H.0   A   
P0_1. . . . . . . . . . . . .  B  ADDR  0080H.1   A   
P0_2. . . . . . . . . . . . .  B  ADDR  0080H.2   A   
P0_3. . . . . . . . . . . . .  B  ADDR  0080H.3   A   
P0_4. . . . . . . . . . . . .  B  ADDR  0080H.4   A   
P0_5. . . . . . . . . . . . .  B  ADDR  0080H.5   A   
P0_6. . . . . . . . . . . . .  B  ADDR  0080H.6   A   
P0_7. . . . . . . . . . . . .  B  ADDR  0080H.7   A   
P0_ALT. . . . . . . . . . . .  D  ADDR  0095H     A   
P0_DIR. . . . . . . . . . . .  D  ADDR  0094H     A   
P1. . . . . . . . . . . . . .  D  ADDR  0090H     A   
P1_0. . . . . . . . . . . . .  B  ADDR  0090H.0   A   
P1_1. . . . . . . . . . . . .  B  ADDR  0090H.1   A   
P1_2. . . . . . . . . . . . .  B  ADDR  0090H.2   A   
P1_ALT. . . . . . . . . . . .  D  ADDR  0097H     A   
P1_DIR. . . . . . . . . . . .  D  ADDR  0096H     A   
PCON. . . . . . . . . . . . .  D  ADDR  0087H     A   
PS. . . . . . . . . . . . . .  B  ADDR  00B8H.4   A   
PSW . . . . . . . . . . . . .  D  ADDR  00D0H     A   
PT0 . . . . . . . . . . . . .  B  ADDR  00B8H.1   A   
PT1 . . . . . . . . . . . . .  B  ADDR  00B8H.3   A   
PT2 . . . . . . . . . . . . .  B  ADDR  00B8H.5   A   
AX51 MACRO ASSEMBLER  MAIN                                                                  02/24/09 16:06:56 PAGE    11

PWDI. . . . . . . . . . . . .  B  ADDR  00F8H.4   A   
PWM . . . . . . . . . . . . .  B  ADDR  0080H.7   A   
PWMCON. . . . . . . . . . . .  D  ADDR  00A9H     A   
PWMDUTY . . . . . . . . . . .  D  ADDR  00AAH     A   
PWR_UP. . . . . . . . . . . .  B  ADDR  00A0H.7   A   
PX0 . . . . . . . . . . . . .  B  ADDR  00B8H.0   A   
PX1 . . . . . . . . . . . . .  B  ADDR  00B8H.2   A   
PX2 . . . . . . . . . . . . .  B  ADDR  00F8H.0   A   
PX3 . . . . . . . . . . . . .  B  ADDR  00F8H.1   A   
PX4 . . . . . . . . . . . . .  B  ADDR  00F8H.2   A   
PX5 . . . . . . . . . . . . .  B  ADDR  00F8H.3   A   
RADIO . . . . . . . . . . . .  D  ADDR  00A0H     A   
RB8 . . . . . . . . . . . . .  B  ADDR  0098H.2   A   
RCAP2H. . . . . . . . . . . .  D  ADDR  00CBH     A   
RCAP2L. . . . . . . . . . . .  D  ADDR  00CAH     A   
RCLK. . . . . . . . . . . . .  B  ADDR  00C8H.5   A   
REGX_CTRL . . . . . . . . . .  D  ADDR  00ADH     A   
REGX_LSB. . . . . . . . . . .  D  ADDR  00ACH     A   
REGX_MSB. . . . . . . . . . .  D  ADDR  00ABH     A   
REN . . . . . . . . . . . . .  B  ADDR  0098H.4   A   
RF_BUF. . . . . . . . . . . .  D  ADDR  -------       EXT
RF_DATA . . . . . . . . . . .  D  ADDR  0008H     R   SEG=?DT?MAIN
RF_INIT . . . . . . . . . . .  C  ADDR  -------       EXT
RF_WAIT_MSG . . . . . . . . .  C  ADDR  -------       EXT
RI. . . . . . . . . . . . . .  B  ADDR  0098H.0   A   
RS0 . . . . . . . . . . . . .  B  ADDR  00D0H.3   A   
RS1 . . . . . . . . . . . . .  B  ADDR  00D0H.4   A   
RSTREAS . . . . . . . . . . .  D  ADDR  00B1H     A   
RXD . . . . . . . . . . . . .  B  ADDR  0080H.1   A   
SBUF. . . . . . . . . . . . .  D  ADDR  0099H     A   
SCON. . . . . . . . . . . . .  D  ADDR  0098H     A   
SM0 . . . . . . . . . . . . .  B  ADDR  0098H.7   A   
SM1 . . . . . . . . . . . . .  B  ADDR  0098H.6   A   
SM2 . . . . . . . . . . . . .  B  ADDR  0098H.5   A   
SP. . . . . . . . . . . . . .  D  ADDR  0081H     A   
SPC_FNC . . . . . . . . . . .  D  ADDR  008FH     A   
SPI_CTRL. . . . . . . . . . .  D  ADDR  00B3H     A   
SPI_DATA. . . . . . . . . . .  D  ADDR  00B2H     A   
SPICLK. . . . . . . . . . . .  D  ADDR  00B4H     A   
T0. . . . . . . . . . . . . .  B  ADDR  0080H.5   A   
T1. . . . . . . . . . . . . .  B  ADDR  0080H.6   A   
T1_1V2. . . . . . . . . . . .  D  ADDR  00BCH     A   
T2. . . . . . . . . . . . . .  B  ADDR  0090H.0   A   
T2_1V2. . . . . . . . . . . .  D  ADDR  00BDH     A   
T2CON . . . . . . . . . . . .  D  ADDR  00C8H     A   
TB8 . . . . . . . . . . . . .  B  ADDR  0098H.3   A   
TCLK. . . . . . . . . . . . .  B  ADDR  00C8H.4   A   
TCON. . . . . . . . . . . . .  D  ADDR  0088H     A   
TEST_MODE . . . . . . . . . .  D  ADDR  00B7H     A   
TF0 . . . . . . . . . . . . .  B  ADDR  0088H.5   A   
TF1 . . . . . . . . . . . . .  B  ADDR  0088H.7   A   
TF2 . . . . . . . . . . . . .  B  ADDR  00C8H.7   A   
TH0 . . . . . . . . . . . . .  D  ADDR  008CH     A   
TH1 . . . . . . . . . . . . .  D  ADDR  008DH     A   
TH2 . . . . . . . . . . . . .  D  ADDR  00CDH     A   
TI. . . . . . . . . . . . . .  B  ADDR  0098H.1   A   
TICK_DV . . . . . . . . . . .  D  ADDR  00B5H     A   
TL0 . . . . . . . . . . . . .  D  ADDR  008AH     A   
TL1 . . . . . . . . . . . . .  D  ADDR  008BH     A   
TL2 . . . . . . . . . . . . .  D  ADDR  00CCH     A   
TMOD. . . . . . . . . . . . .  D  ADDR  0089H     A   
TR0 . . . . . . . . . . . . .  B  ADDR  0088H.4   A   
TR1 . . . . . . . . . . . . .  B  ADDR  0088H.6   A   
TR2 . . . . . . . . . . . . .  B  ADDR  00C8H.2   A   
TXD . . . . . . . . . . . . .  B  ADDR  0080H.2   A   
WDTI. . . . . . . . . . . . .  B  ADDR  00D8H.3   A   
AX51 MACRO ASSEMBLER  MAIN                                                                  02/24/09 16:06:56 PAGE    12



REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S).
