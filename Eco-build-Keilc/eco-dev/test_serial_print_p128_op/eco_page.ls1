AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/03/09 23:13:42 PAGE     1


MACRO ASSEMBLER AX51 V3.06a
OBJECT MODULE PLACED IN .\eco_page.obj
ASSEMBLER INVOKED BY: C:\Keil\C51\BIN\AX51.exe .\eco_page.src EP DEBUG SYMBOLS OJ(.\eco_page.obj) PR(.\eco_page.ls1) 

LOC    OBJ             LINE     SOURCE

                          1     ; ./eco_page.src generated from: .\eco_page.c
                          2     ; COMPILER INVOKED BY:
                          3     ;        C:\Keil\C51\BIN\C51.exe .\eco_page.c BROWSE DEBUG CODE LISTINCLUDE SYMBOLS PREP
                               RINT ROM(LARGE) INCDIR(../../Include) SRC(./eco_page.src)
                          4     
                          5     $nomod51 
                          6     
                          7     NAME    ECO_PAGE
                          8     
 00A0.7                   9     PWR_UP  BIT     0A0H.7
 0080                    10     P0      DATA    080H
 0090                    11     P1      DATA    090H
 00D0.6                  12     AC      BIT     0D0H.6
 0080.5                  13     T0      BIT     080H.5
 00B3                    14     SPI_CTRL        DATA    0B3H
 0080.6                  15     T1      BIT     080H.6
 00A8.7                  16     EA      BIT     0A8H.7
 0090.0                  17     T2      BIT     090H.0
 00A0.6                  18     CE      BIT     0A0H.6
 00BE                    19     DEV_OFFSET      DATA    0BEH
 00A0.1                  20     CLK1    BIT     0A0H.1
 0090.2                  21     DIN0    BIT     090H.2
 00A0.5                  22     CLK2    BIT     0A0H.5
 0090.0                  23     DIO0    BIT     090H.0
 0083                    24     DPH0    DATA    083H
 0090.1                  25     DIO1    BIT     090H.1
 00A8                    26     IE      DATA    0A8H
 0085                    27     DPH1    DATA    085H
 0080.0                  28     DIO2    BIT     080H.0
 0080.1                  29     DIO3    BIT     080H.1
 0080.0                  30     P0_0    BIT     080H.0
 0090.0                  31     P1_0    BIT     090H.0
 0080.2                  32     DIO4    BIT     080H.2
 0080.1                  33     P0_1    BIT     080H.1
 0082                    34     DPL0    DATA    082H
 0090.1                  35     P1_1    BIT     090H.1
 0080.3                  36     DIO5    BIT     080H.3
 0080.2                  37     P0_2    BIT     080H.2
 0084                    38     DPL1    DATA    084H
 0090.2                  39     P1_2    BIT     090H.2
 0080.4                  40     DIO6    BIT     080H.4
 0080.3                  41     P0_3    BIT     080H.3
 0080.5                  42     DIO7    BIT     080H.5
 0080.4                  43     P0_4    BIT     080H.4
 00A4                    44     ADCSTATIC       DATA    0A4H
 0080.6                  45     DIO8    BIT     080H.6
 0080.5                  46     P0_5    BIT     080H.5
 00C8.6                  47     EXF2    BIT     0C8H.6
 00A0.3                  48     CS      BIT     0A0H.3
 0080.7                  49     DIO9    BIT     080H.7
 0080.6                  50     P0_6    BIT     080H.6
 0080.7                  51     P0_7    BIT     080H.7
 00A8.4                  52     ES      BIT     0A8H.4
 00B8                    53     IP      DATA    0B8H
 00A0.0                  54     DATA?   BIT     0A0H.0
 0098.0                  55     RI      BIT     098H.0
 00D0.7                  56     CY      BIT     0D0H.7
 0098.1                  57     TI      BIT     098H.1
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/03/09 23:13:42 PAGE     2

 00BC                    58     T1_1V2  DATA    0BCH
 008F                    59     SPC_FNC DATA    08FH
 00BD                    60     T2_1V2  DATA    0BDH
 00CB                    61     RCAP2H  DATA    0CBH
 00B8.4                  62     PS      BIT     0B8H.4
 0081                    63     SP      DATA    081H
 00D0.2                  64     OV      BIT     0D0H.2
 00B6                    65     CK_CTRL DATA    0B6H
 00CA                    66     RCAP2L  DATA    0CAH
 00B5                    67     TICK_DV DATA    0B5H
 00B1                    68     RSTREAS DATA    0B1H
 00C8.1                  69     C_T2    BIT     0C8H.1
 00E8.4                  70     EWDI    BIT     0E8H.4
 00A1                    71     ADCCON  DATA    0A1H
 00C8.5                  72     RCLK    BIT     0C8H.5
 00A2                    73     ADCDATAH        DATA    0A2H
 0091                    74     EXIF    DATA    091H
 00C8.4                  75     TCLK    BIT     0C8H.4
 00A0.6                  76     DR2_CE  BIT     0A0H.6
 00A3                    77     ADCDATAL        DATA    0A3H
 0099                    78     SBUF    DATA    099H
 0087                    79     PCON    DATA    087H
 0098                    80     SCON    DATA    098H
 00F8.4                  81     PWDI    BIT     0F8H.4
 0089                    82     TMOD    DATA    089H
 0088                    83     TCON    DATA    088H
 00D8.3                  84     WDTI    BIT     0D8H.3
 00AA                    85     PWMDUTY DATA    0AAH
 0088.1                  86     IE0     BIT     088H.1
 0088.3                  87     IE1     BIT     088H.3
 0094                    88     P0_DIR  DATA    094H
 00F0                    89     B       DATA    0F0H
 0096                    90     P1_DIR  DATA    096H
 0095                    91     P0_ALT  DATA    095H
 0097                    92     P1_ALT  DATA    097H
 00C8.0                  93     CP_RL2  BIT     0C8H.0
 00A0.2                  94     DR1     BIT     0A0H.2
 00E0                    95     ACC     DATA    0E0H
 00A0.6                  96     DR2     BIT     0A0H.6
 00B7                    97     TEST_MODE       DATA    0B7H
 00B4                    98     SPICLK  DATA    0B4H
 00C8.1                  99     CT2     BIT     0C8H.1
 00A8.1                 100     ET0     BIT     0A8H.1
 00A8.3                 101     ET1     BIT     0A8H.3
 0088.5                 102     TF0     BIT     088H.5
 0080.3                 103     INT0_N  BIT     080H.3
 00A8.5                 104     ET2     BIT     0A8H.5
 0088.7                 105     TF1     BIT     088H.7
 0080.4                 106     INT1_N  BIT     080H.4
 00C8.7                 107     TF2     BIT     0C8H.7
 0098.2                 108     RB8     BIT     098H.2
 008C                   109     TH0     DATA    08CH
 00A8.0                 110     EX0     BIT     0A8H.0
 0088.0                 111     IT0     BIT     088H.0
 008D                   112     TH1     DATA    08DH
 00A8.2                 113     EX1     BIT     0A8H.2
 0098.3                 114     TB8     BIT     098H.3
 0088.2                 115     IT1     BIT     088H.2
 00CD                   116     TH2     DATA    0CDH
 00AD                   117     REGX_CTRL       DATA    0ADH
 00E8.0                 118     EX2     BIT     0E8H.0
 00D0.0                 119     P       BIT     0D0H.0
 00E8.1                 120     EX3     BIT     0E8H.1
 0098.7                 121     SM0     BIT     098H.7
 008A                   122     TL0     DATA    08AH
 00E8.2                 123     EX4     BIT     0E8H.2
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/03/09 23:13:42 PAGE     3

 0098.6                 124     SM1     BIT     098H.6
 008B                   125     TL1     DATA    08BH
 00E8.3                 126     EX5     BIT     0E8H.3
 0098.5                 127     SM2     BIT     098H.5
 00CC                   128     TL2     DATA    0CCH
 00E8                   129     EIE     DATA    0E8H
 00B8.1                 130     PT0     BIT     0B8H.1
 00D0.3                 131     RS0     BIT     0D0H.3
 00B8.3                 132     PT1     BIT     0B8H.3
 00D0.4                 133     RS1     BIT     0D0H.4
 00B8.5                 134     PT2     BIT     0B8H.5
 0088.4                 135     TR0     BIT     088H.4
 00A9                   136     PWMCON  DATA    0A9H
 0088.6                 137     TR1     BIT     088H.6
 00C8.2                 138     TR2     BIT     0C8H.2
 00B8.0                 139     PX0     BIT     0B8H.0
 00B8.2                 140     PX1     BIT     0B8H.2
 00F8.0                 141     PX2     BIT     0F8H.0
 00F8.1                 142     PX3     BIT     0F8H.1
 00F8.2                 143     PX4     BIT     0F8H.2
 0083                   144     DPH     DATA    083H
 00F8.3                 145     PX5     BIT     0F8H.3
 00F8                   146     EIP     DATA    0F8H
 0082                   147     DPL     DATA    082H
 00C8.3                 148     EXEN2   BIT     0C8H.3
 00C8.0                 149     CPRL2   BIT     0C8H.0
 0098.4                 150     REN     BIT     098H.4
 00C8                   151     T2CON   DATA    0C8H
 0086                   152     DPS     DATA    086H
 00B2                   153     SPI_DATA        DATA    0B2H
 0092                   154     MPAGE   DATA    092H
 0080.1                 155     RXD     BIT     080H.1
 00A0.4                 156     DOUT2   BIT     0A0H.4
 00D8                   157     EICON   DATA    0D8H
 008E                   158     CKCON   DATA    08EH
 0080.2                 159     TXD     BIT     080H.2
 00A0                   160     RADIO   DATA    0A0H
 0080.7                 161     PWM     BIT     080H.7
 00D0.5                 162     F0      BIT     0D0H.5
 00D0.1                 163     F1      BIT     0D0H.1
 00AC                   164     REGX_LSB        DATA    0ACH
 00D0                   165     PSW     DATA    0D0H
 00AB                   166     REGX_MSB        DATA    0ABH
------                  167     ?PR?eco_page_init?ECO_PAGE               SEGMENT CODE 
------                  168     ?PR?eco_page_manager?ECO_PAGE            SEGMENT CODE 
------                  169     ?DT?eco_page_manager?ECO_PAGE            SEGMENT DATA OVERLAYABLE 
------                  170     ?ID?ECO_PAGE         SEGMENT IDATA 
------                  171     ?DT?ECO_PAGE         SEGMENT DATA 
                        172             EXTRN   CODE (_eeprom_read)
                        173             EXTRN   CODE (?C?ICALL2)
                        174             EXTRN   CODE (eeprom_init)
                        175             PUBLIC  ECO_PAGE_TABLE_INDEX
                        176             PUBLIC  ECO_PAGE_REGISTER7
                        177             PUBLIC  ECO_PAGE_REGISTER6
                        178             PUBLIC  ECO_PAGE_REGISTER5
                        179             PUBLIC  ECO_PAGE_REGISTER4
                        180             PUBLIC  ECO_PAGE_ADDR
                        181             PUBLIC  ECO_PAGE_REGISTER3
                        182             PUBLIC  ECO_PAGE_REGISTER2
                        183             PUBLIC  ECO_PAGE_REGISTER1
                        184             PUBLIC  ECO_PAGE_PREV_VID
                        185             PUBLIC  ECO_PAGE_PREV_PID
                        186             PUBLIC  ECO_PAGE_SPI_CONN
                        187             PUBLIC  ECO_PAGE_TABLE
                        188             PUBLIC  eco_page_manager
                        189             PUBLIC  eco_page_init
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/03/09 23:13:42 PAGE     4

                        190     
------                  191             RSEG  ?DT?eco_page_manager?ECO_PAGE
000000                  192     ?eco_page_manager?BYTE:
000004                  193             ORG  4
000004                  194             seg?140:   DS   2
000000                  195             ORG  0
000000                  196               i?141:   DS   2
000002                  197             ORG  2
000002                  198      page_index?142:   DS   2
                        199     
------                  200             RSEG  ?ID?ECO_PAGE
000000                  201      ECO_PAGE_TABLE:   DS   8
000008                  202     ECO_PAGE_REGISTER1:   DS   1
000009                  203     ECO_PAGE_REGISTER2:   DS   1
00000A                  204     ECO_PAGE_REGISTER3:   DS   1
00000B                  205     ECO_PAGE_REGISTER4:   DS   1
00000C                  206     ECO_PAGE_REGISTER5:   DS   1
00000D                  207     ECO_PAGE_REGISTER6:   DS   1
00000E                  208     ECO_PAGE_REGISTER7:   DS   1
                        209     
------                  210             RSEG  ?DT?ECO_PAGE
000000                  211     ECO_PAGE_SPI_CONN:   DS   1
000001                  212     ECO_PAGE_PREV_PID:   DS   2
000003                  213     ECO_PAGE_PREV_VID:   DS   2
000005                  214       ECO_PAGE_ADDR:   DS   2
000007                  215     ECO_PAGE_TABLE_INDEX:   DS   1
                        216     ; /*
                        217     ;  * Author(s): Wei-Han Chen (Embedded Platform Lab, NTHU)
                        218     ;  * Copyright (c) 2009 National Tsing Hua University (NTHU) 
                        219     ;  * Permission to copy, modify, and distribute this program is granted 
                        220     ;  * for noncommercial purposes, provided the author(s) and copyright
                        221     ;  * notice are retained. All other uses require explicit written
                        222     ;  * permission from NTHU. 
                        223     ;  *
                        224     ;  * Eco Paging Library 
                        225     ;  *
                        226     ;  * Wei-Han Chen <xwaynec@gmail.com> 
                        227     ;  * 2009/2/13
                        228     ;  */
                        229     ; 
                        230     ; #include "eco_page.h"
                        231     ; #include "eeprom/eeprom.h"
                        232     ; 
                        233     ; //control page replacement policy is LRU or Round-Robin
                        234     ; #define PAGE_REPLACEMENT 1
                        235     ; 
                        236     ; //#define ECO_PAGE_SIZE 256
                        237     ; //#define ECO_PAGE_ADDR_OFFSET 11 
                        238     ; 
                        239     ; 
                        240     ; //#define ECO_PAGE_SIZE 128
                        241     ; //#define ECO_PAGE_ADDR_OFFSET 23
                        242     ; 
                        243     ; 
                        244     ; 
                        245     ; //#define ECO_PAGE_SIZE 64
                        246     ; //#define ECO_PAGE_ADDR_OFFSET 47
                        247     ; 
                        248     ; 
                        249     ; #define ECO_PAGE_SIZE 128
                        250     ; #define ECO_PAGE_ADDR_OFFSET 28
                        251     ; 
                        252     ; 
                        253     ; #if ECO_PAGE_SIZE == 64
                        254     ;       
                        255     ;       #define ECO_PAGE_ENTRY  (64-ECO_PAGE_ADDR_OFFSET)
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/03/09 23:13:42 PAGE     5

                        256     ;       #define ECO_PAGE_SHIFT  6
                        257     ;       #define ECO_PAGE_MASK   0x003F
                        258     ;       #define ECO_PAGE_MOV_MASK       0xFFC0
                        259     ; 
                        260     ;       unsigned int idata ECO_PAGE_TABLE[ECO_PAGE_ENTRY];
                        261     ;       //Eco page virtual address id
                        262     ;       unsigned int ECO_PAGE_PREV_VID;
                        263     ;       //Eco page physical address id 
                        264     ;       unsigned int ECO_PAGE_PREV_PID;
                        265     ; 
                        266     ; #elif ECO_PAGE_SIZE == 128
                        267     ;       
                        268     ;       #define ECO_PAGE_ENTRY (32-ECO_PAGE_ADDR_OFFSET)
                        269     ;       #define ECO_PAGE_SHIFT  7
                        270     ;       #define ECO_PAGE_MASK   0x007F
                        271     ;       #define ECO_PAGE_MOV_MASK       0xFF80
                        272     ; 
                        273     ;       unsigned int idata ECO_PAGE_TABLE[ECO_PAGE_ENTRY];
                        274     ;       //Eco page virtual address id
                        275     ;       unsigned int ECO_PAGE_PREV_VID;
                        276     ;       //Eco page physical address id 
                        277     ;       unsigned int ECO_PAGE_PREV_PID;
                        278     ; 
                        279     ; #elif ECO_PAGE_SIZE == 256
                        280     ;       
                        281     ;       #define ECO_PAGE_ENTRY  (16-ECO_PAGE_ADDR_OFFSET)
                        282     ;       #define ECO_PAGE_SHIFT  8       
                        283     ;       #define ECO_PAGE_MASK   0x00FF
                        284     ;       #define ECO_PAGE_MOV_MASK       0xFF00
                        285     ; 
                        286     ;       unsigned int ECO_PAGE_TABLE[ECO_PAGE_ENTRY];
                        287     ;       //Eco page virtual address id
                        288     ;       unsigned char ECO_PAGE_PREV_VID;
                        289     ;       //Eco page physical address id 
                        290     ;       unsigned char ECO_PAGE_PREV_PID;
                        291     ; 
                        292     ; #endif
                        293     ; 
                        294     ; unsigned char ECO_PAGE_TABLE_INDEX;
                        295     ; unsigned int ECO_PAGE_ADDR;
                        296     ; unsigned char ECO_PAGE_SPI_CONN;
                        297     ; 
                        298     ; unsigned char idata ECO_PAGE_REGISTER1;
                        299     ; unsigned char idata ECO_PAGE_REGISTER2;
                        300     ; unsigned char idata ECO_PAGE_REGISTER3;
                        301     ; unsigned char idata ECO_PAGE_REGISTER4;
                        302     ; unsigned char idata ECO_PAGE_REGISTER5;
                        303     ; unsigned char idata ECO_PAGE_REGISTER6;
                        304     ; unsigned char idata ECO_PAGE_REGISTER7;
                        305     ; 
                        306     ; 
                        307     ; void eco_page_init()
                        308     
------                  309             RSEG  ?PR?eco_page_init?ECO_PAGE
000000                  310     eco_page_init:
                        311                             ; SOURCE LINE # 92
                        312     ; {
                        313                             ; SOURCE LINE # 93
                        314     ;       //ECO_PAGE_TABLE_INDEX = ECO_PAGE_ENTRY - 1;
                        315     ;       ECO_PAGE_TABLE_INDEX = 0;       
                        316                             ; SOURCE LINE # 95
000000 E4               317             CLR     A
000001 F500       F     318             MOV     ECO_PAGE_TABLE_INDEX,A
                        319     ;       ECO_PAGE_ADDR = 0;
                        320                             ; SOURCE LINE # 96
000003 F500       F     321             MOV     ECO_PAGE_ADDR,A
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/03/09 23:13:42 PAGE     6

000005 F500       F     322             MOV     ECO_PAGE_ADDR+01H,A
                        323     ;       ECO_PAGE_PREV_VID = 0;
                        324                             ; SOURCE LINE # 97
000007 F500       F     325             MOV     ECO_PAGE_PREV_VID,A
000009 F500       F     326             MOV     ECO_PAGE_PREV_VID+01H,A
                        327     ;       ECO_PAGE_PREV_PID = 0;
                        328                             ; SOURCE LINE # 98
00000B F500       F     329             MOV     ECO_PAGE_PREV_PID,A
00000D F500       F     330             MOV     ECO_PAGE_PREV_PID+01H,A
                        331     ; }
                        332                             ; SOURCE LINE # 99
00000F 22               333             RET     
                        334     ; END OF eco_page_init
                        335     
                        336     ; 
                        337     ; 
                        338     ; #if PAGE_REPLACEMENT == 0 
                        339     ; //LRU page replacement
                        340     ; void eco_page_manager()
                        341     ; {
                        342     ;       unsigned int i;
                        343     ;       unsigned int page_index = -1;
                        344     ; 
                        345     ;       //if page id is the same with the last page id
                        346     ;       if((ECO_PAGE_ADDR >> ECO_PAGE_SHIFT) == ECO_PAGE_PREV_PID)
                        347     ;       {
                        348     ;               //virtual address id + function offset
                        349     ;               ECO_PAGE_ADDR = (ECO_PAGE_PREV_VID << ECO_PAGE_SHIFT) + (ECO_PAGE_ADDR &
                                ECO_PAGE_MASK);
                        350     ;               #pragma asm
000010 7800       F     351             MOV     R0,#LOW (ECO_PAGE_REGISTER1)
000012 E6               352             MOV     A,@R0
000013 F9               353             MOV     R1,A
000014 7800       F     354             MOV     R0,#LOW (ECO_PAGE_REGISTER2)
000016 E6               355             MOV     A,@R0
000017 FA               356             MOV     R2,A
000018 7800       F     357             MOV     R0,#LOW (ECO_PAGE_REGISTER3)
00001A E6               358             MOV     A,@R0
00001B FB               359             MOV     R3,A
00001C 7800       F     360             MOV     R0,#LOW (ECO_PAGE_REGISTER4)
00001E E6               361             MOV     A,@R0
00001F FC               362             MOV     R4,A
000020 7800       F     363             MOV     R0,#LOW (ECO_PAGE_REGISTER5)
000022 E6               364             MOV     A,@R0
000023 FD               365             MOV     R5,A
000024 7800       F     366             MOV     R0,#LOW (ECO_PAGE_REGISTER6)
000026 E6               367             MOV     A,@R0
000027 FE               368             MOV     R6,A
000028 7800       F     369             MOV     R0,#LOW (ECO_PAGE_REGISTER7)
00002A E6               370             MOV     A,@R0
00002B FF               371             MOV     R7,A
00002C 8500B3     F     372             MOV     SPI_CTRL,ECO_PAGE_SPI_CONN
00002F 850083     F     373             MOV     DPH,ECO_PAGE_ADDR
000032 850082     F     374             MOV     DPL,ECO_PAGE_ADDR+01H
000035 120000     E     375             LCALL   ?C?ICALL2
                        376     ;               //eco_page_function_call
                        377     ;               #pragma endasm
                        378     ;               return ;
                        379     ;       }
                        380     ; 
                        381     ;       //Check Table   
                        382     ;       for(i=0;i<ECO_PAGE_ENTRY;i++)
                        383     ;       {   
                        384     ;               if((ECO_PAGE_ADDR >> ECO_PAGE_SHIFT) == (ECO_PAGE_TABLE[i] & 0x7FFF))
                        385     ;               {
                        386     ;                       page_index = i;
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/03/09 23:13:42 PAGE     7

                        387     ; 
                        388     ;                       //set LRU bit is 1
                        389     ;                       ECO_PAGE_TABLE[i] = ECO_PAGE_TABLE[i] | 0x8000;
                        390     ;                       break;
                        391     ;               }
                        392     ;       }
                        393     ; 
                        394     ;       if(page_index != -1)
                        395     ;       {
                        396     ;               //store function physical addres id 
                        397     ;               ECO_PAGE_PREV_PID = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;
                        398     ;       
                        399     ;               //memory page is in ram
                        400     ;               ECO_PAGE_ADDR = ((page_index + ECO_PAGE_ADDR_OFFSET) << ECO_PAGE_SHIFT) 
                               + (ECO_PAGE_ADDR & ECO_PAGE_MASK);
                        401     ; 
                        402     ;               //cache the virtual address id
                        403     ;               ECO_PAGE_PREV_VID = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;
                        404     ; 
                        405     ; 
                        406     ;               
                        407     ;               #pragma asm
000038 7800       F     408             MOV     R0,#LOW (ECO_PAGE_REGISTER1)
00003A E6               409             MOV     A,@R0
00003B F9               410             MOV     R1,A
00003C 7800       F     411             MOV     R0,#LOW (ECO_PAGE_REGISTER2)
00003E E6               412             MOV     A,@R0
00003F FA               413             MOV     R2,A
000040 7800       F     414             MOV     R0,#LOW (ECO_PAGE_REGISTER3)
000042 E6               415             MOV     A,@R0
000043 FB               416             MOV     R3,A
000044 7800       F     417             MOV     R0,#LOW (ECO_PAGE_REGISTER4)
000046 E6               418             MOV     A,@R0
000047 FC               419             MOV     R4,A
000048 7800       F     420             MOV     R0,#LOW (ECO_PAGE_REGISTER5)
00004A E6               421             MOV     A,@R0
00004B FD               422             MOV     R5,A
00004C 7800       F     423             MOV     R0,#LOW (ECO_PAGE_REGISTER6)
00004E E6               424             MOV     A,@R0
00004F FE               425             MOV     R6,A
000050 7800       F     426             MOV     R0,#LOW (ECO_PAGE_REGISTER7)
000052 E6               427             MOV     A,@R0
000053 FF               428             MOV     R7,A
000054 8500B3     F     429             MOV     SPI_CTRL,ECO_PAGE_SPI_CONN
000057 850083     F     430             MOV     DPH,ECO_PAGE_ADDR
00005A 850082     F     431             MOV     DPL,ECO_PAGE_ADDR+01H
00005D 120000     E     432             LCALL   ?C?ICALL2
                        433     ;               //eco_page_function_call
                        434     ;               //MOV     DPH,ECO_PAGE_ADDR
                        435     ;               //MOV     DPL,ECO_PAGE_ADDR+01H
                        436     ;               //LCALL ?C?ICALL2
                        437     ;               #pragma endasm
                        438     ; 
                        439     ;               return ;
                        440     ;       }       
                        441     ;       else
                        442     ;       {
                        443     ;               //page fault
                        444     ;               for(i=(ECO_PAGE_TABLE_INDEX+1)%ECO_PAGE_ENTRY; ;i=(i+1)%ECO_PAGE_ENTRY)
                        445     ;               {
                        446     ;                       if((ECO_PAGE_TABLE[i] & 0x8000) == 0x8000)
                        447     ;                       {
                        448     ;                               //LRU bit is 1 and then set this bit is 0
                        449     ;                               ECO_PAGE_TABLE[i] = ECO_PAGE_TABLE[i] & 0x7FFF;
                        450     ;                       }
                        451     ;                       else
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/03/09 23:13:42 PAGE     8

                        452     ;                       {
                        453     ;                               unsigned char xdata *seg = (unsigned char xdata *)((i + 
                               ECO_PAGE_ADDR_OFFSET) << ECO_PAGE_SHIFT);
                        454     ;                               unsigned int j;
                        455     ;                               
                        456     ;                               //memory page is in ram
                        457     ;                               eeprom_init();
                        458     ; 
                        459     ;                               //mov code from eeprom to external ram
                        460     ;                               for(j=0;j<ECO_PAGE_SIZE;j++)
                        461     ;                               {
                        462     ;                                       *(seg+j) = eeprom_read(ECO_ADDR_SHIFT(ECO_PAGE_A
                               DDR & ECO_PAGE_MOV_MASK ) +j);
                        463     ;                               }
                        464     ;                               
                        465     ;                               //update page table to connect this physical address id 
                               with virtual address id 
                        466     ;                               ECO_PAGE_TABLE[i] = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;
                        467     ; 
                        468     ;                               //store physical address id
                        469     ;                               ECO_PAGE_PREV_PID = ECO_PAGE_TABLE[i];
                        470     ; 
                        471     ;                               //update page address e.g.  (page_id<<8) + page_offset
                        472     ;                               ECO_PAGE_ADDR = ((i + ECO_PAGE_ADDR_OFFSET) << ECO_PAGE_
                               SHIFT) + (ECO_PAGE_ADDR & ECO_PAGE_MASK);
                        473     ; 
                        474     ;                               //store virtual address id 
                        475     ;                               ECO_PAGE_PREV_VID = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;    
                        476     ; 
                        477     ;                               //mov to the next index
                        478     ;                               ECO_PAGE_TABLE_INDEX = i;
                        479     ; 
                        480     ;                               //jump  to function address
                        481     ;                               #pragma asm
000060 7800       F     482             MOV     R0,#LOW (ECO_PAGE_REGISTER1)
000062 E6               483             MOV     A,@R0
000063 F9               484             MOV     R1,A
000064 7800       F     485             MOV     R0,#LOW (ECO_PAGE_REGISTER2)
000066 E6               486             MOV     A,@R0
000067 FA               487             MOV     R2,A
000068 7800       F     488             MOV     R0,#LOW (ECO_PAGE_REGISTER3)
00006A E6               489             MOV     A,@R0
00006B FB               490             MOV     R3,A
00006C 7800       F     491             MOV     R0,#LOW (ECO_PAGE_REGISTER4)
00006E E6               492             MOV     A,@R0
00006F FC               493             MOV     R4,A
000070 7800       F     494             MOV     R0,#LOW (ECO_PAGE_REGISTER5)
000072 E6               495             MOV     A,@R0
000073 FD               496             MOV     R5,A
000074 7800       F     497             MOV     R0,#LOW (ECO_PAGE_REGISTER6)
000076 E6               498             MOV     A,@R0
000077 FE               499             MOV     R6,A
000078 7800       F     500             MOV     R0,#LOW (ECO_PAGE_REGISTER7)
00007A E6               501             MOV     A,@R0
00007B FF               502             MOV     R7,A
00007C 8500B3     F     503             MOV     SPI_CTRL,ECO_PAGE_SPI_CONN
00007F 850083     F     504             MOV     DPH,ECO_PAGE_ADDR
000082 850082     F     505             MOV     DPL,ECO_PAGE_ADDR+01H
000085 120000     E     506             LCALL   ?C?ICALL2
                        507     ;                               //eco_page_function_call
                        508     ;                               //MOV     DPH,ECO_PAGE_ADDR
                        509     ;                               //MOV     DPL,ECO_PAGE_ADDR+01H
                        510     ;                               //LCALL        ?C?ICALL2               
                        511     ;                               #pragma endasm
                        512     ;                               
                        513     ;                               return ;
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/03/09 23:13:42 PAGE     9

                        514     ;                               
                        515     ;                       }
                        516     ;               }
                        517     ;                       
                        518     ;       }
                        519     ;                               
                        520     ; }
                        521     ; 
                        522     ; #else
                        523     ; 
                        524     ; void eco_page_manager()
                        525     
------                  526             RSEG  ?PR?eco_page_manager?ECO_PAGE
000000                  527     eco_page_manager:
                        528             USING   0
                        529                             ; SOURCE LINE # 213
                        530     ; {
                        531                             ; SOURCE LINE # 214
                        532     ;       unsigned int i;
                        533     ;       unsigned int page_index = -1; 
                        534                             ; SOURCE LINE # 216
000000 74FF             535             MOV     A,#0FFH
000002 F500       F     536             MOV     page_index?142,A
000004 F500       F     537             MOV     page_index?142+01H,A
                        538     ; 
                        539     ;       //Check POP instruction 
                        540     ;       //for(i=0;i<10;i++)
                        541     ;       //{    
                        542     ;       //      blink_led();
                        543     ;       //      mdelay(200);
                        544     ;       //}    
                        545     ;       //mdelay(1000);
                        546     ;       
                        547     ;       //if page id is the same with the last page id
                        548     ;       if((ECO_PAGE_ADDR >> ECO_PAGE_SHIFT) == ECO_PAGE_PREV_PID)
                        549                             ; SOURCE LINE # 227
000006 E500       F     550             MOV     A,ECO_PAGE_ADDR+01H
000008 AE00       F     551             MOV     R6,ECO_PAGE_ADDR
00000A 7807             552             MOV     R0,#07H
00000C                  553     ?C0013:
00000C CE               554             XCH     A,R6
00000D C3               555             CLR     C
00000E 13               556             RRC     A
00000F CE               557             XCH     A,R6
000010 13               558             RRC     A
000011 D8F9             559             DJNZ    R0,?C0013
000013 B50048           560             CJNE    A,ECO_PAGE_PREV_PID+01H,?C0002
000016 EE               561             MOV     A,R6
000017 B50044           562             CJNE    A,ECO_PAGE_PREV_PID,?C0002
                        563     ;       {
                        564                             ; SOURCE LINE # 228
                        565     ;               //virtual address id + function offset
                        566     ;               ECO_PAGE_ADDR = (ECO_PAGE_PREV_VID << ECO_PAGE_SHIFT) + (ECO_PAGE_ADDR &
                                ECO_PAGE_MASK);
                        567                             ; SOURCE LINE # 230
00001A E500       F     568             MOV     A,ECO_PAGE_PREV_VID+01H
00001C AE00       F     569             MOV     R6,ECO_PAGE_PREV_VID
00001E 7807             570             MOV     R0,#07H
000020                  571     ?C0015:
000020 C3               572             CLR     C
000021 33               573             RLC     A
000022 CE               574             XCH     A,R6
000023 33               575             RLC     A
000024 CE               576             XCH     A,R6
000025 D8F9             577             DJNZ    R0,?C0015
000027 FF               578             MOV     R7,A
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/03/09 23:13:42 PAGE    10

000028 7C00             579             MOV     R4,#00H
00002A E500       F     580             MOV     A,ECO_PAGE_ADDR+01H
00002C 547F             581             ANL     A,#07FH
00002E 2F               582             ADD     A,R7
00002F F500       F     583             MOV     ECO_PAGE_ADDR+01H,A
000031 EC               584             MOV     A,R4
000032 3E               585             ADDC    A,R6
000033 F500       F     586             MOV     ECO_PAGE_ADDR,A
                        587     ;               #pragma asm
000035 7800       F     588             MOV     R0,#LOW (ECO_PAGE_REGISTER1)
000037 E6               589             MOV     A,@R0
000038 F9               590             MOV     R1,A
000039 7800       F     591             MOV     R0,#LOW (ECO_PAGE_REGISTER2)
00003B E6               592             MOV     A,@R0
00003C FA               593             MOV     R2,A
00003D 7800       F     594             MOV     R0,#LOW (ECO_PAGE_REGISTER3)
00003F E6               595             MOV     A,@R0
000040 FB               596             MOV     R3,A
000041 7800       F     597             MOV     R0,#LOW (ECO_PAGE_REGISTER4)
000043 E6               598             MOV     A,@R0
000044 FC               599             MOV     R4,A
000045 7800       F     600             MOV     R0,#LOW (ECO_PAGE_REGISTER5)
000047 E6               601             MOV     A,@R0
000048 FD               602             MOV     R5,A
000049 7800       F     603             MOV     R0,#LOW (ECO_PAGE_REGISTER6)
00004B E6               604             MOV     A,@R0
00004C FE               605             MOV     R6,A
00004D 7800       F     606             MOV     R0,#LOW (ECO_PAGE_REGISTER7)
00004F E6               607             MOV     A,@R0
000050 FF               608             MOV     R7,A
000051 8500B3     F     609             MOV     SPI_CTRL,ECO_PAGE_SPI_CONN
000054 850083     F     610             MOV     DPH,ECO_PAGE_ADDR
000057 850082     F     611             MOV     DPL,ECO_PAGE_ADDR+01H
00005A 120000     E     612             LCALL   ?C?ICALL2
                        613     ;               //eco_page_function_call
                        614               
00005D 22               615             RET     
                        616     ;               #pragma endasm
                        617     ;               return ;
                        618     ;       }       
                        619                             ; SOURCE LINE # 235
00005E                  620     ?C0002:
                        621     ;                               
                        622     ;       //Check Table   
                        623     ;       for(i=0;i<ECO_PAGE_ENTRY;i++)
                        624                             ; SOURCE LINE # 238
00005E E4               625             CLR     A
00005F F500       F     626             MOV     i?141,A
000061 F500       F     627             MOV     i?141+01H,A
000063                  628     ?C0004:
                        629     ;       {   
                        630                             ; SOURCE LINE # 239
                        631     ;               if((ECO_PAGE_ADDR >> ECO_PAGE_SHIFT) == ECO_PAGE_TABLE[i])
                        632                             ; SOURCE LINE # 240
000063 E500       F     633             MOV     A,i?141+01H
000065 25E0             634             ADD     A,ACC
000067 2400       F     635             ADD     A,#LOW (ECO_PAGE_TABLE+01H)
000069 F9               636             MOV     R1,A
00006A E500       F     637             MOV     A,ECO_PAGE_ADDR+01H
00006C AE00       F     638             MOV     R6,ECO_PAGE_ADDR
00006E 7807             639             MOV     R0,#07H
000070                  640     ?C0016:
000070 CE               641             XCH     A,R6
000071 C3               642             CLR     C
000072 13               643             RRC     A
000073 CE               644             XCH     A,R6
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/03/09 23:13:42 PAGE    11

000074 13               645             RRC     A
000075 D8F9             646             DJNZ    R0,?C0016
000077 67               647             XRL     A,@R1
000078 7003             648             JNZ     ?C0017
00007A EE               649             MOV     A,R6
00007B 19               650             DEC     R1
00007C 67               651             XRL     A,@R1
00007D                  652     ?C0017:
00007D 7008             653             JNZ     ?C0006
                        654     ;               {
                        655                             ; SOURCE LINE # 241
                        656     ;                       page_index = i;
                        657                             ; SOURCE LINE # 242
00007F 850000     F     658             MOV     page_index?142,i?141
000082 850000     F     659             MOV     page_index?142+01H,i?141+01H
                        660     ;                       break;
                        661                             ; SOURCE LINE # 243
000085 800E             662             SJMP    ?C0005
                        663     ;               }
                        664                             ; SOURCE LINE # 244
                        665     ;       }
                        666                             ; SOURCE LINE # 245
000087                  667     ?C0006:
000087 0500       F     668             INC     i?141+01H
000089 E500       F     669             MOV     A,i?141+01H
00008B 7002             670             JNZ     ?C0018
00008D 0500       F     671             INC     i?141
00008F                  672     ?C0018:
00008F 6404             673             XRL     A,#04H
000091 4500       F     674             ORL     A,i?141
000093 70CE             675             JNZ     ?C0004
000095                  676     ?C0005:
                        677     ; 
                        678     ;       if(page_index != -1) 
                        679                             ; SOURCE LINE # 247
000095 E500       F     680             MOV     A,page_index?142+01H
000097 F4               681             CPL     A
000098 7003             682             JNZ     ?C0019
00009A E500       F     683             MOV     A,page_index?142
00009C F4               684             CPL     A
00009D                  685     ?C0019:
00009D 606C             686             JZ      ?C0008
                        687     ;       {  
                        688                             ; SOURCE LINE # 248
                        689     ;               //store function physical addres id 
                        690     ;               ECO_PAGE_PREV_PID = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;
                        691                             ; SOURCE LINE # 250
00009F E500       F     692             MOV     A,ECO_PAGE_ADDR+01H
0000A1 AE00       F     693             MOV     R6,ECO_PAGE_ADDR
0000A3 7807             694             MOV     R0,#07H
0000A5                  695     ?C0020:
0000A5 CE               696             XCH     A,R6
0000A6 C3               697             CLR     C
0000A7 13               698             RRC     A
0000A8 CE               699             XCH     A,R6
0000A9 13               700             RRC     A
0000AA D8F9             701             DJNZ    R0,?C0020
0000AC F500       F     702             MOV     ECO_PAGE_PREV_PID+01H,A
0000AE 8E00       F     703             MOV     ECO_PAGE_PREV_PID,R6
                        704     ;       
                        705     ;               //memory page is in ram
                        706     ;               ECO_PAGE_ADDR = ((page_index + ECO_PAGE_ADDR_OFFSET) << ECO_PAGE_SHIFT) 
                               + (ECO_PAGE_ADDR & ECO_PAGE_MASK);
                        707                             ; SOURCE LINE # 253
0000B0 E500       F     708             MOV     A,page_index?142+01H
0000B2 241C             709             ADD     A,#01CH
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/03/09 23:13:42 PAGE    12

0000B4 FF               710             MOV     R7,A
0000B5 E4               711             CLR     A
0000B6 3500       F     712             ADDC    A,page_index?142
0000B8 FE               713             MOV     R6,A
0000B9 EF               714             MOV     A,R7
0000BA 7807             715             MOV     R0,#07H
0000BC                  716     ?C0021:
0000BC C3               717             CLR     C
0000BD 33               718             RLC     A
0000BE CE               719             XCH     A,R6
0000BF 33               720             RLC     A
0000C0 CE               721             XCH     A,R6
0000C1 D8F9             722             DJNZ    R0,?C0021
0000C3 FF               723             MOV     R7,A
0000C4 7C00             724             MOV     R4,#00H
0000C6 E500       F     725             MOV     A,ECO_PAGE_ADDR+01H
0000C8 547F             726             ANL     A,#07FH
0000CA 2F               727             ADD     A,R7
0000CB F500       F     728             MOV     ECO_PAGE_ADDR+01H,A
0000CD EC               729             MOV     A,R4
0000CE 3E               730             ADDC    A,R6
0000CF F500       F     731             MOV     ECO_PAGE_ADDR,A
                        732     ; 
                        733     ;               //cache the virtual address id
                        734     ;               ECO_PAGE_PREV_VID = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;
                        735                             ; SOURCE LINE # 256
0000D1 E500       F     736             MOV     A,ECO_PAGE_ADDR+01H
0000D3 AE00       F     737             MOV     R6,ECO_PAGE_ADDR
0000D5 7807             738             MOV     R0,#07H
0000D7                  739     ?C0022:
0000D7 CE               740             XCH     A,R6
0000D8 C3               741             CLR     C
0000D9 13               742             RRC     A
0000DA CE               743             XCH     A,R6
0000DB 13               744             RRC     A
0000DC D8F9             745             DJNZ    R0,?C0022
0000DE F500       F     746             MOV     ECO_PAGE_PREV_VID+01H,A
0000E0 8E00       F     747             MOV     ECO_PAGE_PREV_VID,R6
                        748     ; 
                        749     ;               #pragma asm
0000E2 7800       F     750             MOV     R0,#LOW (ECO_PAGE_REGISTER1)
0000E4 E6               751             MOV     A,@R0
0000E5 F9               752             MOV     R1,A
0000E6 7800       F     753             MOV     R0,#LOW (ECO_PAGE_REGISTER2)
0000E8 E6               754             MOV     A,@R0
0000E9 FA               755             MOV     R2,A
0000EA 7800       F     756             MOV     R0,#LOW (ECO_PAGE_REGISTER3)
0000EC E6               757             MOV     A,@R0
0000ED FB               758             MOV     R3,A
0000EE 7800       F     759             MOV     R0,#LOW (ECO_PAGE_REGISTER4)
0000F0 E6               760             MOV     A,@R0
0000F1 FC               761             MOV     R4,A
0000F2 7800       F     762             MOV     R0,#LOW (ECO_PAGE_REGISTER5)
0000F4 E6               763             MOV     A,@R0
0000F5 FD               764             MOV     R5,A
0000F6 7800       F     765             MOV     R0,#LOW (ECO_PAGE_REGISTER6)
0000F8 E6               766             MOV     A,@R0
0000F9 FE               767             MOV     R6,A
0000FA 7800       F     768             MOV     R0,#LOW (ECO_PAGE_REGISTER7)
0000FC E6               769             MOV     A,@R0
0000FD FF               770             MOV     R7,A
0000FE 8500B3     F     771             MOV     SPI_CTRL,ECO_PAGE_SPI_CONN
000101 850083     F     772             MOV     DPH,ECO_PAGE_ADDR
000104 850082     F     773             MOV     DPL,ECO_PAGE_ADDR+01H
000107 120000     E     774             LCALL   ?C?ICALL2
                        775     ;               //eco_page_function_call
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/03/09 23:13:42 PAGE    13

                        776               
                        777     ;               //MOV     DPH,ECO_PAGE_ADDR
                        778               
                        779     ;               //MOV     DPL,ECO_PAGE_ADDR+01H
                        780               
                        781     ;               //LCALL ?C?ICALL2
                        782               
                        783     ;               #pragma endasm
                        784     ;       }   
                        785                             ; SOURCE LINE # 264
00010A 22               786             RET     
00010B                  787     ?C0008:
                        788     ;       else
                        789     ;       {
                        790                             ; SOURCE LINE # 266
                        791     ;               //page fault
                        792     ;               // Move Data from EEPROM to iRAM 
                        793     ;               unsigned char xdata *seg = (unsigned char xdata *)((ECO_PAGE_TABLE_INDEX
                                + ECO_PAGE_ADDR_OFFSET) << ECO_PAGE_SHIFT);
                        794                             ; SOURCE LINE # 269
00010B E500       F     795             MOV     A,ECO_PAGE_TABLE_INDEX
00010D 241C             796             ADD     A,#01CH
00010F FF               797             MOV     R7,A
000110 E4               798             CLR     A
000111 33               799             RLC     A
000112 FE               800             MOV     R6,A
000113 EF               801             MOV     A,R7
000114 7807             802             MOV     R0,#07H
000116                  803     ?C0023:
000116 C3               804             CLR     C
000117 33               805             RLC     A
000118 CE               806             XCH     A,R6
000119 33               807             RLC     A
00011A CE               808             XCH     A,R6
00011B D8F9             809             DJNZ    R0,?C0023
00011D 8E00       F     810             MOV     seg?140,R6
00011F F500       F     811             MOV     seg?140+01H,A
                        812     ;               
                        813     ;               //memory page is in ram
                        814     ;               eeprom_init();
                        815                             ; SOURCE LINE # 272
000121 120000     E     816             LCALL   eeprom_init
                        817     ; 
                        818     ;               //mov code from eeprom to external ram
                        819     ;               for(i=0;i<ECO_PAGE_SIZE;i++)
                        820                             ; SOURCE LINE # 275
000124 E4               821             CLR     A
000125 F500       F     822             MOV     i?141,A
000127 F500       F     823             MOV     i?141+01H,A
000129                  824     ?C0010:
                        825     ;               {
                        826                             ; SOURCE LINE # 276
                        827     ;                       *(seg+i) = eeprom_read(ECO_ADDR_SHIFT(ECO_PAGE_ADDR & ECO_PAGE_M
                               OV_MASK) +i);
                        828                             ; SOURCE LINE # 277
000129 E500       F     829             MOV     A,ECO_PAGE_ADDR+01H
00012B 5480             830             ANL     A,#080H
00012D 2403             831             ADD     A,#03H
00012F FF               832             MOV     R7,A
000130 E4               833             CLR     A
000131 3500       F     834             ADDC    A,ECO_PAGE_ADDR
000133 CF               835             XCH     A,R7
000134 2500       F     836             ADD     A,i?141+01H
000136 CF               837             XCH     A,R7
000137 3500       F     838             ADDC    A,i?141
000139 FE               839             MOV     R6,A
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/03/09 23:13:42 PAGE    14

00013A 120000     E     840             LCALL   _eeprom_read
00013D E500       F     841             MOV     A,seg?140+01H
00013F 2500       F     842             ADD     A,i?141+01H
000141 F582             843             MOV     DPL,A
000143 E500       F     844             MOV     A,seg?140
000145 3500       F     845             ADDC    A,i?141
000147 F583             846             MOV     DPH,A
000149 EF               847             MOV     A,R7
00014A F0               848             MOVX    @DPTR,A
                        849     ;               }
                        850                             ; SOURCE LINE # 278
00014B 0500       F     851             INC     i?141+01H
00014D E500       F     852             MOV     A,i?141+01H
00014F 7002             853             JNZ     ?C0024
000151 0500       F     854             INC     i?141
000153                  855     ?C0024:
000153 C3               856             CLR     C
000154 9480             857             SUBB    A,#080H
000156 E500       F     858             MOV     A,i?141
000158 9400             859             SUBB    A,#00H
00015A 40CD             860             JC      ?C0010
00015C                  861     ?C0011:
                        862     ;               
                        863     ;               //update page table to connect this physical address id with virtual add
                               ress id 
                        864     ;               ECO_PAGE_TABLE[ECO_PAGE_TABLE_INDEX] = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;
                        865                             ; SOURCE LINE # 281
00015C E500       F     866             MOV     A,ECO_PAGE_ADDR+01H
00015E AE00       F     867             MOV     R6,ECO_PAGE_ADDR
000160 7807             868             MOV     R0,#07H
000162                  869     ?C0025:
000162 CE               870             XCH     A,R6
000163 C3               871             CLR     C
000164 13               872             RRC     A
000165 CE               873             XCH     A,R6
000166 13               874             RRC     A
000167 D8F9             875             DJNZ    R0,?C0025
000169 FF               876             MOV     R7,A
00016A E500       F     877             MOV     A,ECO_PAGE_TABLE_INDEX
00016C 25E0             878             ADD     A,ACC
00016E 2400       F     879             ADD     A,#LOW (ECO_PAGE_TABLE)
000170 F8               880             MOV     R0,A
000171 A606             881             MOV     @R0,AR6
000173 08               882             INC     R0
000174 A607             883             MOV     @R0,AR7
                        884     ; 
                        885     ;               //store physical address id
                        886     ;               //ECO_PAGE_PREV_PID = ECO_PAGE_TABLE[ECO_PAGE_TABLE_INDEX];
                        887     ;               ECO_PAGE_PREV_PID = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;
                        888                             ; SOURCE LINE # 285
000176 8E00       F     889             MOV     ECO_PAGE_PREV_PID,R6
000178 8F00       F     890             MOV     ECO_PAGE_PREV_PID+01H,R7
                        891     ; 
                        892     ;               //update page address
                        893     ;               ECO_PAGE_ADDR = ((ECO_PAGE_TABLE_INDEX + ECO_PAGE_ADDR_OFFSET) << ECO_PA
                               GE_SHIFT) + (ECO_PAGE_ADDR & ECO_PAGE_MASK);
                        894                             ; SOURCE LINE # 288
00017A E500       F     895             MOV     A,ECO_PAGE_TABLE_INDEX
00017C 241C             896             ADD     A,#01CH
00017E FF               897             MOV     R7,A
00017F E4               898             CLR     A
000180 33               899             RLC     A
000181 FE               900             MOV     R6,A
000182 EF               901             MOV     A,R7
000183 7807             902             MOV     R0,#07H
000185                  903     ?C0026:
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/03/09 23:13:42 PAGE    15

000185 C3               904             CLR     C
000186 33               905             RLC     A
000187 CE               906             XCH     A,R6
000188 33               907             RLC     A
000189 CE               908             XCH     A,R6
00018A D8F9             909             DJNZ    R0,?C0026
00018C FF               910             MOV     R7,A
00018D 7C00             911             MOV     R4,#00H
00018F E500       F     912             MOV     A,ECO_PAGE_ADDR+01H
000191 547F             913             ANL     A,#07FH
000193 2F               914             ADD     A,R7
000194 F500       F     915             MOV     ECO_PAGE_ADDR+01H,A
000196 EC               916             MOV     A,R4
000197 3E               917             ADDC    A,R6
000198 F500       F     918             MOV     ECO_PAGE_ADDR,A
                        919     ; 
                        920     ;               //store virtual address id 
                        921     ;               ECO_PAGE_PREV_VID = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;    
                        922                             ; SOURCE LINE # 291
00019A E500       F     923             MOV     A,ECO_PAGE_ADDR+01H
00019C AE00       F     924             MOV     R6,ECO_PAGE_ADDR
00019E 7807             925             MOV     R0,#07H
0001A0                  926     ?C0027:
0001A0 CE               927             XCH     A,R6
0001A1 C3               928             CLR     C
0001A2 13               929             RRC     A
0001A3 CE               930             XCH     A,R6
0001A4 13               931             RRC     A
0001A5 D8F9             932             DJNZ    R0,?C0027
0001A7 F500       F     933             MOV     ECO_PAGE_PREV_VID+01H,A
0001A9 8E00       F     934             MOV     ECO_PAGE_PREV_VID,R6
                        935     ; 
                        936     ;               //mov to the next index
                        937     ;               ECO_PAGE_TABLE_INDEX = (ECO_PAGE_TABLE_INDEX + 1) % ECO_PAGE_ENTRY;
                        938                             ; SOURCE LINE # 294
0001AB E500       F     939             MOV     A,ECO_PAGE_TABLE_INDEX
0001AD 04               940             INC     A
0001AE 5403             941             ANL     A,#03H
0001B0 F500       F     942             MOV     ECO_PAGE_TABLE_INDEX,A
                        943     ;                       
                        944     ;               //jump  to function address
                        945     ;               #pragma asm
0001B2 7800       F     946             MOV     R0,#LOW (ECO_PAGE_REGISTER1)
0001B4 E6               947             MOV     A,@R0
0001B5 F9               948             MOV     R1,A
0001B6 7800       F     949             MOV     R0,#LOW (ECO_PAGE_REGISTER2)
0001B8 E6               950             MOV     A,@R0
0001B9 FA               951             MOV     R2,A
0001BA 7800       F     952             MOV     R0,#LOW (ECO_PAGE_REGISTER3)
0001BC E6               953             MOV     A,@R0
0001BD FB               954             MOV     R3,A
0001BE 7800       F     955             MOV     R0,#LOW (ECO_PAGE_REGISTER4)
0001C0 E6               956             MOV     A,@R0
0001C1 FC               957             MOV     R4,A
0001C2 7800       F     958             MOV     R0,#LOW (ECO_PAGE_REGISTER5)
0001C4 E6               959             MOV     A,@R0
0001C5 FD               960             MOV     R5,A
0001C6 7800       F     961             MOV     R0,#LOW (ECO_PAGE_REGISTER6)
0001C8 E6               962             MOV     A,@R0
0001C9 FE               963             MOV     R6,A
0001CA 7800       F     964             MOV     R0,#LOW (ECO_PAGE_REGISTER7)
0001CC E6               965             MOV     A,@R0
0001CD FF               966             MOV     R7,A
0001CE 8500B3     F     967             MOV     SPI_CTRL,ECO_PAGE_SPI_CONN
0001D1 850083     F     968             MOV     DPH,ECO_PAGE_ADDR
0001D4 850082     F     969             MOV     DPL,ECO_PAGE_ADDR+01H
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/03/09 23:13:42 PAGE    16

0001D7 120000     E     970             LCALL   ?C?ICALL2
                        971     ;               //eco_page_function_call
                        972               
                        973     ;               //MOV     DPH,ECO_PAGE_ADDR
                        974               
                        975     ;               //MOV     DPL,ECO_PAGE_ADDR+01H
                        976               
                        977     ;               //LCALL        ?C?ICALL2               
                        978               
                        979     ;               #pragma endasm
                        980     ; 
                        981     ;       }
                        982                             ; SOURCE LINE # 304
                        983     ; 
                        984     ; }
                        985                             ; SOURCE LINE # 306
0001DA                  986     ?C0003:
0001DA 22               987             RET     
                        988     ; END OF eco_page_manager
                        989     
                        990             END
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/03/09 23:13:42 PAGE    17

SYMBOL TABLE LISTING
------ ----- -------


N A M E                                    T Y P E  V A L U E     ATTRIBUTES

?C0002. . . . . . . . . . . . . . . . .    C  ADDR  005EH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0003. . . . . . . . . . . . . . . . .    C  ADDR  01DAH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0004. . . . . . . . . . . . . . . . .    C  ADDR  0063H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0005. . . . . . . . . . . . . . . . .    C  ADDR  0095H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0006. . . . . . . . . . . . . . . . .    C  ADDR  0087H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0008. . . . . . . . . . . . . . . . .    C  ADDR  010BH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0010. . . . . . . . . . . . . . . . .    C  ADDR  0129H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0011. . . . . . . . . . . . . . . . .    C  ADDR  015CH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0013. . . . . . . . . . . . . . . . .    C  ADDR  000CH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0015. . . . . . . . . . . . . . . . .    C  ADDR  0020H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0016. . . . . . . . . . . . . . . . .    C  ADDR  0070H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0017. . . . . . . . . . . . . . . . .    C  ADDR  007DH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0018. . . . . . . . . . . . . . . . .    C  ADDR  008FH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0019. . . . . . . . . . . . . . . . .    C  ADDR  009DH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0020. . . . . . . . . . . . . . . . .    C  ADDR  00A5H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0021. . . . . . . . . . . . . . . . .    C  ADDR  00BCH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0022. . . . . . . . . . . . . . . . .    C  ADDR  00D7H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0023. . . . . . . . . . . . . . . . .    C  ADDR  0116H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0024. . . . . . . . . . . . . . . . .    C  ADDR  0153H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0025. . . . . . . . . . . . . . . . .    C  ADDR  0162H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0026. . . . . . . . . . . . . . . . .    C  ADDR  0185H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0027. . . . . . . . . . . . . . . . .    C  ADDR  01A0H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C?ICALL2 . . . . . . . . . . . . . . .    C  ADDR  -------       EXT
?DT?ECO_PAGE. . . . . . . . . . . . . .    D  SEG   000008H       REL=UNIT, ALN=BYTE
?DT?ECO_PAGE_MANAGER?ECO_PAGE . . . . .    D  SEG   000006H       REL=UNIT, ALN=BYTE
?ECO_PAGE_MANAGER?BYTE. . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?ECO_PAGE_MANAGER?ECO_PAGE
?ID?ECO_PAGE. . . . . . . . . . . . . .    I  SEG   00000FH       REL=UNIT, ALN=BYTE
?PR?ECO_PAGE_INIT?ECO_PAGE. . . . . . .    C  SEG   000088H       REL=UNIT, ALN=BYTE
?PR?ECO_PAGE_MANAGER?ECO_PAGE . . . . .    C  SEG   0001DBH       REL=UNIT, ALN=BYTE
_EEPROM_READ. . . . . . . . . . . . . .    C  ADDR  -------       EXT
AC. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.6   A   
ACC . . . . . . . . . . . . . . . . . .    D  ADDR  00E0H     A   
ADCCON. . . . . . . . . . . . . . . . .    D  ADDR  00A1H     A   
ADCDATAH. . . . . . . . . . . . . . . .    D  ADDR  00A2H     A   
ADCDATAL. . . . . . . . . . . . . . . .    D  ADDR  00A3H     A   
ADCSTATIC . . . . . . . . . . . . . . .    D  ADDR  00A4H     A   
AR6 . . . . . . . . . . . . . . . . . .    D  ADDR  0006H     A   
AR7 . . . . . . . . . . . . . . . . . .    D  ADDR  0007H     A   
B . . . . . . . . . . . . . . . . . . .    D  ADDR  00F0H     A   
C_T2. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.1   A   
CE. . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.6   A   
CK_CTRL . . . . . . . . . . . . . . . .    D  ADDR  00B6H     A   
CKCON . . . . . . . . . . . . . . . . .    D  ADDR  008EH     A   
CLK1. . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.1   A   
CLK2. . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.5   A   
CP_RL2. . . . . . . . . . . . . . . . .    B  ADDR  00C8H.0   A   
CPRL2 . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.0   A   
CS. . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.3   A   
CT2 . . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.1   A   
CY. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.7   A   
DATA? . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.0   A   
DEV_OFFSET. . . . . . . . . . . . . . .    D  ADDR  00BEH     A   
DIN0. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.2   A   
DIO0. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.0   A   
DIO1. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.1   A   
DIO2. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.0   A   
DIO3. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.1   A   
DIO4. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.2   A   
DIO5. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.3   A   
DIO6. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.4   A   
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/03/09 23:13:42 PAGE    18

DIO7. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.5   A   
DIO8. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.6   A   
DIO9. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.7   A   
DOUT2 . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.4   A   
DPH . . . . . . . . . . . . . . . . . .    D  ADDR  0083H     A   
DPH0. . . . . . . . . . . . . . . . . .    D  ADDR  0083H     A   
DPH1. . . . . . . . . . . . . . . . . .    D  ADDR  0085H     A   
DPL . . . . . . . . . . . . . . . . . .    D  ADDR  0082H     A   
DPL0. . . . . . . . . . . . . . . . . .    D  ADDR  0082H     A   
DPL1. . . . . . . . . . . . . . . . . .    D  ADDR  0084H     A   
DPS . . . . . . . . . . . . . . . . . .    D  ADDR  0086H     A   
DR1 . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.2   A   
DR2 . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.6   A   
DR2_CE. . . . . . . . . . . . . . . . .    B  ADDR  00A0H.6   A   
EA. . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.7   A   
ECO_PAGE. . . . . . . . . . . . . . . .    -- ----  -------       
ECO_PAGE_ADDR . . . . . . . . . . . . .    D  ADDR  0005H     R   SEG=?DT?ECO_PAGE
ECO_PAGE_INIT . . . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?ECO_PAGE_INIT?ECO_PAGE
ECO_PAGE_MANAGER. . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
ECO_PAGE_PREV_PID . . . . . . . . . . .    D  ADDR  0001H     R   SEG=?DT?ECO_PAGE
ECO_PAGE_PREV_VID . . . . . . . . . . .    D  ADDR  0003H     R   SEG=?DT?ECO_PAGE
ECO_PAGE_REGISTER1. . . . . . . . . . .    I  ADDR  0008H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER2. . . . . . . . . . .    I  ADDR  0009H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER3. . . . . . . . . . .    I  ADDR  000AH     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER4. . . . . . . . . . .    I  ADDR  000BH     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER5. . . . . . . . . . .    I  ADDR  000CH     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER6. . . . . . . . . . .    I  ADDR  000DH     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER7. . . . . . . . . . .    I  ADDR  000EH     R   SEG=?ID?ECO_PAGE
ECO_PAGE_SPI_CONN . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?ECO_PAGE
ECO_PAGE_TABLE. . . . . . . . . . . . .    I  ADDR  0000H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_TABLE_INDEX. . . . . . . . . .    D  ADDR  0007H     R   SEG=?DT?ECO_PAGE
EEPROM_INIT . . . . . . . . . . . . . .    C  ADDR  -------       EXT
EICON . . . . . . . . . . . . . . . . .    D  ADDR  00D8H     A   
EIE . . . . . . . . . . . . . . . . . .    D  ADDR  00E8H     A   
EIP . . . . . . . . . . . . . . . . . .    D  ADDR  00F8H     A   
ES. . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.4   A   
ET0 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.1   A   
ET1 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.3   A   
ET2 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.5   A   
EWDI. . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.4   A   
EX0 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.0   A   
EX1 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.2   A   
EX2 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.0   A   
EX3 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.1   A   
EX4 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.2   A   
EX5 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.3   A   
EXEN2 . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.3   A   
EXF2. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.6   A   
EXIF. . . . . . . . . . . . . . . . . .    D  ADDR  0091H     A   
F0. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.5   A   
F1. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.1   A   
I?141 . . . . . . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?ECO_PAGE_MANAGER?ECO_PAGE
IE. . . . . . . . . . . . . . . . . . .    D  ADDR  00A8H     A   
IE0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.1   A   
IE1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.3   A   
INT0_N. . . . . . . . . . . . . . . . .    B  ADDR  0080H.3   A   
INT1_N. . . . . . . . . . . . . . . . .    B  ADDR  0080H.4   A   
IP. . . . . . . . . . . . . . . . . . .    D  ADDR  00B8H     A   
IT0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.0   A   
IT1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.2   A   
MPAGE . . . . . . . . . . . . . . . . .    D  ADDR  0092H     A   
OV. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.2   A   
P . . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.0   A   
P0. . . . . . . . . . . . . . . . . . .    D  ADDR  0080H     A   
P0_0. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.0   A   
P0_1. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.1   A   
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/03/09 23:13:42 PAGE    19

P0_2. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.2   A   
P0_3. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.3   A   
P0_4. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.4   A   
P0_5. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.5   A   
P0_6. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.6   A   
P0_7. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.7   A   
P0_ALT. . . . . . . . . . . . . . . . .    D  ADDR  0095H     A   
P0_DIR. . . . . . . . . . . . . . . . .    D  ADDR  0094H     A   
P1. . . . . . . . . . . . . . . . . . .    D  ADDR  0090H     A   
P1_0. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.0   A   
P1_1. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.1   A   
P1_2. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.2   A   
P1_ALT. . . . . . . . . . . . . . . . .    D  ADDR  0097H     A   
P1_DIR. . . . . . . . . . . . . . . . .    D  ADDR  0096H     A   
PAGE_INDEX?142. . . . . . . . . . . . .    D  ADDR  0002H     R   SEG=?DT?ECO_PAGE_MANAGER?ECO_PAGE
PCON. . . . . . . . . . . . . . . . . .    D  ADDR  0087H     A   
PS. . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.4   A   
PSW . . . . . . . . . . . . . . . . . .    D  ADDR  00D0H     A   
PT0 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.1   A   
PT1 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.3   A   
PT2 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.5   A   
PWDI. . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.4   A   
PWM . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.7   A   
PWMCON. . . . . . . . . . . . . . . . .    D  ADDR  00A9H     A   
PWMDUTY . . . . . . . . . . . . . . . .    D  ADDR  00AAH     A   
PWR_UP. . . . . . . . . . . . . . . . .    B  ADDR  00A0H.7   A   
PX0 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.0   A   
PX1 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.2   A   
PX2 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.0   A   
PX3 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.1   A   
PX4 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.2   A   
PX5 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.3   A   
RADIO . . . . . . . . . . . . . . . . .    D  ADDR  00A0H     A   
RB8 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.2   A   
RCAP2H. . . . . . . . . . . . . . . . .    D  ADDR  00CBH     A   
RCAP2L. . . . . . . . . . . . . . . . .    D  ADDR  00CAH     A   
RCLK. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.5   A   
REGX_CTRL . . . . . . . . . . . . . . .    D  ADDR  00ADH     A   
REGX_LSB. . . . . . . . . . . . . . . .    D  ADDR  00ACH     A   
REGX_MSB. . . . . . . . . . . . . . . .    D  ADDR  00ABH     A   
REN . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.4   A   
RI. . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.0   A   
RS0 . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.3   A   
RS1 . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.4   A   
RSTREAS . . . . . . . . . . . . . . . .    D  ADDR  00B1H     A   
RXD . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.1   A   
SBUF. . . . . . . . . . . . . . . . . .    D  ADDR  0099H     A   
SCON. . . . . . . . . . . . . . . . . .    D  ADDR  0098H     A   
SEG?140 . . . . . . . . . . . . . . . .    D  ADDR  0004H     R   SEG=?DT?ECO_PAGE_MANAGER?ECO_PAGE
SM0 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.7   A   
SM1 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.6   A   
SM2 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.5   A   
SP. . . . . . . . . . . . . . . . . . .    D  ADDR  0081H     A   
SPC_FNC . . . . . . . . . . . . . . . .    D  ADDR  008FH     A   
SPI_CTRL. . . . . . . . . . . . . . . .    D  ADDR  00B3H     A   
SPI_DATA. . . . . . . . . . . . . . . .    D  ADDR  00B2H     A   
SPICLK. . . . . . . . . . . . . . . . .    D  ADDR  00B4H     A   
T0. . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.5   A   
T1. . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.6   A   
T1_1V2. . . . . . . . . . . . . . . . .    D  ADDR  00BCH     A   
T2. . . . . . . . . . . . . . . . . . .    B  ADDR  0090H.0   A   
T2_1V2. . . . . . . . . . . . . . . . .    D  ADDR  00BDH     A   
T2CON . . . . . . . . . . . . . . . . .    D  ADDR  00C8H     A   
TB8 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.3   A   
TCLK. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.4   A   
TCON. . . . . . . . . . . . . . . . . .    D  ADDR  0088H     A   
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/03/09 23:13:42 PAGE    20

TEST_MODE . . . . . . . . . . . . . . .    D  ADDR  00B7H     A   
TF0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.5   A   
TF1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.7   A   
TF2 . . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.7   A   
TH0 . . . . . . . . . . . . . . . . . .    D  ADDR  008CH     A   
TH1 . . . . . . . . . . . . . . . . . .    D  ADDR  008DH     A   
TH2 . . . . . . . . . . . . . . . . . .    D  ADDR  00CDH     A   
TI. . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.1   A   
TICK_DV . . . . . . . . . . . . . . . .    D  ADDR  00B5H     A   
TL0 . . . . . . . . . . . . . . . . . .    D  ADDR  008AH     A   
TL1 . . . . . . . . . . . . . . . . . .    D  ADDR  008BH     A   
TL2 . . . . . . . . . . . . . . . . . .    D  ADDR  00CCH     A   
TMOD. . . . . . . . . . . . . . . . . .    D  ADDR  0089H     A   
TR0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.4   A   
TR1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.6   A   
TR2 . . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.2   A   
TXD . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.2   A   
WDTI. . . . . . . . . . . . . . . . . .    B  ADDR  00D8H.3   A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S).
