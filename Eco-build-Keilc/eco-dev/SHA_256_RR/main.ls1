AX51 MACRO ASSEMBLER  MAIN                                                                  05/15/09 17:22:09 PAGE     1


MACRO ASSEMBLER AX51 V3.06a
OBJECT MODULE PLACED IN .\main.obj
ASSEMBLER INVOKED BY: C:\Keil\C51\BIN\AX51.exe .\main.src EP DEBUG SYMBOLS OJ(.\main.obj) PR(.\main.ls1) 

LOC    OBJ             LINE     SOURCE

                          1     ; ./main.src generated from: .\main.c
                          2     ; COMPILER INVOKED BY:
                          3     ;        C:\Keil\C51\BIN\C51.exe .\main.c BROWSE DEBUG CODE LISTINCLUDE SYMBOLS PREPRINT
                                ROM(LARGE) INCDIR(../../Include) SRC(./main.src)
                          4     
                          5     $nomod51 
                          6     
                          7     NAME    MAIN
                          8     
 00A0.7                   9     PWR_UP  BIT     0A0H.7
 0080                    10     P0      DATA    080H
 0090                    11     P1      DATA    090H
 00D0.6                  12     AC      BIT     0D0H.6
 0080.5                  13     T0      BIT     080H.5
 00B3                    14     SPI_CTRL        DATA    0B3H
 0080.6                  15     T1      BIT     080H.6
 00A8.7                  16     EA      BIT     0A8H.7
 0090.0                  17     T2      BIT     090H.0
 00A0.6                  18     CE      BIT     0A0H.6
 00BE                    19     DEV_OFFSET      DATA    0BEH
 00A0.1                  20     CLK1    BIT     0A0H.1
 0090.2                  21     DIN0    BIT     090H.2
 00A0.5                  22     CLK2    BIT     0A0H.5
 0090.0                  23     DIO0    BIT     090H.0
 0083                    24     DPH0    DATA    083H
 0090.1                  25     DIO1    BIT     090H.1
 00A8                    26     IE      DATA    0A8H
 0085                    27     DPH1    DATA    085H
 0080.0                  28     DIO2    BIT     080H.0
 0080.1                  29     DIO3    BIT     080H.1
 0080.0                  30     P0_0    BIT     080H.0
 0090.0                  31     P1_0    BIT     090H.0
 0080.2                  32     DIO4    BIT     080H.2
 0080.1                  33     P0_1    BIT     080H.1
 0082                    34     DPL0    DATA    082H
 0090.1                  35     P1_1    BIT     090H.1
 0080.3                  36     DIO5    BIT     080H.3
 0080.2                  37     P0_2    BIT     080H.2
 0084                    38     DPL1    DATA    084H
 0090.2                  39     P1_2    BIT     090H.2
 0080.4                  40     DIO6    BIT     080H.4
 0080.3                  41     P0_3    BIT     080H.3
 0080.5                  42     DIO7    BIT     080H.5
 0080.4                  43     P0_4    BIT     080H.4
 00A4                    44     ADCSTATIC       DATA    0A4H
 0080.6                  45     DIO8    BIT     080H.6
 0080.5                  46     P0_5    BIT     080H.5
 00C8.6                  47     EXF2    BIT     0C8H.6
 00A0.3                  48     CS      BIT     0A0H.3
 0080.7                  49     DIO9    BIT     080H.7
 0080.6                  50     P0_6    BIT     080H.6
 0080.7                  51     P0_7    BIT     080H.7
 00A8.4                  52     ES      BIT     0A8H.4
 00B8                    53     IP      DATA    0B8H
 00A0.0                  54     DATA?   BIT     0A0H.0
 0098.0                  55     RI      BIT     098H.0
 00D0.7                  56     CY      BIT     0D0H.7
 0098.1                  57     TI      BIT     098H.1
AX51 MACRO ASSEMBLER  MAIN                                                                  05/15/09 17:22:09 PAGE     2

 00BC                    58     T1_1V2  DATA    0BCH
 008F                    59     SPC_FNC DATA    08FH
 00BD                    60     T2_1V2  DATA    0BDH
 00CB                    61     RCAP2H  DATA    0CBH
 00B8.4                  62     PS      BIT     0B8H.4
 0081                    63     SP      DATA    081H
 00D0.2                  64     OV      BIT     0D0H.2
 00B6                    65     CK_CTRL DATA    0B6H
 00CA                    66     RCAP2L  DATA    0CAH
 00B5                    67     TICK_DV DATA    0B5H
 00B1                    68     RSTREAS DATA    0B1H
 00C8.1                  69     C_T2    BIT     0C8H.1
 00E8.4                  70     EWDI    BIT     0E8H.4
 00A1                    71     ADCCON  DATA    0A1H
 00C8.5                  72     RCLK    BIT     0C8H.5
 00A2                    73     ADCDATAH        DATA    0A2H
 0091                    74     EXIF    DATA    091H
 00C8.4                  75     TCLK    BIT     0C8H.4
 00A0.6                  76     DR2_CE  BIT     0A0H.6
 00A3                    77     ADCDATAL        DATA    0A3H
 0099                    78     SBUF    DATA    099H
 0087                    79     PCON    DATA    087H
 0098                    80     SCON    DATA    098H
 00F8.4                  81     PWDI    BIT     0F8H.4
 0089                    82     TMOD    DATA    089H
 0088                    83     TCON    DATA    088H
 00D8.3                  84     WDTI    BIT     0D8H.3
 00AA                    85     PWMDUTY DATA    0AAH
 0088.1                  86     IE0     BIT     088H.1
 0088.3                  87     IE1     BIT     088H.3
 0094                    88     P0_DIR  DATA    094H
 00F0                    89     B       DATA    0F0H
 0096                    90     P1_DIR  DATA    096H
 0095                    91     P0_ALT  DATA    095H
 0097                    92     P1_ALT  DATA    097H
 00C8.0                  93     CP_RL2  BIT     0C8H.0
 00A0.2                  94     DR1     BIT     0A0H.2
 00E0                    95     ACC     DATA    0E0H
 00A0.6                  96     DR2     BIT     0A0H.6
 00B7                    97     TEST_MODE       DATA    0B7H
 00B4                    98     SPICLK  DATA    0B4H
 00C8.1                  99     CT2     BIT     0C8H.1
 00A8.1                 100     ET0     BIT     0A8H.1
 00A8.3                 101     ET1     BIT     0A8H.3
 0088.5                 102     TF0     BIT     088H.5
 0080.3                 103     INT0_N  BIT     080H.3
 00A8.5                 104     ET2     BIT     0A8H.5
 0088.7                 105     TF1     BIT     088H.7
 0080.4                 106     INT1_N  BIT     080H.4
 00C8.7                 107     TF2     BIT     0C8H.7
 0098.2                 108     RB8     BIT     098H.2
 008C                   109     TH0     DATA    08CH
 00A8.0                 110     EX0     BIT     0A8H.0
 0088.0                 111     IT0     BIT     088H.0
 008D                   112     TH1     DATA    08DH
 00A8.2                 113     EX1     BIT     0A8H.2
 0098.3                 114     TB8     BIT     098H.3
 0088.2                 115     IT1     BIT     088H.2
 00CD                   116     TH2     DATA    0CDH
 00AD                   117     REGX_CTRL       DATA    0ADH
 00E8.0                 118     EX2     BIT     0E8H.0
 00D0.0                 119     P       BIT     0D0H.0
 00E8.1                 120     EX3     BIT     0E8H.1
 0098.7                 121     SM0     BIT     098H.7
 008A                   122     TL0     DATA    08AH
 00E8.2                 123     EX4     BIT     0E8H.2
AX51 MACRO ASSEMBLER  MAIN                                                                  05/15/09 17:22:09 PAGE     3

 0098.6                 124     SM1     BIT     098H.6
 008B                   125     TL1     DATA    08BH
 00E8.3                 126     EX5     BIT     0E8H.3
 0098.5                 127     SM2     BIT     098H.5
 00CC                   128     TL2     DATA    0CCH
 00E8                   129     EIE     DATA    0E8H
 00B8.1                 130     PT0     BIT     0B8H.1
 00D0.3                 131     RS0     BIT     0D0H.3
 00B8.3                 132     PT1     BIT     0B8H.3
 00D0.4                 133     RS1     BIT     0D0H.4
 00B8.5                 134     PT2     BIT     0B8H.5
 0088.4                 135     TR0     BIT     088H.4
 00A9                   136     PWMCON  DATA    0A9H
 0088.6                 137     TR1     BIT     088H.6
 00C8.2                 138     TR2     BIT     0C8H.2
 00B8.0                 139     PX0     BIT     0B8H.0
 00B8.2                 140     PX1     BIT     0B8H.2
 00F8.0                 141     PX2     BIT     0F8H.0
 00F8.1                 142     PX3     BIT     0F8H.1
 00F8.2                 143     PX4     BIT     0F8H.2
 0083                   144     DPH     DATA    083H
 00F8.3                 145     PX5     BIT     0F8H.3
 00F8                   146     EIP     DATA    0F8H
 0082                   147     DPL     DATA    082H
 00C8.3                 148     EXEN2   BIT     0C8H.3
 00C8.0                 149     CPRL2   BIT     0C8H.0
 0098.4                 150     REN     BIT     098H.4
 00C8                   151     T2CON   DATA    0C8H
 0086                   152     DPS     DATA    086H
 00B2                   153     SPI_DATA        DATA    0B2H
 0092                   154     MPAGE   DATA    092H
 0080.1                 155     RXD     BIT     080H.1
 00A0.4                 156     DOUT2   BIT     0A0H.4
 00D8                   157     EICON   DATA    0D8H
 008E                   158     CKCON   DATA    08EH
 0080.2                 159     TXD     BIT     080H.2
 00A0                   160     RADIO   DATA    0A0H
 0080.7                 161     PWM     BIT     080H.7
 00D0.5                 162     F0      BIT     0D0H.5
 00D0.1                 163     F1      BIT     0D0H.1
 00AC                   164     REGX_LSB        DATA    0ACH
 00D0                   165     PSW     DATA    0D0H
 00AB                   166     REGX_MSB        DATA    0ABH
------                  167     ?PR?_SHA1ProcessMessageBlock?MAIN        SEGMENT CODE 
------                  168     ?DT?_SHA1ProcessMessageBlock?MAIN        SEGMENT DATA OVERLAYABLE 
------                  169     ?PR?_SHA1Reset?MAIN  SEGMENT CODE 
------                  170     ?PR?_SHA1PadMessage?MAIN                 SEGMENT CODE 
------                  171     ?DT?_SHA1PadMessage?MAIN                 SEGMENT DATA OVERLAYABLE 
------                  172     ?PR?_?SHA1Result?MAIN                    SEGMENT CODE 
------                  173     ?PR?_SHA1Input?MAIN  SEGMENT CODE 
------                  174     ?DT?_SHA1Input?MAIN  SEGMENT DATA OVERLAYABLE 
------                  175     ?PR?main?MAIN        SEGMENT CODE 
------                  176     ?DT?main?MAIN        SEGMENT DATA OVERLAYABLE 
------                  177     ?CO?MAIN             SEGMENT CODE 
------                  178     ?C_INITSEG           SEGMENT CODE 
------                  179     ?DT?MAIN             SEGMENT DATA 
------                  180     ?ID?_SHA1ProcessMessageBlock?MAIN        SEGMENT IDATA OVERLAYABLE 
------                  181     ?XD?_SHA1ProcessMessageBlock?MAIN        SEGMENT XDATA OVERLAYABLE 
------                  182     ?ID?main?MAIN        SEGMENT IDATA OVERLAYABLE 
                        183             EXTRN   CODE (_mdelay)
                        184             EXTRN   CODE (_serial_init)
                        185             EXTRN   CODE (_puts)
                        186             EXTRN   CODE (_?int_print)
                        187             EXTRN   CODE (_store_cpu_rate)
                        188             EXTRN   CODE (?C?COPY)
                        189             EXTRN   DATA (?C_IBP)
AX51 MACRO ASSEMBLER  MAIN                                                                  05/15/09 17:22:09 PAGE     4

                        190             EXTRN   CODE (?C_STARTUP)
                        191     
                        192             EXTRN   CODE (eco_page_manager)
                        193         EXTRN   DATA (ECO_PAGE_ADDR)
                        194         EXTRN   DATA (ECO_PAGE_SPI_CONN)
                        195         EXTRN   IDATA (ECO_PAGE_REGISTER1)
                        196         EXTRN   IDATA (ECO_PAGE_REGISTER2)
                        197         EXTRN   IDATA (ECO_PAGE_REGISTER3)
                        198         EXTRN   IDATA (ECO_PAGE_REGISTER4)
                        199         EXTRN   IDATA (ECO_PAGE_REGISTER5)
                        200         EXTRN   IDATA (ECO_PAGE_REGISTER6)
                        201         EXTRN   IDATA (ECO_PAGE_REGISTER7)
                        202     
                        203             PUBLIC  sha_counter
                        204             PUBLIC  main
                        205             PUBLIC  _SHA1Input
                        206             PUBLIC  _?SHA1Result
                        207             PUBLIC  _SHA1PadMessage
                        208             PUBLIC  _SHA1Reset
                        209             PUBLIC  _SHA1ProcessMessageBlock
                        210     
------                  211             RSEG  ?DT?_SHA1Input?MAIN
000000                  212     ?_SHA1Input?BYTE:
000000                  213         context?452:   DS   1
000001                  214             ORG  1
000001                  215     message_array?453:   DS   1
000002                  216             ORG  2
000002                  217          length?454:   DS   2
                        218     
------                  219             RSEG  ?DT?main?MAIN
000000                  220     ?main?BYTE:
000000                  221               i?555:   DS   1
                        222     
------                  223             RSEG  ?DT?_SHA1ProcessMessageBlock?MAIN
000000                  224     ?_SHA1ProcessMessageBlock?BYTE:
000000                  225         context?040:   DS   1
                        226     
------                  227             RSEG  ?DT?_SHA1PadMessage?MAIN
000000                  228     ?_SHA1PadMessage?BYTE:
000000                  229         context?251:   DS   1
                        230     
------                  231             RSEG  ?DT?MAIN
000000                  232         sha_counter:   DS   2
                        233     
------                  234             RSEG  ?ID?_SHA1ProcessMessageBlock?MAIN
000000                  235               K?041:   DS   8
                        236     
------                  237             RSEG  ?ID?_SHA1ProcessMessageBlock?MAIN
000008                  238               t?042:   DS   1
                        239     
------                  240             RSEG  ?ID?_SHA1ProcessMessageBlock?MAIN
000009                  241            temp?043:   DS   2
                        242     
------                  243             RSEG  ?ID?_SHA1ProcessMessageBlock?MAIN
00000B                  244               A?045:   DS   2
                        245     
------                  246             RSEG  ?ID?_SHA1ProcessMessageBlock?MAIN
00000D                  247               B?046:   DS   2
                        248     
------                  249             RSEG  ?ID?_SHA1ProcessMessageBlock?MAIN
00000F                  250               C?047:   DS   2
                        251     
------                  252             RSEG  ?ID?_SHA1ProcessMessageBlock?MAIN
000011                  253               D?048:   DS   2
                        254     
------                  255             RSEG  ?ID?_SHA1ProcessMessageBlock?MAIN
AX51 MACRO ASSEMBLER  MAIN                                                                  05/15/09 17:22:09 PAGE     5

000013                  256               E?049:   DS   2
                        257     
------                  258             RSEG  ?XD?_SHA1ProcessMessageBlock?MAIN
000000                  259               W?044:   DS   160
                        260     
------                  261             RSEG  ?ID?main?MAIN
000000                  262             sha?556:   DS   83
                        263     
------                  264             RSEG  ?CO?MAIN
000000                  265     ?SC_0:
000000 61626300         266             DB  'a' ,'b' ,'c' ,000H
                        267     
000004                  268     ?SC_4:
000004 0D0A00           269             DB  00DH,00AH,000H
                        270     
000007                  271     _?ix1000:
000007 7999             272             DW      07999H
000009 EBA1             273             DW      0EBA1H
00000B BCDC             274             DW      0BCDCH
00000D C1D6             275             DW      0C1D6H
                        276     
                        277     
------                  278             RSEG  ?C_INITSEG
000000 02               279             DB      002H
000001 00         F     280             DB      sha_counter
000002 0000             281             DW      00000H
                        282     
                        283     ; #include "Eco/reg24e1.h"
                        284     ; #include "Eco/eco_sys.h"
                        285     ; #include "utils/utils.h"
                        286     ; #include "serial/serial.h"
                        287     ; //#include "isr/isr_rf.h"
                        288     ; //#include "adc/adc.h"
                        289     ; #include "eeprom/eeprom.h"
                        290     ; //#include "eco_page.h"
                        291     ; 
                        292     ; #define TESTA   "abc"
                        293     ; #define SHA1CircularShift(bits,word) \
                        294     ;                 ((((word) << (bits)) & 0xFFFFFFFF) | \
                        295     ;                 ((word) >> (32-(bits))))
                        296     ; 
                        297     ; 
                        298     ; volatile int sha_counter = 0;
                        299     ; 
                        300     ; 
                        301     ; typedef struct SHA1Context
                        302     ; {
                        303     ;     unsigned Message_Digest[5]; /* Message Digest (output)          */
                        304     ; 
                        305     ;     unsigned Length_Low;        /* Message length in bits           */
                        306     ;     unsigned Length_High;       /* Message length in bits           */
                        307     ; 
                        308     ;     unsigned char Message_Block[64]; /* 256-bit message blocks      */
                        309     ;     char Message_Block_Index;    /* Index into message block array   */
                        310     ; 
                        311     ;     int Computed;               /* Is the digest computed?          */
                        312     ;     int Corrupted;              /* Is the message digest corruped?  */
                        313     ; } SHA1Context;
                        314     ; 
                        315     ; 
                        316     ; void SHA1ProcessMessageBlock(SHA1Context idata *context)
                        317     
------                  318             RSEG  ?PR?_SHA1ProcessMessageBlock?MAIN
000000                  319     _SHA1ProcessMessageBlock:
                        320             USING   0
                        321                             ; SOURCE LINE # 34
AX51 MACRO ASSEMBLER  MAIN                                                                  05/15/09 17:22:09 PAGE     6

000000 8F00       F     322             MOV     context?040,R7
                        323     ; {
                        324                             ; SOURCE LINE # 35
                        325     ;       idata unsigned K[] =            /* Constants defined in SHA-1   */      
                        326                             ; SOURCE LINE # 36
000002 7800       F     327             MOV     R0,#LOW (K?041)
000004 7C00       F     328             MOV     R4,#HIGH (K?041)
000006 7D00             329             MOV     R5,#00H
000008 7BFF             330             MOV     R3,#0FFH
00000A 7A00       F     331             MOV     R2,#HIGH (_?ix1000)
00000C 7900       F     332             MOV     R1,#LOW (_?ix1000)
00000E 7E00             333             MOV     R6,#00H
000010 7F08             334             MOV     R7,#08H
000012 120000     E     335             LCALL   ?C?COPY
                        336     ;     {
                        337     ;         0x5A827999,
                        338     ;         0x6ED9EBA1,
                        339     ;         0x8F1BBCDC,
                        340     ;         0xCA62C1D6
                        341     ;     };
                        342     ;     idata char         t;                  /* Loop counter                 */
                        343     ;     idata unsigned    temp;               /* Temporary word value         */
                        344     ;     xdata unsigned    W[80];              /* Word sequence                */
                        345     ;     idata unsigned    A, B, C, D, E;      /* Word buffers                 */
                        346     ; 
                        347     ;     /*
                        348     ;      *  Initialize the first 16 words in the array W
                        349     ;      */
                        350     ;     for(t = 0; t < 16; t++)
                        351                             ; SOURCE LINE # 51
000015 E4               352             CLR     A
000016 7800       F     353             MOV     R0,#LOW (t?042)
000018 F6               354             MOV     @R0,A
000019                  355     ?C0001:
                        356     ;     {
                        357                             ; SOURCE LINE # 52
                        358     ;         W[t] = ((unsigned) context->Message_Block[t * 4]) << 24;
                        359                             ; SOURCE LINE # 53
000019 E500       F     360             MOV     A,context?040
00001B 240E             361             ADD     A,#0EH
00001D F8               362             MOV     R0,A
00001E C000             363             PUSH    AR0
000020 7800       F     364             MOV     R0,#LOW (t?042)
000022 E6               365             MOV     A,@R0
000023 FD               366             MOV     R5,A
000024 D000             367             POP     AR0
000026 25E0             368             ADD     A,ACC
000028 25E0             369             ADD     A,ACC
00002A 28               370             ADD     A,R0
00002B F8               371             MOV     R0,A
00002C E6               372             MOV     A,@R0
00002D 7E00             373             MOV     R6,#00H
00002F 7818             374             MOV     R0,#018H
000031                  375     ?C0048:
000031 C3               376             CLR     C
000032 33               377             RLC     A
000033 CE               378             XCH     A,R6
000034 33               379             RLC     A
000035 CE               380             XCH     A,R6
000036 D8F9             381             DJNZ    R0,?C0048
000038 FB               382             MOV     R3,A
000039 AA06             383             MOV     R2,AR6
00003B ED               384             MOV     A,R5
00003C FF               385             MOV     R7,A
00003D 33               386             RLC     A
00003E 95E0             387             SUBB    A,ACC
AX51 MACRO ASSEMBLER  MAIN                                                                  05/15/09 17:22:09 PAGE     7

000040 FE               388             MOV     R6,A
000041 EF               389             MOV     A,R7
000042 25E0             390             ADD     A,ACC
000044 FF               391             MOV     R7,A
000045 EE               392             MOV     A,R6
000046 33               393             RLC     A
000047 FE               394             MOV     R6,A
000048 7400       F     395             MOV     A,#LOW (W?044)
00004A 2F               396             ADD     A,R7
00004B F582             397             MOV     DPL,A
00004D 7400       F     398             MOV     A,#HIGH (W?044)
00004F 3E               399             ADDC    A,R6
000050 F583             400             MOV     DPH,A
000052 EA               401             MOV     A,R2
000053 F0               402             MOVX    @DPTR,A
000054 A3               403             INC     DPTR
000055 EB               404             MOV     A,R3
000056 F0               405             MOVX    @DPTR,A
                        406     ;         W[t] |= ((unsigned) context->Message_Block[t * 4 + 1]) << 16;
                        407                             ; SOURCE LINE # 54
000057 7400       F     408             MOV     A,#LOW (W?044)
000059 2F               409             ADD     A,R7
00005A F582             410             MOV     DPL,A
00005C 7400       F     411             MOV     A,#HIGH (W?044)
00005E 3E               412             ADDC    A,R6
00005F F583             413             MOV     DPH,A
000061 C083             414             PUSH    DPH
000063 C082             415             PUSH    DPL
000065 7800       F     416             MOV     R0,#LOW (t?042)
000067 E6               417             MOV     A,@R0
000068 FD               418             MOV     R5,A
000069 25E0             419             ADD     A,ACC
00006B 25E0             420             ADD     A,ACC
00006D 240F             421             ADD     A,#0FH
00006F 2500       F     422             ADD     A,context?040
000071 F8               423             MOV     R0,A
000072 E6               424             MOV     A,@R0
000073 7E00             425             MOV     R6,#00H
000075 7810             426             MOV     R0,#010H
000077                  427     ?C0049:
000077 C3               428             CLR     C
000078 33               429             RLC     A
000079 CE               430             XCH     A,R6
00007A 33               431             RLC     A
00007B CE               432             XCH     A,R6
00007C D8F9             433             DJNZ    R0,?C0049
00007E FF               434             MOV     R7,A
00007F E0               435             MOVX    A,@DPTR
000080 4E               436             ORL     A,R6
000081 FE               437             MOV     R6,A
000082 A3               438             INC     DPTR
000083 E0               439             MOVX    A,@DPTR
000084 4F               440             ORL     A,R7
000085 FF               441             MOV     R7,A
000086 D082             442             POP     DPL
000088 D083             443             POP     DPH
00008A EE               444             MOV     A,R6
00008B F0               445             MOVX    @DPTR,A
00008C A3               446             INC     DPTR
00008D EF               447             MOV     A,R7
00008E F0               448             MOVX    @DPTR,A
                        449     ;         W[t] |= ((unsigned) context->Message_Block[t * 4 + 2]) << 8;
                        450                             ; SOURCE LINE # 55
00008F ED               451             MOV     A,R5
000090 FF               452             MOV     R7,A
000091 33               453             RLC     A
AX51 MACRO ASSEMBLER  MAIN                                                                  05/15/09 17:22:09 PAGE     8

000092 95E0             454             SUBB    A,ACC
000094 FE               455             MOV     R6,A
000095 EF               456             MOV     A,R7
000096 25E0             457             ADD     A,ACC
000098 FF               458             MOV     R7,A
000099 EE               459             MOV     A,R6
00009A 33               460             RLC     A
00009B FE               461             MOV     R6,A
00009C 7400       F     462             MOV     A,#LOW (W?044)
00009E 2F               463             ADD     A,R7
00009F F582             464             MOV     DPL,A
0000A1 7400       F     465             MOV     A,#HIGH (W?044)
0000A3 3E               466             ADDC    A,R6
0000A4 F583             467             MOV     DPH,A
0000A6 C083             468             PUSH    DPH
0000A8 C082             469             PUSH    DPL
0000AA 7800       F     470             MOV     R0,#LOW (t?042)
0000AC E6               471             MOV     A,@R0
0000AD FD               472             MOV     R5,A
0000AE 25E0             473             ADD     A,ACC
0000B0 25E0             474             ADD     A,ACC
0000B2 2410             475             ADD     A,#010H
0000B4 2500       F     476             ADD     A,context?040
0000B6 F8               477             MOV     R0,A
0000B7 E6               478             MOV     A,@R0
0000B8 FE               479             MOV     R6,A
0000B9 E0               480             MOVX    A,@DPTR
0000BA 4E               481             ORL     A,R6
0000BB FF               482             MOV     R7,A
0000BC A3               483             INC     DPTR
0000BD E0               484             MOVX    A,@DPTR
0000BE D082             485             POP     DPL
0000C0 D083             486             POP     DPH
0000C2 CF               487             XCH     A,R7
0000C3 F0               488             MOVX    @DPTR,A
0000C4 A3               489             INC     DPTR
0000C5 EF               490             MOV     A,R7
0000C6 F0               491             MOVX    @DPTR,A
                        492     ;         W[t] |= ((unsigned) context->Message_Block[t * 4 + 3]);
                        493                             ; SOURCE LINE # 56
0000C7 ED               494             MOV     A,R5
0000C8 FF               495             MOV     R7,A
0000C9 33               496             RLC     A
0000CA 95E0             497             SUBB    A,ACC
0000CC FE               498             MOV     R6,A
0000CD EF               499             MOV     A,R7
0000CE 25E0             500             ADD     A,ACC
0000D0 FF               501             MOV     R7,A
0000D1 EE               502             MOV     A,R6
0000D2 33               503             RLC     A
0000D3 FE               504             MOV     R6,A
0000D4 7400       F     505             MOV     A,#LOW (W?044)
0000D6 2F               506             ADD     A,R7
0000D7 F582             507             MOV     DPL,A
0000D9 7400       F     508             MOV     A,#HIGH (W?044)
0000DB 3E               509             ADDC    A,R6
0000DC F583             510             MOV     DPH,A
0000DE C083             511             PUSH    DPH
0000E0 C082             512             PUSH    DPL
0000E2 7800       F     513             MOV     R0,#LOW (t?042)
0000E4 E6               514             MOV     A,@R0
0000E5 25E0             515             ADD     A,ACC
0000E7 25E0             516             ADD     A,ACC
0000E9 2411             517             ADD     A,#011H
0000EB 2500       F     518             ADD     A,context?040
0000ED F8               519             MOV     R0,A
AX51 MACRO ASSEMBLER  MAIN                                                                  05/15/09 17:22:09 PAGE     9

0000EE E6               520             MOV     A,@R0
0000EF FF               521             MOV     R7,A
0000F0 E0               522             MOVX    A,@DPTR
0000F1 FE               523             MOV     R6,A
0000F2 A3               524             INC     DPTR
0000F3 E0               525             MOVX    A,@DPTR
0000F4 4F               526             ORL     A,R7
0000F5 FF               527             MOV     R7,A
0000F6 D082             528             POP     DPL
0000F8 D083             529             POP     DPH
0000FA EE               530             MOV     A,R6
0000FB F0               531             MOVX    @DPTR,A
0000FC A3               532             INC     DPTR
0000FD EF               533             MOV     A,R7
0000FE F0               534             MOVX    @DPTR,A
                        535     ;     }
                        536                             ; SOURCE LINE # 57
0000FF 7800       F     537             MOV     R0,#LOW (t?042)
000101 06               538             INC     @R0
000102 E6               539             MOV     A,@R0
000103 6410             540             XRL     A,#010H
000105 6003             541             JZ      $ + 5H
000107 020000     F     542             LJMP    ?C0001
00010A                  543     ?C0002:
                        544     ; 
                        545     ;     for(t = 16; t < 80; t++)
                        546                             ; SOURCE LINE # 59
00010A 7800       F     547             MOV     R0,#LOW (t?042)
00010C 7610             548             MOV     @R0,#010H
00010E                  549     ?C0004:
00010E 7800       F     550             MOV     R0,#LOW (t?042)
000110 E6               551             MOV     A,@R0
000111 F9               552             MOV     R1,A
000112 C3               553             CLR     C
000113 6480             554             XRL     A,#080H
000115 94D0             555             SUBB    A,#0D0H
000117 4003             556             JC      $ + 5H
000119 020000     F     557             LJMP    ?C0005
                        558     ;     {
                        559                             ; SOURCE LINE # 60
                        560     ;        W[t] = SHA1CircularShift(1,W[t-3] ^ W[t-8] ^ W[t-14] ^ W[t-16]);
                        561                             ; SOURCE LINE # 61
00011C E9               562             MOV     A,R1
00011D FD               563             MOV     R5,A
00011E 33               564             RLC     A
00011F 95E0             565             SUBB    A,ACC
000121 FC               566             MOV     R4,A
000122 ED               567             MOV     A,R5
000123 25E0             568             ADD     A,ACC
000125 FF               569             MOV     R7,A
000126 EC               570             MOV     A,R4
000127 33               571             RLC     A
000128 FE               572             MOV     R6,A
000129 7400       F     573             MOV     A,#LOW (W?044+0FFF0H)
00012B 2F               574             ADD     A,R7
00012C F582             575             MOV     DPL,A
00012E 7400       F     576             MOV     A,#HIGH (W?044+0FFF0H)
000130 3E               577             ADDC    A,R6
000131 F583             578             MOV     DPH,A
000133 E0               579             MOVX    A,@DPTR
000134 FA               580             MOV     R2,A
000135 A3               581             INC     DPTR
000136 E0               582             MOVX    A,@DPTR
000137 FB               583             MOV     R3,A
000138 7400       F     584             MOV     A,#LOW (W?044+0FFFAH)
00013A 2F               585             ADD     A,R7
AX51 MACRO ASSEMBLER  MAIN                                                                  05/15/09 17:22:09 PAGE    10

00013B F582             586             MOV     DPL,A
00013D 7400       F     587             MOV     A,#HIGH (W?044+0FFFAH)
00013F 3E               588             ADDC    A,R6
000140 F583             589             MOV     DPH,A
000142 E0               590             MOVX    A,@DPTR
000143 6A               591             XRL     A,R2
000144 FA               592             MOV     R2,A
000145 A3               593             INC     DPTR
000146 E0               594             MOVX    A,@DPTR
000147 6B               595             XRL     A,R3
000148 FB               596             MOV     R3,A
000149 ED               597             MOV     A,R5
00014A 25E0             598             ADD     A,ACC
00014C FF               599             MOV     R7,A
00014D EC               600             MOV     A,R4
00014E 33               601             RLC     A
00014F FE               602             MOV     R6,A
000150 7400       F     603             MOV     A,#LOW (W?044+0FFE4H)
000152 2F               604             ADD     A,R7
000153 F582             605             MOV     DPL,A
000155 7400       F     606             MOV     A,#HIGH (W?044+0FFE4H)
000157 3E               607             ADDC    A,R6
000158 F583             608             MOV     DPH,A
00015A E0               609             MOVX    A,@DPTR
00015B 6A               610             XRL     A,R2
00015C FC               611             MOV     R4,A
00015D A3               612             INC     DPTR
00015E E0               613             MOVX    A,@DPTR
00015F 6B               614             XRL     A,R3
000160 FD               615             MOV     R5,A
000161 7400       F     616             MOV     A,#LOW (W?044+0FFE0H)
000163 2F               617             ADD     A,R7
000164 F582             618             MOV     DPL,A
000166 7400       F     619             MOV     A,#HIGH (W?044+0FFE0H)
000168 3E               620             ADDC    A,R6
000169 F583             621             MOV     DPH,A
00016B E0               622             MOVX    A,@DPTR
00016C 6C               623             XRL     A,R4
00016D FE               624             MOV     R6,A
00016E A3               625             INC     DPTR
00016F E0               626             MOVX    A,@DPTR
000170 6D               627             XRL     A,R5
000171 25E0             628             ADD     A,ACC
000173 FF               629             MOV     R7,A
000174 EE               630             MOV     A,R6
000175 33               631             RLC     A
000176 FE               632             MOV     R6,A
000177 E4               633             CLR     A
000178 FC               634             MOV     R4,A
000179 FD               635             MOV     R5,A
00017A C004             636             PUSH    AR4
00017C C005             637             PUSH    AR5
00017E C006             638             PUSH    AR6
000180 C007             639             PUSH    AR7
000182 E6               640             MOV     A,@R0
000183 FD               641             MOV     R5,A
000184 33               642             RLC     A
000185 95E0             643             SUBB    A,ACC
000187 FC               644             MOV     R4,A
000188 ED               645             MOV     A,R5
000189 25E0             646             ADD     A,ACC
00018B FF               647             MOV     R7,A
00018C EC               648             MOV     A,R4
00018D 33               649             RLC     A
00018E FE               650             MOV     R6,A
00018F 7400       F     651             MOV     A,#LOW (W?044+0FFF0H)
AX51 MACRO ASSEMBLER  MAIN                                                                  05/15/09 17:22:09 PAGE    11

000191 2F               652             ADD     A,R7
000192 F582             653             MOV     DPL,A
000194 7400       F     654             MOV     A,#HIGH (W?044+0FFF0H)
000196 3E               655             ADDC    A,R6
000197 F583             656             MOV     DPH,A
000199 E0               657             MOVX    A,@DPTR
00019A FA               658             MOV     R2,A
00019B A3               659             INC     DPTR
00019C E0               660             MOVX    A,@DPTR
00019D FB               661             MOV     R3,A
00019E 7400       F     662             MOV     A,#LOW (W?044+0FFFAH)
0001A0 2F               663             ADD     A,R7
0001A1 F582             664             MOV     DPL,A
0001A3 7400       F     665             MOV     A,#HIGH (W?044+0FFFAH)
0001A5 3E               666             ADDC    A,R6
0001A6 F583             667             MOV     DPH,A
0001A8 E0               668             MOVX    A,@DPTR
0001A9 6A               669             XRL     A,R2
0001AA FA               670             MOV     R2,A
0001AB A3               671             INC     DPTR
0001AC E0               672             MOVX    A,@DPTR
0001AD 6B               673             XRL     A,R3
0001AE FB               674             MOV     R3,A
0001AF ED               675             MOV     A,R5
0001B0 25E0             676             ADD     A,ACC
0001B2 FF               677             MOV     R7,A
0001B3 EC               678             MOV     A,R4
0001B4 33               679             RLC     A
0001B5 FE               680             MOV     R6,A
0001B6 7400       F     681             MOV     A,#LOW (W?044+0FFE4H)
0001B8 2F               682             ADD     A,R7
0001B9 F582             683             MOV     DPL,A
0001BB 7400       F     684             MOV     A,#HIGH (W?044+0FFE4H)
0001BD 3E               685             ADDC    A,R6
0001BE F583             686             MOV     DPH,A
0001C0 E0               687             MOVX    A,@DPTR
0001C1 6A               688             XRL     A,R2
0001C2 FC               689             MOV     R4,A
0001C3 A3               690             INC     DPTR
0001C4 E0               691             MOVX    A,@DPTR
0001C5 6B               692             XRL     A,R3
0001C6 FD               693             MOV     R5,A
0001C7 7400       F     694             MOV     A,#LOW (W?044+0FFE0H)
0001C9 2F               695             ADD     A,R7
0001CA F582             696             MOV     DPL,A
0001CC 7400       F     697             MOV     A,#HIGH (W?044+0FFE0H)
0001CE 3E               698             ADDC    A,R6
0001CF F583             699             MOV     DPH,A
0001D1 E0               700             MOVX    A,@DPTR
0001D2 6C               701             XRL     A,R4
0001D3 FE               702             MOV     R6,A
0001D4 A3               703             INC     DPTR
0001D5 E0               704             MOVX    A,@DPTR
0001D6 6D               705             XRL     A,R5
0001D7 781F             706             MOV     R0,#01FH
0001D9                  707     ?C0050:
0001D9 CE               708             XCH     A,R6
0001DA C3               709             CLR     C
0001DB 13               710             RRC     A
0001DC CE               711             XCH     A,R6
0001DD 13               712             RRC     A
0001DE D8F9             713             DJNZ    R0,?C0050
0001E0 FF               714             MOV     R7,A
0001E1 D003             715             POP     AR3
0001E3 D002             716             POP     AR2
0001E5 D001             717             POP     AR1
AX51 MACRO ASSEMBLER  MAIN                                                                  05/15/09 17:22:09 PAGE    12

0001E7 D000             718             POP     AR0
0001E9 EB               719             MOV     A,R3
0001EA 4F               720             ORL     A,R7
0001EB FF               721             MOV     R7,A
0001EC EA               722             MOV     A,R2
0001ED 4E               723             ORL     A,R6
0001EE FE               724             MOV     R6,A
0001EF AD07             725             MOV     R5,AR7
0001F1 AC06             726             MOV     R4,AR6
0001F3 7800       F     727             MOV     R0,#LOW (t?042)
0001F5 E6               728             MOV     A,@R0
0001F6 FF               729             MOV     R7,A
0001F7 33               730             RLC     A
0001F8 95E0             731             SUBB    A,ACC
0001FA FE               732             MOV     R6,A
0001FB EF               733             MOV     A,R7
0001FC 25E0             734             ADD     A,ACC
0001FE FF               735             MOV     R7,A
0001FF EE               736             MOV     A,R6
000200 33               737             RLC     A
000201 FE               738             MOV     R6,A
000202 7400       F     739             MOV     A,#LOW (W?044)
000204 2F               740             ADD     A,R7
000205 F582             741             MOV     DPL,A
000207 7400       F     742             MOV     A,#HIGH (W?044)
000209 3E               743             ADDC    A,R6
00020A F583             744             MOV     DPH,A
00020C EC               745             MOV     A,R4
00020D F0               746             MOVX    @DPTR,A
00020E A3               747             INC     DPTR
00020F ED               748             MOV     A,R5
000210 F0               749             MOVX    @DPTR,A
                        750     ;     }
                        751                             ; SOURCE LINE # 62
000211 06               752             INC     @R0
000212 020000     F     753             LJMP    ?C0004
000215                  754     ?C0005:
                        755     ; 
                        756     ;     A = context->Message_Digest[0];
                        757                             ; SOURCE LINE # 64
000215 A800       F     758             MOV     R0,context?040
000217 E6               759             MOV     A,@R0
000218 FE               760             MOV     R6,A
000219 08               761             INC     R0
00021A E6               762             MOV     A,@R0
00021B FF               763             MOV     R7,A
00021C 7800       F     764             MOV     R0,#LOW (A?045)
00021E A606             765             MOV     @R0,AR6
000220 08               766             INC     R0
000221 A607             767             MOV     @R0,AR7
                        768     ;     B = context->Message_Digest[1];
                        769                             ; SOURCE LINE # 65
000223 E500       F     770             MOV     A,context?040
000225 2402             771             ADD     A,#02H
000227 F8               772             MOV     R0,A
000228 E6               773             MOV     A,@R0
000229 FE               774             MOV     R6,A
00022A 08               775             INC     R0
00022B E6               776             MOV     A,@R0
00022C FF               777             MOV     R7,A
00022D 7800       F     778             MOV     R0,#LOW (B?046)
00022F A606             779             MOV     @R0,AR6
000231 08               780             INC     R0
000232 A607             781             MOV     @R0,AR7
                        782     ;     C = context->Message_Digest[2];
                        783                             ; SOURCE LINE # 66
AX51 MACRO ASSEMBLER  MAIN                                                                  05/15/09 17:22:09 PAGE    13

000234 E500       F     784             MOV     A,context?040
000236 2404             785             ADD     A,#04H
000238 F8               786             MOV     R0,A
000239 E6               787             MOV     A,@R0
00023A FE               788             MOV     R6,A
00023B 08               789             INC     R0
00023C E6               790             MOV     A,@R0
00023D FF               791             MOV     R7,A
00023E 7800       F     792             MOV     R0,#LOW (C?047)
000240 A606             793             MOV     @R0,AR6
000242 08               794             INC     R0
000243 A607             795             MOV     @R0,AR7
                        796     ;     D = context->Message_Digest[3];
                        797                             ; SOURCE LINE # 67
000245 E500       F     798             MOV     A,context?040
000247 2406             799             ADD     A,#06H
000249 F8               800             MOV     R0,A
00024A E6               801             MOV     A,@R0
00024B FE               802             MOV     R6,A
00024C 08               803             INC     R0
00024D E6               804             MOV     A,@R0
00024E FF               805             MOV     R7,A
00024F 7800       F     806             MOV     R0,#LOW (D?048)
000251 A606             807             MOV     @R0,AR6
000253 08               808             INC     R0
000254 A607             809             MOV     @R0,AR7
                        810     ;     E = context->Message_Digest[4];
                        811                             ; SOURCE LINE # 68
000256 E500       F     812             MOV     A,context?040
000258 2408             813             ADD     A,#08H
00025A F8               814             MOV     R0,A
00025B E6               815             MOV     A,@R0
00025C FE               816             MOV     R6,A
00025D 08               817             INC     R0
00025E E6               818             MOV     A,@R0
00025F FF               819             MOV     R7,A
000260 7800       F     820             MOV     R0,#LOW (E?049)
000262 A606             821             MOV     @R0,AR6
000264 08               822             INC     R0
000265 A607             823             MOV     @R0,AR7
                        824     ; 
                        825     ;     for(t = 0; t < 20; t++)
                        826                             ; SOURCE LINE # 70
000267 E4               827             CLR     A
000268 7800       F     828             MOV     R0,#LOW (t?042)
00026A F6               829             MOV     @R0,A
00026B                  830     ?C0007:
                        831     ;     {
                        832                             ; SOURCE LINE # 71
                        833     ;         temp =  SHA1CircularShift(5,A) +
                        834                             ; SOURCE LINE # 72
00026B 7800       F     835             MOV     R0,#LOW (A?045)
00026D E6               836             MOV     A,@R0
00026E FE               837             MOV     R6,A
00026F 08               838             INC     R0
000270 E6               839             MOV     A,@R0
000271 7805             840             MOV     R0,#05H
000273                  841     ?C0051:
000273 C3               842             CLR     C
000274 33               843             RLC     A
000275 CE               844             XCH     A,R6
000276 33               845             RLC     A
000277 CE               846             XCH     A,R6
000278 D8F9             847             DJNZ    R0,?C0051
00027A FF               848             MOV     R7,A
00027B E4               849             CLR     A
AX51 MACRO ASSEMBLER  MAIN                                                                  05/15/09 17:22:09 PAGE    14

00027C FC               850             MOV     R4,A
00027D FD               851             MOV     R5,A
00027E C004             852             PUSH    AR4
000280 C005             853             PUSH    AR5
000282 C006             854             PUSH    AR6
000284 C007             855             PUSH    AR7
000286 7800       F     856             MOV     R0,#LOW (A?045)
000288 E6               857             MOV     A,@R0
000289 FE               858             MOV     R6,A
00028A 08               859             INC     R0
00028B E6               860             MOV     A,@R0
00028C 781B             861             MOV     R0,#01BH
00028E                  862     ?C0052:
00028E CE               863             XCH     A,R6
00028F C3               864             CLR     C
000290 13               865             RRC     A
000291 CE               866             XCH     A,R6
000292 13               867             RRC     A
000293 D8F9             868             DJNZ    R0,?C0052
000295 FF               869             MOV     R7,A
000296 D003             870             POP     AR3
000298 D002             871             POP     AR2
00029A D001             872             POP     AR1
00029C D000             873             POP     AR0
00029E EB               874             MOV     A,R3
00029F 4F               875             ORL     A,R7
0002A0 FF               876             MOV     R7,A
0002A1 EA               877             MOV     A,R2
0002A2 4E               878             ORL     A,R6
0002A3 FE               879             MOV     R6,A
0002A4 7800       F     880             MOV     R0,#LOW (B?046)
0002A6 E6               881             MOV     A,@R0
0002A7 FC               882             MOV     R4,A
0002A8 08               883             INC     R0
0002A9 E6               884             MOV     A,@R0
0002AA F4               885             CPL     A
0002AB FD               886             MOV     R5,A
0002AC EC               887             MOV     A,R4
0002AD F4               888             CPL     A
0002AE 7800       F     889             MOV     R0,#LOW (D?048)
0002B0 56               890             ANL     A,@R0
0002B1 FC               891             MOV     R4,A
0002B2 ED               892             MOV     A,R5
0002B3 08               893             INC     R0
0002B4 56               894             ANL     A,@R0
0002B5 FD               895             MOV     R5,A
0002B6 7800       F     896             MOV     R0,#LOW (B?046)
0002B8 E6               897             MOV     A,@R0
0002B9 FA               898             MOV     R2,A
0002BA 08               899             INC     R0
0002BB E6               900             MOV     A,@R0
0002BC FB               901             MOV     R3,A
0002BD EA               902             MOV     A,R2
0002BE 08               903             INC     R0
0002BF 56               904             ANL     A,@R0
0002C0 FA               905             MOV     R2,A
0002C1 EB               906             MOV     A,R3
0002C2 08               907             INC     R0
0002C3 56               908             ANL     A,@R0
0002C4 FB               909             MOV     R3,A
0002C5 EA               910             MOV     A,R2
0002C6 4C               911             ORL     A,R4
0002C7 FC               912             MOV     R4,A
0002C8 EB               913             MOV     A,R3
0002C9 4D               914             ORL     A,R5
0002CA 2F               915             ADD     A,R7
AX51 MACRO ASSEMBLER  MAIN                                                                  05/15/09 17:22:09 PAGE    15

0002CB FF               916             MOV     R7,A
0002CC EC               917             MOV     A,R4
0002CD 3E               918             ADDC    A,R6
0002CE FE               919             MOV     R6,A
0002CF EF               920             MOV     A,R7
0002D0 7800       F     921             MOV     R0,#LOW (E?049+01H)
0002D2 26               922             ADD     A,@R0
0002D3 FD               923             MOV     R5,A
0002D4 EE               924             MOV     A,R6
0002D5 18               925             DEC     R0
0002D6 36               926             ADDC    A,@R0
0002D7 FC               927             MOV     R4,A
0002D8 7800       F     928             MOV     R0,#LOW (t?042)
0002DA E6               929             MOV     A,@R0
0002DB FF               930             MOV     R7,A
0002DC 33               931             RLC     A
0002DD 95E0             932             SUBB    A,ACC
0002DF FE               933             MOV     R6,A
0002E0 EF               934             MOV     A,R7
0002E1 25E0             935             ADD     A,ACC
0002E3 FF               936             MOV     R7,A
0002E4 EE               937             MOV     A,R6
0002E5 33               938             RLC     A
0002E6 FE               939             MOV     R6,A
0002E7 7400       F     940             MOV     A,#LOW (W?044)
0002E9 2F               941             ADD     A,R7
0002EA F582             942             MOV     DPL,A
0002EC 7400       F     943             MOV     A,#HIGH (W?044)
0002EE 3E               944             ADDC    A,R6
0002EF F583             945             MOV     DPH,A
0002F1 E0               946             MOVX    A,@DPTR
0002F2 FE               947             MOV     R6,A
0002F3 A3               948             INC     DPTR
0002F4 E0               949             MOVX    A,@DPTR
0002F5 2D               950             ADD     A,R5
0002F6 FF               951             MOV     R7,A
0002F7 EE               952             MOV     A,R6
0002F8 3C               953             ADDC    A,R4
0002F9 FE               954             MOV     R6,A
0002FA EF               955             MOV     A,R7
0002FB 7800       F     956             MOV     R0,#LOW (K?041+01H)
0002FD 26               957             ADD     A,@R0
0002FE FF               958             MOV     R7,A
0002FF EE               959             MOV     A,R6
000300 18               960             DEC     R0
000301 36               961             ADDC    A,@R0
000302 FE               962             MOV     R6,A
000303 7800       F     963             MOV     R0,#LOW (temp?043)
000305 F6               964             MOV     @R0,A
000306 08               965             INC     R0
000307 EF               966             MOV     A,R7
000308 F6               967             MOV     @R0,A
                        968     ;                 ((B & C) | ((~B) & D)) + E + W[t] + K[0];
                        969     ;         temp &= 0xFFFFFFFF;
                        970                             ; SOURCE LINE # 74
000309 EE               971             MOV     A,R6
00030A 18               972             DEC     R0
00030B F6               973             MOV     @R0,A
00030C EF               974             MOV     A,R7
00030D 08               975             INC     R0
00030E F6               976             MOV     @R0,A
                        977     ;         E = D;
                        978                             ; SOURCE LINE # 75
00030F 7800       F     979             MOV     R0,#LOW (D?048)
000311 E6               980             MOV     A,@R0
000312 FE               981             MOV     R6,A
AX51 MACRO ASSEMBLER  MAIN                                                                  05/15/09 17:22:09 PAGE    16

000313 08               982             INC     R0
000314 E6               983             MOV     A,@R0
000315 FF               984             MOV     R7,A
000316 08               985             INC     R0
000317 A606             986             MOV     @R0,AR6
000319 08               987             INC     R0
00031A A607             988             MOV     @R0,AR7
                        989     ;         D = C;
                        990                             ; SOURCE LINE # 76
00031C 7800       F     991             MOV     R0,#LOW (C?047)
00031E E6               992             MOV     A,@R0
00031F FE               993             MOV     R6,A
000320 08               994             INC     R0
000321 E6               995             MOV     A,@R0
000322 FF               996             MOV     R7,A
000323 08               997             INC     R0
000324 A606             998             MOV     @R0,AR6
000326 08               999             INC     R0
000327 A607            1000             MOV     @R0,AR7
                       1001     ;         C = SHA1CircularShift(30,B);
                       1002                             ; SOURCE LINE # 77
000329 7800       F    1003             MOV     R0,#LOW (B?046)
00032B E6              1004             MOV     A,@R0
00032C FE              1005             MOV     R6,A
00032D 08              1006             INC     R0
00032E E6              1007             MOV     A,@R0
00032F 781E            1008             MOV     R0,#01EH
000331                 1009     ?C0053:
000331 C3              1010             CLR     C
000332 33              1011             RLC     A
000333 CE              1012             XCH     A,R6
000334 33              1013             RLC     A
000335 CE              1014             XCH     A,R6
000336 D8F9            1015             DJNZ    R0,?C0053
000338 FF              1016             MOV     R7,A
000339 E4              1017             CLR     A
00033A FC              1018             MOV     R4,A
00033B FD              1019             MOV     R5,A
00033C C004            1020             PUSH    AR4
00033E C005            1021             PUSH    AR5
000340 C006            1022             PUSH    AR6
000342 C007            1023             PUSH    AR7
000344 7800       F    1024             MOV     R0,#LOW (B?046)
000346 E6              1025             MOV     A,@R0
000347 FE              1026             MOV     R6,A
000348 08              1027             INC     R0
000349 E6              1028             MOV     A,@R0
00034A 7802            1029             MOV     R0,#02H
00034C                 1030     ?C0054:
00034C CE              1031             XCH     A,R6
00034D C3              1032             CLR     C
00034E 13              1033             RRC     A
00034F CE              1034             XCH     A,R6
000350 13              1035             RRC     A
000351 D8F9            1036             DJNZ    R0,?C0054
000353 FF              1037             MOV     R7,A
000354 D003            1038             POP     AR3
000356 D002            1039             POP     AR2
000358 D001            1040             POP     AR1
00035A D000            1041             POP     AR0
00035C EB              1042             MOV     A,R3
00035D 4F              1043             ORL     A,R7
00035E FF              1044             MOV     R7,A
00035F EA              1045             MOV     A,R2
000360 4E              1046             ORL     A,R6
000361 FE              1047             MOV     R6,A
AX51 MACRO ASSEMBLER  MAIN                                                                  05/15/09 17:22:09 PAGE    17

000362 7800       F    1048             MOV     R0,#LOW (C?047)
000364 A606            1049             MOV     @R0,AR6
000366 08              1050             INC     R0
000367 A607            1051             MOV     @R0,AR7
                       1052     ;         B = A;
                       1053                             ; SOURCE LINE # 78
000369 7800       F    1054             MOV     R0,#LOW (A?045)
00036B E6              1055             MOV     A,@R0
00036C FE              1056             MOV     R6,A
00036D 08              1057             INC     R0
00036E E6              1058             MOV     A,@R0
00036F FF              1059             MOV     R7,A
000370 08              1060             INC     R0
000371 A606            1061             MOV     @R0,AR6
000373 08              1062             INC     R0
000374 A607            1063             MOV     @R0,AR7
                       1064     ;         A = temp;
                       1065                             ; SOURCE LINE # 79
000376 7800       F    1066             MOV     R0,#LOW (temp?043)
000378 E6              1067             MOV     A,@R0
000379 FE              1068             MOV     R6,A
00037A 08              1069             INC     R0
00037B E6              1070             MOV     A,@R0
00037C FF              1071             MOV     R7,A
00037D 08              1072             INC     R0
00037E A606            1073             MOV     @R0,AR6
000380 08              1074             INC     R0
000381 A607            1075             MOV     @R0,AR7
                       1076     ;     }
                       1077                             ; SOURCE LINE # 80
000383 7800       F    1078             MOV     R0,#LOW (t?042)
000385 06              1079             INC     @R0
000386 E6              1080             MOV     A,@R0
000387 6414            1081             XRL     A,#014H
000389 6003            1082             JZ      $ + 5H
00038B 020000     F    1083             LJMP    ?C0007
00038E                 1084     ?C0008:
                       1085     ; 
                       1086     ;     for(t = 20; t < 40; t++)
                       1087                             ; SOURCE LINE # 82
00038E 7800       F    1088             MOV     R0,#LOW (t?042)
000390 7614            1089             MOV     @R0,#014H
000392                 1090     ?C0010:
                       1091     ;     {
                       1092                             ; SOURCE LINE # 83
                       1093     ;         temp = SHA1CircularShift(5,A) + (B ^ C ^ D) + E + W[t] + K[1];
                       1094                             ; SOURCE LINE # 84
000392 7800       F    1095             MOV     R0,#LOW (A?045)
000394 E6              1096             MOV     A,@R0
000395 FE              1097             MOV     R6,A
000396 08              1098             INC     R0
000397 E6              1099             MOV     A,@R0
000398 7805            1100             MOV     R0,#05H
00039A                 1101     ?C0055:
00039A C3              1102             CLR     C
00039B 33              1103             RLC     A
00039C CE              1104             XCH     A,R6
00039D 33              1105             RLC     A
00039E CE              1106             XCH     A,R6
00039F D8F9            1107             DJNZ    R0,?C0055
0003A1 FF              1108             MOV     R7,A
0003A2 E4              1109             CLR     A
0003A3 FC              1110             MOV     R4,A
0003A4 FD              1111             MOV     R5,A
0003A5 C004            1112             PUSH    AR4
0003A7 C005            1113             PUSH    AR5
AX51 MACRO ASSEMBLER  MAIN                                                                  05/15/09 17:22:09 PAGE    18

0003A9 C006            1114             PUSH    AR6
0003AB C007            1115             PUSH    AR7
0003AD 7800       F    1116             MOV     R0,#LOW (A?045)
0003AF E6              1117             MOV     A,@R0
0003B0 FE              1118             MOV     R6,A
0003B1 08              1119             INC     R0
0003B2 E6              1120             MOV     A,@R0
0003B3 781B            1121             MOV     R0,#01BH
0003B5                 1122     ?C0056:
0003B5 CE              1123             XCH     A,R6
0003B6 C3              1124             CLR     C
0003B7 13              1125             RRC     A
0003B8 CE              1126             XCH     A,R6
0003B9 13              1127             RRC     A
0003BA D8F9            1128             DJNZ    R0,?C0056
0003BC FF              1129             MOV     R7,A
0003BD D003            1130             POP     AR3
0003BF D002            1131             POP     AR2
0003C1 D001            1132             POP     AR1
0003C3 D000            1133             POP     AR0
0003C5 EB              1134             MOV     A,R3
0003C6 4F              1135             ORL     A,R7
0003C7 FF              1136             MOV     R7,A
0003C8 EA              1137             MOV     A,R2
0003C9 4E              1138             ORL     A,R6
0003CA FE              1139             MOV     R6,A
0003CB 7800       F    1140             MOV     R0,#LOW (B?046)
0003CD E6              1141             MOV     A,@R0
0003CE FC              1142             MOV     R4,A
0003CF 08              1143             INC     R0
0003D0 E6              1144             MOV     A,@R0
0003D1 FD              1145             MOV     R5,A
0003D2 EC              1146             MOV     A,R4
0003D3 08              1147             INC     R0
0003D4 66              1148             XRL     A,@R0
0003D5 FC              1149             MOV     R4,A
0003D6 ED              1150             MOV     A,R5
0003D7 08              1151             INC     R0
0003D8 66              1152             XRL     A,@R0
0003D9 FD              1153             MOV     R5,A
0003DA 08              1154             INC     R0
0003DB E6              1155             MOV     A,@R0
0003DC FA              1156             MOV     R2,A
0003DD 08              1157             INC     R0
0003DE E6              1158             MOV     A,@R0
0003DF FB              1159             MOV     R3,A
0003E0 EC              1160             MOV     A,R4
0003E1 6A              1161             XRL     A,R2
0003E2 FC              1162             MOV     R4,A
0003E3 ED              1163             MOV     A,R5
0003E4 6B              1164             XRL     A,R3
0003E5 2F              1165             ADD     A,R7
0003E6 FF              1166             MOV     R7,A
0003E7 EC              1167             MOV     A,R4
0003E8 3E              1168             ADDC    A,R6
0003E9 FE              1169             MOV     R6,A
0003EA EF              1170             MOV     A,R7
0003EB 7800       F    1171             MOV     R0,#LOW (E?049+01H)
0003ED 26              1172             ADD     A,@R0
0003EE FD              1173             MOV     R5,A
0003EF EE              1174             MOV     A,R6
0003F0 18              1175             DEC     R0
0003F1 36              1176             ADDC    A,@R0
0003F2 FC              1177             MOV     R4,A
0003F3 7800       F    1178             MOV     R0,#LOW (t?042)
0003F5 E6              1179             MOV     A,@R0
AX51 MACRO ASSEMBLER  MAIN                                                                  05/15/09 17:22:09 PAGE    19

0003F6 FF              1180             MOV     R7,A
0003F7 33              1181             RLC     A
0003F8 95E0            1182             SUBB    A,ACC
0003FA FE              1183             MOV     R6,A
0003FB EF              1184             MOV     A,R7
0003FC 25E0            1185             ADD     A,ACC
0003FE FF              1186             MOV     R7,A
0003FF EE              1187             MOV     A,R6
000400 33              1188             RLC     A
000401 FE              1189             MOV     R6,A
000402 7400       F    1190             MOV     A,#LOW (W?044)
000404 2F              1191             ADD     A,R7
000405 F582            1192             MOV     DPL,A
000407 7400       F    1193             MOV     A,#HIGH (W?044)
000409 3E              1194             ADDC    A,R6
00040A F583            1195             MOV     DPH,A
00040C E0              1196             MOVX    A,@DPTR
00040D FE              1197             MOV     R6,A
00040E A3              1198             INC     DPTR
00040F E0              1199             MOVX    A,@DPTR
000410 2D              1200             ADD     A,R5
000411 FF              1201             MOV     R7,A
000412 EE              1202             MOV     A,R6
000413 3C              1203             ADDC    A,R4
000414 FE              1204             MOV     R6,A
000415 EF              1205             MOV     A,R7
000416 7800       F    1206             MOV     R0,#LOW (K?041+03H)
000418 26              1207             ADD     A,@R0
000419 FF              1208             MOV     R7,A
00041A EE              1209             MOV     A,R6
00041B 18              1210             DEC     R0
00041C 36              1211             ADDC    A,@R0
00041D 7800       F    1212             MOV     R0,#LOW (temp?043)
00041F F6              1213             MOV     @R0,A
000420 08              1214             INC     R0
000421 A607            1215             MOV     @R0,AR7
                       1216     ;         temp &= 0xFFFFFFFF;
                       1217                             ; SOURCE LINE # 85
000423 18              1218             DEC     R0
000424 E6              1219             MOV     A,@R0
000425 F6              1220             MOV     @R0,A
000426 08              1221             INC     R0
000427 E6              1222             MOV     A,@R0
000428 F6              1223             MOV     @R0,A
                       1224     ;         E = D;
                       1225                             ; SOURCE LINE # 86
000429 7800       F    1226             MOV     R0,#LOW (E?049)
00042B A602            1227             MOV     @R0,AR2
00042D 08              1228             INC     R0
00042E A603            1229             MOV     @R0,AR3
                       1230     ;         D = C;
                       1231                             ; SOURCE LINE # 87
000430 7800       F    1232             MOV     R0,#LOW (C?047)
000432 E6              1233             MOV     A,@R0
000433 FE              1234             MOV     R6,A
000434 08              1235             INC     R0
000435 E6              1236             MOV     A,@R0
000436 FF              1237             MOV     R7,A
000437 08              1238             INC     R0
000438 A606            1239             MOV     @R0,AR6
00043A 08              1240             INC     R0
00043B A607            1241             MOV     @R0,AR7
                       1242     ;         C = SHA1CircularShift(30,B);
                       1243                             ; SOURCE LINE # 88
00043D 7800       F    1244             MOV     R0,#LOW (B?046)
00043F E6              1245             MOV     A,@R0
AX51 MACRO ASSEMBLER  MAIN                                                                  05/15/09 17:22:09 PAGE    20

000440 FE              1246             MOV     R6,A
000441 08              1247             INC     R0
000442 E6              1248             MOV     A,@R0
000443 781E            1249             MOV     R0,#01EH
000445                 1250     ?C0057:
000445 C3              1251             CLR     C
000446 33              1252             RLC     A
000447 CE              1253             XCH     A,R6
000448 33              1254             RLC     A
000449 CE              1255             XCH     A,R6
00044A D8F9            1256             DJNZ    R0,?C0057
00044C FF              1257             MOV     R7,A
00044D E4              1258             CLR     A
00044E FC              1259             MOV     R4,A
00044F FD              1260             MOV     R5,A
000450 C004            1261             PUSH    AR4
000452 C005            1262             PUSH    AR5
000454 C006            1263             PUSH    AR6
000456 C007            1264             PUSH    AR7
000458 7800       F    1265             MOV     R0,#LOW (B?046)
00045A E6              1266             MOV     A,@R0
00045B FE              1267             MOV     R6,A
00045C 08              1268             INC     R0
00045D E6              1269             MOV     A,@R0
00045E 7802            1270             MOV     R0,#02H
000460                 1271     ?C0058:
000460 CE              1272             XCH     A,R6
000461 C3              1273             CLR     C
000462 13              1274             RRC     A
000463 CE              1275             XCH     A,R6
000464 13              1276             RRC     A
000465 D8F9            1277             DJNZ    R0,?C0058
000467 FF              1278             MOV     R7,A
000468 D003            1279             POP     AR3
00046A D002            1280             POP     AR2
00046C D001            1281             POP     AR1
00046E D000            1282             POP     AR0
000470 EB              1283             MOV     A,R3
000471 4F              1284             ORL     A,R7
000472 FF              1285             MOV     R7,A
000473 EA              1286             MOV     A,R2
000474 4E              1287             ORL     A,R6
000475 FE              1288             MOV     R6,A
000476 7800       F    1289             MOV     R0,#LOW (C?047)
000478 A606            1290             MOV     @R0,AR6
00047A 08              1291             INC     R0
00047B A607            1292             MOV     @R0,AR7
                       1293     ;         B = A;
                       1294                             ; SOURCE LINE # 89
00047D 7800       F    1295             MOV     R0,#LOW (A?045)
00047F E6              1296             MOV     A,@R0
000480 FE              1297             MOV     R6,A
000481 08              1298             INC     R0
000482 E6              1299             MOV     A,@R0
000483 FF              1300             MOV     R7,A
000484 08              1301             INC     R0
000485 A606            1302             MOV     @R0,AR6
000487 08              1303             INC     R0
000488 A607            1304             MOV     @R0,AR7
                       1305     ;         A = temp;
                       1306                             ; SOURCE LINE # 90
00048A 7800       F    1307             MOV     R0,#LOW (temp?043)
00048C E6              1308             MOV     A,@R0
00048D FE              1309             MOV     R6,A
00048E 08              1310             INC     R0
00048F E6              1311             MOV     A,@R0
AX51 MACRO ASSEMBLER  MAIN                                                                  05/15/09 17:22:09 PAGE    21

000490 FF              1312             MOV     R7,A
000491 08              1313             INC     R0
000492 A606            1314             MOV     @R0,AR6
000494 08              1315             INC     R0
000495 A607            1316             MOV     @R0,AR7
                       1317     ;     }
                       1318                             ; SOURCE LINE # 91
000497 7800       F    1319             MOV     R0,#LOW (t?042)
000499 06              1320             INC     @R0
00049A E6              1321             MOV     A,@R0
00049B 6428            1322             XRL     A,#028H
00049D 6003            1323             JZ      $ + 5H
00049F 020000     F    1324             LJMP    ?C0010
0004A2                 1325     ?C0011:
                       1326     ; 
                       1327     ;     for(t = 40; t < 60; t++)
                       1328                             ; SOURCE LINE # 93
0004A2 7800       F    1329             MOV     R0,#LOW (t?042)
0004A4 7628            1330             MOV     @R0,#028H
0004A6                 1331     ?C0013:
                       1332     ;     {
                       1333                             ; SOURCE LINE # 94
                       1334     ;         temp = SHA1CircularShift(5,A) +
                       1335                             ; SOURCE LINE # 95
0004A6 7800       F    1336             MOV     R0,#LOW (A?045)
0004A8 E6              1337             MOV     A,@R0
0004A9 FE              1338             MOV     R6,A
0004AA 08              1339             INC     R0
0004AB E6              1340             MOV     A,@R0
0004AC 7805            1341             MOV     R0,#05H
0004AE                 1342     ?C0059:
0004AE C3              1343             CLR     C
0004AF 33              1344             RLC     A
0004B0 CE              1345             XCH     A,R6
0004B1 33              1346             RLC     A
0004B2 CE              1347             XCH     A,R6
0004B3 D8F9            1348             DJNZ    R0,?C0059
0004B5 FF              1349             MOV     R7,A
0004B6 E4              1350             CLR     A
0004B7 FC              1351             MOV     R4,A
0004B8 FD              1352             MOV     R5,A
0004B9 C004            1353             PUSH    AR4
0004BB C005            1354             PUSH    AR5
0004BD C006            1355             PUSH    AR6
0004BF C007            1356             PUSH    AR7
0004C1 7800       F    1357             MOV     R0,#LOW (A?045)
0004C3 E6              1358             MOV     A,@R0
0004C4 FE              1359             MOV     R6,A
0004C5 08              1360             INC     R0
0004C6 E6              1361             MOV     A,@R0
0004C7 781B            1362             MOV     R0,#01BH
0004C9                 1363     ?C0060:
0004C9 CE              1364             XCH     A,R6
0004CA C3              1365             CLR     C
0004CB 13              1366             RRC     A
0004CC CE              1367             XCH     A,R6
0004CD 13              1368             RRC     A
0004CE D8F9            1369             DJNZ    R0,?C0060
0004D0 FF              1370             MOV     R7,A
0004D1 D003            1371             POP     AR3
0004D3 D002            1372             POP     AR2
0004D5 D001            1373             POP     AR1
0004D7 D000            1374             POP     AR0
0004D9 EB              1375             MOV     A,R3
0004DA 4F              1376             ORL     A,R7
0004DB FF              1377             MOV     R7,A
AX51 MACRO ASSEMBLER  MAIN                                                                  05/15/09 17:22:09 PAGE    22

0004DC EA              1378             MOV     A,R2
0004DD 4E              1379             ORL     A,R6
0004DE FE              1380             MOV     R6,A
0004DF 7800       F    1381             MOV     R0,#LOW (B?046)
0004E1 E6              1382             MOV     A,@R0
0004E2 FC              1383             MOV     R4,A
0004E3 08              1384             INC     R0
0004E4 E6              1385             MOV     A,@R0
0004E5 FD              1386             MOV     R5,A
0004E6 EC              1387             MOV     A,R4
0004E7 7800       F    1388             MOV     R0,#LOW (D?048)
0004E9 56              1389             ANL     A,@R0
0004EA FC              1390             MOV     R4,A
0004EB ED              1391             MOV     A,R5
0004EC 08              1392             INC     R0
0004ED 56              1393             ANL     A,@R0
0004EE FD              1394             MOV     R5,A
0004EF 7800       F    1395             MOV     R0,#LOW (B?046)
0004F1 E6              1396             MOV     A,@R0
0004F2 FA              1397             MOV     R2,A
0004F3 08              1398             INC     R0
0004F4 E6              1399             MOV     A,@R0
0004F5 FB              1400             MOV     R3,A
0004F6 EA              1401             MOV     A,R2
0004F7 08              1402             INC     R0
0004F8 56              1403             ANL     A,@R0
0004F9 FA              1404             MOV     R2,A
0004FA EB              1405             MOV     A,R3
0004FB 08              1406             INC     R0
0004FC 56              1407             ANL     A,@R0
0004FD FB              1408             MOV     R3,A
0004FE EA              1409             MOV     A,R2
0004FF 4C              1410             ORL     A,R4
000500 FC              1411             MOV     R4,A
000501 EB              1412             MOV     A,R3
000502 4D              1413             ORL     A,R5
000503 FD              1414             MOV     R5,A
000504 18              1415             DEC     R0
000505 E6              1416             MOV     A,@R0
000506 FA              1417             MOV     R2,A
000507 08              1418             INC     R0
000508 E6              1419             MOV     A,@R0
000509 FB              1420             MOV     R3,A
00050A EA              1421             MOV     A,R2
00050B 08              1422             INC     R0
00050C 56              1423             ANL     A,@R0
00050D FA              1424             MOV     R2,A
00050E EB              1425             MOV     A,R3
00050F 08              1426             INC     R0
000510 56              1427             ANL     A,@R0
000511 FB              1428             MOV     R3,A
000512 EC              1429             MOV     A,R4
000513 4A              1430             ORL     A,R2
000514 FC              1431             MOV     R4,A
000515 ED              1432             MOV     A,R5
000516 4B              1433             ORL     A,R3
000517 2F              1434             ADD     A,R7
000518 FF              1435             MOV     R7,A
000519 EC              1436             MOV     A,R4
00051A 3E              1437             ADDC    A,R6
00051B FE              1438             MOV     R6,A
00051C EF              1439             MOV     A,R7
00051D 7800       F    1440             MOV     R0,#LOW (E?049+01H)
00051F 26              1441             ADD     A,@R0
000520 FD              1442             MOV     R5,A
000521 EE              1443             MOV     A,R6
AX51 MACRO ASSEMBLER  MAIN                                                                  05/15/09 17:22:09 PAGE    23

000522 18              1444             DEC     R0
000523 36              1445             ADDC    A,@R0
000524 FC              1446             MOV     R4,A
000525 7800       F    1447             MOV     R0,#LOW (t?042)
000527 E6              1448             MOV     A,@R0
000528 FF              1449             MOV     R7,A
000529 33              1450             RLC     A
00052A 95E0            1451             SUBB    A,ACC
00052C FE              1452             MOV     R6,A
00052D EF              1453             MOV     A,R7
00052E 25E0            1454             ADD     A,ACC
000530 FF              1455             MOV     R7,A
000531 EE              1456             MOV     A,R6
000532 33              1457             RLC     A
000533 FE              1458             MOV     R6,A
000534 7400       F    1459             MOV     A,#LOW (W?044)
000536 2F              1460             ADD     A,R7
000537 F582            1461             MOV     DPL,A
000539 7400       F    1462             MOV     A,#HIGH (W?044)
00053B 3E              1463             ADDC    A,R6
00053C F583            1464             MOV     DPH,A
00053E E0              1465             MOVX    A,@DPTR
00053F FE              1466             MOV     R6,A
000540 A3              1467             INC     DPTR
000541 E0              1468             MOVX    A,@DPTR
000542 2D              1469             ADD     A,R5
000543 FF              1470             MOV     R7,A
000544 EE              1471             MOV     A,R6
000545 3C              1472             ADDC    A,R4
000546 FE              1473             MOV     R6,A
000547 EF              1474             MOV     A,R7
000548 7800       F    1475             MOV     R0,#LOW (K?041+05H)
00054A 26              1476             ADD     A,@R0
00054B FF              1477             MOV     R7,A
00054C EE              1478             MOV     A,R6
00054D 18              1479             DEC     R0
00054E 36              1480             ADDC    A,@R0
00054F FE              1481             MOV     R6,A
000550 7800       F    1482             MOV     R0,#LOW (temp?043)
000552 F6              1483             MOV     @R0,A
000553 08              1484             INC     R0
000554 EF              1485             MOV     A,R7
000555 F6              1486             MOV     @R0,A
                       1487     ;                ((B & C) | (B & D) | (C & D)) + E + W[t] + K[2];
                       1488     ;         temp &= 0xFFFFFFFF;
                       1489                             ; SOURCE LINE # 97
000556 EE              1490             MOV     A,R6
000557 18              1491             DEC     R0
000558 F6              1492             MOV     @R0,A
000559 EF              1493             MOV     A,R7
00055A 08              1494             INC     R0
00055B F6              1495             MOV     @R0,A
                       1496     ;         E = D;
                       1497                             ; SOURCE LINE # 98
00055C 7800       F    1498             MOV     R0,#LOW (D?048)
00055E E6              1499             MOV     A,@R0
00055F FE              1500             MOV     R6,A
000560 08              1501             INC     R0
000561 E6              1502             MOV     A,@R0
000562 FF              1503             MOV     R7,A
000563 08              1504             INC     R0
000564 A606            1505             MOV     @R0,AR6
000566 08              1506             INC     R0
000567 A607            1507             MOV     @R0,AR7
                       1508     ;         D = C;
                       1509                             ; SOURCE LINE # 99
AX51 MACRO ASSEMBLER  MAIN                                                                  05/15/09 17:22:09 PAGE    24

000569 7800       F    1510             MOV     R0,#LOW (C?047)
00056B E6              1511             MOV     A,@R0
00056C FE              1512             MOV     R6,A
00056D 08              1513             INC     R0
00056E E6              1514             MOV     A,@R0
00056F FF              1515             MOV     R7,A
000570 08              1516             INC     R0
000571 A606            1517             MOV     @R0,AR6
000573 08              1518             INC     R0
000574 A607            1519             MOV     @R0,AR7
                       1520     ;         C = SHA1CircularShift(30,B);
                       1521                             ; SOURCE LINE # 100
000576 7800       F    1522             MOV     R0,#LOW (B?046)
000578 E6              1523             MOV     A,@R0
000579 FE              1524             MOV     R6,A
00057A 08              1525             INC     R0
00057B E6              1526             MOV     A,@R0
00057C 781E            1527             MOV     R0,#01EH
00057E                 1528     ?C0061:
00057E C3              1529             CLR     C
00057F 33              1530             RLC     A
000580 CE              1531             XCH     A,R6
000581 33              1532             RLC     A
000582 CE              1533             XCH     A,R6
000583 D8F9            1534             DJNZ    R0,?C0061
000585 FF              1535             MOV     R7,A
000586 E4              1536             CLR     A
000587 FC              1537             MOV     R4,A
000588 FD              1538             MOV     R5,A
000589 C004            1539             PUSH    AR4
00058B C005            1540             PUSH    AR5
00058D C006            1541             PUSH    AR6
00058F C007            1542             PUSH    AR7
000591 7800       F    1543             MOV     R0,#LOW (B?046)
000593 E6              1544             MOV     A,@R0
000594 FE              1545             MOV     R6,A
000595 08              1546             INC     R0
000596 E6              1547             MOV     A,@R0
000597 7802            1548             MOV     R0,#02H
000599                 1549     ?C0062:
000599 CE              1550             XCH     A,R6
00059A C3              1551             CLR     C
00059B 13              1552             RRC     A
00059C CE              1553             XCH     A,R6
00059D 13              1554             RRC     A
00059E D8F9            1555             DJNZ    R0,?C0062
0005A0 FF              1556             MOV     R7,A
0005A1 D003            1557             POP     AR3
0005A3 D002            1558             POP     AR2
0005A5 D001            1559             POP     AR1
0005A7 D000            1560             POP     AR0
0005A9 EB              1561             MOV     A,R3
0005AA 4F              1562             ORL     A,R7
0005AB FF              1563             MOV     R7,A
0005AC EA              1564             MOV     A,R2
0005AD 4E              1565             ORL     A,R6
0005AE FE              1566             MOV     R6,A
0005AF 7800       F    1567             MOV     R0,#LOW (C?047)
0005B1 A606            1568             MOV     @R0,AR6
0005B3 08              1569             INC     R0
0005B4 A607            1570             MOV     @R0,AR7
                       1571     ;         B = A;
                       1572                             ; SOURCE LINE # 101
0005B6 7800       F    1573             MOV     R0,#LOW (A?045)
0005B8 E6              1574             MOV     A,@R0
0005B9 FE              1575             MOV     R6,A
AX51 MACRO ASSEMBLER  MAIN                                                                  05/15/09 17:22:09 PAGE    25

0005BA 08              1576             INC     R0
0005BB E6              1577             MOV     A,@R0
0005BC FF              1578             MOV     R7,A
0005BD 08              1579             INC     R0
0005BE A606            1580             MOV     @R0,AR6
0005C0 08              1581             INC     R0
0005C1 A607            1582             MOV     @R0,AR7
                       1583     ;         A = temp;
                       1584                             ; SOURCE LINE # 102
0005C3 7800       F    1585             MOV     R0,#LOW (temp?043)
0005C5 E6              1586             MOV     A,@R0
0005C6 FE              1587             MOV     R6,A
0005C7 08              1588             INC     R0
0005C8 E6              1589             MOV     A,@R0
0005C9 FF              1590             MOV     R7,A
0005CA 08              1591             INC     R0
0005CB A606            1592             MOV     @R0,AR6
0005CD 08              1593             INC     R0
0005CE A607            1594             MOV     @R0,AR7
                       1595     ;     }
                       1596                             ; SOURCE LINE # 103
0005D0 7800       F    1597             MOV     R0,#LOW (t?042)
0005D2 06              1598             INC     @R0
0005D3 E6              1599             MOV     A,@R0
0005D4 643C            1600             XRL     A,#03CH
0005D6 6003            1601             JZ      $ + 5H
0005D8 020000     F    1602             LJMP    ?C0013
0005DB                 1603     ?C0014:
                       1604     ; 
                       1605     ;     for(t = 60; t < 80; t++)
                       1606                             ; SOURCE LINE # 105
0005DB 7800       F    1607             MOV     R0,#LOW (t?042)
0005DD 763C            1608             MOV     @R0,#03CH
0005DF                 1609     ?C0016:
                       1610     ;     {
                       1611                             ; SOURCE LINE # 106
                       1612     ;         temp = SHA1CircularShift(5,A) + (B ^ C ^ D) + E + W[t] + K[3];
                       1613                             ; SOURCE LINE # 107
0005DF 7800       F    1614             MOV     R0,#LOW (A?045)
0005E1 E6              1615             MOV     A,@R0
0005E2 FE              1616             MOV     R6,A
0005E3 08              1617             INC     R0
0005E4 E6              1618             MOV     A,@R0
0005E5 7805            1619             MOV     R0,#05H
0005E7                 1620     ?C0063:
0005E7 C3              1621             CLR     C
0005E8 33              1622             RLC     A
0005E9 CE              1623             XCH     A,R6
0005EA 33              1624             RLC     A
0005EB CE              1625             XCH     A,R6
0005EC D8F9            1626             DJNZ    R0,?C0063
0005EE FF              1627             MOV     R7,A
0005EF E4              1628             CLR     A
0005F0 FC              1629             MOV     R4,A
0005F1 FD              1630             MOV     R5,A
0005F2 C004            1631             PUSH    AR4
0005F4 C005            1632             PUSH    AR5
0005F6 C006            1633             PUSH    AR6
0005F8 C007            1634             PUSH    AR7
0005FA 7800       F    1635             MOV     R0,#LOW (A?045)
0005FC E6              1636             MOV     A,@R0
0005FD FE              1637             MOV     R6,A
0005FE 08              1638             INC     R0
0005FF E6              1639             MOV     A,@R0
000600 781B            1640             MOV     R0,#01BH
000602                 1641     ?C0064:
AX51 MACRO ASSEMBLER  MAIN                                                                  05/15/09 17:22:09 PAGE    26

000602 CE              1642             XCH     A,R6
000603 C3              1643             CLR     C
000604 13              1644             RRC     A
000605 CE              1645             XCH     A,R6
000606 13              1646             RRC     A
000607 D8F9            1647             DJNZ    R0,?C0064
000609 FF              1648             MOV     R7,A
00060A D003            1649             POP     AR3
00060C D002            1650             POP     AR2
00060E D001            1651             POP     AR1
000610 D000            1652             POP     AR0
000612 EB              1653             MOV     A,R3
000613 4F              1654             ORL     A,R7
000614 FF              1655             MOV     R7,A
000615 EA              1656             MOV     A,R2
000616 4E              1657             ORL     A,R6
000617 FE              1658             MOV     R6,A
000618 7800       F    1659             MOV     R0,#LOW (B?046)
00061A E6              1660             MOV     A,@R0
00061B FC              1661             MOV     R4,A
00061C 08              1662             INC     R0
00061D E6              1663             MOV     A,@R0
00061E FD              1664             MOV     R5,A
00061F EC              1665             MOV     A,R4
000620 08              1666             INC     R0
000621 66              1667             XRL     A,@R0
000622 FC              1668             MOV     R4,A
000623 ED              1669             MOV     A,R5
000624 08              1670             INC     R0
000625 66              1671             XRL     A,@R0
000626 FD              1672             MOV     R5,A
000627 08              1673             INC     R0
000628 E6              1674             MOV     A,@R0
000629 FA              1675             MOV     R2,A
00062A 08              1676             INC     R0
00062B E6              1677             MOV     A,@R0
00062C FB              1678             MOV     R3,A
00062D EC              1679             MOV     A,R4
00062E 6A              1680             XRL     A,R2
00062F FC              1681             MOV     R4,A
000630 ED              1682             MOV     A,R5
000631 6B              1683             XRL     A,R3
000632 2F              1684             ADD     A,R7
000633 FF              1685             MOV     R7,A
000634 EC              1686             MOV     A,R4
000635 3E              1687             ADDC    A,R6
000636 FE              1688             MOV     R6,A
000637 EF              1689             MOV     A,R7
000638 7800       F    1690             MOV     R0,#LOW (E?049+01H)
00063A 26              1691             ADD     A,@R0
00063B FD              1692             MOV     R5,A
00063C EE              1693             MOV     A,R6
00063D 18              1694             DEC     R0
00063E 36              1695             ADDC    A,@R0
00063F FC              1696             MOV     R4,A
000640 7800       F    1697             MOV     R0,#LOW (t?042)
000642 E6              1698             MOV     A,@R0
000643 FF              1699             MOV     R7,A
000644 33              1700             RLC     A
000645 95E0            1701             SUBB    A,ACC
000647 FE              1702             MOV     R6,A
000648 EF              1703             MOV     A,R7
000649 25E0            1704             ADD     A,ACC
00064B FF              1705             MOV     R7,A
00064C EE              1706             MOV     A,R6
00064D 33              1707             RLC     A
AX51 MACRO ASSEMBLER  MAIN                                                                  05/15/09 17:22:09 PAGE    27

00064E FE              1708             MOV     R6,A
00064F 7400       F    1709             MOV     A,#LOW (W?044)
000651 2F              1710             ADD     A,R7
000652 F582            1711             MOV     DPL,A
000654 7400       F    1712             MOV     A,#HIGH (W?044)
000656 3E              1713             ADDC    A,R6
000657 F583            1714             MOV     DPH,A
000659 E0              1715             MOVX    A,@DPTR
00065A FE              1716             MOV     R6,A
00065B A3              1717             INC     DPTR
00065C E0              1718             MOVX    A,@DPTR
00065D 2D              1719             ADD     A,R5
00065E FF              1720             MOV     R7,A
00065F EE              1721             MOV     A,R6
000660 3C              1722             ADDC    A,R4
000661 FE              1723             MOV     R6,A
000662 EF              1724             MOV     A,R7
000663 18              1725             DEC     R0
000664 26              1726             ADD     A,@R0
000665 FF              1727             MOV     R7,A
000666 EE              1728             MOV     A,R6
000667 18              1729             DEC     R0
000668 36              1730             ADDC    A,@R0
000669 7800       F    1731             MOV     R0,#LOW (temp?043)
00066B F6              1732             MOV     @R0,A
00066C 08              1733             INC     R0
00066D A607            1734             MOV     @R0,AR7
                       1735     ;         temp &= 0xFFFFFFFF;
                       1736                             ; SOURCE LINE # 108
00066F 18              1737             DEC     R0
000670 E6              1738             MOV     A,@R0
000671 F6              1739             MOV     @R0,A
000672 08              1740             INC     R0
000673 E6              1741             MOV     A,@R0
000674 F6              1742             MOV     @R0,A
                       1743     ;         E = D;
                       1744                             ; SOURCE LINE # 109
000675 7800       F    1745             MOV     R0,#LOW (E?049)
000677 A602            1746             MOV     @R0,AR2
000679 08              1747             INC     R0
00067A A603            1748             MOV     @R0,AR3
                       1749     ;         D = C;
                       1750                             ; SOURCE LINE # 110
00067C 7800       F    1751             MOV     R0,#LOW (C?047)
00067E E6              1752             MOV     A,@R0
00067F FE              1753             MOV     R6,A
000680 08              1754             INC     R0
000681 E6              1755             MOV     A,@R0
000682 FF              1756             MOV     R7,A
000683 08              1757             INC     R0
000684 A606            1758             MOV     @R0,AR6
000686 08              1759             INC     R0
000687 A607            1760             MOV     @R0,AR7
                       1761     ;         C = SHA1CircularShift(30,B);
                       1762                             ; SOURCE LINE # 111
000689 7800       F    1763             MOV     R0,#LOW (B?046)
00068B E6              1764             MOV     A,@R0
00068C FE              1765             MOV     R6,A
00068D 08              1766             INC     R0
00068E E6              1767             MOV     A,@R0
00068F 781E            1768             MOV     R0,#01EH
000691                 1769     ?C0065:
000691 C3              1770             CLR     C
000692 33              1771             RLC     A
000693 CE              1772             XCH     A,R6
000694 33              1773             RLC     A
AX51 MACRO ASSEMBLER  MAIN                                                                  05/15/09 17:22:09 PAGE    28

000695 CE              1774             XCH     A,R6
000696 D8F9            1775             DJNZ    R0,?C0065
000698 FF              1776             MOV     R7,A
000699 E4              1777             CLR     A
00069A FC              1778             MOV     R4,A
00069B FD              1779             MOV     R5,A
00069C C004            1780             PUSH    AR4
00069E C005            1781             PUSH    AR5
0006A0 C006            1782             PUSH    AR6
0006A2 C007            1783             PUSH    AR7
0006A4 7800       F    1784             MOV     R0,#LOW (B?046)
0006A6 E6              1785             MOV     A,@R0
0006A7 FE              1786             MOV     R6,A
0006A8 08              1787             INC     R0
0006A9 E6              1788             MOV     A,@R0
0006AA 7802            1789             MOV     R0,#02H
0006AC                 1790     ?C0066:
0006AC CE              1791             XCH     A,R6
0006AD C3              1792             CLR     C
0006AE 13              1793             RRC     A
0006AF CE              1794             XCH     A,R6
0006B0 13              1795             RRC     A
0006B1 D8F9            1796             DJNZ    R0,?C0066
0006B3 FF              1797             MOV     R7,A
0006B4 D003            1798             POP     AR3
0006B6 D002            1799             POP     AR2
0006B8 D001            1800             POP     AR1
0006BA D000            1801             POP     AR0
0006BC EB              1802             MOV     A,R3
0006BD 4F              1803             ORL     A,R7
0006BE FF              1804             MOV     R7,A
0006BF EA              1805             MOV     A,R2
0006C0 4E              1806             ORL     A,R6
0006C1 FE              1807             MOV     R6,A
0006C2 7800       F    1808             MOV     R0,#LOW (C?047)
0006C4 A606            1809             MOV     @R0,AR6
0006C6 08              1810             INC     R0
0006C7 A607            1811             MOV     @R0,AR7
                       1812     ;         B = A;
                       1813                             ; SOURCE LINE # 112
0006C9 7800       F    1814             MOV     R0,#LOW (A?045)
0006CB E6              1815             MOV     A,@R0
0006CC FE              1816             MOV     R6,A
0006CD 08              1817             INC     R0
0006CE E6              1818             MOV     A,@R0
0006CF FF              1819             MOV     R7,A
0006D0 08              1820             INC     R0
0006D1 A606            1821             MOV     @R0,AR6
0006D3 08              1822             INC     R0
0006D4 A607            1823             MOV     @R0,AR7
                       1824     ;         A = temp;
                       1825                             ; SOURCE LINE # 113
0006D6 7800       F    1826             MOV     R0,#LOW (temp?043)
0006D8 E6              1827             MOV     A,@R0
0006D9 FE              1828             MOV     R6,A
0006DA 08              1829             INC     R0
0006DB E6              1830             MOV     A,@R0
0006DC FF              1831             MOV     R7,A
0006DD 08              1832             INC     R0
0006DE A606            1833             MOV     @R0,AR6
0006E0 08              1834             INC     R0
0006E1 A607            1835             MOV     @R0,AR7
                       1836     ;     }
                       1837                             ; SOURCE LINE # 114
0006E3 7800       F    1838             MOV     R0,#LOW (t?042)
0006E5 06              1839             INC     @R0
AX51 MACRO ASSEMBLER  MAIN                                                                  05/15/09 17:22:09 PAGE    29

0006E6 E6              1840             MOV     A,@R0
0006E7 6450            1841             XRL     A,#050H
0006E9 6003            1842             JZ      $ + 5H
0006EB 020000     F    1843             LJMP    ?C0016
0006EE                 1844     ?C0017:
                       1845     ; 
                       1846     ;     context->Message_Digest[0] =
                       1847                             ; SOURCE LINE # 116
0006EE A800       F    1848             MOV     R0,context?040
0006F0 E6              1849             MOV     A,@R0
0006F1 FE              1850             MOV     R6,A
0006F2 08              1851             INC     R0
0006F3 E6              1852             MOV     A,@R0
0006F4 7800       F    1853             MOV     R0,#LOW (A?045+01H)
0006F6 26              1854             ADD     A,@R0
0006F7 FF              1855             MOV     R7,A
0006F8 EE              1856             MOV     A,R6
0006F9 18              1857             DEC     R0
0006FA 36              1858             ADDC    A,@R0
0006FB FE              1859             MOV     R6,A
0006FC A800       F    1860             MOV     R0,context?040
0006FE A606            1861             MOV     @R0,AR6
000700 08              1862             INC     R0
000701 A607            1863             MOV     @R0,AR7
                       1864     ;                         (context->Message_Digest[0] + A) & 0xFFFFFFFF;
                       1865     ;     context->Message_Digest[1] =
                       1866                             ; SOURCE LINE # 118
000703 E500       F    1867             MOV     A,context?040
000705 2402            1868             ADD     A,#02H
000707 F8              1869             MOV     R0,A
000708 E6              1870             MOV     A,@R0
000709 FE              1871             MOV     R6,A
00070A 08              1872             INC     R0
00070B E6              1873             MOV     A,@R0
00070C 7800       F    1874             MOV     R0,#LOW (B?046+01H)
00070E 26              1875             ADD     A,@R0
00070F FF              1876             MOV     R7,A
000710 EE              1877             MOV     A,R6
000711 18              1878             DEC     R0
000712 36              1879             ADDC    A,@R0
000713 FE              1880             MOV     R6,A
000714 E500       F    1881             MOV     A,context?040
000716 2402            1882             ADD     A,#02H
000718 F8              1883             MOV     R0,A
000719 A606            1884             MOV     @R0,AR6
00071B 08              1885             INC     R0
00071C A607            1886             MOV     @R0,AR7
                       1887     ;                         (context->Message_Digest[1] + B) & 0xFFFFFFFF;
                       1888     ;     context->Message_Digest[2] =
                       1889                             ; SOURCE LINE # 120
00071E E500       F    1890             MOV     A,context?040
000720 2404            1891             ADD     A,#04H
000722 F8              1892             MOV     R0,A
000723 E6              1893             MOV     A,@R0
000724 FE              1894             MOV     R6,A
000725 08              1895             INC     R0
000726 E6              1896             MOV     A,@R0
000727 7800       F    1897             MOV     R0,#LOW (C?047+01H)
000729 26              1898             ADD     A,@R0
00072A FF              1899             MOV     R7,A
00072B EE              1900             MOV     A,R6
00072C 18              1901             DEC     R0
00072D 36              1902             ADDC    A,@R0
00072E FE              1903             MOV     R6,A
00072F E500       F    1904             MOV     A,context?040
000731 2404            1905             ADD     A,#04H
AX51 MACRO ASSEMBLER  MAIN                                                                  05/15/09 17:22:09 PAGE    30

000733 F8              1906             MOV     R0,A
000734 A606            1907             MOV     @R0,AR6
000736 08              1908             INC     R0
000737 A607            1909             MOV     @R0,AR7
                       1910     ;                         (context->Message_Digest[2] + C) & 0xFFFFFFFF;
                       1911     ;     context->Message_Digest[3] =
                       1912                             ; SOURCE LINE # 122
000739 E500       F    1913             MOV     A,context?040
00073B 2406            1914             ADD     A,#06H
00073D F8              1915             MOV     R0,A
00073E E6              1916             MOV     A,@R0
00073F FE              1917             MOV     R6,A
000740 08              1918             INC     R0
000741 E6              1919             MOV     A,@R0
000742 7800       F    1920             MOV     R0,#LOW (D?048+01H)
000744 26              1921             ADD     A,@R0
000745 FF              1922             MOV     R7,A
000746 EE              1923             MOV     A,R6
000747 18              1924             DEC     R0
000748 36              1925             ADDC    A,@R0
000749 FE              1926             MOV     R6,A
00074A E500       F    1927             MOV     A,context?040
00074C 2406            1928             ADD     A,#06H
00074E F8              1929             MOV     R0,A
00074F A606            1930             MOV     @R0,AR6
000751 08              1931             INC     R0
000752 A607            1932             MOV     @R0,AR7
                       1933     ;                         (context->Message_Digest[3] + D) & 0xFFFFFFFF;
                       1934     ;     context->Message_Digest[4] =
                       1935                             ; SOURCE LINE # 124
000754 E500       F    1936             MOV     A,context?040
000756 2408            1937             ADD     A,#08H
000758 F8              1938             MOV     R0,A
000759 E6              1939             MOV     A,@R0
00075A FE              1940             MOV     R6,A
00075B 08              1941             INC     R0
00075C E6              1942             MOV     A,@R0
00075D 7800       F    1943             MOV     R0,#LOW (E?049+01H)
00075F 26              1944             ADD     A,@R0
000760 FF              1945             MOV     R7,A
000761 EE              1946             MOV     A,R6
000762 18              1947             DEC     R0
000763 36              1948             ADDC    A,@R0
000764 FE              1949             MOV     R6,A
000765 E500       F    1950             MOV     A,context?040
000767 2408            1951             ADD     A,#08H
000769 F8              1952             MOV     R0,A
00076A A606            1953             MOV     @R0,AR6
00076C 08              1954             INC     R0
00076D A607            1955             MOV     @R0,AR7
                       1956     ;                         (context->Message_Digest[4] + E) & 0xFFFFFFFF;
                       1957     ; 
                       1958     ;     context->Message_Block_Index = 0;
                       1959                             ; SOURCE LINE # 127
00076F E500       F    1960             MOV     A,context?040
000771 244E            1961             ADD     A,#04EH
000773 F8              1962             MOV     R0,A
000774 E4              1963             CLR     A
000775 F6              1964             MOV     @R0,A
                       1965     ;       //blink_led();
                       1966     ; 
                       1967     ; }
                       1968                             ; SOURCE LINE # 130
000776 22              1969             RET     
                       1970     ; END OF _SHA1ProcessMessageBlock
                       1971     
AX51 MACRO ASSEMBLER  MAIN                                                                  05/15/09 17:22:09 PAGE    31

                       1972     ; 
                       1973     ; 
                       1974     ; void SHA1Reset(SHA1Context idata *context)
                       1975     
------                 1976             RSEG  ?PR?_SHA1Reset?MAIN
000000                 1977     _SHA1Reset:
                       1978             USING   0
                       1979                             ; SOURCE LINE # 133
                       1980     ;---- Variable 'context?150' assigned to Register 'R7' ----
                       1981     ; {
                       1982                             ; SOURCE LINE # 134
                       1983     ;     context->Length_Low             = 0;
                       1984                             ; SOURCE LINE # 135
000000 EF              1985             MOV     A,R7
000001 240A            1986             ADD     A,#0AH
000003 F8              1987             MOV     R0,A
000004 E4              1988             CLR     A
000005 F6              1989             MOV     @R0,A
000006 08              1990             INC     R0
000007 F6              1991             MOV     @R0,A
                       1992     ;     context->Length_High            = 0;
                       1993                             ; SOURCE LINE # 136
000008 EF              1994             MOV     A,R7
000009 240C            1995             ADD     A,#0CH
00000B F8              1996             MOV     R0,A
00000C E4              1997             CLR     A
00000D F6              1998             MOV     @R0,A
00000E 08              1999             INC     R0
00000F F6              2000             MOV     @R0,A
                       2001     ;     context->Message_Block_Index    = 0;
                       2002                             ; SOURCE LINE # 137
000010 EF              2003             MOV     A,R7
000011 244E            2004             ADD     A,#04EH
000013 F8              2005             MOV     R0,A
000014 E4              2006             CLR     A
000015 F6              2007             MOV     @R0,A
                       2008     ; 
                       2009     ;     context->Message_Digest[0]      = 0x67452301;
                       2010                             ; SOURCE LINE # 139
000016 A807            2011             MOV     R0,AR7
000018 7623            2012             MOV     @R0,#023H
00001A 08              2013             INC     R0
00001B 7601            2014             MOV     @R0,#01H
                       2015     ;     context->Message_Digest[1]      = 0xEFCDAB89;
                       2016                             ; SOURCE LINE # 140
00001D EF              2017             MOV     A,R7
00001E 2402            2018             ADD     A,#02H
000020 F8              2019             MOV     R0,A
000021 76AB            2020             MOV     @R0,#0ABH
000023 08              2021             INC     R0
000024 7689            2022             MOV     @R0,#089H
                       2023     ;     context->Message_Digest[2]      = 0x98BADCFE;
                       2024                             ; SOURCE LINE # 141
000026 EF              2025             MOV     A,R7
000027 2404            2026             ADD     A,#04H
000029 F8              2027             MOV     R0,A
00002A 76DC            2028             MOV     @R0,#0DCH
00002C 08              2029             INC     R0
00002D 76FE            2030             MOV     @R0,#0FEH
                       2031     ;     context->Message_Digest[3]      = 0x10325476;
                       2032                             ; SOURCE LINE # 142
00002F EF              2033             MOV     A,R7
000030 2406            2034             ADD     A,#06H
000032 F8              2035             MOV     R0,A
000033 7654            2036             MOV     @R0,#054H
000035 08              2037             INC     R0
AX51 MACRO ASSEMBLER  MAIN                                                                  05/15/09 17:22:09 PAGE    32

000036 7676            2038             MOV     @R0,#076H
                       2039     ;     context->Message_Digest[4]      = 0xC3D2E1F0;
                       2040                             ; SOURCE LINE # 143
000038 EF              2041             MOV     A,R7
000039 2408            2042             ADD     A,#08H
00003B F8              2043             MOV     R0,A
00003C 76E1            2044             MOV     @R0,#0E1H
00003E 08              2045             INC     R0
00003F 76F0            2046             MOV     @R0,#0F0H
                       2047     ; 
                       2048     ;     context->Computed   = 0;
                       2049                             ; SOURCE LINE # 145
000041 EF              2050             MOV     A,R7
000042 244F            2051             ADD     A,#04FH
000044 F8              2052             MOV     R0,A
000045 E4              2053             CLR     A
000046 F6              2054             MOV     @R0,A
000047 08              2055             INC     R0
000048 F6              2056             MOV     @R0,A
                       2057     ;     context->Corrupted  = 0;
                       2058                             ; SOURCE LINE # 146
000049 EF              2059             MOV     A,R7
00004A 2451            2060             ADD     A,#051H
00004C F8              2061             MOV     R0,A
00004D E4              2062             CLR     A
00004E F6              2063             MOV     @R0,A
00004F 08              2064             INC     R0
000050 F6              2065             MOV     @R0,A
                       2066     ;       blink_led();
                       2067                             ; SOURCE LINE # 147
                       2068             ;XRL    P0,#020H
                       2069     ; }
                       2070                             ; SOURCE LINE # 148
000051 22              2071             RET     
                       2072     ; END OF _SHA1Reset
                       2073     
                       2074     ; 
                       2075     ; 
                       2076     ; void SHA1PadMessage(SHA1Context idata *context)
                       2077     
------                 2078             RSEG  ?PR?_SHA1PadMessage?MAIN
000000                 2079     _SHA1PadMessage:
                       2080             USING   0
                       2081                             ; SOURCE LINE # 151
000000 8F00       F    2082             MOV     context?251,R7
                       2083     ; {
                       2084                             ; SOURCE LINE # 152
                       2085     ;     /*
                       2086     ;      *  Check to see if the current message block is too small to hold
                       2087     ;      *  the initial padding bits and length.  If so, we will pad the
                       2088     ;      *  block, process it, and then continue padding into a second
                       2089     ;      *  block.
                       2090     ;      */
                       2091     ;     if (context->Message_Block_Index > 55)
                       2092                             ; SOURCE LINE # 159
000002 A807            2093             MOV     R0,AR7
000004 E8              2094             MOV     A,R0
000005 244E            2095             ADD     A,#04EH
000007 F9              2096             MOV     R1,A
000008 D3              2097             SETB    C
000009 E7              2098             MOV     A,@R1
00000A 6480            2099             XRL     A,#080H
00000C 94B7            2100             SUBB    A,#0B7H
00000E 4052            2101             JC      ?C0021
                       2102     ;     {
                       2103                             ; SOURCE LINE # 160
AX51 MACRO ASSEMBLER  MAIN                                                                  05/15/09 17:22:09 PAGE    33

                       2104     ;         context->Message_Block[context->Message_Block_Index++] = 0x80;
                       2105                             ; SOURCE LINE # 161
000010 E8              2106             MOV     A,R0
000011 244E            2107             ADD     A,#04EH
000013 F8              2108             MOV     R0,A
000014 E6              2109             MOV     A,@R0
000015 06              2110             INC     @R0
000016 FF              2111             MOV     R7,A
000017 E500       F    2112             MOV     A,context?251
000019 240E            2113             ADD     A,#0EH
00001B 2F              2114             ADD     A,R7
00001C F8              2115             MOV     R0,A
00001D 7680            2116             MOV     @R0,#080H
00001F                 2117     ?C0022:
                       2118     ;         while(context->Message_Block_Index < 64)
                       2119                             ; SOURCE LINE # 162
00001F E500       F    2120             MOV     A,context?251
000021 244E            2121             ADD     A,#04EH
000023 F9              2122             MOV     R1,A
000024 C3              2123             CLR     C
000025 E7              2124             MOV     A,@R1
000026 6480            2125             XRL     A,#080H
000028 94C0            2126             SUBB    A,#0C0H
00002A 5012            2127             JNC     ?C0023
                       2128     ;         {
                       2129                             ; SOURCE LINE # 163
                       2130     ;             context->Message_Block[context->Message_Block_Index++] = 0;
                       2131                             ; SOURCE LINE # 164
00002C E500       F    2132             MOV     A,context?251
00002E 244E            2133             ADD     A,#04EH
000030 F8              2134             MOV     R0,A
000031 E6              2135             MOV     A,@R0
000032 06              2136             INC     @R0
000033 FF              2137             MOV     R7,A
000034 E500       F    2138             MOV     A,context?251
000036 240E            2139             ADD     A,#0EH
000038 2F              2140             ADD     A,R7
000039 F8              2141             MOV     R0,A
00003A E4              2142             CLR     A
00003B F6              2143             MOV     @R0,A
                       2144     ;         }
                       2145                             ; SOURCE LINE # 165
00003C 80E1            2146             SJMP    ?C0022
00003E                 2147     ?C0023:
                       2148     ; 
                       2149     ;         SHA1ProcessMessageBlock(context);
                       2150                             ; SOURCE LINE # 167
00003E AF00       F    2151             MOV     R7,context?251
000040 120000     F    2152             LCALL   _SHA1ProcessMessageBlock
000043                 2153     ?C0024:
                       2154     ; 
                       2155     ;         while(context->Message_Block_Index < 56)
                       2156                             ; SOURCE LINE # 169
000043 E500       F    2157             MOV     A,context?251
000045 244E            2158             ADD     A,#04EH
000047 F9              2159             MOV     R1,A
000048 C3              2160             CLR     C
000049 E7              2161             MOV     A,@R1
00004A 6480            2162             XRL     A,#080H
00004C 94B8            2163             SUBB    A,#0B8H
00004E 5041            2164             JNC     ?C0026
                       2165     ;         {
                       2166                             ; SOURCE LINE # 170
                       2167     ;             context->Message_Block[context->Message_Block_Index++] = 0;
                       2168                             ; SOURCE LINE # 171
000050 E500       F    2169             MOV     A,context?251
AX51 MACRO ASSEMBLER  MAIN                                                                  05/15/09 17:22:09 PAGE    34

000052 244E            2170             ADD     A,#04EH
000054 F8              2171             MOV     R0,A
000055 E6              2172             MOV     A,@R0
000056 06              2173             INC     @R0
000057 FF              2174             MOV     R7,A
000058 E500       F    2175             MOV     A,context?251
00005A 240E            2176             ADD     A,#0EH
00005C 2F              2177             ADD     A,R7
00005D F8              2178             MOV     R0,A
00005E E4              2179             CLR     A
00005F F6              2180             MOV     @R0,A
                       2181     ;         }
                       2182                             ; SOURCE LINE # 172
000060 80E1            2183             SJMP    ?C0024
                       2184     ;     }
                       2185                             ; SOURCE LINE # 173
000062                 2186     ?C0021:
                       2187     ;     else
                       2188     ;     {
                       2189                             ; SOURCE LINE # 175
                       2190     ;         context->Message_Block[context->Message_Block_Index++] = 0x80;
                       2191                             ; SOURCE LINE # 176
000062 E500       F    2192             MOV     A,context?251
000064 244E            2193             ADD     A,#04EH
000066 F8              2194             MOV     R0,A
000067 E6              2195             MOV     A,@R0
000068 06              2196             INC     @R0
000069 FF              2197             MOV     R7,A
00006A E500       F    2198             MOV     A,context?251
00006C 240E            2199             ADD     A,#0EH
00006E 2F              2200             ADD     A,R7
00006F F8              2201             MOV     R0,A
000070 7680            2202             MOV     @R0,#080H
000072                 2203     ?C0027:
                       2204     ;         while(context->Message_Block_Index < 56)
                       2205                             ; SOURCE LINE # 177
000072 E500       F    2206             MOV     A,context?251
000074 244E            2207             ADD     A,#04EH
000076 F9              2208             MOV     R1,A
000077 C3              2209             CLR     C
000078 E7              2210             MOV     A,@R1
000079 6480            2211             XRL     A,#080H
00007B 94B8            2212             SUBB    A,#0B8H
00007D 5012            2213             JNC     ?C0026
                       2214     ;         {
                       2215                             ; SOURCE LINE # 178
                       2216     ;             context->Message_Block[context->Message_Block_Index++] = 0;
                       2217                             ; SOURCE LINE # 179
00007F E500       F    2218             MOV     A,context?251
000081 244E            2219             ADD     A,#04EH
000083 F8              2220             MOV     R0,A
000084 E6              2221             MOV     A,@R0
000085 06              2222             INC     @R0
000086 FF              2223             MOV     R7,A
000087 E500       F    2224             MOV     A,context?251
000089 240E            2225             ADD     A,#0EH
00008B 2F              2226             ADD     A,R7
00008C F8              2227             MOV     R0,A
00008D E4              2228             CLR     A
00008E F6              2229             MOV     @R0,A
                       2230     ;         }
                       2231                             ; SOURCE LINE # 180
00008F 80E1            2232             SJMP    ?C0027
                       2233     ;     }
                       2234                             ; SOURCE LINE # 181
000091                 2235     ?C0026:
AX51 MACRO ASSEMBLER  MAIN                                                                  05/15/09 17:22:09 PAGE    35

                       2236     ; 
                       2237     ;     /*
                       2238     ;      *  Store the message length as the last 8 octets
                       2239     ;      */
                       2240     ;     context->Message_Block[24] = (context->Length_High >> 24) & 0xFF;
                       2241                             ; SOURCE LINE # 186
000091 E500       F    2242             MOV     A,context?251
000093 240C            2243             ADD     A,#0CH
000095 F9              2244             MOV     R1,A
000096 E7              2245             MOV     A,@R1
000097 FE              2246             MOV     R6,A
000098 09              2247             INC     R1
000099 E7              2248             MOV     A,@R1
00009A 7818            2249             MOV     R0,#018H
00009C                 2250     ?C0067:
00009C CE              2251             XCH     A,R6
00009D C3              2252             CLR     C
00009E 13              2253             RRC     A
00009F CE              2254             XCH     A,R6
0000A0 13              2255             RRC     A
0000A1 D8F9            2256             DJNZ    R0,?C0067
0000A3 FF              2257             MOV     R7,A
0000A4 E500       F    2258             MOV     A,context?251
0000A6 2426            2259             ADD     A,#026H
0000A8 F8              2260             MOV     R0,A
0000A9 A607            2261             MOV     @R0,AR7
                       2262     ;     context->Message_Block[25] = (context->Length_High >> 16) & 0xFF;
                       2263                             ; SOURCE LINE # 187
0000AB E500       F    2264             MOV     A,context?251
0000AD 240C            2265             ADD     A,#0CH
0000AF F9              2266             MOV     R1,A
0000B0 E7              2267             MOV     A,@R1
0000B1 FE              2268             MOV     R6,A
0000B2 09              2269             INC     R1
0000B3 E7              2270             MOV     A,@R1
0000B4 7810            2271             MOV     R0,#010H
0000B6                 2272     ?C0068:
0000B6 CE              2273             XCH     A,R6
0000B7 C3              2274             CLR     C
0000B8 13              2275             RRC     A
0000B9 CE              2276             XCH     A,R6
0000BA 13              2277             RRC     A
0000BB D8F9            2278             DJNZ    R0,?C0068
0000BD FF              2279             MOV     R7,A
0000BE E500       F    2280             MOV     A,context?251
0000C0 2427            2281             ADD     A,#027H
0000C2 F8              2282             MOV     R0,A
0000C3 A607            2283             MOV     @R0,AR7
                       2284     ;     context->Message_Block[26] = (context->Length_High >> 8) & 0xFF;
                       2285                             ; SOURCE LINE # 188
0000C5 E500       F    2286             MOV     A,context?251
0000C7 240C            2287             ADD     A,#0CH
0000C9 F9              2288             MOV     R1,A
0000CA E7              2289             MOV     A,@R1
0000CB FF              2290             MOV     R7,A
0000CC E500       F    2291             MOV     A,context?251
0000CE 2428            2292             ADD     A,#028H
0000D0 F8              2293             MOV     R0,A
0000D1 A607            2294             MOV     @R0,AR7
                       2295     ;     context->Message_Block[27] = (context->Length_High) & 0xFF;
                       2296                             ; SOURCE LINE # 189
0000D3 E500       F    2297             MOV     A,context?251
0000D5 240D            2298             ADD     A,#0DH
0000D7 F9              2299             MOV     R1,A
0000D8 E7              2300             MOV     A,@R1
0000D9 FF              2301             MOV     R7,A
AX51 MACRO ASSEMBLER  MAIN                                                                  05/15/09 17:22:09 PAGE    36

0000DA E500       F    2302             MOV     A,context?251
0000DC 2429            2303             ADD     A,#029H
0000DE F8              2304             MOV     R0,A
0000DF A607            2305             MOV     @R0,AR7
                       2306     ;     context->Message_Block[28] = (context->Length_Low >> 24) & 0xFF;
                       2307                             ; SOURCE LINE # 190
0000E1 E500       F    2308             MOV     A,context?251
0000E3 240A            2309             ADD     A,#0AH
0000E5 F9              2310             MOV     R1,A
0000E6 E7              2311             MOV     A,@R1
0000E7 FE              2312             MOV     R6,A
0000E8 09              2313             INC     R1
0000E9 E7              2314             MOV     A,@R1
0000EA 7818            2315             MOV     R0,#018H
0000EC                 2316     ?C0069:
0000EC CE              2317             XCH     A,R6
0000ED C3              2318             CLR     C
0000EE 13              2319             RRC     A
0000EF CE              2320             XCH     A,R6
0000F0 13              2321             RRC     A
0000F1 D8F9            2322             DJNZ    R0,?C0069
0000F3 FF              2323             MOV     R7,A
0000F4 E500       F    2324             MOV     A,context?251
0000F6 242A            2325             ADD     A,#02AH
0000F8 F8              2326             MOV     R0,A
0000F9 A607            2327             MOV     @R0,AR7
                       2328     ;     context->Message_Block[29] = (context->Length_Low >> 16) & 0xFF;
                       2329                             ; SOURCE LINE # 191
0000FB E500       F    2330             MOV     A,context?251
0000FD 240A            2331             ADD     A,#0AH
0000FF F9              2332             MOV     R1,A
000100 E7              2333             MOV     A,@R1
000101 FE              2334             MOV     R6,A
000102 09              2335             INC     R1
000103 E7              2336             MOV     A,@R1
000104 7810            2337             MOV     R0,#010H
000106                 2338     ?C0070:
000106 CE              2339             XCH     A,R6
000107 C3              2340             CLR     C
000108 13              2341             RRC     A
000109 CE              2342             XCH     A,R6
00010A 13              2343             RRC     A
00010B D8F9            2344             DJNZ    R0,?C0070
00010D FF              2345             MOV     R7,A
00010E E500       F    2346             MOV     A,context?251
000110 242B            2347             ADD     A,#02BH
000112 F8              2348             MOV     R0,A
000113 A607            2349             MOV     @R0,AR7
                       2350     ;     context->Message_Block[30] = (context->Length_Low >> 8) & 0xFF;
                       2351                             ; SOURCE LINE # 192
000115 E500       F    2352             MOV     A,context?251
000117 240A            2353             ADD     A,#0AH
000119 F9              2354             MOV     R1,A
00011A E7              2355             MOV     A,@R1
00011B FF              2356             MOV     R7,A
00011C E500       F    2357             MOV     A,context?251
00011E 242C            2358             ADD     A,#02CH
000120 F8              2359             MOV     R0,A
000121 A607            2360             MOV     @R0,AR7
                       2361     ;     context->Message_Block[31] = (context->Length_Low) & 0xFF;
                       2362                             ; SOURCE LINE # 193
000123 E500       F    2363             MOV     A,context?251
000125 240B            2364             ADD     A,#0BH
000127 F9              2365             MOV     R1,A
000128 E7              2366             MOV     A,@R1
000129 FF              2367             MOV     R7,A
AX51 MACRO ASSEMBLER  MAIN                                                                  05/15/09 17:22:09 PAGE    37

00012A E500       F    2368             MOV     A,context?251
00012C 242D            2369             ADD     A,#02DH
00012E F8              2370             MOV     R0,A
00012F A607            2371             MOV     @R0,AR7
                       2372     ; 
                       2373     ;     SHA1ProcessMessageBlock(context);
                       2374                             ; SOURCE LINE # 195
000131 AF00       F    2375             MOV     R7,context?251
000133 020000     F    2376             LJMP    _SHA1ProcessMessageBlock
                       2377     ; END OF _SHA1PadMessage
                       2378     
                       2379     ; 
                       2380     ;       //blink_led();
                       2381     ; }
                       2382     ; 
                       2383     ; 
                       2384     ; int SHA1Result(SHA1Context idata *context) reentrant
                       2385     
------                 2386             RSEG  ?PR?_?SHA1Result?MAIN
000000                 2387     _?SHA1Result:
                       2388             USING   0
                       2389                             ; SOURCE LINE # 201
000000 1500       E    2390             DEC     ?C_IBP
000002 A800       E    2391             MOV     R0,?C_IBP
000004 A607            2392             MOV     @R0,AR7
                       2393     ; {
                       2394     ; 
                       2395     ;     if (context->Corrupted)
                       2396                             ; SOURCE LINE # 204
000006 A800       E    2397             MOV     R0,?C_IBP
000008 E6              2398             MOV     A,@R0
000009 FD              2399             MOV     R5,A
00000A 2452            2400             ADD     A,#052H
00000C F9              2401             MOV     R1,A
00000D E7              2402             MOV     A,@R1
00000E 19              2403             DEC     R1
00000F 47              2404             ORL     A,@R1
000010 6005            2405             JZ      ?C0030
                       2406     ;     {
                       2407                             ; SOURCE LINE # 205
                       2408     ;         return 0;
                       2409                             ; SOURCE LINE # 206
000012 E4              2410             CLR     A
000013 FE              2411             MOV     R6,A
000014 FF              2412             MOV     R7,A
000015 801C            2413             SJMP    ?C0031
                       2414     ;     }
                       2415                             ; SOURCE LINE # 207
000017                 2416     ?C0030:
                       2417     ; 
                       2418     ;     if (!context->Computed)
                       2419                             ; SOURCE LINE # 209
000017 ED              2420             MOV     A,R5
000018 2450            2421             ADD     A,#050H
00001A F9              2422             MOV     R1,A
00001B E7              2423             MOV     A,@R1
00001C 19              2424             DEC     R1
00001D 47              2425             ORL     A,@R1
00001E 700F            2426             JNZ     ?C0032
                       2427     ;     {
                       2428                             ; SOURCE LINE # 210
                       2429     ;         SHA1PadMessage(context);
                       2430                             ; SOURCE LINE # 211
000020 A800       E    2431             MOV     R0,?C_IBP
000022 E6              2432             MOV     A,@R0
000023 FF              2433             MOV     R7,A
AX51 MACRO ASSEMBLER  MAIN                                                                  05/15/09 17:22:09 PAGE    38

                       2434             ;LCALL  _SHA1PadMessage
                       2435     ;         context->Computed = 1;
                       2436                             ; SOURCE LINE # 212
000024 A800       E    2437             MOV     R0,?C_IBP
000026 E6              2438             MOV     A,@R0
000027 244F            2439             ADD     A,#04FH
000029 F8              2440             MOV     R0,A
00002A 7600            2441             MOV     @R0,#00H
00002C 08              2442             INC     R0
00002D 7601            2443             MOV     @R0,#01H
                       2444     ;     }
                       2445                             ; SOURCE LINE # 213
00002F                 2446     ?C0032:
                       2447     ; 
                       2448     ;     return 1;
                       2449                             ; SOURCE LINE # 215
00002F 7E00            2450             MOV     R6,#00H
000031 7F01            2451             MOV     R7,#01H
                       2452     ; }
                       2453                             ; SOURCE LINE # 216
000033                 2454     ?C0031:
000033 0500       E    2455             INC     ?C_IBP
000035 22              2456             RET     
                       2457     ; END OF _?SHA1Result
                       2458     
                       2459     ; 
                       2460     ; 
                       2461     ; void SHA1Input(SHA1Context idata *context,unsigned char idata *message_array,unsigned 
                               idata length)
                       2462     
------                 2463             RSEG  ?PR?_SHA1Input?MAIN
000000                 2464     _SHA1Input:
                       2465             USING   0
                       2466                             ; SOURCE LINE # 219
000000 8F00       F    2467             MOV     context?452,R7
000002 8D00       F    2468             MOV     message_array?453,R5
000004 8A00       F    2469             MOV     length?454,R2
000006 8B00       F    2470             MOV     length?454+01H,R3
                       2471     ; {
                       2472                             ; SOURCE LINE # 220
                       2473     ;     if (!length)
                       2474                             ; SOURCE LINE # 221
000008 E500       F    2475             MOV     A,length?454+01H
00000A 4500       F    2476             ORL     A,length?454
00000C 7003            2477             JNZ     $ + 5H
00000E 020000     F    2478             LJMP    ?C0034
                       2479     ;     {
                       2480                             ; SOURCE LINE # 222
                       2481     ;         return;
                       2482     ;     }
                       2483                             ; SOURCE LINE # 224
000011                 2484     ?C0033:
                       2485     ; 
                       2486     ;     if (context->Computed || context->Corrupted)
                       2487                             ; SOURCE LINE # 226
000011 E500       F    2488             MOV     A,context?452
000013 2450            2489             ADD     A,#050H
000015 F9              2490             MOV     R1,A
000016 E7              2491             MOV     A,@R1
000017 19              2492             DEC     R1
000018 47              2493             ORL     A,@R1
000019 700A            2494             JNZ     ?C0036
00001B E500       F    2495             MOV     A,context?452
00001D 2452            2496             ADD     A,#052H
00001F F9              2497             MOV     R1,A
000020 E7              2498             MOV     A,@R1
AX51 MACRO ASSEMBLER  MAIN                                                                  05/15/09 17:22:09 PAGE    39

000021 19              2499             DEC     R1
000022 47              2500             ORL     A,@R1
000023 600B            2501             JZ      ?C0037
000025                 2502     ?C0036:
                       2503     ;     {
                       2504                             ; SOURCE LINE # 227
                       2505     ;         context->Corrupted = 1;
                       2506                             ; SOURCE LINE # 228
000025 E500       F    2507             MOV     A,context?452
000027 2451            2508             ADD     A,#051H
000029 F8              2509             MOV     R0,A
00002A 7600            2510             MOV     @R0,#00H
00002C 08              2511             INC     R0
00002D 7601            2512             MOV     @R0,#01H
00002F 22              2513             RET     
                       2514     ;         return;
                       2515     ;     }
                       2516                             ; SOURCE LINE # 230
000030                 2517     ?C0037:
                       2518     ; 
                       2519     ;     while(length-- && !context->Corrupted)
                       2520                             ; SOURCE LINE # 232
000030 E500       F    2521             MOV     A,length?454+01H
000032 1500       F    2522             DEC     length?454+01H
000034 AE00       F    2523             MOV     R6,length?454
000036 7002            2524             JNZ     ?C0071
000038 1500       F    2525             DEC     length?454
00003A                 2526     ?C0071:
00003A 4E              2527             ORL     A,R6
00003B 607F            2528             JZ      ?C0034
00003D E500       F    2529             MOV     A,context?452
00003F 2452            2530             ADD     A,#052H
000041 F9              2531             MOV     R1,A
000042 E7              2532             MOV     A,@R1
000043 19              2533             DEC     R1
000044 47              2534             ORL     A,@R1
000045 7075            2535             JNZ     ?C0034
                       2536     ;     {
                       2537                             ; SOURCE LINE # 233
                       2538     ;         context->Message_Block[context->Message_Block_Index++] =(*message_array & 0xFF
                               );
                       2539                             ; SOURCE LINE # 234
000047 A800       F    2540             MOV     R0,message_array?453
000049 E6              2541             MOV     A,@R0
00004A FF              2542             MOV     R7,A
00004B E500       F    2543             MOV     A,context?452
00004D 244E            2544             ADD     A,#04EH
00004F F8              2545             MOV     R0,A
000050 E6              2546             MOV     A,@R0
000051 06              2547             INC     @R0
000052 FE              2548             MOV     R6,A
000053 E500       F    2549             MOV     A,context?452
000055 240E            2550             ADD     A,#0EH
000057 2E              2551             ADD     A,R6
000058 F8              2552             MOV     R0,A
000059 A607            2553             MOV     @R0,AR7
                       2554     ; 
                       2555     ;               //blink_led();
                       2556     ;         context->Length_Low += 8;
                       2557                             ; SOURCE LINE # 237
00005B E500       F    2558             MOV     A,context?452
00005D 240B            2559             ADD     A,#0BH
00005F F8              2560             MOV     R0,A
000060 7408            2561             MOV     A,#08H
000062 26              2562             ADD     A,@R0
000063 F6              2563             MOV     @R0,A
AX51 MACRO ASSEMBLER  MAIN                                                                  05/15/09 17:22:09 PAGE    40

000064 18              2564             DEC     R0
000065 E4              2565             CLR     A
000066 36              2566             ADDC    A,@R0
000067 F6              2567             MOV     @R0,A
                       2568     ;         /* Force it to 32 bits */
                       2569     ;         context->Length_Low &= 0xFFFFFFFF;
                       2570                             ; SOURCE LINE # 239
000068 E500       F    2571             MOV     A,context?452
00006A 240A            2572             ADD     A,#0AH
00006C F8              2573             MOV     R0,A
00006D E6              2574             MOV     A,@R0
00006E F6              2575             MOV     @R0,A
00006F 08              2576             INC     R0
000070 E6              2577             MOV     A,@R0
000071 F6              2578             MOV     @R0,A
                       2579     ;         if (context->Length_Low == 0)
                       2580                             ; SOURCE LINE # 240
000072 E500       F    2581             MOV     A,context?452
000074 240B            2582             ADD     A,#0BH
000076 F9              2583             MOV     R1,A
000077 E7              2584             MOV     A,@R1
000078 19              2585             DEC     R1
000079 47              2586             ORL     A,@R1
00007A 702A            2587             JNZ     ?C0039
                       2588     ;         {
                       2589                             ; SOURCE LINE # 241
                       2590     ;             context->Length_High++;
                       2591                             ; SOURCE LINE # 242
00007C E500       F    2592             MOV     A,context?452
00007E 240C            2593             ADD     A,#0CH
000080 F8              2594             MOV     R0,A
000081 08              2595             INC     R0
000082 06              2596             INC     @R0
000083 E6              2597             MOV     A,@R0
000084 18              2598             DEC     R0
000085 7001            2599             JNZ     ?C0072
000087 06              2600             INC     @R0
000088                 2601     ?C0072:
                       2602     ;             /* Force it to 32 bits */
                       2603     ;             context->Length_High &= 0xFFFFFFFF;
                       2604                             ; SOURCE LINE # 244
000088 E500       F    2605             MOV     A,context?452
00008A 240C            2606             ADD     A,#0CH
00008C F8              2607             MOV     R0,A
00008D E6              2608             MOV     A,@R0
00008E F6              2609             MOV     @R0,A
00008F 08              2610             INC     R0
000090 E6              2611             MOV     A,@R0
000091 F6              2612             MOV     @R0,A
                       2613     ;             if (context->Length_High == 0)
                       2614                             ; SOURCE LINE # 245
000092 E500       F    2615             MOV     A,context?452
000094 240D            2616             ADD     A,#0DH
000096 F9              2617             MOV     R1,A
000097 E7              2618             MOV     A,@R1
000098 19              2619             DEC     R1
000099 47              2620             ORL     A,@R1
00009A 700A            2621             JNZ     ?C0039
                       2622     ;             {
                       2623                             ; SOURCE LINE # 246
                       2624     ;                 /* Message is too long */
                       2625     ;                 context->Corrupted = 1;
                       2626                             ; SOURCE LINE # 248
00009C E500       F    2627             MOV     A,context?452
00009E 2451            2628             ADD     A,#051H
0000A0 F8              2629             MOV     R0,A
AX51 MACRO ASSEMBLER  MAIN                                                                  05/15/09 17:22:09 PAGE    41

0000A1 7600            2630             MOV     @R0,#00H
0000A3 08              2631             INC     R0
0000A4 7601            2632             MOV     @R0,#01H
                       2633     ;             }
                       2634                             ; SOURCE LINE # 249
                       2635     ;         }
                       2636                             ; SOURCE LINE # 250
0000A6                 2637     ?C0039:
                       2638     ; 
                       2639     ;         if (context->Message_Block_Index == 32)
                       2640                             ; SOURCE LINE # 252
0000A6 E500       F    2641             MOV     A,context?452
0000A8 244E            2642             ADD     A,#04EH
0000AA F9              2643             MOV     R1,A
0000AB E7              2644             MOV     A,@R1
0000AC B42008          2645             CJNE    A,#020H,?C0041
                       2646     
0000AF 638020          2647             XRL     P0,#020H
                       2648     ;         {
                       2649                             ; SOURCE LINE # 253
                       2650     ;             SHA1ProcessMessageBlock(context);
                       2651                             ; SOURCE LINE # 254
0000B2 AF00       F    2652             MOV     R7,context?452
0000B4 120000     F    2653             LCALL   _SHA1ProcessMessageBlock
                       2654     ;         }
                       2655                             ; SOURCE LINE # 255
0000B7                 2656     ?C0041:
                       2657     ; 
                       2658     ;         message_array++;
                       2659                             ; SOURCE LINE # 257
0000B7 0500       F    2660             INC     message_array?453
                       2661     ;     }
                       2662                             ; SOURCE LINE # 258
0000B9 020000     F    2663             LJMP    ?C0037
                       2664     ; }
                       2665                             ; SOURCE LINE # 259
0000BC                 2666     ?C0034:
0000BC 22              2667             RET     
                       2668     ; END OF _SHA1Input
                       2669     
                       2670     ; 
                       2671     ; 
                       2672     ; void main()
                       2673     
------                 2674             RSEG  ?PR?main?MAIN
000000                 2675     main:
                       2676             USING   0
                       2677                             ; SOURCE LINE # 262
                       2678     ; {
                       2679                             ; SOURCE LINE # 263
                       2680     ; 
                       2681     ;       char i;
                       2682     ;       idata SHA1Context sha;
                       2683     ; 
                       2684     ;       store_cpu_rate(16);
                       2685                             ; SOURCE LINE # 268
000000 7F10            2686             MOV     R7,#010H
000002 7E00            2687             MOV     R6,#00H
000004 120000     E    2688             LCALL   _store_cpu_rate
                       2689     ; 
                       2690     ;     P0_DIR &= ~0x28;
                       2691                             ; SOURCE LINE # 270
000007 5394D7          2692             ANL     P0_DIR,#0D7H
                       2693     ;     P0_ALT &= ~0x28;
                       2694                             ; SOURCE LINE # 271
00000A 5395D7          2695             ANL     P0_ALT,#0D7H
AX51 MACRO ASSEMBLER  MAIN                                                                  05/15/09 17:22:09 PAGE    42

                       2696     ; 
                       2697     ;       serial_init(19200);
                       2698                             ; SOURCE LINE # 273
00000D 7F00            2699             MOV     R7,#00H
00000F 7E4B            2700             MOV     R6,#04BH
000011 120000     E    2701             LCALL   _serial_init
                       2702     ; 
                       2703     ; 
                       2704     ;       for(i=0;i<6;i++)
                       2705                             ; SOURCE LINE # 276
000014 E4              2706             CLR     A
000015 F500       F    2707             MOV     i?555,A
000017                 2708     ?C0042:
                       2709     ;       {
                       2710                             ; SOURCE LINE # 277
                       2711     ;               blink_led();
                       2712                             ; SOURCE LINE # 278
000017 638020          2713             XRL     P0,#020H
                       2714     ;               mdelay(400);
                       2715                             ; SOURCE LINE # 279
00001A 7F90            2716             MOV     R7,#090H
00001C 7E01            2717             MOV     R6,#01H
00001E 120000     E    2718             LCALL   _mdelay
                       2719     ;       }       
                       2720                             ; SOURCE LINE # 280
000021 0500       F    2721             INC     i?555
000023 C3              2722             CLR     C
000024 E500       F    2723             MOV     A,i?555
000026 6480            2724             XRL     A,#080H
000028 9486            2725             SUBB    A,#086H
00002A 40EB            2726             JC      ?C0042
00002C                 2727     ?C0043:
                       2728     ;       
                       2729     ;       sha_counter++;
                       2730                             ; SOURCE LINE # 282
00002C 0500       F    2731             INC     sha_counter+01H
00002E E500       F    2732             MOV     A,sha_counter+01H
000030 7002            2733             JNZ     ?C0073
000032 0500       F    2734             INC     sha_counter
000034                 2735     ?C0073:
000034                 2736     ?C0045:
                       2737     ; 
                       2738     ;       while(1)
                       2739                             ; SOURCE LINE # 284
                       2740     ;       {
                       2741                             ; SOURCE LINE # 285
                       2742     ;               SHA1Reset(&sha);
                       2743                             ; SOURCE LINE # 286
                       2744             ;MOV    R7,#LOW (sha?556)
000034 7800       E    2745             MOV R0,#LOW (ECO_PAGE_REGISTER7)
000036 7600       F    2746         MOV @R0,#LOW (sha?556)
                       2747             ;LCALL  _SHA1Reset
000038 750000     F    2748             MOV ECO_PAGE_ADDR,#HIGH (_SHA1Reset)
00003B 750000     F    2749         MOV ECO_PAGE_ADDR+01H,#LOW (_SHA1Reset)
00003E 020000     E    2750         LJMP   eco_page_manager
                       2751     ;               SHA1Input(&sha, (const unsigned char *) TESTA, 3);
                       2752                             ; SOURCE LINE # 287
                       2753             ;MOV    R5,#LOW (?SC_0)
                       2754             ;MOV    R3,#03H
                       2755             ;MOV    R2,#00H
000041 7800       E    2756             MOV R0,#LOW (ECO_PAGE_REGISTER5)
000043 7600       F    2757         MOV @R0,#LOW (?SC_0)
000045 7800       E    2758             MOV R0,#LOW (ECO_PAGE_REGISTER3)
000047 7603            2759         MOV @R0,#03H
000049 7800       E    2760             MOV R0,#LOW (ECO_PAGE_REGISTER2)
00004B 7600            2761         MOV @R0,#00H
AX51 MACRO ASSEMBLER  MAIN                                                                  05/15/09 17:22:09 PAGE    43

                       2762             ;LCALL  _SHA1Input
00004D 750000     F    2763             MOV ECO_PAGE_ADDR,#HIGH (_SHA1Input)
000050 750000     F    2764         MOV ECO_PAGE_ADDR+01H,#LOW (_SHA1Input)
000053 020000     E    2765         LJMP   eco_page_manager
                       2766             
                       2767     ; 
                       2768     ;               SHA1Result(&sha);
                       2769                             ; SOURCE LINE # 289
000056 7F00       F    2770             MOV     R7,#LOW (sha?556)
000058 120000     F    2771             LCALL   _?SHA1Result
                       2772     ;               sha_counter++;
                       2773                             ; SOURCE LINE # 290
00005B 0500       F    2774             INC     sha_counter+01H
00005D E500       F    2775             MOV     A,sha_counter+01H
00005F 7002            2776             JNZ     ?C0074
000061 0500       F    2777             INC     sha_counter
000063                 2778     ?C0074:
                       2779     ;               //blink_led();
                       2780     ;               int_print(sha_counter);
                       2781                             ; SOURCE LINE # 292
000063 AE00       F    2782             MOV     R6,sha_counter
000065 AF00       F    2783             MOV     R7,sha_counter+01H
000067 120000     E    2784             LCALL   _?int_print
                       2785     ;               puts("\r\n");
                       2786                             ; SOURCE LINE # 293
00006A 7BFF            2787             MOV     R3,#0FFH
00006C 7A00       F    2788             MOV     R2,#HIGH (?SC_4)
00006E 7900       F    2789             MOV     R1,#LOW (?SC_4)
000070 120000     E    2790             LCALL   _puts
                       2791     ;       }       
                       2792                             ; SOURCE LINE # 294
000073 80BF            2793             SJMP    ?C0045
                       2794     ; END OF main
                       2795     
                       2796             END
AX51 MACRO ASSEMBLER  MAIN                                                                  05/15/09 17:22:09 PAGE    44

SYMBOL TABLE LISTING
------ ----- -------


N A M E                                    T Y P E  V A L U E     ATTRIBUTES

?_SHA1INPUT?BYTE. . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?_SHA1INPUT?MAIN
?_SHA1PADMESSAGE?BYTE . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?_SHA1PADMESSAGE?MAIN
?_SHA1PROCESSMESSAGEBLOCK?BYTE. . . . .    D  ADDR  0000H     R   SEG=?DT?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0001. . . . . . . . . . . . . . . . .    C  ADDR  0019H     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0002. . . . . . . . . . . . . . . . .    C  ADDR  010AH     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0004. . . . . . . . . . . . . . . . .    C  ADDR  010EH     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0005. . . . . . . . . . . . . . . . .    C  ADDR  0215H     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0007. . . . . . . . . . . . . . . . .    C  ADDR  026BH     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0008. . . . . . . . . . . . . . . . .    C  ADDR  038EH     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0010. . . . . . . . . . . . . . . . .    C  ADDR  0392H     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0011. . . . . . . . . . . . . . . . .    C  ADDR  04A2H     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0013. . . . . . . . . . . . . . . . .    C  ADDR  04A6H     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0014. . . . . . . . . . . . . . . . .    C  ADDR  05DBH     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0016. . . . . . . . . . . . . . . . .    C  ADDR  05DFH     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0017. . . . . . . . . . . . . . . . .    C  ADDR  06EEH     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0021. . . . . . . . . . . . . . . . .    C  ADDR  0062H     R   SEG=?PR?_SHA1PADMESSAGE?MAIN
?C0022. . . . . . . . . . . . . . . . .    C  ADDR  001FH     R   SEG=?PR?_SHA1PADMESSAGE?MAIN
?C0023. . . . . . . . . . . . . . . . .    C  ADDR  003EH     R   SEG=?PR?_SHA1PADMESSAGE?MAIN
?C0024. . . . . . . . . . . . . . . . .    C  ADDR  0043H     R   SEG=?PR?_SHA1PADMESSAGE?MAIN
?C0026. . . . . . . . . . . . . . . . .    C  ADDR  0091H     R   SEG=?PR?_SHA1PADMESSAGE?MAIN
?C0027. . . . . . . . . . . . . . . . .    C  ADDR  0072H     R   SEG=?PR?_SHA1PADMESSAGE?MAIN
?C0030. . . . . . . . . . . . . . . . .    C  ADDR  0017H     R   SEG=?PR?_?SHA1RESULT?MAIN
?C0031. . . . . . . . . . . . . . . . .    C  ADDR  0033H     R   SEG=?PR?_?SHA1RESULT?MAIN
?C0032. . . . . . . . . . . . . . . . .    C  ADDR  002FH     R   SEG=?PR?_?SHA1RESULT?MAIN
?C0033. . . . . . . . . . . . . . . . .    C  ADDR  0011H     R   SEG=?PR?_SHA1INPUT?MAIN
?C0034. . . . . . . . . . . . . . . . .    C  ADDR  00BCH     R   SEG=?PR?_SHA1INPUT?MAIN
?C0036. . . . . . . . . . . . . . . . .    C  ADDR  0025H     R   SEG=?PR?_SHA1INPUT?MAIN
?C0037. . . . . . . . . . . . . . . . .    C  ADDR  0030H     R   SEG=?PR?_SHA1INPUT?MAIN
?C0039. . . . . . . . . . . . . . . . .    C  ADDR  00A6H     R   SEG=?PR?_SHA1INPUT?MAIN
?C0041. . . . . . . . . . . . . . . . .    C  ADDR  00B7H     R   SEG=?PR?_SHA1INPUT?MAIN
?C0042. . . . . . . . . . . . . . . . .    C  ADDR  0017H     R   SEG=?PR?MAIN?MAIN
?C0043. . . . . . . . . . . . . . . . .    C  ADDR  002CH     R   SEG=?PR?MAIN?MAIN
?C0045. . . . . . . . . . . . . . . . .    C  ADDR  0034H     R   SEG=?PR?MAIN?MAIN
?C0048. . . . . . . . . . . . . . . . .    C  ADDR  0031H     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0049. . . . . . . . . . . . . . . . .    C  ADDR  0077H     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0050. . . . . . . . . . . . . . . . .    C  ADDR  01D9H     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0051. . . . . . . . . . . . . . . . .    C  ADDR  0273H     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0052. . . . . . . . . . . . . . . . .    C  ADDR  028EH     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0053. . . . . . . . . . . . . . . . .    C  ADDR  0331H     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0054. . . . . . . . . . . . . . . . .    C  ADDR  034CH     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0055. . . . . . . . . . . . . . . . .    C  ADDR  039AH     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0056. . . . . . . . . . . . . . . . .    C  ADDR  03B5H     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0057. . . . . . . . . . . . . . . . .    C  ADDR  0445H     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0058. . . . . . . . . . . . . . . . .    C  ADDR  0460H     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0059. . . . . . . . . . . . . . . . .    C  ADDR  04AEH     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0060. . . . . . . . . . . . . . . . .    C  ADDR  04C9H     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0061. . . . . . . . . . . . . . . . .    C  ADDR  057EH     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0062. . . . . . . . . . . . . . . . .    C  ADDR  0599H     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0063. . . . . . . . . . . . . . . . .    C  ADDR  05E7H     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0064. . . . . . . . . . . . . . . . .    C  ADDR  0602H     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0065. . . . . . . . . . . . . . . . .    C  ADDR  0691H     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0066. . . . . . . . . . . . . . . . .    C  ADDR  06ACH     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0067. . . . . . . . . . . . . . . . .    C  ADDR  009CH     R   SEG=?PR?_SHA1PADMESSAGE?MAIN
?C0068. . . . . . . . . . . . . . . . .    C  ADDR  00B6H     R   SEG=?PR?_SHA1PADMESSAGE?MAIN
?C0069. . . . . . . . . . . . . . . . .    C  ADDR  00ECH     R   SEG=?PR?_SHA1PADMESSAGE?MAIN
?C0070. . . . . . . . . . . . . . . . .    C  ADDR  0106H     R   SEG=?PR?_SHA1PADMESSAGE?MAIN
?C0071. . . . . . . . . . . . . . . . .    C  ADDR  003AH     R   SEG=?PR?_SHA1INPUT?MAIN
?C0072. . . . . . . . . . . . . . . . .    C  ADDR  0088H     R   SEG=?PR?_SHA1INPUT?MAIN
?C0073. . . . . . . . . . . . . . . . .    C  ADDR  0034H     R   SEG=?PR?MAIN?MAIN
?C0074. . . . . . . . . . . . . . . . .    C  ADDR  0063H     R   SEG=?PR?MAIN?MAIN
AX51 MACRO ASSEMBLER  MAIN                                                                  05/15/09 17:22:09 PAGE    45

?C?COPY . . . . . . . . . . . . . . . .    C  ADDR  -------       EXT
?C_IBP. . . . . . . . . . . . . . . . .    D  ADDR  -------       EXT
?C_INITSEG. . . . . . . . . . . . . . .    C  SEG   000004H       REL=UNIT, ALN=BYTE
?C_STARTUP. . . . . . . . . . . . . . .    C  ADDR  -------       EXT
?CO?MAIN. . . . . . . . . . . . . . . .    C  SEG   00000FH       REL=UNIT, ALN=BYTE
?DT?_SHA1INPUT?MAIN . . . . . . . . . .    D  SEG   000004H       REL=UNIT, ALN=BYTE
?DT?_SHA1PADMESSAGE?MAIN. . . . . . . .    D  SEG   000001H       REL=UNIT, ALN=BYTE
?DT?_SHA1PROCESSMESSAGEBLOCK?MAIN . . .    D  SEG   000001H       REL=UNIT, ALN=BYTE
?DT?MAIN. . . . . . . . . . . . . . . .    D  SEG   000002H       REL=UNIT, ALN=BYTE
?DT?MAIN?MAIN . . . . . . . . . . . . .    D  SEG   000001H       REL=UNIT, ALN=BYTE
?ID?_SHA1PROCESSMESSAGEBLOCK?MAIN . . .    I  SEG   000015H       REL=UNIT, ALN=BYTE
?ID?MAIN?MAIN . . . . . . . . . . . . .    I  SEG   000053H       REL=UNIT, ALN=BYTE
?MAIN?BYTE. . . . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?MAIN?MAIN
?PR?_?SHA1RESULT?MAIN . . . . . . . . .    C  SEG   000036H       REL=UNIT, ALN=BYTE
?PR?_SHA1INPUT?MAIN . . . . . . . . . .    C  SEG   0000BDH       REL=UNIT, ALN=BYTE
?PR?_SHA1PADMESSAGE?MAIN. . . . . . . .    C  SEG   000136H       REL=UNIT, ALN=BYTE
?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN . . .    C  SEG   000777H       REL=UNIT, ALN=BYTE
?PR?_SHA1RESET?MAIN . . . . . . . . . .    C  SEG   000052H       REL=UNIT, ALN=BYTE
?PR?MAIN?MAIN . . . . . . . . . . . . .    C  SEG   000075H       REL=UNIT, ALN=BYTE
?SC_0 . . . . . . . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?CO?MAIN
?SC_4 . . . . . . . . . . . . . . . . .    C  ADDR  0004H     R   SEG=?CO?MAIN
?XD?_SHA1PROCESSMESSAGEBLOCK?MAIN . . .    X  SEG   0000A0H       REL=UNIT, ALN=BYTE
_?INT_PRINT . . . . . . . . . . . . . .    C  ADDR  -------       EXT
_?IX1000. . . . . . . . . . . . . . . .    C  ADDR  0007H     R   SEG=?CO?MAIN
_?SHA1RESULT. . . . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?_?SHA1RESULT?MAIN
_MDELAY . . . . . . . . . . . . . . . .    C  ADDR  -------       EXT
_PUTS . . . . . . . . . . . . . . . . .    C  ADDR  -------       EXT
_SERIAL_INIT. . . . . . . . . . . . . .    C  ADDR  -------       EXT
_SHA1INPUT. . . . . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?_SHA1INPUT?MAIN
_SHA1PADMESSAGE . . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?_SHA1PADMESSAGE?MAIN
_SHA1PROCESSMESSAGEBLOCK. . . . . . . .    C  ADDR  0000H     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
_SHA1RESET. . . . . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?_SHA1RESET?MAIN
_STORE_CPU_RATE . . . . . . . . . . . .    C  ADDR  -------       EXT
A?045 . . . . . . . . . . . . . . . . .    I  ADDR  000BH     R   SEG=?ID?_SHA1PROCESSMESSAGEBLOCK?MAIN
AC. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.6   A   
ACC . . . . . . . . . . . . . . . . . .    D  ADDR  00E0H     A   
ADCCON. . . . . . . . . . . . . . . . .    D  ADDR  00A1H     A   
ADCDATAH. . . . . . . . . . . . . . . .    D  ADDR  00A2H     A   
ADCDATAL. . . . . . . . . . . . . . . .    D  ADDR  00A3H     A   
ADCSTATIC . . . . . . . . . . . . . . .    D  ADDR  00A4H     A   
AR0 . . . . . . . . . . . . . . . . . .    D  ADDR  0000H     A   
AR1 . . . . . . . . . . . . . . . . . .    D  ADDR  0001H     A   
AR2 . . . . . . . . . . . . . . . . . .    D  ADDR  0002H     A   
AR3 . . . . . . . . . . . . . . . . . .    D  ADDR  0003H     A   
AR4 . . . . . . . . . . . . . . . . . .    D  ADDR  0004H     A   
AR5 . . . . . . . . . . . . . . . . . .    D  ADDR  0005H     A   
AR6 . . . . . . . . . . . . . . . . . .    D  ADDR  0006H     A   
AR7 . . . . . . . . . . . . . . . . . .    D  ADDR  0007H     A   
B . . . . . . . . . . . . . . . . . . .    D  ADDR  00F0H     A   
B?046 . . . . . . . . . . . . . . . . .    I  ADDR  000DH     R   SEG=?ID?_SHA1PROCESSMESSAGEBLOCK?MAIN
C?047 . . . . . . . . . . . . . . . . .    I  ADDR  000FH     R   SEG=?ID?_SHA1PROCESSMESSAGEBLOCK?MAIN
C_T2. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.1   A   
CE. . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.6   A   
CK_CTRL . . . . . . . . . . . . . . . .    D  ADDR  00B6H     A   
CKCON . . . . . . . . . . . . . . . . .    D  ADDR  008EH     A   
CLK1. . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.1   A   
CLK2. . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.5   A   
CONTEXT?040 . . . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?_SHA1PROCESSMESSAGEBLOCK?MAIN
CONTEXT?251 . . . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?_SHA1PADMESSAGE?MAIN
CONTEXT?452 . . . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?_SHA1INPUT?MAIN
CP_RL2. . . . . . . . . . . . . . . . .    B  ADDR  00C8H.0   A   
CPRL2 . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.0   A   
CS. . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.3   A   
CT2 . . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.1   A   
CY. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.7   A   
D?048 . . . . . . . . . . . . . . . . .    I  ADDR  0011H     R   SEG=?ID?_SHA1PROCESSMESSAGEBLOCK?MAIN
AX51 MACRO ASSEMBLER  MAIN                                                                  05/15/09 17:22:09 PAGE    46

DATA? . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.0   A   
DEV_OFFSET. . . . . . . . . . . . . . .    D  ADDR  00BEH     A   
DIN0. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.2   A   
DIO0. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.0   A   
DIO1. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.1   A   
DIO2. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.0   A   
DIO3. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.1   A   
DIO4. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.2   A   
DIO5. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.3   A   
DIO6. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.4   A   
DIO7. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.5   A   
DIO8. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.6   A   
DIO9. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.7   A   
DOUT2 . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.4   A   
DPH . . . . . . . . . . . . . . . . . .    D  ADDR  0083H     A   
DPH0. . . . . . . . . . . . . . . . . .    D  ADDR  0083H     A   
DPH1. . . . . . . . . . . . . . . . . .    D  ADDR  0085H     A   
DPL . . . . . . . . . . . . . . . . . .    D  ADDR  0082H     A   
DPL0. . . . . . . . . . . . . . . . . .    D  ADDR  0082H     A   
DPL1. . . . . . . . . . . . . . . . . .    D  ADDR  0084H     A   
DPS . . . . . . . . . . . . . . . . . .    D  ADDR  0086H     A   
DR1 . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.2   A   
DR2 . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.6   A   
DR2_CE. . . . . . . . . . . . . . . . .    B  ADDR  00A0H.6   A   
E?049 . . . . . . . . . . . . . . . . .    I  ADDR  0013H     R   SEG=?ID?_SHA1PROCESSMESSAGEBLOCK?MAIN
EA. . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.7   A   
ECO_PAGE_ADDR . . . . . . . . . . . . .    D  ADDR  -------       EXT
ECO_PAGE_MANAGER. . . . . . . . . . . .    C  ADDR  -------       EXT
ECO_PAGE_REGISTER1. . . . . . . . . . .    I  ADDR  -------       EXT
ECO_PAGE_REGISTER2. . . . . . . . . . .    I  ADDR  -------       EXT
ECO_PAGE_REGISTER3. . . . . . . . . . .    I  ADDR  -------       EXT
ECO_PAGE_REGISTER4. . . . . . . . . . .    I  ADDR  -------       EXT
ECO_PAGE_REGISTER5. . . . . . . . . . .    I  ADDR  -------       EXT
ECO_PAGE_REGISTER6. . . . . . . . . . .    I  ADDR  -------       EXT
ECO_PAGE_REGISTER7. . . . . . . . . . .    I  ADDR  -------       EXT
ECO_PAGE_SPI_CONN . . . . . . . . . . .    D  ADDR  -------       EXT
EICON . . . . . . . . . . . . . . . . .    D  ADDR  00D8H     A   
EIE . . . . . . . . . . . . . . . . . .    D  ADDR  00E8H     A   
EIP . . . . . . . . . . . . . . . . . .    D  ADDR  00F8H     A   
ES. . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.4   A   
ET0 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.1   A   
ET1 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.3   A   
ET2 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.5   A   
EWDI. . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.4   A   
EX0 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.0   A   
EX1 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.2   A   
EX2 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.0   A   
EX3 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.1   A   
EX4 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.2   A   
EX5 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.3   A   
EXEN2 . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.3   A   
EXF2. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.6   A   
EXIF. . . . . . . . . . . . . . . . . .    D  ADDR  0091H     A   
F0. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.5   A   
F1. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.1   A   
I?555 . . . . . . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?MAIN?MAIN
IE. . . . . . . . . . . . . . . . . . .    D  ADDR  00A8H     A   
IE0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.1   A   
IE1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.3   A   
INT0_N. . . . . . . . . . . . . . . . .    B  ADDR  0080H.3   A   
INT1_N. . . . . . . . . . . . . . . . .    B  ADDR  0080H.4   A   
IP. . . . . . . . . . . . . . . . . . .    D  ADDR  00B8H     A   
IT0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.0   A   
IT1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.2   A   
K?041 . . . . . . . . . . . . . . . . .    I  ADDR  0000H     R   SEG=?ID?_SHA1PROCESSMESSAGEBLOCK?MAIN
LENGTH?454. . . . . . . . . . . . . . .    D  ADDR  0002H     R   SEG=?DT?_SHA1INPUT?MAIN
AX51 MACRO ASSEMBLER  MAIN                                                                  05/15/09 17:22:09 PAGE    47

MAIN. . . . . . . . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?MAIN?MAIN
MESSAGE_ARRAY?453 . . . . . . . . . . .    D  ADDR  0001H     R   SEG=?DT?_SHA1INPUT?MAIN
MPAGE . . . . . . . . . . . . . . . . .    D  ADDR  0092H     A   
OV. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.2   A   
P . . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.0   A   
P0. . . . . . . . . . . . . . . . . . .    D  ADDR  0080H     A   
P0_0. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.0   A   
P0_1. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.1   A   
P0_2. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.2   A   
P0_3. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.3   A   
P0_4. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.4   A   
P0_5. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.5   A   
P0_6. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.6   A   
P0_7. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.7   A   
P0_ALT. . . . . . . . . . . . . . . . .    D  ADDR  0095H     A   
P0_DIR. . . . . . . . . . . . . . . . .    D  ADDR  0094H     A   
P1. . . . . . . . . . . . . . . . . . .    D  ADDR  0090H     A   
P1_0. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.0   A   
P1_1. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.1   A   
P1_2. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.2   A   
P1_ALT. . . . . . . . . . . . . . . . .    D  ADDR  0097H     A   
P1_DIR. . . . . . . . . . . . . . . . .    D  ADDR  0096H     A   
PCON. . . . . . . . . . . . . . . . . .    D  ADDR  0087H     A   
PS. . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.4   A   
PSW . . . . . . . . . . . . . . . . . .    D  ADDR  00D0H     A   
PT0 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.1   A   
PT1 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.3   A   
PT2 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.5   A   
PWDI. . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.4   A   
PWM . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.7   A   
PWMCON. . . . . . . . . . . . . . . . .    D  ADDR  00A9H     A   
PWMDUTY . . . . . . . . . . . . . . . .    D  ADDR  00AAH     A   
PWR_UP. . . . . . . . . . . . . . . . .    B  ADDR  00A0H.7   A   
PX0 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.0   A   
PX1 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.2   A   
PX2 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.0   A   
PX3 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.1   A   
PX4 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.2   A   
PX5 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.3   A   
RADIO . . . . . . . . . . . . . . . . .    D  ADDR  00A0H     A   
RB8 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.2   A   
RCAP2H. . . . . . . . . . . . . . . . .    D  ADDR  00CBH     A   
RCAP2L. . . . . . . . . . . . . . . . .    D  ADDR  00CAH     A   
RCLK. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.5   A   
REGX_CTRL . . . . . . . . . . . . . . .    D  ADDR  00ADH     A   
REGX_LSB. . . . . . . . . . . . . . . .    D  ADDR  00ACH     A   
REGX_MSB. . . . . . . . . . . . . . . .    D  ADDR  00ABH     A   
REN . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.4   A   
RI. . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.0   A   
RS0 . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.3   A   
RS1 . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.4   A   
RSTREAS . . . . . . . . . . . . . . . .    D  ADDR  00B1H     A   
RXD . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.1   A   
SBUF. . . . . . . . . . . . . . . . . .    D  ADDR  0099H     A   
SCON. . . . . . . . . . . . . . . . . .    D  ADDR  0098H     A   
SHA?556 . . . . . . . . . . . . . . . .    I  ADDR  0000H     R   SEG=?ID?MAIN?MAIN
SHA_COUNTER . . . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?MAIN
SM0 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.7   A   
SM1 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.6   A   
SM2 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.5   A   
SP. . . . . . . . . . . . . . . . . . .    D  ADDR  0081H     A   
SPC_FNC . . . . . . . . . . . . . . . .    D  ADDR  008FH     A   
SPI_CTRL. . . . . . . . . . . . . . . .    D  ADDR  00B3H     A   
SPI_DATA. . . . . . . . . . . . . . . .    D  ADDR  00B2H     A   
SPICLK. . . . . . . . . . . . . . . . .    D  ADDR  00B4H     A   
T0. . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.5   A   
AX51 MACRO ASSEMBLER  MAIN                                                                  05/15/09 17:22:09 PAGE    48

T1. . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.6   A   
T1_1V2. . . . . . . . . . . . . . . . .    D  ADDR  00BCH     A   
T2. . . . . . . . . . . . . . . . . . .    B  ADDR  0090H.0   A   
T2_1V2. . . . . . . . . . . . . . . . .    D  ADDR  00BDH     A   
T2CON . . . . . . . . . . . . . . . . .    D  ADDR  00C8H     A   
T?042 . . . . . . . . . . . . . . . . .    I  ADDR  0008H     R   SEG=?ID?_SHA1PROCESSMESSAGEBLOCK?MAIN
TB8 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.3   A   
TCLK. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.4   A   
TCON. . . . . . . . . . . . . . . . . .    D  ADDR  0088H     A   
TEMP?043. . . . . . . . . . . . . . . .    I  ADDR  0009H     R   SEG=?ID?_SHA1PROCESSMESSAGEBLOCK?MAIN
TEST_MODE . . . . . . . . . . . . . . .    D  ADDR  00B7H     A   
TF0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.5   A   
TF1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.7   A   
TF2 . . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.7   A   
TH0 . . . . . . . . . . . . . . . . . .    D  ADDR  008CH     A   
TH1 . . . . . . . . . . . . . . . . . .    D  ADDR  008DH     A   
TH2 . . . . . . . . . . . . . . . . . .    D  ADDR  00CDH     A   
TI. . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.1   A   
TICK_DV . . . . . . . . . . . . . . . .    D  ADDR  00B5H     A   
TL0 . . . . . . . . . . . . . . . . . .    D  ADDR  008AH     A   
TL1 . . . . . . . . . . . . . . . . . .    D  ADDR  008BH     A   
TL2 . . . . . . . . . . . . . . . . . .    D  ADDR  00CCH     A   
TMOD. . . . . . . . . . . . . . . . . .    D  ADDR  0089H     A   
TR0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.4   A   
TR1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.6   A   
TR2 . . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.2   A   
TXD . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.2   A   
W?044 . . . . . . . . . . . . . . . . .    X  ADDR  0000H     R   SEG=?XD?_SHA1PROCESSMESSAGEBLOCK?MAIN
WDTI. . . . . . . . . . . . . . . . . .    B  ADDR  00D8H.3   A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S).
