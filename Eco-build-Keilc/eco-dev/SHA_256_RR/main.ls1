AX51 MACRO ASSEMBLER  MAIN                                                                  05/14/09 22:31:03 PAGE     1


MACRO ASSEMBLER AX51 V3.06a
OBJECT MODULE PLACED IN .\main.obj
ASSEMBLER INVOKED BY: C:\Keil\C51\BIN\AX51.exe .\main.src EP DEBUG SYMBOLS OJ(.\main.obj) PR(.\main.ls1) 

LOC    OBJ             LINE     SOURCE

                          1     ; ./main.src generated from: .\main.c
                          2     ; COMPILER INVOKED BY:
                          3     ;        C:\Keil\C51\BIN\C51.exe .\main.c BROWSE DEBUG CODE LISTINCLUDE SYMBOLS PREPRINT
                                ROM(LARGE) INCDIR(../../Include) SRC(./main.src)
                          4     
                          5     $nomod51 
                          6     
                          7     NAME    MAIN
                          8     
 00A0.7                   9     PWR_UP  BIT     0A0H.7
 0080                    10     P0      DATA    080H
 0090                    11     P1      DATA    090H
 00D0.6                  12     AC      BIT     0D0H.6
 0080.5                  13     T0      BIT     080H.5
 00B3                    14     SPI_CTRL        DATA    0B3H
 0080.6                  15     T1      BIT     080H.6
 00A8.7                  16     EA      BIT     0A8H.7
 0090.0                  17     T2      BIT     090H.0
 00A0.6                  18     CE      BIT     0A0H.6
 00BE                    19     DEV_OFFSET      DATA    0BEH
 00A0.1                  20     CLK1    BIT     0A0H.1
 0090.2                  21     DIN0    BIT     090H.2
 00A0.5                  22     CLK2    BIT     0A0H.5
 0090.0                  23     DIO0    BIT     090H.0
 0083                    24     DPH0    DATA    083H
 0090.1                  25     DIO1    BIT     090H.1
 00A8                    26     IE      DATA    0A8H
 0085                    27     DPH1    DATA    085H
 0080.0                  28     DIO2    BIT     080H.0
 0080.1                  29     DIO3    BIT     080H.1
 0080.0                  30     P0_0    BIT     080H.0
 0090.0                  31     P1_0    BIT     090H.0
 0080.2                  32     DIO4    BIT     080H.2
 0080.1                  33     P0_1    BIT     080H.1
 0082                    34     DPL0    DATA    082H
 0090.1                  35     P1_1    BIT     090H.1
 0080.3                  36     DIO5    BIT     080H.3
 0080.2                  37     P0_2    BIT     080H.2
 0084                    38     DPL1    DATA    084H
 0090.2                  39     P1_2    BIT     090H.2
 0080.4                  40     DIO6    BIT     080H.4
 0080.3                  41     P0_3    BIT     080H.3
 0080.5                  42     DIO7    BIT     080H.5
 0080.4                  43     P0_4    BIT     080H.4
 00A4                    44     ADCSTATIC       DATA    0A4H
 0080.6                  45     DIO8    BIT     080H.6
 0080.5                  46     P0_5    BIT     080H.5
 00C8.6                  47     EXF2    BIT     0C8H.6
 00A0.3                  48     CS      BIT     0A0H.3
 0080.7                  49     DIO9    BIT     080H.7
 0080.6                  50     P0_6    BIT     080H.6
 0080.7                  51     P0_7    BIT     080H.7
 00A8.4                  52     ES      BIT     0A8H.4
 00B8                    53     IP      DATA    0B8H
 00A0.0                  54     DATA?   BIT     0A0H.0
 0098.0                  55     RI      BIT     098H.0
 00D0.7                  56     CY      BIT     0D0H.7
 0098.1                  57     TI      BIT     098H.1
AX51 MACRO ASSEMBLER  MAIN                                                                  05/14/09 22:31:03 PAGE     2

 00BC                    58     T1_1V2  DATA    0BCH
 008F                    59     SPC_FNC DATA    08FH
 00BD                    60     T2_1V2  DATA    0BDH
 00CB                    61     RCAP2H  DATA    0CBH
 00B8.4                  62     PS      BIT     0B8H.4
 0081                    63     SP      DATA    081H
 00D0.2                  64     OV      BIT     0D0H.2
 00B6                    65     CK_CTRL DATA    0B6H
 00CA                    66     RCAP2L  DATA    0CAH
 00B5                    67     TICK_DV DATA    0B5H
 00B1                    68     RSTREAS DATA    0B1H
 00C8.1                  69     C_T2    BIT     0C8H.1
 00E8.4                  70     EWDI    BIT     0E8H.4
 00A1                    71     ADCCON  DATA    0A1H
 00C8.5                  72     RCLK    BIT     0C8H.5
 00A2                    73     ADCDATAH        DATA    0A2H
 0091                    74     EXIF    DATA    091H
 00C8.4                  75     TCLK    BIT     0C8H.4
 00A0.6                  76     DR2_CE  BIT     0A0H.6
 00A3                    77     ADCDATAL        DATA    0A3H
 0099                    78     SBUF    DATA    099H
 0087                    79     PCON    DATA    087H
 0098                    80     SCON    DATA    098H
 00F8.4                  81     PWDI    BIT     0F8H.4
 0089                    82     TMOD    DATA    089H
 0088                    83     TCON    DATA    088H
 00D8.3                  84     WDTI    BIT     0D8H.3
 00AA                    85     PWMDUTY DATA    0AAH
 0088.1                  86     IE0     BIT     088H.1
 0088.3                  87     IE1     BIT     088H.3
 0094                    88     P0_DIR  DATA    094H
 00F0                    89     B       DATA    0F0H
 0096                    90     P1_DIR  DATA    096H
 0095                    91     P0_ALT  DATA    095H
 0097                    92     P1_ALT  DATA    097H
 00C8.0                  93     CP_RL2  BIT     0C8H.0
 00A0.2                  94     DR1     BIT     0A0H.2
 00E0                    95     ACC     DATA    0E0H
 00A0.6                  96     DR2     BIT     0A0H.6
 00B7                    97     TEST_MODE       DATA    0B7H
 00B4                    98     SPICLK  DATA    0B4H
 00C8.1                  99     CT2     BIT     0C8H.1
 00A8.1                 100     ET0     BIT     0A8H.1
 00A8.3                 101     ET1     BIT     0A8H.3
 0088.5                 102     TF0     BIT     088H.5
 0080.3                 103     INT0_N  BIT     080H.3
 00A8.5                 104     ET2     BIT     0A8H.5
 0088.7                 105     TF1     BIT     088H.7
 0080.4                 106     INT1_N  BIT     080H.4
 00C8.7                 107     TF2     BIT     0C8H.7
 0098.2                 108     RB8     BIT     098H.2
 008C                   109     TH0     DATA    08CH
 00A8.0                 110     EX0     BIT     0A8H.0
 0088.0                 111     IT0     BIT     088H.0
 008D                   112     TH1     DATA    08DH
 00A8.2                 113     EX1     BIT     0A8H.2
 0098.3                 114     TB8     BIT     098H.3
 0088.2                 115     IT1     BIT     088H.2
 00CD                   116     TH2     DATA    0CDH
 00AD                   117     REGX_CTRL       DATA    0ADH
 00E8.0                 118     EX2     BIT     0E8H.0
 00D0.0                 119     P       BIT     0D0H.0
 00E8.1                 120     EX3     BIT     0E8H.1
 0098.7                 121     SM0     BIT     098H.7
 008A                   122     TL0     DATA    08AH
 00E8.2                 123     EX4     BIT     0E8H.2
AX51 MACRO ASSEMBLER  MAIN                                                                  05/14/09 22:31:03 PAGE     3

 0098.6                 124     SM1     BIT     098H.6
 008B                   125     TL1     DATA    08BH
 00E8.3                 126     EX5     BIT     0E8H.3
 0098.5                 127     SM2     BIT     098H.5
 00CC                   128     TL2     DATA    0CCH
 00E8                   129     EIE     DATA    0E8H
 00B8.1                 130     PT0     BIT     0B8H.1
 00D0.3                 131     RS0     BIT     0D0H.3
 00B8.3                 132     PT1     BIT     0B8H.3
 00D0.4                 133     RS1     BIT     0D0H.4
 00B8.5                 134     PT2     BIT     0B8H.5
 0088.4                 135     TR0     BIT     088H.4
 00A9                   136     PWMCON  DATA    0A9H
 0088.6                 137     TR1     BIT     088H.6
 00C8.2                 138     TR2     BIT     0C8H.2
 00B8.0                 139     PX0     BIT     0B8H.0
 00B8.2                 140     PX1     BIT     0B8H.2
 00F8.0                 141     PX2     BIT     0F8H.0
 00F8.1                 142     PX3     BIT     0F8H.1
 00F8.2                 143     PX4     BIT     0F8H.2
 0083                   144     DPH     DATA    083H
 00F8.3                 145     PX5     BIT     0F8H.3
 00F8                   146     EIP     DATA    0F8H
 0082                   147     DPL     DATA    082H
 00C8.3                 148     EXEN2   BIT     0C8H.3
 00C8.0                 149     CPRL2   BIT     0C8H.0
 0098.4                 150     REN     BIT     098H.4
 00C8                   151     T2CON   DATA    0C8H
 0086                   152     DPS     DATA    086H
 00B2                   153     SPI_DATA        DATA    0B2H
 0092                   154     MPAGE   DATA    092H
 0080.1                 155     RXD     BIT     080H.1
 00A0.4                 156     DOUT2   BIT     0A0H.4
 00D8                   157     EICON   DATA    0D8H
 008E                   158     CKCON   DATA    08EH
 0080.2                 159     TXD     BIT     080H.2
 00A0                   160     RADIO   DATA    0A0H
 0080.7                 161     PWM     BIT     080H.7
 00D0.5                 162     F0      BIT     0D0H.5
 00D0.1                 163     F1      BIT     0D0H.1
 00AC                   164     REGX_LSB        DATA    0ACH
 00D0                   165     PSW     DATA    0D0H
 00AB                   166     REGX_MSB        DATA    0ABH
------                  167     ?PR?_SHA1ProcessMessageBlock?MAIN        SEGMENT CODE 
------                  168     ?DT?_SHA1ProcessMessageBlock?MAIN        SEGMENT DATA OVERLAYABLE 
------                  169     ?PR?_SHA1Reset?MAIN  SEGMENT CODE 
------                  170     ?PR?_SHA1PadMessage?MAIN                 SEGMENT CODE 
------                  171     ?DT?_SHA1PadMessage?MAIN                 SEGMENT DATA OVERLAYABLE 
------                  172     ?PR?_SHA1Result?MAIN SEGMENT CODE 
------                  173     ?DT?_SHA1Result?MAIN SEGMENT DATA OVERLAYABLE 
------                  174     ?PR?_SHA1Input?MAIN  SEGMENT CODE 
------                  175     ?DT?_SHA1Input?MAIN  SEGMENT DATA OVERLAYABLE 
------                  176     ?PR?main?MAIN        SEGMENT CODE 
------                  177     ?CO?MAIN             SEGMENT CODE 
------                  178     ?C_INITSEG           SEGMENT CODE 
------                  179     ?DT?MAIN             SEGMENT DATA 
------                  180     ?ID?_SHA1ProcessMessageBlock?MAIN        SEGMENT IDATA OVERLAYABLE 
------                  181     ?XD?_SHA1ProcessMessageBlock?MAIN        SEGMENT XDATA OVERLAYABLE 
------                  182     ?ID?main?MAIN        SEGMENT IDATA OVERLAYABLE 
                        183             EXTRN   CODE (_mdelay)
                        184             EXTRN   CODE (_serial_init)
                        185             EXTRN   CODE (_puts)
                        186             EXTRN   CODE (_?int_print)
                        187             EXTRN   CODE (_store_cpu_rate)
                        188             EXTRN   CODE (?C?COPY)
                        189             EXTRN   CODE (?C_STARTUP)
AX51 MACRO ASSEMBLER  MAIN                                                                  05/14/09 22:31:03 PAGE     4

                        190             PUBLIC  sha_counter
                        191             PUBLIC  main
                        192             PUBLIC  _SHA1Input
                        193             PUBLIC  _SHA1Result
                        194             PUBLIC  _SHA1PadMessage
                        195             PUBLIC  _SHA1Reset
                        196             PUBLIC  _SHA1ProcessMessageBlock
                        197     
------                  198             RSEG  ?DT?_SHA1Result?MAIN
000000                  199     ?_SHA1Result?BYTE:
000000                  200         context?352:   DS   1
                        201     
------                  202             RSEG  ?DT?_SHA1Input?MAIN
000000                  203     ?_SHA1Input?BYTE:
000000                  204         context?453:   DS   1
000001                  205             ORG  1
000001                  206     message_array?454:   DS   1
000002                  207             ORG  2
000002                  208          length?455:   DS   2
                        209     
------                  210             RSEG  ?DT?_SHA1ProcessMessageBlock?MAIN
000000                  211     ?_SHA1ProcessMessageBlock?BYTE:
000000                  212         context?040:   DS   1
                        213     
------                  214             RSEG  ?DT?_SHA1PadMessage?MAIN
000000                  215     ?_SHA1PadMessage?BYTE:
000000                  216         context?251:   DS   1
                        217     
------                  218             RSEG  ?DT?MAIN
000000                  219         sha_counter:   DS   2
                        220     
------                  221             RSEG  ?ID?_SHA1ProcessMessageBlock?MAIN
000000                  222               K?041:   DS   8
                        223     
------                  224             RSEG  ?ID?_SHA1ProcessMessageBlock?MAIN
000008                  225               t?042:   DS   2
                        226     
------                  227             RSEG  ?ID?_SHA1ProcessMessageBlock?MAIN
00000A                  228            temp?043:   DS   2
                        229     
------                  230             RSEG  ?ID?_SHA1ProcessMessageBlock?MAIN
00000C                  231               A?045:   DS   2
                        232     
------                  233             RSEG  ?ID?_SHA1ProcessMessageBlock?MAIN
00000E                  234               B?046:   DS   2
                        235     
------                  236             RSEG  ?ID?_SHA1ProcessMessageBlock?MAIN
000010                  237               C?047:   DS   2
                        238     
------                  239             RSEG  ?ID?_SHA1ProcessMessageBlock?MAIN
000012                  240               D?048:   DS   2
                        241     
------                  242             RSEG  ?ID?_SHA1ProcessMessageBlock?MAIN
000014                  243               E?049:   DS   2
                        244     
------                  245             RSEG  ?XD?_SHA1ProcessMessageBlock?MAIN
000000                  246               W?044:   DS   160
                        247     
------                  248             RSEG  ?ID?main?MAIN
000000                  249               i?556:   DS   1
                        250     
------                  251             RSEG  ?ID?main?MAIN
000001                  252             sha?557:   DS   83
                        253     
------                  254             RSEG  ?CO?MAIN
000000                  255     ?SC_0:
AX51 MACRO ASSEMBLER  MAIN                                                                  05/14/09 22:31:03 PAGE     5

000000 61626300         256             DB  'a' ,'b' ,'c' ,000H
                        257     
000004                  258     ?SC_4:
000004 0D0A00           259             DB  00DH,00AH,000H
                        260     
000007                  261     _?ix1000:
000007 7999             262             DW      07999H
000009 EBA1             263             DW      0EBA1H
00000B BCDC             264             DW      0BCDCH
00000D C1D6             265             DW      0C1D6H
                        266     
                        267     
------                  268             RSEG  ?C_INITSEG
000000 02               269             DB      002H
000001 00         F     270             DB      sha_counter
000002 0000             271             DW      00000H
                        272     
                        273     ; #include "Eco/reg24e1.h"
                        274     ; #include "Eco/eco_sys.h"
                        275     ; #include "utils/utils.h"
                        276     ; #include "serial/serial.h"
                        277     ; //#include "isr/isr_rf.h"
                        278     ; //#include "adc/adc.h"
                        279     ; #include "eeprom/eeprom.h"
                        280     ; //#include "eco_page.h"
                        281     ; 
                        282     ; #define TESTA   "abc"
                        283     ; #define SHA1CircularShift(bits,word) \
                        284     ;                 ((((word) << (bits)) & 0xFFFFFFFF) | \
                        285     ;                 ((word) >> (32-(bits))))
                        286     ; 
                        287     ; 
                        288     ; volatile int sha_counter = 0;
                        289     ; 
                        290     ; 
                        291     ; typedef struct SHA1Context
                        292     ; {
                        293     ;     unsigned Message_Digest[5]; /* Message Digest (output)          */
                        294     ; 
                        295     ;     unsigned Length_Low;        /* Message length in bits           */
                        296     ;     unsigned Length_High;       /* Message length in bits           */
                        297     ; 
                        298     ;     unsigned char Message_Block[64]; /* 256-bit message blocks      */
                        299     ;     char Message_Block_Index;    /* Index into message block array   */
                        300     ; 
                        301     ;     int Computed;               /* Is the digest computed?          */
                        302     ;     int Corrupted;              /* Is the message digest corruped?  */
                        303     ; } SHA1Context;
                        304     ; 
                        305     ; 
                        306     ; void SHA1ProcessMessageBlock(SHA1Context idata *context)
                        307     
------                  308             RSEG  ?PR?_SHA1ProcessMessageBlock?MAIN
000000                  309     _SHA1ProcessMessageBlock:
                        310             USING   0
                        311                             ; SOURCE LINE # 34
000000 8F00       F     312             MOV     context?040,R7
                        313     ; {
                        314                             ; SOURCE LINE # 35
                        315     ;       idata unsigned K[] =            /* Constants defined in SHA-1   */      
                        316                             ; SOURCE LINE # 36
000002 7800       F     317             MOV     R0,#LOW (K?041)
000004 7C00       F     318             MOV     R4,#HIGH (K?041)
000006 7D00             319             MOV     R5,#00H
000008 7BFF             320             MOV     R3,#0FFH
00000A 7A00       F     321             MOV     R2,#HIGH (_?ix1000)
AX51 MACRO ASSEMBLER  MAIN                                                                  05/14/09 22:31:03 PAGE     6

00000C 7900       F     322             MOV     R1,#LOW (_?ix1000)
00000E 7E00             323             MOV     R6,#00H
000010 7F08             324             MOV     R7,#08H
000012 120000     E     325             LCALL   ?C?COPY
                        326     ;     {
                        327     ;         0x5A827999,
                        328     ;         0x6ED9EBA1,
                        329     ;         0x8F1BBCDC,
                        330     ;         0xCA62C1D6
                        331     ;     };
                        332     ;     idata int         t;                  /* Loop counter                 */
                        333     ;     idata unsigned    temp;               /* Temporary word value         */
                        334     ;     xdata unsigned    W[80];              /* Word sequence                */
                        335     ;     idata unsigned    A, B, C, D, E;      /* Word buffers                 */
                        336     ; 
                        337     ;     /*
                        338     ;      *  Initialize the first 16 words in the array W
                        339     ;      */
                        340     ;     for(t = 0; t < 16; t++)
                        341                             ; SOURCE LINE # 51
000015 E4               342             CLR     A
000016 7800       F     343             MOV     R0,#LOW (t?042)
000018 F6               344             MOV     @R0,A
000019 08               345             INC     R0
00001A F6               346             MOV     @R0,A
00001B                  347     ?C0001:
                        348     ;     {
                        349                             ; SOURCE LINE # 52
                        350     ;         W[t] = ((unsigned) context->Message_Block[t * 4]) << 24;
                        351                             ; SOURCE LINE # 53
00001B E500       F     352             MOV     A,context?040
00001D 240E             353             ADD     A,#0EH
00001F F8               354             MOV     R0,A
000020 C000             355             PUSH    AR0
000022 7800       F     356             MOV     R0,#LOW (t?042)
000024 E6               357             MOV     A,@R0
000025 FC               358             MOV     R4,A
000026 08               359             INC     R0
000027 E6               360             MOV     A,@R0
000028 FD               361             MOV     R5,A
000029 D000             362             POP     AR0
00002B 25E0             363             ADD     A,ACC
00002D 25E0             364             ADD     A,ACC
00002F 28               365             ADD     A,R0
000030 F8               366             MOV     R0,A
000031 E6               367             MOV     A,@R0
000032 7E00             368             MOV     R6,#00H
000034 7818             369             MOV     R0,#018H
000036                  370     ?C0048:
000036 C3               371             CLR     C
000037 33               372             RLC     A
000038 CE               373             XCH     A,R6
000039 33               374             RLC     A
00003A CE               375             XCH     A,R6
00003B D8F9             376             DJNZ    R0,?C0048
00003D FB               377             MOV     R3,A
00003E AA06             378             MOV     R2,AR6
000040 ED               379             MOV     A,R5
000041 25E0             380             ADD     A,ACC
000043 FF               381             MOV     R7,A
000044 EC               382             MOV     A,R4
000045 33               383             RLC     A
000046 FE               384             MOV     R6,A
000047 7400       F     385             MOV     A,#LOW (W?044)
000049 2F               386             ADD     A,R7
00004A F582             387             MOV     DPL,A
AX51 MACRO ASSEMBLER  MAIN                                                                  05/14/09 22:31:03 PAGE     7

00004C 7400       F     388             MOV     A,#HIGH (W?044)
00004E 3E               389             ADDC    A,R6
00004F F583             390             MOV     DPH,A
000051 EA               391             MOV     A,R2
000052 F0               392             MOVX    @DPTR,A
000053 A3               393             INC     DPTR
000054 EB               394             MOV     A,R3
000055 F0               395             MOVX    @DPTR,A
                        396     ;         W[t] |= ((unsigned) context->Message_Block[t * 4 + 1]) << 16;
                        397                             ; SOURCE LINE # 54
000056 7400       F     398             MOV     A,#LOW (W?044)
000058 2F               399             ADD     A,R7
000059 F582             400             MOV     DPL,A
00005B 7400       F     401             MOV     A,#HIGH (W?044)
00005D 3E               402             ADDC    A,R6
00005E F583             403             MOV     DPH,A
000060 C083             404             PUSH    DPH
000062 C082             405             PUSH    DPL
000064 7800       F     406             MOV     R0,#LOW (t?042)
000066 E6               407             MOV     A,@R0
000067 FC               408             MOV     R4,A
000068 08               409             INC     R0
000069 E6               410             MOV     A,@R0
00006A FD               411             MOV     R5,A
00006B 25E0             412             ADD     A,ACC
00006D 25E0             413             ADD     A,ACC
00006F 240F             414             ADD     A,#0FH
000071 2500       F     415             ADD     A,context?040
000073 F8               416             MOV     R0,A
000074 E6               417             MOV     A,@R0
000075 7E00             418             MOV     R6,#00H
000077 7810             419             MOV     R0,#010H
000079                  420     ?C0049:
000079 C3               421             CLR     C
00007A 33               422             RLC     A
00007B CE               423             XCH     A,R6
00007C 33               424             RLC     A
00007D CE               425             XCH     A,R6
00007E D8F9             426             DJNZ    R0,?C0049
000080 FF               427             MOV     R7,A
000081 E0               428             MOVX    A,@DPTR
000082 4E               429             ORL     A,R6
000083 FE               430             MOV     R6,A
000084 A3               431             INC     DPTR
000085 E0               432             MOVX    A,@DPTR
000086 4F               433             ORL     A,R7
000087 FF               434             MOV     R7,A
000088 D082             435             POP     DPL
00008A D083             436             POP     DPH
00008C EE               437             MOV     A,R6
00008D F0               438             MOVX    @DPTR,A
00008E A3               439             INC     DPTR
00008F EF               440             MOV     A,R7
000090 F0               441             MOVX    @DPTR,A
                        442     ;         W[t] |= ((unsigned) context->Message_Block[t * 4 + 2]) << 8;
                        443                             ; SOURCE LINE # 55
000091 ED               444             MOV     A,R5
000092 25E0             445             ADD     A,ACC
000094 FF               446             MOV     R7,A
000095 EC               447             MOV     A,R4
000096 33               448             RLC     A
000097 FE               449             MOV     R6,A
000098 7400       F     450             MOV     A,#LOW (W?044)
00009A 2F               451             ADD     A,R7
00009B F582             452             MOV     DPL,A
00009D 7400       F     453             MOV     A,#HIGH (W?044)
AX51 MACRO ASSEMBLER  MAIN                                                                  05/14/09 22:31:03 PAGE     8

00009F 3E               454             ADDC    A,R6
0000A0 F583             455             MOV     DPH,A
0000A2 C083             456             PUSH    DPH
0000A4 C082             457             PUSH    DPL
0000A6 7800       F     458             MOV     R0,#LOW (t?042)
0000A8 E6               459             MOV     A,@R0
0000A9 FC               460             MOV     R4,A
0000AA 08               461             INC     R0
0000AB E6               462             MOV     A,@R0
0000AC FD               463             MOV     R5,A
0000AD 25E0             464             ADD     A,ACC
0000AF 25E0             465             ADD     A,ACC
0000B1 2410             466             ADD     A,#010H
0000B3 2500       F     467             ADD     A,context?040
0000B5 F8               468             MOV     R0,A
0000B6 E6               469             MOV     A,@R0
0000B7 FE               470             MOV     R6,A
0000B8 E0               471             MOVX    A,@DPTR
0000B9 4E               472             ORL     A,R6
0000BA FF               473             MOV     R7,A
0000BB A3               474             INC     DPTR
0000BC E0               475             MOVX    A,@DPTR
0000BD D082             476             POP     DPL
0000BF D083             477             POP     DPH
0000C1 CF               478             XCH     A,R7
0000C2 F0               479             MOVX    @DPTR,A
0000C3 A3               480             INC     DPTR
0000C4 EF               481             MOV     A,R7
0000C5 F0               482             MOVX    @DPTR,A
                        483     ;         W[t] |= ((unsigned) context->Message_Block[t * 4 + 3]);
                        484                             ; SOURCE LINE # 56
0000C6 ED               485             MOV     A,R5
0000C7 25E0             486             ADD     A,ACC
0000C9 FF               487             MOV     R7,A
0000CA EC               488             MOV     A,R4
0000CB 33               489             RLC     A
0000CC FE               490             MOV     R6,A
0000CD 7400       F     491             MOV     A,#LOW (W?044)
0000CF 2F               492             ADD     A,R7
0000D0 F582             493             MOV     DPL,A
0000D2 7400       F     494             MOV     A,#HIGH (W?044)
0000D4 3E               495             ADDC    A,R6
0000D5 F583             496             MOV     DPH,A
0000D7 C083             497             PUSH    DPH
0000D9 C082             498             PUSH    DPL
0000DB 7800       F     499             MOV     R0,#LOW (t?042+01H)
0000DD E6               500             MOV     A,@R0
0000DE 25E0             501             ADD     A,ACC
0000E0 25E0             502             ADD     A,ACC
0000E2 2411             503             ADD     A,#011H
0000E4 2500       F     504             ADD     A,context?040
0000E6 F8               505             MOV     R0,A
0000E7 E6               506             MOV     A,@R0
0000E8 FF               507             MOV     R7,A
0000E9 E0               508             MOVX    A,@DPTR
0000EA FE               509             MOV     R6,A
0000EB A3               510             INC     DPTR
0000EC E0               511             MOVX    A,@DPTR
0000ED 4F               512             ORL     A,R7
0000EE FF               513             MOV     R7,A
0000EF D082             514             POP     DPL
0000F1 D083             515             POP     DPH
0000F3 EE               516             MOV     A,R6
0000F4 F0               517             MOVX    @DPTR,A
0000F5 A3               518             INC     DPTR
0000F6 EF               519             MOV     A,R7
AX51 MACRO ASSEMBLER  MAIN                                                                  05/14/09 22:31:03 PAGE     9

0000F7 F0               520             MOVX    @DPTR,A
                        521     ;     }
                        522                             ; SOURCE LINE # 57
0000F8 7800       F     523             MOV     R0,#LOW (t?042+01H)
0000FA 06               524             INC     @R0
0000FB E6               525             MOV     A,@R0
0000FC 18               526             DEC     R0
0000FD 7001             527             JNZ     ?C0050
0000FF 06               528             INC     @R0
000100                  529     ?C0050:
000100 7800       F     530             MOV     R0,#LOW (t?042+01H)
000102 E6               531             MOV     A,@R0
000103 6410             532             XRL     A,#010H
000105 18               533             DEC     R0
000106 46               534             ORL     A,@R0
000107 6003             535             JZ      $ + 5H
000109 020000     F     536             LJMP    ?C0001
00010C                  537     ?C0002:
                        538     ; 
                        539     ;     for(t = 16; t < 80; t++)
                        540                             ; SOURCE LINE # 59
00010C 7800       F     541             MOV     R0,#LOW (t?042)
00010E 7600             542             MOV     @R0,#00H
000110 08               543             INC     R0
000111 7610             544             MOV     @R0,#010H
000113                  545     ?C0004:
                        546     ;     {
                        547                             ; SOURCE LINE # 60
                        548     ;        W[t] = SHA1CircularShift(1,W[t-3] ^ W[t-8] ^ W[t-14] ^ W[t-16]);
                        549                             ; SOURCE LINE # 61
000113 7800       F     550             MOV     R0,#LOW (t?042)
000115 E6               551             MOV     A,@R0
000116 FC               552             MOV     R4,A
000117 08               553             INC     R0
000118 E6               554             MOV     A,@R0
000119 FD               555             MOV     R5,A
00011A 25E0             556             ADD     A,ACC
00011C FF               557             MOV     R7,A
00011D EC               558             MOV     A,R4
00011E 33               559             RLC     A
00011F FE               560             MOV     R6,A
000120 7400       F     561             MOV     A,#LOW (W?044+0FFF0H)
000122 2F               562             ADD     A,R7
000123 F582             563             MOV     DPL,A
000125 7400       F     564             MOV     A,#HIGH (W?044+0FFF0H)
000127 3E               565             ADDC    A,R6
000128 F583             566             MOV     DPH,A
00012A E0               567             MOVX    A,@DPTR
00012B FA               568             MOV     R2,A
00012C A3               569             INC     DPTR
00012D E0               570             MOVX    A,@DPTR
00012E FB               571             MOV     R3,A
00012F 7400       F     572             MOV     A,#LOW (W?044+0FFFAH)
000131 2F               573             ADD     A,R7
000132 F582             574             MOV     DPL,A
000134 7400       F     575             MOV     A,#HIGH (W?044+0FFFAH)
000136 3E               576             ADDC    A,R6
000137 F583             577             MOV     DPH,A
000139 E0               578             MOVX    A,@DPTR
00013A 6A               579             XRL     A,R2
00013B FA               580             MOV     R2,A
00013C A3               581             INC     DPTR
00013D E0               582             MOVX    A,@DPTR
00013E 6B               583             XRL     A,R3
00013F FB               584             MOV     R3,A
000140 ED               585             MOV     A,R5
AX51 MACRO ASSEMBLER  MAIN                                                                  05/14/09 22:31:03 PAGE    10

000141 25E0             586             ADD     A,ACC
000143 FF               587             MOV     R7,A
000144 EC               588             MOV     A,R4
000145 33               589             RLC     A
000146 FE               590             MOV     R6,A
000147 7400       F     591             MOV     A,#LOW (W?044+0FFE4H)
000149 2F               592             ADD     A,R7
00014A F582             593             MOV     DPL,A
00014C 7400       F     594             MOV     A,#HIGH (W?044+0FFE4H)
00014E 3E               595             ADDC    A,R6
00014F F583             596             MOV     DPH,A
000151 E0               597             MOVX    A,@DPTR
000152 6A               598             XRL     A,R2
000153 FC               599             MOV     R4,A
000154 A3               600             INC     DPTR
000155 E0               601             MOVX    A,@DPTR
000156 6B               602             XRL     A,R3
000157 FD               603             MOV     R5,A
000158 7400       F     604             MOV     A,#LOW (W?044+0FFE0H)
00015A 2F               605             ADD     A,R7
00015B F582             606             MOV     DPL,A
00015D 7400       F     607             MOV     A,#HIGH (W?044+0FFE0H)
00015F 3E               608             ADDC    A,R6
000160 F583             609             MOV     DPH,A
000162 E0               610             MOVX    A,@DPTR
000163 6C               611             XRL     A,R4
000164 FE               612             MOV     R6,A
000165 A3               613             INC     DPTR
000166 E0               614             MOVX    A,@DPTR
000167 6D               615             XRL     A,R5
000168 25E0             616             ADD     A,ACC
00016A FF               617             MOV     R7,A
00016B EE               618             MOV     A,R6
00016C 33               619             RLC     A
00016D FE               620             MOV     R6,A
00016E E4               621             CLR     A
00016F FC               622             MOV     R4,A
000170 FD               623             MOV     R5,A
000171 C004             624             PUSH    AR4
000173 C005             625             PUSH    AR5
000175 C006             626             PUSH    AR6
000177 C007             627             PUSH    AR7
000179 18               628             DEC     R0
00017A E6               629             MOV     A,@R0
00017B FC               630             MOV     R4,A
00017C 08               631             INC     R0
00017D E6               632             MOV     A,@R0
00017E FD               633             MOV     R5,A
00017F 25E0             634             ADD     A,ACC
000181 FF               635             MOV     R7,A
000182 EC               636             MOV     A,R4
000183 33               637             RLC     A
000184 FE               638             MOV     R6,A
000185 7400       F     639             MOV     A,#LOW (W?044+0FFF0H)
000187 2F               640             ADD     A,R7
000188 F582             641             MOV     DPL,A
00018A 7400       F     642             MOV     A,#HIGH (W?044+0FFF0H)
00018C 3E               643             ADDC    A,R6
00018D F583             644             MOV     DPH,A
00018F E0               645             MOVX    A,@DPTR
000190 FA               646             MOV     R2,A
000191 A3               647             INC     DPTR
000192 E0               648             MOVX    A,@DPTR
000193 FB               649             MOV     R3,A
000194 7400       F     650             MOV     A,#LOW (W?044+0FFFAH)
000196 2F               651             ADD     A,R7
AX51 MACRO ASSEMBLER  MAIN                                                                  05/14/09 22:31:03 PAGE    11

000197 F582             652             MOV     DPL,A
000199 7400       F     653             MOV     A,#HIGH (W?044+0FFFAH)
00019B 3E               654             ADDC    A,R6
00019C F583             655             MOV     DPH,A
00019E E0               656             MOVX    A,@DPTR
00019F 6A               657             XRL     A,R2
0001A0 FA               658             MOV     R2,A
0001A1 A3               659             INC     DPTR
0001A2 E0               660             MOVX    A,@DPTR
0001A3 6B               661             XRL     A,R3
0001A4 FB               662             MOV     R3,A
0001A5 ED               663             MOV     A,R5
0001A6 25E0             664             ADD     A,ACC
0001A8 FF               665             MOV     R7,A
0001A9 EC               666             MOV     A,R4
0001AA 33               667             RLC     A
0001AB FE               668             MOV     R6,A
0001AC 7400       F     669             MOV     A,#LOW (W?044+0FFE4H)
0001AE 2F               670             ADD     A,R7
0001AF F582             671             MOV     DPL,A
0001B1 7400       F     672             MOV     A,#HIGH (W?044+0FFE4H)
0001B3 3E               673             ADDC    A,R6
0001B4 F583             674             MOV     DPH,A
0001B6 E0               675             MOVX    A,@DPTR
0001B7 6A               676             XRL     A,R2
0001B8 FC               677             MOV     R4,A
0001B9 A3               678             INC     DPTR
0001BA E0               679             MOVX    A,@DPTR
0001BB 6B               680             XRL     A,R3
0001BC FD               681             MOV     R5,A
0001BD 7400       F     682             MOV     A,#LOW (W?044+0FFE0H)
0001BF 2F               683             ADD     A,R7
0001C0 F582             684             MOV     DPL,A
0001C2 7400       F     685             MOV     A,#HIGH (W?044+0FFE0H)
0001C4 3E               686             ADDC    A,R6
0001C5 F583             687             MOV     DPH,A
0001C7 E0               688             MOVX    A,@DPTR
0001C8 6C               689             XRL     A,R4
0001C9 FE               690             MOV     R6,A
0001CA A3               691             INC     DPTR
0001CB E0               692             MOVX    A,@DPTR
0001CC 6D               693             XRL     A,R5
0001CD 781F             694             MOV     R0,#01FH
0001CF                  695     ?C0051:
0001CF CE               696             XCH     A,R6
0001D0 C3               697             CLR     C
0001D1 13               698             RRC     A
0001D2 CE               699             XCH     A,R6
0001D3 13               700             RRC     A
0001D4 D8F9             701             DJNZ    R0,?C0051
0001D6 FF               702             MOV     R7,A
0001D7 D003             703             POP     AR3
0001D9 D002             704             POP     AR2
0001DB D001             705             POP     AR1
0001DD D000             706             POP     AR0
0001DF EB               707             MOV     A,R3
0001E0 4F               708             ORL     A,R7
0001E1 FF               709             MOV     R7,A
0001E2 EA               710             MOV     A,R2
0001E3 4E               711             ORL     A,R6
0001E4 FE               712             MOV     R6,A
0001E5 AD07             713             MOV     R5,AR7
0001E7 AC06             714             MOV     R4,AR6
0001E9 7800       F     715             MOV     R0,#LOW (t?042+01H)
0001EB E6               716             MOV     A,@R0
0001EC 25E0             717             ADD     A,ACC
AX51 MACRO ASSEMBLER  MAIN                                                                  05/14/09 22:31:03 PAGE    12

0001EE FF               718             MOV     R7,A
0001EF 18               719             DEC     R0
0001F0 E6               720             MOV     A,@R0
0001F1 33               721             RLC     A
0001F2 FE               722             MOV     R6,A
0001F3 7400       F     723             MOV     A,#LOW (W?044)
0001F5 2F               724             ADD     A,R7
0001F6 F582             725             MOV     DPL,A
0001F8 7400       F     726             MOV     A,#HIGH (W?044)
0001FA 3E               727             ADDC    A,R6
0001FB F583             728             MOV     DPH,A
0001FD EC               729             MOV     A,R4
0001FE F0               730             MOVX    @DPTR,A
0001FF A3               731             INC     DPTR
000200 ED               732             MOV     A,R5
000201 F0               733             MOVX    @DPTR,A
                        734     ;     }
                        735                             ; SOURCE LINE # 62
000202 08               736             INC     R0
000203 06               737             INC     @R0
000204 E6               738             MOV     A,@R0
000205 18               739             DEC     R0
000206 7001             740             JNZ     ?C0052
000208 06               741             INC     @R0
000209                  742     ?C0052:
000209 7800       F     743             MOV     R0,#LOW (t?042+01H)
00020B E6               744             MOV     A,@R0
00020C 6450             745             XRL     A,#050H
00020E 18               746             DEC     R0
00020F 46               747             ORL     A,@R0
000210 6003             748             JZ      $ + 5H
000212 020000     F     749             LJMP    ?C0004
000215                  750     ?C0005:
                        751     ; 
                        752     ;     A = context->Message_Digest[0];
                        753                             ; SOURCE LINE # 64
000215 A800       F     754             MOV     R0,context?040
000217 E6               755             MOV     A,@R0
000218 FE               756             MOV     R6,A
000219 08               757             INC     R0
00021A E6               758             MOV     A,@R0
00021B FF               759             MOV     R7,A
00021C 7800       F     760             MOV     R0,#LOW (A?045)
00021E A606             761             MOV     @R0,AR6
000220 08               762             INC     R0
000221 A607             763             MOV     @R0,AR7
                        764     ;     B = context->Message_Digest[1];
                        765                             ; SOURCE LINE # 65
000223 E500       F     766             MOV     A,context?040
000225 2402             767             ADD     A,#02H
000227 F8               768             MOV     R0,A
000228 E6               769             MOV     A,@R0
000229 FE               770             MOV     R6,A
00022A 08               771             INC     R0
00022B E6               772             MOV     A,@R0
00022C FF               773             MOV     R7,A
00022D 7800       F     774             MOV     R0,#LOW (B?046)
00022F A606             775             MOV     @R0,AR6
000231 08               776             INC     R0
000232 A607             777             MOV     @R0,AR7
                        778     ;     C = context->Message_Digest[2];
                        779                             ; SOURCE LINE # 66
000234 E500       F     780             MOV     A,context?040
000236 2404             781             ADD     A,#04H
000238 F8               782             MOV     R0,A
000239 E6               783             MOV     A,@R0
AX51 MACRO ASSEMBLER  MAIN                                                                  05/14/09 22:31:03 PAGE    13

00023A FE               784             MOV     R6,A
00023B 08               785             INC     R0
00023C E6               786             MOV     A,@R0
00023D FF               787             MOV     R7,A
00023E 7800       F     788             MOV     R0,#LOW (C?047)
000240 A606             789             MOV     @R0,AR6
000242 08               790             INC     R0
000243 A607             791             MOV     @R0,AR7
                        792     ;     D = context->Message_Digest[3];
                        793                             ; SOURCE LINE # 67
000245 E500       F     794             MOV     A,context?040
000247 2406             795             ADD     A,#06H
000249 F8               796             MOV     R0,A
00024A E6               797             MOV     A,@R0
00024B FE               798             MOV     R6,A
00024C 08               799             INC     R0
00024D E6               800             MOV     A,@R0
00024E FF               801             MOV     R7,A
00024F 7800       F     802             MOV     R0,#LOW (D?048)
000251 A606             803             MOV     @R0,AR6
000253 08               804             INC     R0
000254 A607             805             MOV     @R0,AR7
                        806     ;     E = context->Message_Digest[4];
                        807                             ; SOURCE LINE # 68
000256 E500       F     808             MOV     A,context?040
000258 2408             809             ADD     A,#08H
00025A F8               810             MOV     R0,A
00025B E6               811             MOV     A,@R0
00025C FE               812             MOV     R6,A
00025D 08               813             INC     R0
00025E E6               814             MOV     A,@R0
00025F FF               815             MOV     R7,A
000260 7800       F     816             MOV     R0,#LOW (E?049)
000262 A606             817             MOV     @R0,AR6
000264 08               818             INC     R0
000265 A607             819             MOV     @R0,AR7
                        820     ; 
                        821     ;     for(t = 0; t < 20; t++)
                        822                             ; SOURCE LINE # 70
000267 E4               823             CLR     A
000268 7800       F     824             MOV     R0,#LOW (t?042)
00026A F6               825             MOV     @R0,A
00026B 08               826             INC     R0
00026C F6               827             MOV     @R0,A
00026D                  828     ?C0007:
                        829     ;     {
                        830                             ; SOURCE LINE # 71
                        831     ;         temp =  SHA1CircularShift(5,A) +
                        832                             ; SOURCE LINE # 72
00026D 7800       F     833             MOV     R0,#LOW (A?045)
00026F E6               834             MOV     A,@R0
000270 FE               835             MOV     R6,A
000271 08               836             INC     R0
000272 E6               837             MOV     A,@R0
000273 7805             838             MOV     R0,#05H
000275                  839     ?C0053:
000275 C3               840             CLR     C
000276 33               841             RLC     A
000277 CE               842             XCH     A,R6
000278 33               843             RLC     A
000279 CE               844             XCH     A,R6
00027A D8F9             845             DJNZ    R0,?C0053
00027C FF               846             MOV     R7,A
00027D E4               847             CLR     A
00027E FC               848             MOV     R4,A
00027F FD               849             MOV     R5,A
AX51 MACRO ASSEMBLER  MAIN                                                                  05/14/09 22:31:03 PAGE    14

000280 C004             850             PUSH    AR4
000282 C005             851             PUSH    AR5
000284 C006             852             PUSH    AR6
000286 C007             853             PUSH    AR7
000288 7800       F     854             MOV     R0,#LOW (A?045)
00028A E6               855             MOV     A,@R0
00028B FE               856             MOV     R6,A
00028C 08               857             INC     R0
00028D E6               858             MOV     A,@R0
00028E 781B             859             MOV     R0,#01BH
000290                  860     ?C0054:
000290 CE               861             XCH     A,R6
000291 C3               862             CLR     C
000292 13               863             RRC     A
000293 CE               864             XCH     A,R6
000294 13               865             RRC     A
000295 D8F9             866             DJNZ    R0,?C0054
000297 FF               867             MOV     R7,A
000298 D003             868             POP     AR3
00029A D002             869             POP     AR2
00029C D001             870             POP     AR1
00029E D000             871             POP     AR0
0002A0 EB               872             MOV     A,R3
0002A1 4F               873             ORL     A,R7
0002A2 FF               874             MOV     R7,A
0002A3 EA               875             MOV     A,R2
0002A4 4E               876             ORL     A,R6
0002A5 FE               877             MOV     R6,A
0002A6 7800       F     878             MOV     R0,#LOW (B?046)
0002A8 E6               879             MOV     A,@R0
0002A9 FC               880             MOV     R4,A
0002AA 08               881             INC     R0
0002AB E6               882             MOV     A,@R0
0002AC F4               883             CPL     A
0002AD FD               884             MOV     R5,A
0002AE EC               885             MOV     A,R4
0002AF F4               886             CPL     A
0002B0 7800       F     887             MOV     R0,#LOW (D?048)
0002B2 56               888             ANL     A,@R0
0002B3 FC               889             MOV     R4,A
0002B4 ED               890             MOV     A,R5
0002B5 08               891             INC     R0
0002B6 56               892             ANL     A,@R0
0002B7 FD               893             MOV     R5,A
0002B8 7900       F     894             MOV     R1,#LOW (B?046)
0002BA E7               895             MOV     A,@R1
0002BB 7800       F     896             MOV     R0,#LOW (C?047)
0002BD 56               897             ANL     A,@R0
0002BE FA               898             MOV     R2,A
0002BF 09               899             INC     R1
0002C0 E7               900             MOV     A,@R1
0002C1 08               901             INC     R0
0002C2 56               902             ANL     A,@R0
0002C3 FB               903             MOV     R3,A
0002C4 EA               904             MOV     A,R2
0002C5 4C               905             ORL     A,R4
0002C6 FC               906             MOV     R4,A
0002C7 EB               907             MOV     A,R3
0002C8 4D               908             ORL     A,R5
0002C9 2F               909             ADD     A,R7
0002CA FF               910             MOV     R7,A
0002CB EC               911             MOV     A,R4
0002CC 3E               912             ADDC    A,R6
0002CD FE               913             MOV     R6,A
0002CE EF               914             MOV     A,R7
0002CF 7800       F     915             MOV     R0,#LOW (E?049+01H)
AX51 MACRO ASSEMBLER  MAIN                                                                  05/14/09 22:31:03 PAGE    15

0002D1 26               916             ADD     A,@R0
0002D2 FD               917             MOV     R5,A
0002D3 EE               918             MOV     A,R6
0002D4 18               919             DEC     R0
0002D5 36               920             ADDC    A,@R0
0002D6 FC               921             MOV     R4,A
0002D7 7800       F     922             MOV     R0,#LOW (t?042+01H)
0002D9 E6               923             MOV     A,@R0
0002DA 25E0             924             ADD     A,ACC
0002DC FF               925             MOV     R7,A
0002DD 18               926             DEC     R0
0002DE E6               927             MOV     A,@R0
0002DF 33               928             RLC     A
0002E0 FE               929             MOV     R6,A
0002E1 7400       F     930             MOV     A,#LOW (W?044)
0002E3 2F               931             ADD     A,R7
0002E4 F582             932             MOV     DPL,A
0002E6 7400       F     933             MOV     A,#HIGH (W?044)
0002E8 3E               934             ADDC    A,R6
0002E9 F583             935             MOV     DPH,A
0002EB E0               936             MOVX    A,@DPTR
0002EC FE               937             MOV     R6,A
0002ED A3               938             INC     DPTR
0002EE E0               939             MOVX    A,@DPTR
0002EF 2D               940             ADD     A,R5
0002F0 FF               941             MOV     R7,A
0002F1 EE               942             MOV     A,R6
0002F2 3C               943             ADDC    A,R4
0002F3 FE               944             MOV     R6,A
0002F4 EF               945             MOV     A,R7
0002F5 7800       F     946             MOV     R0,#LOW (K?041+01H)
0002F7 26               947             ADD     A,@R0
0002F8 FF               948             MOV     R7,A
0002F9 EE               949             MOV     A,R6
0002FA 18               950             DEC     R0
0002FB 36               951             ADDC    A,@R0
0002FC FE               952             MOV     R6,A
0002FD 7800       F     953             MOV     R0,#LOW (temp?043)
0002FF F6               954             MOV     @R0,A
000300 08               955             INC     R0
000301 EF               956             MOV     A,R7
000302 F6               957             MOV     @R0,A
                        958     ;                 ((B & C) | ((~B) & D)) + E + W[t] + K[0];
                        959     ;         temp &= 0xFFFFFFFF;
                        960                             ; SOURCE LINE # 74
000303 EE               961             MOV     A,R6
000304 18               962             DEC     R0
000305 F6               963             MOV     @R0,A
000306 EF               964             MOV     A,R7
000307 08               965             INC     R0
000308 F6               966             MOV     @R0,A
                        967     ;         E = D;
                        968                             ; SOURCE LINE # 75
000309 7800       F     969             MOV     R0,#LOW (D?048)
00030B E6               970             MOV     A,@R0
00030C FE               971             MOV     R6,A
00030D 08               972             INC     R0
00030E E6               973             MOV     A,@R0
00030F FF               974             MOV     R7,A
000310 08               975             INC     R0
000311 A606             976             MOV     @R0,AR6
000313 08               977             INC     R0
000314 A607             978             MOV     @R0,AR7
                        979     ;         D = C;
                        980                             ; SOURCE LINE # 76
000316 7800       F     981             MOV     R0,#LOW (C?047)
AX51 MACRO ASSEMBLER  MAIN                                                                  05/14/09 22:31:03 PAGE    16

000318 E6               982             MOV     A,@R0
000319 FE               983             MOV     R6,A
00031A 08               984             INC     R0
00031B E6               985             MOV     A,@R0
00031C FF               986             MOV     R7,A
00031D 08               987             INC     R0
00031E A606             988             MOV     @R0,AR6
000320 08               989             INC     R0
000321 A607             990             MOV     @R0,AR7
                        991     ;         C = SHA1CircularShift(30,B);
                        992                             ; SOURCE LINE # 77
000323 7800       F     993             MOV     R0,#LOW (B?046)
000325 E6               994             MOV     A,@R0
000326 FE               995             MOV     R6,A
000327 08               996             INC     R0
000328 E6               997             MOV     A,@R0
000329 781E             998             MOV     R0,#01EH
00032B                  999     ?C0055:
00032B C3              1000             CLR     C
00032C 33              1001             RLC     A
00032D CE              1002             XCH     A,R6
00032E 33              1003             RLC     A
00032F CE              1004             XCH     A,R6
000330 D8F9            1005             DJNZ    R0,?C0055
000332 FF              1006             MOV     R7,A
000333 E4              1007             CLR     A
000334 FC              1008             MOV     R4,A
000335 FD              1009             MOV     R5,A
000336 C004            1010             PUSH    AR4
000338 C005            1011             PUSH    AR5
00033A C006            1012             PUSH    AR6
00033C C007            1013             PUSH    AR7
00033E 7800       F    1014             MOV     R0,#LOW (B?046)
000340 E6              1015             MOV     A,@R0
000341 FE              1016             MOV     R6,A
000342 08              1017             INC     R0
000343 E6              1018             MOV     A,@R0
000344 7802            1019             MOV     R0,#02H
000346                 1020     ?C0056:
000346 CE              1021             XCH     A,R6
000347 C3              1022             CLR     C
000348 13              1023             RRC     A
000349 CE              1024             XCH     A,R6
00034A 13              1025             RRC     A
00034B D8F9            1026             DJNZ    R0,?C0056
00034D FF              1027             MOV     R7,A
00034E D003            1028             POP     AR3
000350 D002            1029             POP     AR2
000352 D001            1030             POP     AR1
000354 D000            1031             POP     AR0
000356 EB              1032             MOV     A,R3
000357 4F              1033             ORL     A,R7
000358 FF              1034             MOV     R7,A
000359 EA              1035             MOV     A,R2
00035A 4E              1036             ORL     A,R6
00035B FE              1037             MOV     R6,A
00035C 7800       F    1038             MOV     R0,#LOW (C?047)
00035E A606            1039             MOV     @R0,AR6
000360 08              1040             INC     R0
000361 A607            1041             MOV     @R0,AR7
                       1042     ;         B = A;
                       1043                             ; SOURCE LINE # 78
000363 7800       F    1044             MOV     R0,#LOW (A?045)
000365 E6              1045             MOV     A,@R0
000366 FE              1046             MOV     R6,A
000367 08              1047             INC     R0
AX51 MACRO ASSEMBLER  MAIN                                                                  05/14/09 22:31:03 PAGE    17

000368 E6              1048             MOV     A,@R0
000369 FF              1049             MOV     R7,A
00036A 08              1050             INC     R0
00036B A606            1051             MOV     @R0,AR6
00036D 08              1052             INC     R0
00036E A607            1053             MOV     @R0,AR7
                       1054     ;         A = temp;
                       1055                             ; SOURCE LINE # 79
000370 7800       F    1056             MOV     R0,#LOW (temp?043)
000372 E6              1057             MOV     A,@R0
000373 FE              1058             MOV     R6,A
000374 08              1059             INC     R0
000375 E6              1060             MOV     A,@R0
000376 FF              1061             MOV     R7,A
000377 08              1062             INC     R0
000378 A606            1063             MOV     @R0,AR6
00037A 08              1064             INC     R0
00037B A607            1065             MOV     @R0,AR7
                       1066     ;     }
                       1067                             ; SOURCE LINE # 80
00037D 7800       F    1068             MOV     R0,#LOW (t?042+01H)
00037F 06              1069             INC     @R0
000380 E6              1070             MOV     A,@R0
000381 18              1071             DEC     R0
000382 7001            1072             JNZ     ?C0057
000384 06              1073             INC     @R0
000385                 1074     ?C0057:
000385 7800       F    1075             MOV     R0,#LOW (t?042+01H)
000387 E6              1076             MOV     A,@R0
000388 6414            1077             XRL     A,#014H
00038A 18              1078             DEC     R0
00038B 46              1079             ORL     A,@R0
00038C 6003            1080             JZ      $ + 5H
00038E 020000     F    1081             LJMP    ?C0007
000391                 1082     ?C0008:
                       1083     ; 
                       1084     ;     for(t = 20; t < 40; t++)
                       1085                             ; SOURCE LINE # 82
000391 7800       F    1086             MOV     R0,#LOW (t?042)
000393 7600            1087             MOV     @R0,#00H
000395 08              1088             INC     R0
000396 7614            1089             MOV     @R0,#014H
000398                 1090     ?C0010:
                       1091     ;     {
                       1092                             ; SOURCE LINE # 83
                       1093     ;         temp = SHA1CircularShift(5,A) + (B ^ C ^ D) + E + W[t] + K[1];
                       1094                             ; SOURCE LINE # 84
000398 7800       F    1095             MOV     R0,#LOW (A?045)
00039A E6              1096             MOV     A,@R0
00039B FE              1097             MOV     R6,A
00039C 08              1098             INC     R0
00039D E6              1099             MOV     A,@R0
00039E 7805            1100             MOV     R0,#05H
0003A0                 1101     ?C0058:
0003A0 C3              1102             CLR     C
0003A1 33              1103             RLC     A
0003A2 CE              1104             XCH     A,R6
0003A3 33              1105             RLC     A
0003A4 CE              1106             XCH     A,R6
0003A5 D8F9            1107             DJNZ    R0,?C0058
0003A7 FF              1108             MOV     R7,A
0003A8 E4              1109             CLR     A
0003A9 FC              1110             MOV     R4,A
0003AA FD              1111             MOV     R5,A
0003AB C004            1112             PUSH    AR4
0003AD C005            1113             PUSH    AR5
AX51 MACRO ASSEMBLER  MAIN                                                                  05/14/09 22:31:03 PAGE    18

0003AF C006            1114             PUSH    AR6
0003B1 C007            1115             PUSH    AR7
0003B3 7800       F    1116             MOV     R0,#LOW (A?045)
0003B5 E6              1117             MOV     A,@R0
0003B6 FE              1118             MOV     R6,A
0003B7 08              1119             INC     R0
0003B8 E6              1120             MOV     A,@R0
0003B9 781B            1121             MOV     R0,#01BH
0003BB                 1122     ?C0059:
0003BB CE              1123             XCH     A,R6
0003BC C3              1124             CLR     C
0003BD 13              1125             RRC     A
0003BE CE              1126             XCH     A,R6
0003BF 13              1127             RRC     A
0003C0 D8F9            1128             DJNZ    R0,?C0059
0003C2 FF              1129             MOV     R7,A
0003C3 D003            1130             POP     AR3
0003C5 D002            1131             POP     AR2
0003C7 D001            1132             POP     AR1
0003C9 D000            1133             POP     AR0
0003CB EB              1134             MOV     A,R3
0003CC 4F              1135             ORL     A,R7
0003CD FF              1136             MOV     R7,A
0003CE EA              1137             MOV     A,R2
0003CF 4E              1138             ORL     A,R6
0003D0 FE              1139             MOV     R6,A
0003D1 7900       F    1140             MOV     R1,#LOW (B?046)
0003D3 E7              1141             MOV     A,@R1
0003D4 7800       F    1142             MOV     R0,#LOW (C?047)
0003D6 66              1143             XRL     A,@R0
0003D7 FC              1144             MOV     R4,A
0003D8 09              1145             INC     R1
0003D9 E7              1146             MOV     A,@R1
0003DA 08              1147             INC     R0
0003DB 66              1148             XRL     A,@R0
0003DC FD              1149             MOV     R5,A
0003DD 08              1150             INC     R0
0003DE E6              1151             MOV     A,@R0
0003DF FA              1152             MOV     R2,A
0003E0 08              1153             INC     R0
0003E1 E6              1154             MOV     A,@R0
0003E2 FB              1155             MOV     R3,A
0003E3 EC              1156             MOV     A,R4
0003E4 6A              1157             XRL     A,R2
0003E5 FC              1158             MOV     R4,A
0003E6 ED              1159             MOV     A,R5
0003E7 6B              1160             XRL     A,R3
0003E8 2F              1161             ADD     A,R7
0003E9 FF              1162             MOV     R7,A
0003EA EC              1163             MOV     A,R4
0003EB 3E              1164             ADDC    A,R6
0003EC FE              1165             MOV     R6,A
0003ED EF              1166             MOV     A,R7
0003EE 7800       F    1167             MOV     R0,#LOW (E?049+01H)
0003F0 26              1168             ADD     A,@R0
0003F1 FD              1169             MOV     R5,A
0003F2 EE              1170             MOV     A,R6
0003F3 18              1171             DEC     R0
0003F4 36              1172             ADDC    A,@R0
0003F5 FC              1173             MOV     R4,A
0003F6 7800       F    1174             MOV     R0,#LOW (t?042+01H)
0003F8 E6              1175             MOV     A,@R0
0003F9 25E0            1176             ADD     A,ACC
0003FB FF              1177             MOV     R7,A
0003FC 18              1178             DEC     R0
0003FD E6              1179             MOV     A,@R0
AX51 MACRO ASSEMBLER  MAIN                                                                  05/14/09 22:31:03 PAGE    19

0003FE 33              1180             RLC     A
0003FF FE              1181             MOV     R6,A
000400 7400       F    1182             MOV     A,#LOW (W?044)
000402 2F              1183             ADD     A,R7
000403 F582            1184             MOV     DPL,A
000405 7400       F    1185             MOV     A,#HIGH (W?044)
000407 3E              1186             ADDC    A,R6
000408 F583            1187             MOV     DPH,A
00040A E0              1188             MOVX    A,@DPTR
00040B FE              1189             MOV     R6,A
00040C A3              1190             INC     DPTR
00040D E0              1191             MOVX    A,@DPTR
00040E 2D              1192             ADD     A,R5
00040F FF              1193             MOV     R7,A
000410 EE              1194             MOV     A,R6
000411 3C              1195             ADDC    A,R4
000412 FE              1196             MOV     R6,A
000413 EF              1197             MOV     A,R7
000414 7800       F    1198             MOV     R0,#LOW (K?041+03H)
000416 26              1199             ADD     A,@R0
000417 7900       F    1200             MOV     R1,#LOW (temp?043+01H)
000419 F7              1201             MOV     @R1,A
00041A EE              1202             MOV     A,R6
00041B 18              1203             DEC     R0
00041C 36              1204             ADDC    A,@R0
00041D 19              1205             DEC     R1
00041E F7              1206             MOV     @R1,A
                       1207     ;         temp &= 0xFFFFFFFF;
                       1208                             ; SOURCE LINE # 85
00041F 7800       F    1209             MOV     R0,#LOW (temp?043)
000421 E6              1210             MOV     A,@R0
000422 F6              1211             MOV     @R0,A
000423 08              1212             INC     R0
000424 E6              1213             MOV     A,@R0
000425 F6              1214             MOV     @R0,A
                       1215     ;         E = D;
                       1216                             ; SOURCE LINE # 86
000426 7800       F    1217             MOV     R0,#LOW (E?049)
000428 A602            1218             MOV     @R0,AR2
00042A 08              1219             INC     R0
00042B A603            1220             MOV     @R0,AR3
                       1221     ;         D = C;
                       1222                             ; SOURCE LINE # 87
00042D 7800       F    1223             MOV     R0,#LOW (C?047)
00042F E6              1224             MOV     A,@R0
000430 FE              1225             MOV     R6,A
000431 08              1226             INC     R0
000432 E6              1227             MOV     A,@R0
000433 FF              1228             MOV     R7,A
000434 08              1229             INC     R0
000435 A606            1230             MOV     @R0,AR6
000437 08              1231             INC     R0
000438 A607            1232             MOV     @R0,AR7
                       1233     ;         C = SHA1CircularShift(30,B);
                       1234                             ; SOURCE LINE # 88
00043A 7800       F    1235             MOV     R0,#LOW (B?046)
00043C E6              1236             MOV     A,@R0
00043D FE              1237             MOV     R6,A
00043E 08              1238             INC     R0
00043F E6              1239             MOV     A,@R0
000440 781E            1240             MOV     R0,#01EH
000442                 1241     ?C0060:
000442 C3              1242             CLR     C
000443 33              1243             RLC     A
000444 CE              1244             XCH     A,R6
000445 33              1245             RLC     A
AX51 MACRO ASSEMBLER  MAIN                                                                  05/14/09 22:31:03 PAGE    20

000446 CE              1246             XCH     A,R6
000447 D8F9            1247             DJNZ    R0,?C0060
000449 FF              1248             MOV     R7,A
00044A E4              1249             CLR     A
00044B FC              1250             MOV     R4,A
00044C FD              1251             MOV     R5,A
00044D C004            1252             PUSH    AR4
00044F C005            1253             PUSH    AR5
000451 C006            1254             PUSH    AR6
000453 C007            1255             PUSH    AR7
000455 7800       F    1256             MOV     R0,#LOW (B?046)
000457 E6              1257             MOV     A,@R0
000458 FE              1258             MOV     R6,A
000459 08              1259             INC     R0
00045A E6              1260             MOV     A,@R0
00045B 7802            1261             MOV     R0,#02H
00045D                 1262     ?C0061:
00045D CE              1263             XCH     A,R6
00045E C3              1264             CLR     C
00045F 13              1265             RRC     A
000460 CE              1266             XCH     A,R6
000461 13              1267             RRC     A
000462 D8F9            1268             DJNZ    R0,?C0061
000464 FF              1269             MOV     R7,A
000465 D003            1270             POP     AR3
000467 D002            1271             POP     AR2
000469 D001            1272             POP     AR1
00046B D000            1273             POP     AR0
00046D EB              1274             MOV     A,R3
00046E 4F              1275             ORL     A,R7
00046F FF              1276             MOV     R7,A
000470 EA              1277             MOV     A,R2
000471 4E              1278             ORL     A,R6
000472 FE              1279             MOV     R6,A
000473 7800       F    1280             MOV     R0,#LOW (C?047)
000475 A606            1281             MOV     @R0,AR6
000477 08              1282             INC     R0
000478 A607            1283             MOV     @R0,AR7
                       1284     ;         B = A;
                       1285                             ; SOURCE LINE # 89
00047A 7800       F    1286             MOV     R0,#LOW (A?045)
00047C E6              1287             MOV     A,@R0
00047D FE              1288             MOV     R6,A
00047E 08              1289             INC     R0
00047F E6              1290             MOV     A,@R0
000480 FF              1291             MOV     R7,A
000481 08              1292             INC     R0
000482 A606            1293             MOV     @R0,AR6
000484 08              1294             INC     R0
000485 A607            1295             MOV     @R0,AR7
                       1296     ;         A = temp;
                       1297                             ; SOURCE LINE # 90
000487 7800       F    1298             MOV     R0,#LOW (temp?043)
000489 E6              1299             MOV     A,@R0
00048A FE              1300             MOV     R6,A
00048B 08              1301             INC     R0
00048C E6              1302             MOV     A,@R0
00048D FF              1303             MOV     R7,A
00048E 08              1304             INC     R0
00048F A606            1305             MOV     @R0,AR6
000491 08              1306             INC     R0
000492 A607            1307             MOV     @R0,AR7
                       1308     ;     }
                       1309                             ; SOURCE LINE # 91
000494 7800       F    1310             MOV     R0,#LOW (t?042+01H)
000496 06              1311             INC     @R0
AX51 MACRO ASSEMBLER  MAIN                                                                  05/14/09 22:31:03 PAGE    21

000497 E6              1312             MOV     A,@R0
000498 18              1313             DEC     R0
000499 7001            1314             JNZ     ?C0062
00049B 06              1315             INC     @R0
00049C                 1316     ?C0062:
00049C 7800       F    1317             MOV     R0,#LOW (t?042+01H)
00049E E6              1318             MOV     A,@R0
00049F 6428            1319             XRL     A,#028H
0004A1 18              1320             DEC     R0
0004A2 46              1321             ORL     A,@R0
0004A3 6003            1322             JZ      $ + 5H
0004A5 020000     F    1323             LJMP    ?C0010
0004A8                 1324     ?C0011:
                       1325     ; 
                       1326     ;     for(t = 40; t < 60; t++)
                       1327                             ; SOURCE LINE # 93
0004A8 7800       F    1328             MOV     R0,#LOW (t?042)
0004AA 7600            1329             MOV     @R0,#00H
0004AC 08              1330             INC     R0
0004AD 7628            1331             MOV     @R0,#028H
0004AF                 1332     ?C0013:
                       1333     ;     {
                       1334                             ; SOURCE LINE # 94
                       1335     ;         temp = SHA1CircularShift(5,A) +
                       1336                             ; SOURCE LINE # 95
0004AF 7800       F    1337             MOV     R0,#LOW (A?045)
0004B1 E6              1338             MOV     A,@R0
0004B2 FE              1339             MOV     R6,A
0004B3 08              1340             INC     R0
0004B4 E6              1341             MOV     A,@R0
0004B5 7805            1342             MOV     R0,#05H
0004B7                 1343     ?C0063:
0004B7 C3              1344             CLR     C
0004B8 33              1345             RLC     A
0004B9 CE              1346             XCH     A,R6
0004BA 33              1347             RLC     A
0004BB CE              1348             XCH     A,R6
0004BC D8F9            1349             DJNZ    R0,?C0063
0004BE FF              1350             MOV     R7,A
0004BF E4              1351             CLR     A
0004C0 FC              1352             MOV     R4,A
0004C1 FD              1353             MOV     R5,A
0004C2 C004            1354             PUSH    AR4
0004C4 C005            1355             PUSH    AR5
0004C6 C006            1356             PUSH    AR6
0004C8 C007            1357             PUSH    AR7
0004CA 7800       F    1358             MOV     R0,#LOW (A?045)
0004CC E6              1359             MOV     A,@R0
0004CD FE              1360             MOV     R6,A
0004CE 08              1361             INC     R0
0004CF E6              1362             MOV     A,@R0
0004D0 781B            1363             MOV     R0,#01BH
0004D2                 1364     ?C0064:
0004D2 CE              1365             XCH     A,R6
0004D3 C3              1366             CLR     C
0004D4 13              1367             RRC     A
0004D5 CE              1368             XCH     A,R6
0004D6 13              1369             RRC     A
0004D7 D8F9            1370             DJNZ    R0,?C0064
0004D9 FF              1371             MOV     R7,A
0004DA D003            1372             POP     AR3
0004DC D002            1373             POP     AR2
0004DE D001            1374             POP     AR1
0004E0 D000            1375             POP     AR0
0004E2 EB              1376             MOV     A,R3
0004E3 4F              1377             ORL     A,R7
AX51 MACRO ASSEMBLER  MAIN                                                                  05/14/09 22:31:03 PAGE    22

0004E4 FF              1378             MOV     R7,A
0004E5 EA              1379             MOV     A,R2
0004E6 4E              1380             ORL     A,R6
0004E7 FE              1381             MOV     R6,A
0004E8 7900       F    1382             MOV     R1,#LOW (B?046)
0004EA E7              1383             MOV     A,@R1
0004EB 7800       F    1384             MOV     R0,#LOW (D?048)
0004ED 56              1385             ANL     A,@R0
0004EE FC              1386             MOV     R4,A
0004EF 09              1387             INC     R1
0004F0 E7              1388             MOV     A,@R1
0004F1 08              1389             INC     R0
0004F2 56              1390             ANL     A,@R0
0004F3 FD              1391             MOV     R5,A
0004F4 19              1392             DEC     R1
0004F5 E7              1393             MOV     A,@R1
0004F6 7800       F    1394             MOV     R0,#LOW (C?047)
0004F8 56              1395             ANL     A,@R0
0004F9 FA              1396             MOV     R2,A
0004FA 09              1397             INC     R1
0004FB E7              1398             MOV     A,@R1
0004FC 08              1399             INC     R0
0004FD 56              1400             ANL     A,@R0
0004FE FB              1401             MOV     R3,A
0004FF EA              1402             MOV     A,R2
000500 4C              1403             ORL     A,R4
000501 FC              1404             MOV     R4,A
000502 EB              1405             MOV     A,R3
000503 4D              1406             ORL     A,R5
000504 FD              1407             MOV     R5,A
000505 09              1408             INC     R1
000506 E7              1409             MOV     A,@R1
000507 08              1410             INC     R0
000508 56              1411             ANL     A,@R0
000509 FA              1412             MOV     R2,A
00050A 09              1413             INC     R1
00050B E7              1414             MOV     A,@R1
00050C 08              1415             INC     R0
00050D 56              1416             ANL     A,@R0
00050E FB              1417             MOV     R3,A
00050F EC              1418             MOV     A,R4
000510 4A              1419             ORL     A,R2
000511 FC              1420             MOV     R4,A
000512 ED              1421             MOV     A,R5
000513 4B              1422             ORL     A,R3
000514 2F              1423             ADD     A,R7
000515 FF              1424             MOV     R7,A
000516 EC              1425             MOV     A,R4
000517 3E              1426             ADDC    A,R6
000518 FE              1427             MOV     R6,A
000519 EF              1428             MOV     A,R7
00051A 7800       F    1429             MOV     R0,#LOW (E?049+01H)
00051C 26              1430             ADD     A,@R0
00051D FD              1431             MOV     R5,A
00051E EE              1432             MOV     A,R6
00051F 18              1433             DEC     R0
000520 36              1434             ADDC    A,@R0
000521 FC              1435             MOV     R4,A
000522 7800       F    1436             MOV     R0,#LOW (t?042+01H)
000524 E6              1437             MOV     A,@R0
000525 25E0            1438             ADD     A,ACC
000527 FF              1439             MOV     R7,A
000528 18              1440             DEC     R0
000529 E6              1441             MOV     A,@R0
00052A 33              1442             RLC     A
00052B FE              1443             MOV     R6,A
AX51 MACRO ASSEMBLER  MAIN                                                                  05/14/09 22:31:03 PAGE    23

00052C 7400       F    1444             MOV     A,#LOW (W?044)
00052E 2F              1445             ADD     A,R7
00052F F582            1446             MOV     DPL,A
000531 7400       F    1447             MOV     A,#HIGH (W?044)
000533 3E              1448             ADDC    A,R6
000534 F583            1449             MOV     DPH,A
000536 E0              1450             MOVX    A,@DPTR
000537 FE              1451             MOV     R6,A
000538 A3              1452             INC     DPTR
000539 E0              1453             MOVX    A,@DPTR
00053A 2D              1454             ADD     A,R5
00053B FF              1455             MOV     R7,A
00053C EE              1456             MOV     A,R6
00053D 3C              1457             ADDC    A,R4
00053E FE              1458             MOV     R6,A
00053F EF              1459             MOV     A,R7
000540 7800       F    1460             MOV     R0,#LOW (K?041+05H)
000542 26              1461             ADD     A,@R0
000543 FF              1462             MOV     R7,A
000544 EE              1463             MOV     A,R6
000545 18              1464             DEC     R0
000546 36              1465             ADDC    A,@R0
000547 FE              1466             MOV     R6,A
000548 7800       F    1467             MOV     R0,#LOW (temp?043)
00054A F6              1468             MOV     @R0,A
00054B 08              1469             INC     R0
00054C EF              1470             MOV     A,R7
00054D F6              1471             MOV     @R0,A
                       1472     ;                ((B & C) | (B & D) | (C & D)) + E + W[t] + K[2];
                       1473     ;         temp &= 0xFFFFFFFF;
                       1474                             ; SOURCE LINE # 97
00054E EE              1475             MOV     A,R6
00054F 18              1476             DEC     R0
000550 F6              1477             MOV     @R0,A
000551 EF              1478             MOV     A,R7
000552 08              1479             INC     R0
000553 F6              1480             MOV     @R0,A
                       1481     ;         E = D;
                       1482                             ; SOURCE LINE # 98
000554 7800       F    1483             MOV     R0,#LOW (D?048)
000556 E6              1484             MOV     A,@R0
000557 FE              1485             MOV     R6,A
000558 08              1486             INC     R0
000559 E6              1487             MOV     A,@R0
00055A FF              1488             MOV     R7,A
00055B 08              1489             INC     R0
00055C A606            1490             MOV     @R0,AR6
00055E 08              1491             INC     R0
00055F A607            1492             MOV     @R0,AR7
                       1493     ;         D = C;
                       1494                             ; SOURCE LINE # 99
000561 7800       F    1495             MOV     R0,#LOW (C?047)
000563 E6              1496             MOV     A,@R0
000564 FE              1497             MOV     R6,A
000565 08              1498             INC     R0
000566 E6              1499             MOV     A,@R0
000567 FF              1500             MOV     R7,A
000568 08              1501             INC     R0
000569 A606            1502             MOV     @R0,AR6
00056B 08              1503             INC     R0
00056C A607            1504             MOV     @R0,AR7
                       1505     ;         C = SHA1CircularShift(30,B);
                       1506                             ; SOURCE LINE # 100
00056E 7800       F    1507             MOV     R0,#LOW (B?046)
000570 E6              1508             MOV     A,@R0
000571 FE              1509             MOV     R6,A
AX51 MACRO ASSEMBLER  MAIN                                                                  05/14/09 22:31:03 PAGE    24

000572 08              1510             INC     R0
000573 E6              1511             MOV     A,@R0
000574 781E            1512             MOV     R0,#01EH
000576                 1513     ?C0065:
000576 C3              1514             CLR     C
000577 33              1515             RLC     A
000578 CE              1516             XCH     A,R6
000579 33              1517             RLC     A
00057A CE              1518             XCH     A,R6
00057B D8F9            1519             DJNZ    R0,?C0065
00057D FF              1520             MOV     R7,A
00057E E4              1521             CLR     A
00057F FC              1522             MOV     R4,A
000580 FD              1523             MOV     R5,A
000581 C004            1524             PUSH    AR4
000583 C005            1525             PUSH    AR5
000585 C006            1526             PUSH    AR6
000587 C007            1527             PUSH    AR7
000589 7800       F    1528             MOV     R0,#LOW (B?046)
00058B E6              1529             MOV     A,@R0
00058C FE              1530             MOV     R6,A
00058D 08              1531             INC     R0
00058E E6              1532             MOV     A,@R0
00058F 7802            1533             MOV     R0,#02H
000591                 1534     ?C0066:
000591 CE              1535             XCH     A,R6
000592 C3              1536             CLR     C
000593 13              1537             RRC     A
000594 CE              1538             XCH     A,R6
000595 13              1539             RRC     A
000596 D8F9            1540             DJNZ    R0,?C0066
000598 FF              1541             MOV     R7,A
000599 D003            1542             POP     AR3
00059B D002            1543             POP     AR2
00059D D001            1544             POP     AR1
00059F D000            1545             POP     AR0
0005A1 EB              1546             MOV     A,R3
0005A2 4F              1547             ORL     A,R7
0005A3 FF              1548             MOV     R7,A
0005A4 EA              1549             MOV     A,R2
0005A5 4E              1550             ORL     A,R6
0005A6 FE              1551             MOV     R6,A
0005A7 7800       F    1552             MOV     R0,#LOW (C?047)
0005A9 A606            1553             MOV     @R0,AR6
0005AB 08              1554             INC     R0
0005AC A607            1555             MOV     @R0,AR7
                       1556     ;         B = A;
                       1557                             ; SOURCE LINE # 101
0005AE 7800       F    1558             MOV     R0,#LOW (A?045)
0005B0 E6              1559             MOV     A,@R0
0005B1 FE              1560             MOV     R6,A
0005B2 08              1561             INC     R0
0005B3 E6              1562             MOV     A,@R0
0005B4 FF              1563             MOV     R7,A
0005B5 08              1564             INC     R0
0005B6 A606            1565             MOV     @R0,AR6
0005B8 08              1566             INC     R0
0005B9 A607            1567             MOV     @R0,AR7
                       1568     ;         A = temp;
                       1569                             ; SOURCE LINE # 102
0005BB 7800       F    1570             MOV     R0,#LOW (temp?043)
0005BD E6              1571             MOV     A,@R0
0005BE FE              1572             MOV     R6,A
0005BF 08              1573             INC     R0
0005C0 E6              1574             MOV     A,@R0
0005C1 FF              1575             MOV     R7,A
AX51 MACRO ASSEMBLER  MAIN                                                                  05/14/09 22:31:03 PAGE    25

0005C2 08              1576             INC     R0
0005C3 A606            1577             MOV     @R0,AR6
0005C5 08              1578             INC     R0
0005C6 A607            1579             MOV     @R0,AR7
                       1580     ;     }
                       1581                             ; SOURCE LINE # 103
0005C8 7800       F    1582             MOV     R0,#LOW (t?042+01H)
0005CA 06              1583             INC     @R0
0005CB E6              1584             MOV     A,@R0
0005CC 18              1585             DEC     R0
0005CD 7001            1586             JNZ     ?C0067
0005CF 06              1587             INC     @R0
0005D0                 1588     ?C0067:
0005D0 7800       F    1589             MOV     R0,#LOW (t?042+01H)
0005D2 E6              1590             MOV     A,@R0
0005D3 643C            1591             XRL     A,#03CH
0005D5 18              1592             DEC     R0
0005D6 46              1593             ORL     A,@R0
0005D7 6003            1594             JZ      $ + 5H
0005D9 020000     F    1595             LJMP    ?C0013
0005DC                 1596     ?C0014:
                       1597     ; 
                       1598     ;     for(t = 60; t < 80; t++)
                       1599                             ; SOURCE LINE # 105
0005DC 7800       F    1600             MOV     R0,#LOW (t?042)
0005DE 7600            1601             MOV     @R0,#00H
0005E0 08              1602             INC     R0
0005E1 763C            1603             MOV     @R0,#03CH
0005E3                 1604     ?C0016:
                       1605     ;     {
                       1606                             ; SOURCE LINE # 106
                       1607     ;         temp = SHA1CircularShift(5,A) + (B ^ C ^ D) + E + W[t] + K[3];
                       1608                             ; SOURCE LINE # 107
0005E3 7800       F    1609             MOV     R0,#LOW (A?045)
0005E5 E6              1610             MOV     A,@R0
0005E6 FE              1611             MOV     R6,A
0005E7 08              1612             INC     R0
0005E8 E6              1613             MOV     A,@R0
0005E9 7805            1614             MOV     R0,#05H
0005EB                 1615     ?C0068:
0005EB C3              1616             CLR     C
0005EC 33              1617             RLC     A
0005ED CE              1618             XCH     A,R6
0005EE 33              1619             RLC     A
0005EF CE              1620             XCH     A,R6
0005F0 D8F9            1621             DJNZ    R0,?C0068
0005F2 FF              1622             MOV     R7,A
0005F3 E4              1623             CLR     A
0005F4 FC              1624             MOV     R4,A
0005F5 FD              1625             MOV     R5,A
0005F6 C004            1626             PUSH    AR4
0005F8 C005            1627             PUSH    AR5
0005FA C006            1628             PUSH    AR6
0005FC C007            1629             PUSH    AR7
0005FE 7800       F    1630             MOV     R0,#LOW (A?045)
000600 E6              1631             MOV     A,@R0
000601 FE              1632             MOV     R6,A
000602 08              1633             INC     R0
000603 E6              1634             MOV     A,@R0
000604 781B            1635             MOV     R0,#01BH
000606                 1636     ?C0069:
000606 CE              1637             XCH     A,R6
000607 C3              1638             CLR     C
000608 13              1639             RRC     A
000609 CE              1640             XCH     A,R6
00060A 13              1641             RRC     A
AX51 MACRO ASSEMBLER  MAIN                                                                  05/14/09 22:31:03 PAGE    26

00060B D8F9            1642             DJNZ    R0,?C0069
00060D FF              1643             MOV     R7,A
00060E D003            1644             POP     AR3
000610 D002            1645             POP     AR2
000612 D001            1646             POP     AR1
000614 D000            1647             POP     AR0
000616 EB              1648             MOV     A,R3
000617 4F              1649             ORL     A,R7
000618 FF              1650             MOV     R7,A
000619 EA              1651             MOV     A,R2
00061A 4E              1652             ORL     A,R6
00061B FE              1653             MOV     R6,A
00061C 7900       F    1654             MOV     R1,#LOW (B?046)
00061E E7              1655             MOV     A,@R1
00061F 7800       F    1656             MOV     R0,#LOW (C?047)
000621 66              1657             XRL     A,@R0
000622 FC              1658             MOV     R4,A
000623 09              1659             INC     R1
000624 E7              1660             MOV     A,@R1
000625 08              1661             INC     R0
000626 66              1662             XRL     A,@R0
000627 FD              1663             MOV     R5,A
000628 08              1664             INC     R0
000629 E6              1665             MOV     A,@R0
00062A FA              1666             MOV     R2,A
00062B 08              1667             INC     R0
00062C E6              1668             MOV     A,@R0
00062D FB              1669             MOV     R3,A
00062E EC              1670             MOV     A,R4
00062F 6A              1671             XRL     A,R2
000630 FC              1672             MOV     R4,A
000631 ED              1673             MOV     A,R5
000632 6B              1674             XRL     A,R3
000633 2F              1675             ADD     A,R7
000634 FF              1676             MOV     R7,A
000635 EC              1677             MOV     A,R4
000636 3E              1678             ADDC    A,R6
000637 FE              1679             MOV     R6,A
000638 EF              1680             MOV     A,R7
000639 7800       F    1681             MOV     R0,#LOW (E?049+01H)
00063B 26              1682             ADD     A,@R0
00063C FD              1683             MOV     R5,A
00063D EE              1684             MOV     A,R6
00063E 18              1685             DEC     R0
00063F 36              1686             ADDC    A,@R0
000640 FC              1687             MOV     R4,A
000641 7800       F    1688             MOV     R0,#LOW (t?042+01H)
000643 E6              1689             MOV     A,@R0
000644 25E0            1690             ADD     A,ACC
000646 FF              1691             MOV     R7,A
000647 18              1692             DEC     R0
000648 E6              1693             MOV     A,@R0
000649 33              1694             RLC     A
00064A FE              1695             MOV     R6,A
00064B 7400       F    1696             MOV     A,#LOW (W?044)
00064D 2F              1697             ADD     A,R7
00064E F582            1698             MOV     DPL,A
000650 7400       F    1699             MOV     A,#HIGH (W?044)
000652 3E              1700             ADDC    A,R6
000653 F583            1701             MOV     DPH,A
000655 E0              1702             MOVX    A,@DPTR
000656 FE              1703             MOV     R6,A
000657 A3              1704             INC     DPTR
000658 E0              1705             MOVX    A,@DPTR
000659 2D              1706             ADD     A,R5
00065A FF              1707             MOV     R7,A
AX51 MACRO ASSEMBLER  MAIN                                                                  05/14/09 22:31:03 PAGE    27

00065B EE              1708             MOV     A,R6
00065C 3C              1709             ADDC    A,R4
00065D FE              1710             MOV     R6,A
00065E EF              1711             MOV     A,R7
00065F 18              1712             DEC     R0
000660 26              1713             ADD     A,@R0
000661 7900       F    1714             MOV     R1,#LOW (temp?043+01H)
000663 F7              1715             MOV     @R1,A
000664 EE              1716             MOV     A,R6
000665 18              1717             DEC     R0
000666 36              1718             ADDC    A,@R0
000667 19              1719             DEC     R1
000668 F7              1720             MOV     @R1,A
                       1721     ;         temp &= 0xFFFFFFFF;
                       1722                             ; SOURCE LINE # 108
000669 7800       F    1723             MOV     R0,#LOW (temp?043)
00066B E6              1724             MOV     A,@R0
00066C F6              1725             MOV     @R0,A
00066D 08              1726             INC     R0
00066E E6              1727             MOV     A,@R0
00066F F6              1728             MOV     @R0,A
                       1729     ;         E = D;
                       1730                             ; SOURCE LINE # 109
000670 7800       F    1731             MOV     R0,#LOW (E?049)
000672 A602            1732             MOV     @R0,AR2
000674 08              1733             INC     R0
000675 A603            1734             MOV     @R0,AR3
                       1735     ;         D = C;
                       1736                             ; SOURCE LINE # 110
000677 7800       F    1737             MOV     R0,#LOW (C?047)
000679 E6              1738             MOV     A,@R0
00067A FE              1739             MOV     R6,A
00067B 08              1740             INC     R0
00067C E6              1741             MOV     A,@R0
00067D FF              1742             MOV     R7,A
00067E 08              1743             INC     R0
00067F A606            1744             MOV     @R0,AR6
000681 08              1745             INC     R0
000682 A607            1746             MOV     @R0,AR7
                       1747     ;         C = SHA1CircularShift(30,B);
                       1748                             ; SOURCE LINE # 111
000684 7800       F    1749             MOV     R0,#LOW (B?046)
000686 E6              1750             MOV     A,@R0
000687 FE              1751             MOV     R6,A
000688 08              1752             INC     R0
000689 E6              1753             MOV     A,@R0
00068A 781E            1754             MOV     R0,#01EH
00068C                 1755     ?C0070:
00068C C3              1756             CLR     C
00068D 33              1757             RLC     A
00068E CE              1758             XCH     A,R6
00068F 33              1759             RLC     A
000690 CE              1760             XCH     A,R6
000691 D8F9            1761             DJNZ    R0,?C0070
000693 FF              1762             MOV     R7,A
000694 E4              1763             CLR     A
000695 FC              1764             MOV     R4,A
000696 FD              1765             MOV     R5,A
000697 C004            1766             PUSH    AR4
000699 C005            1767             PUSH    AR5
00069B C006            1768             PUSH    AR6
00069D C007            1769             PUSH    AR7
00069F 7800       F    1770             MOV     R0,#LOW (B?046)
0006A1 E6              1771             MOV     A,@R0
0006A2 FE              1772             MOV     R6,A
0006A3 08              1773             INC     R0
AX51 MACRO ASSEMBLER  MAIN                                                                  05/14/09 22:31:03 PAGE    28

0006A4 E6              1774             MOV     A,@R0
0006A5 7802            1775             MOV     R0,#02H
0006A7                 1776     ?C0071:
0006A7 CE              1777             XCH     A,R6
0006A8 C3              1778             CLR     C
0006A9 13              1779             RRC     A
0006AA CE              1780             XCH     A,R6
0006AB 13              1781             RRC     A
0006AC D8F9            1782             DJNZ    R0,?C0071
0006AE FF              1783             MOV     R7,A
0006AF D003            1784             POP     AR3
0006B1 D002            1785             POP     AR2
0006B3 D001            1786             POP     AR1
0006B5 D000            1787             POP     AR0
0006B7 EB              1788             MOV     A,R3
0006B8 4F              1789             ORL     A,R7
0006B9 FF              1790             MOV     R7,A
0006BA EA              1791             MOV     A,R2
0006BB 4E              1792             ORL     A,R6
0006BC FE              1793             MOV     R6,A
0006BD 7800       F    1794             MOV     R0,#LOW (C?047)
0006BF A606            1795             MOV     @R0,AR6
0006C1 08              1796             INC     R0
0006C2 A607            1797             MOV     @R0,AR7
                       1798     ;         B = A;
                       1799                             ; SOURCE LINE # 112
0006C4 7800       F    1800             MOV     R0,#LOW (A?045)
0006C6 E6              1801             MOV     A,@R0
0006C7 FE              1802             MOV     R6,A
0006C8 08              1803             INC     R0
0006C9 E6              1804             MOV     A,@R0
0006CA FF              1805             MOV     R7,A
0006CB 08              1806             INC     R0
0006CC A606            1807             MOV     @R0,AR6
0006CE 08              1808             INC     R0
0006CF A607            1809             MOV     @R0,AR7
                       1810     ;         A = temp;
                       1811                             ; SOURCE LINE # 113
0006D1 7800       F    1812             MOV     R0,#LOW (temp?043)
0006D3 E6              1813             MOV     A,@R0
0006D4 FE              1814             MOV     R6,A
0006D5 08              1815             INC     R0
0006D6 E6              1816             MOV     A,@R0
0006D7 FF              1817             MOV     R7,A
0006D8 08              1818             INC     R0
0006D9 A606            1819             MOV     @R0,AR6
0006DB 08              1820             INC     R0
0006DC A607            1821             MOV     @R0,AR7
                       1822     ;     }
                       1823                             ; SOURCE LINE # 114
0006DE 7800       F    1824             MOV     R0,#LOW (t?042+01H)
0006E0 06              1825             INC     @R0
0006E1 E6              1826             MOV     A,@R0
0006E2 18              1827             DEC     R0
0006E3 7001            1828             JNZ     ?C0072
0006E5 06              1829             INC     @R0
0006E6                 1830     ?C0072:
0006E6 7800       F    1831             MOV     R0,#LOW (t?042+01H)
0006E8 E6              1832             MOV     A,@R0
0006E9 6450            1833             XRL     A,#050H
0006EB 18              1834             DEC     R0
0006EC 46              1835             ORL     A,@R0
0006ED 6003            1836             JZ      $ + 5H
0006EF 020000     F    1837             LJMP    ?C0016
0006F2                 1838     ?C0017:
                       1839     ; 
AX51 MACRO ASSEMBLER  MAIN                                                                  05/14/09 22:31:03 PAGE    29

                       1840     ;     context->Message_Digest[0] =
                       1841                             ; SOURCE LINE # 116
0006F2 A900       F    1842             MOV     R1,context?040
0006F4 09              1843             INC     R1
0006F5 E7              1844             MOV     A,@R1
0006F6 7800       F    1845             MOV     R0,#LOW (A?045+01H)
0006F8 26              1846             ADD     A,@R0
0006F9 FF              1847             MOV     R7,A
0006FA 19              1848             DEC     R1
0006FB E7              1849             MOV     A,@R1
0006FC 18              1850             DEC     R0
0006FD 36              1851             ADDC    A,@R0
0006FE FE              1852             MOV     R6,A
0006FF A800       F    1853             MOV     R0,context?040
000701 A606            1854             MOV     @R0,AR6
000703 08              1855             INC     R0
000704 A607            1856             MOV     @R0,AR7
                       1857     ;                         (context->Message_Digest[0] + A) & 0xFFFFFFFF;
                       1858     ;     context->Message_Digest[1] =
                       1859                             ; SOURCE LINE # 118
000706 E500       F    1860             MOV     A,context?040
000708 2403            1861             ADD     A,#03H
00070A F9              1862             MOV     R1,A
00070B E7              1863             MOV     A,@R1
00070C 7800       F    1864             MOV     R0,#LOW (B?046+01H)
00070E 26              1865             ADD     A,@R0
00070F FF              1866             MOV     R7,A
000710 19              1867             DEC     R1
000711 E7              1868             MOV     A,@R1
000712 18              1869             DEC     R0
000713 36              1870             ADDC    A,@R0
000714 FE              1871             MOV     R6,A
000715 E500       F    1872             MOV     A,context?040
000717 2402            1873             ADD     A,#02H
000719 F8              1874             MOV     R0,A
00071A A606            1875             MOV     @R0,AR6
00071C 08              1876             INC     R0
00071D A607            1877             MOV     @R0,AR7
                       1878     ;                         (context->Message_Digest[1] + B) & 0xFFFFFFFF;
                       1879     ;     context->Message_Digest[2] =
                       1880                             ; SOURCE LINE # 120
00071F E500       F    1881             MOV     A,context?040
000721 2405            1882             ADD     A,#05H
000723 F9              1883             MOV     R1,A
000724 E7              1884             MOV     A,@R1
000725 7800       F    1885             MOV     R0,#LOW (C?047+01H)
000727 26              1886             ADD     A,@R0
000728 FF              1887             MOV     R7,A
000729 19              1888             DEC     R1
00072A E7              1889             MOV     A,@R1
00072B 18              1890             DEC     R0
00072C 36              1891             ADDC    A,@R0
00072D FE              1892             MOV     R6,A
00072E E500       F    1893             MOV     A,context?040
000730 2404            1894             ADD     A,#04H
000732 F8              1895             MOV     R0,A
000733 A606            1896             MOV     @R0,AR6
000735 08              1897             INC     R0
000736 A607            1898             MOV     @R0,AR7
                       1899     ;                         (context->Message_Digest[2] + C) & 0xFFFFFFFF;
                       1900     ;     context->Message_Digest[3] =
                       1901                             ; SOURCE LINE # 122
000738 E500       F    1902             MOV     A,context?040
00073A 2407            1903             ADD     A,#07H
00073C F9              1904             MOV     R1,A
00073D E7              1905             MOV     A,@R1
AX51 MACRO ASSEMBLER  MAIN                                                                  05/14/09 22:31:03 PAGE    30

00073E 7800       F    1906             MOV     R0,#LOW (D?048+01H)
000740 26              1907             ADD     A,@R0
000741 FF              1908             MOV     R7,A
000742 19              1909             DEC     R1
000743 E7              1910             MOV     A,@R1
000744 18              1911             DEC     R0
000745 36              1912             ADDC    A,@R0
000746 FE              1913             MOV     R6,A
000747 E500       F    1914             MOV     A,context?040
000749 2406            1915             ADD     A,#06H
00074B F8              1916             MOV     R0,A
00074C A606            1917             MOV     @R0,AR6
00074E 08              1918             INC     R0
00074F A607            1919             MOV     @R0,AR7
                       1920     ;                         (context->Message_Digest[3] + D) & 0xFFFFFFFF;
                       1921     ;     context->Message_Digest[4] =
                       1922                             ; SOURCE LINE # 124
000751 E500       F    1923             MOV     A,context?040
000753 2409            1924             ADD     A,#09H
000755 F9              1925             MOV     R1,A
000756 E7              1926             MOV     A,@R1
000757 7800       F    1927             MOV     R0,#LOW (E?049+01H)
000759 26              1928             ADD     A,@R0
00075A FF              1929             MOV     R7,A
00075B 19              1930             DEC     R1
00075C E7              1931             MOV     A,@R1
00075D 18              1932             DEC     R0
00075E 36              1933             ADDC    A,@R0
00075F FE              1934             MOV     R6,A
000760 E500       F    1935             MOV     A,context?040
000762 2408            1936             ADD     A,#08H
000764 F8              1937             MOV     R0,A
000765 A606            1938             MOV     @R0,AR6
000767 08              1939             INC     R0
000768 A607            1940             MOV     @R0,AR7
                       1941     ;                         (context->Message_Digest[4] + E) & 0xFFFFFFFF;
                       1942     ; 
                       1943     ;     context->Message_Block_Index = 0;
                       1944                             ; SOURCE LINE # 127
00076A E500       F    1945             MOV     A,context?040
00076C 244E            1946             ADD     A,#04EH
00076E F8              1947             MOV     R0,A
00076F E4              1948             CLR     A
000770 F6              1949             MOV     @R0,A
                       1950     ; 
                       1951     ; }
                       1952                             ; SOURCE LINE # 129
000771 22              1953             RET     
                       1954     ; END OF _SHA1ProcessMessageBlock
                       1955     
                       1956     ; 
                       1957     ; 
                       1958     ; void SHA1Reset(SHA1Context idata *context)
                       1959     
------                 1960             RSEG  ?PR?_SHA1Reset?MAIN
000000                 1961     _SHA1Reset:
                       1962             USING   0
                       1963                             ; SOURCE LINE # 132
                       1964     ;---- Variable 'context?150' assigned to Register 'R7' ----
                       1965     ; {
                       1966                             ; SOURCE LINE # 133
                       1967     ;     context->Length_Low             = 0;
                       1968                             ; SOURCE LINE # 134
000000 EF              1969             MOV     A,R7
000001 240A            1970             ADD     A,#0AH
000003 F8              1971             MOV     R0,A
AX51 MACRO ASSEMBLER  MAIN                                                                  05/14/09 22:31:03 PAGE    31

000004 E4              1972             CLR     A
000005 F6              1973             MOV     @R0,A
000006 08              1974             INC     R0
000007 F6              1975             MOV     @R0,A
                       1976     ;     context->Length_High            = 0;
                       1977                             ; SOURCE LINE # 135
000008 EF              1978             MOV     A,R7
000009 240C            1979             ADD     A,#0CH
00000B F8              1980             MOV     R0,A
00000C E4              1981             CLR     A
00000D F6              1982             MOV     @R0,A
00000E 08              1983             INC     R0
00000F F6              1984             MOV     @R0,A
                       1985     ;     context->Message_Block_Index    = 0;
                       1986                             ; SOURCE LINE # 136
000010 EF              1987             MOV     A,R7
000011 244E            1988             ADD     A,#04EH
000013 F8              1989             MOV     R0,A
000014 E4              1990             CLR     A
000015 F6              1991             MOV     @R0,A
                       1992     ; 
                       1993     ;     context->Message_Digest[0]      = 0x67452301;
                       1994                             ; SOURCE LINE # 138
000016 A807            1995             MOV     R0,AR7
000018 7623            1996             MOV     @R0,#023H
00001A 08              1997             INC     R0
00001B 7601            1998             MOV     @R0,#01H
                       1999     ;     context->Message_Digest[1]      = 0xEFCDAB89;
                       2000                             ; SOURCE LINE # 139
00001D EF              2001             MOV     A,R7
00001E 2402            2002             ADD     A,#02H
000020 F8              2003             MOV     R0,A
000021 76AB            2004             MOV     @R0,#0ABH
000023 08              2005             INC     R0
000024 7689            2006             MOV     @R0,#089H
                       2007     ;     context->Message_Digest[2]      = 0x98BADCFE;
                       2008                             ; SOURCE LINE # 140
000026 EF              2009             MOV     A,R7
000027 2404            2010             ADD     A,#04H
000029 F8              2011             MOV     R0,A
00002A 76DC            2012             MOV     @R0,#0DCH
00002C 08              2013             INC     R0
00002D 76FE            2014             MOV     @R0,#0FEH
                       2015     ;     context->Message_Digest[3]      = 0x10325476;
                       2016                             ; SOURCE LINE # 141
00002F EF              2017             MOV     A,R7
000030 2406            2018             ADD     A,#06H
000032 F8              2019             MOV     R0,A
000033 7654            2020             MOV     @R0,#054H
000035 08              2021             INC     R0
000036 7676            2022             MOV     @R0,#076H
                       2023     ;     context->Message_Digest[4]      = 0xC3D2E1F0;
                       2024                             ; SOURCE LINE # 142
000038 EF              2025             MOV     A,R7
000039 2408            2026             ADD     A,#08H
00003B F8              2027             MOV     R0,A
00003C 76E1            2028             MOV     @R0,#0E1H
00003E 08              2029             INC     R0
00003F 76F0            2030             MOV     @R0,#0F0H
                       2031     ; 
                       2032     ;     context->Computed   = 0;
                       2033                             ; SOURCE LINE # 144
000041 EF              2034             MOV     A,R7
000042 244F            2035             ADD     A,#04FH
000044 F8              2036             MOV     R0,A
000045 E4              2037             CLR     A
AX51 MACRO ASSEMBLER  MAIN                                                                  05/14/09 22:31:03 PAGE    32

000046 F6              2038             MOV     @R0,A
000047 08              2039             INC     R0
000048 F6              2040             MOV     @R0,A
                       2041     ;     context->Corrupted  = 0;
                       2042                             ; SOURCE LINE # 145
000049 EF              2043             MOV     A,R7
00004A 2451            2044             ADD     A,#051H
00004C F8              2045             MOV     R0,A
00004D E4              2046             CLR     A
00004E F6              2047             MOV     @R0,A
00004F 08              2048             INC     R0
000050 F6              2049             MOV     @R0,A
                       2050     ; }
                       2051                             ; SOURCE LINE # 146
000051 22              2052             RET     
                       2053     ; END OF _SHA1Reset
                       2054     
                       2055     ; 
                       2056     ; 
                       2057     ; void SHA1PadMessage(SHA1Context idata *context)
                       2058     
------                 2059             RSEG  ?PR?_SHA1PadMessage?MAIN
000000                 2060     _SHA1PadMessage:
                       2061             USING   0
                       2062                             ; SOURCE LINE # 149
000000 8F00       F    2063             MOV     context?251,R7
                       2064     ; {
                       2065                             ; SOURCE LINE # 150
                       2066     ;     /*
                       2067     ;      *  Check to see if the current message block is too small to hold
                       2068     ;      *  the initial padding bits and length.  If so, we will pad the
                       2069     ;      *  block, process it, and then continue padding into a second
                       2070     ;      *  block.
                       2071     ;      */
                       2072     ;     if (context->Message_Block_Index > 55)
                       2073                             ; SOURCE LINE # 157
000002 A807            2074             MOV     R0,AR7
000004 E8              2075             MOV     A,R0
000005 244E            2076             ADD     A,#04EH
000007 F9              2077             MOV     R1,A
000008 D3              2078             SETB    C
000009 E7              2079             MOV     A,@R1
00000A 6480            2080             XRL     A,#080H
00000C 94B7            2081             SUBB    A,#0B7H
00000E 4052            2082             JC      ?C0021
                       2083     ;     {
                       2084                             ; SOURCE LINE # 158
                       2085     ;         context->Message_Block[context->Message_Block_Index++] = 0x80;
                       2086                             ; SOURCE LINE # 159
000010 E8              2087             MOV     A,R0
000011 244E            2088             ADD     A,#04EH
000013 F8              2089             MOV     R0,A
000014 E6              2090             MOV     A,@R0
000015 06              2091             INC     @R0
000016 FF              2092             MOV     R7,A
000017 E500       F    2093             MOV     A,context?251
000019 240E            2094             ADD     A,#0EH
00001B 2F              2095             ADD     A,R7
00001C F8              2096             MOV     R0,A
00001D 7680            2097             MOV     @R0,#080H
00001F                 2098     ?C0022:
                       2099     ;         while(context->Message_Block_Index < 64)
                       2100                             ; SOURCE LINE # 160
00001F E500       F    2101             MOV     A,context?251
000021 244E            2102             ADD     A,#04EH
000023 F9              2103             MOV     R1,A
AX51 MACRO ASSEMBLER  MAIN                                                                  05/14/09 22:31:03 PAGE    33

000024 C3              2104             CLR     C
000025 E7              2105             MOV     A,@R1
000026 6480            2106             XRL     A,#080H
000028 94C0            2107             SUBB    A,#0C0H
00002A 5012            2108             JNC     ?C0023
                       2109     ;         {
                       2110                             ; SOURCE LINE # 161
                       2111     ;             context->Message_Block[context->Message_Block_Index++] = 0;
                       2112                             ; SOURCE LINE # 162
00002C E500       F    2113             MOV     A,context?251
00002E 244E            2114             ADD     A,#04EH
000030 F8              2115             MOV     R0,A
000031 E6              2116             MOV     A,@R0
000032 06              2117             INC     @R0
000033 FF              2118             MOV     R7,A
000034 E500       F    2119             MOV     A,context?251
000036 240E            2120             ADD     A,#0EH
000038 2F              2121             ADD     A,R7
000039 F8              2122             MOV     R0,A
00003A E4              2123             CLR     A
00003B F6              2124             MOV     @R0,A
                       2125     ;         }
                       2126                             ; SOURCE LINE # 163
00003C 80E1            2127             SJMP    ?C0022
00003E                 2128     ?C0023:
                       2129     ; 
                       2130     ;         SHA1ProcessMessageBlock(context);
                       2131                             ; SOURCE LINE # 165
00003E AF00       F    2132             MOV     R7,context?251
000040 120000     F    2133             LCALL   _SHA1ProcessMessageBlock
000043                 2134     ?C0024:
                       2135     ; 
                       2136     ;         while(context->Message_Block_Index < 56)
                       2137                             ; SOURCE LINE # 167
000043 E500       F    2138             MOV     A,context?251
000045 244E            2139             ADD     A,#04EH
000047 F9              2140             MOV     R1,A
000048 C3              2141             CLR     C
000049 E7              2142             MOV     A,@R1
00004A 6480            2143             XRL     A,#080H
00004C 94B8            2144             SUBB    A,#0B8H
00004E 5041            2145             JNC     ?C0026
                       2146     ;         {
                       2147                             ; SOURCE LINE # 168
                       2148     ;             context->Message_Block[context->Message_Block_Index++] = 0;
                       2149                             ; SOURCE LINE # 169
000050 E500       F    2150             MOV     A,context?251
000052 244E            2151             ADD     A,#04EH
000054 F8              2152             MOV     R0,A
000055 E6              2153             MOV     A,@R0
000056 06              2154             INC     @R0
000057 FF              2155             MOV     R7,A
000058 E500       F    2156             MOV     A,context?251
00005A 240E            2157             ADD     A,#0EH
00005C 2F              2158             ADD     A,R7
00005D F8              2159             MOV     R0,A
00005E E4              2160             CLR     A
00005F F6              2161             MOV     @R0,A
                       2162     ;         }
                       2163                             ; SOURCE LINE # 170
000060 80E1            2164             SJMP    ?C0024
                       2165     ;     }
                       2166                             ; SOURCE LINE # 171
000062                 2167     ?C0021:
                       2168     ;     else
                       2169     ;     {
AX51 MACRO ASSEMBLER  MAIN                                                                  05/14/09 22:31:03 PAGE    34

                       2170                             ; SOURCE LINE # 173
                       2171     ;         context->Message_Block[context->Message_Block_Index++] = 0x80;
                       2172                             ; SOURCE LINE # 174
000062 E500       F    2173             MOV     A,context?251
000064 244E            2174             ADD     A,#04EH
000066 F8              2175             MOV     R0,A
000067 E6              2176             MOV     A,@R0
000068 06              2177             INC     @R0
000069 FF              2178             MOV     R7,A
00006A E500       F    2179             MOV     A,context?251
00006C 240E            2180             ADD     A,#0EH
00006E 2F              2181             ADD     A,R7
00006F F8              2182             MOV     R0,A
000070 7680            2183             MOV     @R0,#080H
000072                 2184     ?C0027:
                       2185     ;         while(context->Message_Block_Index < 56)
                       2186                             ; SOURCE LINE # 175
000072 E500       F    2187             MOV     A,context?251
000074 244E            2188             ADD     A,#04EH
000076 F9              2189             MOV     R1,A
000077 C3              2190             CLR     C
000078 E7              2191             MOV     A,@R1
000079 6480            2192             XRL     A,#080H
00007B 94B8            2193             SUBB    A,#0B8H
00007D 5012            2194             JNC     ?C0026
                       2195     ;         {
                       2196                             ; SOURCE LINE # 176
                       2197     ;             context->Message_Block[context->Message_Block_Index++] = 0;
                       2198                             ; SOURCE LINE # 177
00007F E500       F    2199             MOV     A,context?251
000081 244E            2200             ADD     A,#04EH
000083 F8              2201             MOV     R0,A
000084 E6              2202             MOV     A,@R0
000085 06              2203             INC     @R0
000086 FF              2204             MOV     R7,A
000087 E500       F    2205             MOV     A,context?251
000089 240E            2206             ADD     A,#0EH
00008B 2F              2207             ADD     A,R7
00008C F8              2208             MOV     R0,A
00008D E4              2209             CLR     A
00008E F6              2210             MOV     @R0,A
                       2211     ;         }
                       2212                             ; SOURCE LINE # 178
00008F 80E1            2213             SJMP    ?C0027
                       2214     ;     }
                       2215                             ; SOURCE LINE # 179
000091                 2216     ?C0026:
                       2217     ; 
                       2218     ;     /*
                       2219     ;      *  Store the message length as the last 8 octets
                       2220     ;      */
                       2221     ;     context->Message_Block[24] = (context->Length_High >> 24) & 0xFF;
                       2222                             ; SOURCE LINE # 184
000091 E500       F    2223             MOV     A,context?251
000093 240C            2224             ADD     A,#0CH
000095 F9              2225             MOV     R1,A
000096 E7              2226             MOV     A,@R1
000097 FE              2227             MOV     R6,A
000098 09              2228             INC     R1
000099 E7              2229             MOV     A,@R1
00009A 7818            2230             MOV     R0,#018H
00009C                 2231     ?C0073:
00009C CE              2232             XCH     A,R6
00009D C3              2233             CLR     C
00009E 13              2234             RRC     A
00009F CE              2235             XCH     A,R6
AX51 MACRO ASSEMBLER  MAIN                                                                  05/14/09 22:31:03 PAGE    35

0000A0 13              2236             RRC     A
0000A1 D8F9            2237             DJNZ    R0,?C0073
0000A3 FF              2238             MOV     R7,A
0000A4 E500       F    2239             MOV     A,context?251
0000A6 2426            2240             ADD     A,#026H
0000A8 F8              2241             MOV     R0,A
0000A9 A607            2242             MOV     @R0,AR7
                       2243     ;     context->Message_Block[25] = (context->Length_High >> 16) & 0xFF;
                       2244                             ; SOURCE LINE # 185
0000AB E500       F    2245             MOV     A,context?251
0000AD 240C            2246             ADD     A,#0CH
0000AF F9              2247             MOV     R1,A
0000B0 E7              2248             MOV     A,@R1
0000B1 FE              2249             MOV     R6,A
0000B2 09              2250             INC     R1
0000B3 E7              2251             MOV     A,@R1
0000B4 7810            2252             MOV     R0,#010H
0000B6                 2253     ?C0074:
0000B6 CE              2254             XCH     A,R6
0000B7 C3              2255             CLR     C
0000B8 13              2256             RRC     A
0000B9 CE              2257             XCH     A,R6
0000BA 13              2258             RRC     A
0000BB D8F9            2259             DJNZ    R0,?C0074
0000BD FF              2260             MOV     R7,A
0000BE E500       F    2261             MOV     A,context?251
0000C0 2427            2262             ADD     A,#027H
0000C2 F8              2263             MOV     R0,A
0000C3 A607            2264             MOV     @R0,AR7
                       2265     ;     context->Message_Block[26] = (context->Length_High >> 8) & 0xFF;
                       2266                             ; SOURCE LINE # 186
0000C5 E500       F    2267             MOV     A,context?251
0000C7 240C            2268             ADD     A,#0CH
0000C9 F9              2269             MOV     R1,A
0000CA E7              2270             MOV     A,@R1
0000CB FF              2271             MOV     R7,A
0000CC E500       F    2272             MOV     A,context?251
0000CE 2428            2273             ADD     A,#028H
0000D0 F8              2274             MOV     R0,A
0000D1 A607            2275             MOV     @R0,AR7
                       2276     ;     context->Message_Block[27] = (context->Length_High) & 0xFF;
                       2277                             ; SOURCE LINE # 187
0000D3 E500       F    2278             MOV     A,context?251
0000D5 240D            2279             ADD     A,#0DH
0000D7 F9              2280             MOV     R1,A
0000D8 E7              2281             MOV     A,@R1
0000D9 FF              2282             MOV     R7,A
0000DA E500       F    2283             MOV     A,context?251
0000DC 2429            2284             ADD     A,#029H
0000DE F8              2285             MOV     R0,A
0000DF A607            2286             MOV     @R0,AR7
                       2287     ;     context->Message_Block[28] = (context->Length_Low >> 24) & 0xFF;
                       2288                             ; SOURCE LINE # 188
0000E1 E500       F    2289             MOV     A,context?251
0000E3 240A            2290             ADD     A,#0AH
0000E5 F9              2291             MOV     R1,A
0000E6 E7              2292             MOV     A,@R1
0000E7 FE              2293             MOV     R6,A
0000E8 09              2294             INC     R1
0000E9 E7              2295             MOV     A,@R1
0000EA 7818            2296             MOV     R0,#018H
0000EC                 2297     ?C0075:
0000EC CE              2298             XCH     A,R6
0000ED C3              2299             CLR     C
0000EE 13              2300             RRC     A
0000EF CE              2301             XCH     A,R6
AX51 MACRO ASSEMBLER  MAIN                                                                  05/14/09 22:31:03 PAGE    36

0000F0 13              2302             RRC     A
0000F1 D8F9            2303             DJNZ    R0,?C0075
0000F3 FF              2304             MOV     R7,A
0000F4 E500       F    2305             MOV     A,context?251
0000F6 242A            2306             ADD     A,#02AH
0000F8 F8              2307             MOV     R0,A
0000F9 A607            2308             MOV     @R0,AR7
                       2309     ;     context->Message_Block[29] = (context->Length_Low >> 16) & 0xFF;
                       2310                             ; SOURCE LINE # 189
0000FB E500       F    2311             MOV     A,context?251
0000FD 240A            2312             ADD     A,#0AH
0000FF F9              2313             MOV     R1,A
000100 E7              2314             MOV     A,@R1
000101 FE              2315             MOV     R6,A
000102 09              2316             INC     R1
000103 E7              2317             MOV     A,@R1
000104 7810            2318             MOV     R0,#010H
000106                 2319     ?C0076:
000106 CE              2320             XCH     A,R6
000107 C3              2321             CLR     C
000108 13              2322             RRC     A
000109 CE              2323             XCH     A,R6
00010A 13              2324             RRC     A
00010B D8F9            2325             DJNZ    R0,?C0076
00010D FF              2326             MOV     R7,A
00010E E500       F    2327             MOV     A,context?251
000110 242B            2328             ADD     A,#02BH
000112 F8              2329             MOV     R0,A
000113 A607            2330             MOV     @R0,AR7
                       2331     ;     context->Message_Block[30] = (context->Length_Low >> 8) & 0xFF;
                       2332                             ; SOURCE LINE # 190
000115 E500       F    2333             MOV     A,context?251
000117 240A            2334             ADD     A,#0AH
000119 F9              2335             MOV     R1,A
00011A E7              2336             MOV     A,@R1
00011B FF              2337             MOV     R7,A
00011C E500       F    2338             MOV     A,context?251
00011E 242C            2339             ADD     A,#02CH
000120 F8              2340             MOV     R0,A
000121 A607            2341             MOV     @R0,AR7
                       2342     ;     context->Message_Block[31] = (context->Length_Low) & 0xFF;
                       2343                             ; SOURCE LINE # 191
000123 E500       F    2344             MOV     A,context?251
000125 240B            2345             ADD     A,#0BH
000127 F9              2346             MOV     R1,A
000128 E7              2347             MOV     A,@R1
000129 FF              2348             MOV     R7,A
00012A E500       F    2349             MOV     A,context?251
00012C 242D            2350             ADD     A,#02DH
00012E F8              2351             MOV     R0,A
00012F A607            2352             MOV     @R0,AR7
                       2353     ; 
                       2354     ;     SHA1ProcessMessageBlock(context);
                       2355                             ; SOURCE LINE # 193
000131 AF00       F    2356             MOV     R7,context?251
000133 020000     F    2357             LJMP    _SHA1ProcessMessageBlock
                       2358     ; END OF _SHA1PadMessage
                       2359     
                       2360     ; }
                       2361     ; 
                       2362     ; 
                       2363     ; int SHA1Result(SHA1Context idata *context)
                       2364     
------                 2365             RSEG  ?PR?_SHA1Result?MAIN
000000                 2366     _SHA1Result:
                       2367             USING   0
AX51 MACRO ASSEMBLER  MAIN                                                                  05/14/09 22:31:03 PAGE    37

                       2368                             ; SOURCE LINE # 197
000000 8F00       F    2369             MOV     context?352,R7
                       2370     ; {
                       2371                             ; SOURCE LINE # 198
                       2372     ; 
                       2373     ;     if (context->Corrupted)
                       2374                             ; SOURCE LINE # 200
000002 A807            2375             MOV     R0,AR7
000004 E8              2376             MOV     A,R0
000005 2452            2377             ADD     A,#052H
000007 F9              2378             MOV     R1,A
000008 E7              2379             MOV     A,@R1
000009 19              2380             DEC     R1
00000A 47              2381             ORL     A,@R1
00000B 6004            2382             JZ      ?C0030
                       2383     ;     {
                       2384                             ; SOURCE LINE # 201
                       2385     ;         return 0;
                       2386                             ; SOURCE LINE # 202
00000D E4              2387             CLR     A
00000E FE              2388             MOV     R6,A
00000F FF              2389             MOV     R7,A
000010 22              2390             RET     
                       2391     ;     }
                       2392                             ; SOURCE LINE # 203
000011                 2393     ?C0030:
                       2394     ; 
                       2395     ;     if (!context->Computed)
                       2396                             ; SOURCE LINE # 205
000011 E500       F    2397             MOV     A,context?352
000013 2450            2398             ADD     A,#050H
000015 F9              2399             MOV     R1,A
000016 E7              2400             MOV     A,@R1
000017 19              2401             DEC     R1
000018 47              2402             ORL     A,@R1
000019 700F            2403             JNZ     ?C0032
                       2404     ;     {
                       2405                             ; SOURCE LINE # 206
                       2406     ;         SHA1PadMessage(context);
                       2407                             ; SOURCE LINE # 207
00001B AF00       F    2408             MOV     R7,context?352
00001D 120000     F    2409             LCALL   _SHA1PadMessage
                       2410     ;         context->Computed = 1;
                       2411                             ; SOURCE LINE # 208
000020 E500       F    2412             MOV     A,context?352
000022 244F            2413             ADD     A,#04FH
000024 F8              2414             MOV     R0,A
000025 7600            2415             MOV     @R0,#00H
000027 08              2416             INC     R0
000028 7601            2417             MOV     @R0,#01H
                       2418     ;     }
                       2419                             ; SOURCE LINE # 209
00002A                 2420     ?C0032:
                       2421     ; 
                       2422     ;     return 1;
                       2423                             ; SOURCE LINE # 211
00002A 7E00            2424             MOV     R6,#00H
00002C 7F01            2425             MOV     R7,#01H
                       2426     ; }
                       2427                             ; SOURCE LINE # 212
00002E                 2428     ?C0031:
00002E 22              2429             RET     
                       2430     ; END OF _SHA1Result
                       2431     
                       2432     ; 
                       2433     ; 
AX51 MACRO ASSEMBLER  MAIN                                                                  05/14/09 22:31:03 PAGE    38

                       2434     ; void SHA1Input(SHA1Context idata *context,unsigned char idata *message_array,unsigned 
                               idata length)
                       2435     
------                 2436             RSEG  ?PR?_SHA1Input?MAIN
000000                 2437     _SHA1Input:
                       2438             USING   0
                       2439                             ; SOURCE LINE # 215
000000 8F00       F    2440             MOV     context?453,R7
000002 8D00       F    2441             MOV     message_array?454,R5
000004 8A00       F    2442             MOV     length?455,R2
000006 8B00       F    2443             MOV     length?455+01H,R3
                       2444     ; {
                       2445                             ; SOURCE LINE # 216
                       2446     ;     if (!length)
                       2447                             ; SOURCE LINE # 217
000008 E500       F    2448             MOV     A,length?455+01H
00000A 4500       F    2449             ORL     A,length?455
00000C 7003            2450             JNZ     $ + 5H
00000E 020000     F    2451             LJMP    ?C0034
                       2452     ;     {
                       2453                             ; SOURCE LINE # 218
                       2454     ;         return;
                       2455     ;     }
                       2456                             ; SOURCE LINE # 220
000011                 2457     ?C0033:
                       2458     ; 
                       2459     ;     if (context->Computed || context->Corrupted)
                       2460                             ; SOURCE LINE # 222
000011 E500       F    2461             MOV     A,context?453
000013 2450            2462             ADD     A,#050H
000015 F9              2463             MOV     R1,A
000016 E7              2464             MOV     A,@R1
000017 19              2465             DEC     R1
000018 47              2466             ORL     A,@R1
000019 700A            2467             JNZ     ?C0036
00001B E500       F    2468             MOV     A,context?453
00001D 2452            2469             ADD     A,#052H
00001F F9              2470             MOV     R1,A
000020 E7              2471             MOV     A,@R1
000021 19              2472             DEC     R1
000022 47              2473             ORL     A,@R1
000023 600B            2474             JZ      ?C0037
000025                 2475     ?C0036:
                       2476     ;     {
                       2477                             ; SOURCE LINE # 223
                       2478     ;         context->Corrupted = 1;
                       2479                             ; SOURCE LINE # 224
000025 E500       F    2480             MOV     A,context?453
000027 2451            2481             ADD     A,#051H
000029 F8              2482             MOV     R0,A
00002A 7600            2483             MOV     @R0,#00H
00002C 08              2484             INC     R0
00002D 7601            2485             MOV     @R0,#01H
00002F 22              2486             RET     
                       2487     ;         return;
                       2488     ;     }
                       2489                             ; SOURCE LINE # 226
000030                 2490     ?C0037:
                       2491     ; 
                       2492     ;     while(length-- && !context->Corrupted)
                       2493                             ; SOURCE LINE # 228
000030 E500       F    2494             MOV     A,length?455+01H
000032 1500       F    2495             DEC     length?455+01H
000034 AE00       F    2496             MOV     R6,length?455
000036 7002            2497             JNZ     ?C0077
000038 1500       F    2498             DEC     length?455
AX51 MACRO ASSEMBLER  MAIN                                                                  05/14/09 22:31:03 PAGE    39

00003A                 2499     ?C0077:
00003A 4E              2500             ORL     A,R6
00003B 607C            2501             JZ      ?C0034
00003D E500       F    2502             MOV     A,context?453
00003F 2452            2503             ADD     A,#052H
000041 F9              2504             MOV     R1,A
000042 E7              2505             MOV     A,@R1
000043 19              2506             DEC     R1
000044 47              2507             ORL     A,@R1
000045 7072            2508             JNZ     ?C0034
                       2509     ;     {
                       2510                             ; SOURCE LINE # 229
                       2511     ;         context->Message_Block[context->Message_Block_Index++] =(*message_array & 0xFF
                               );
                       2512                             ; SOURCE LINE # 230
000047 A800       F    2513             MOV     R0,message_array?454
000049 E6              2514             MOV     A,@R0
00004A FF              2515             MOV     R7,A
00004B E500       F    2516             MOV     A,context?453
00004D 244E            2517             ADD     A,#04EH
00004F F8              2518             MOV     R0,A
000050 E6              2519             MOV     A,@R0
000051 06              2520             INC     @R0
000052 FE              2521             MOV     R6,A
000053 E500       F    2522             MOV     A,context?453
000055 240E            2523             ADD     A,#0EH
000057 2E              2524             ADD     A,R6
000058 F8              2525             MOV     R0,A
000059 A607            2526             MOV     @R0,AR7
                       2527     ; 
                       2528     ;         context->Length_Low += 8;
                       2529                             ; SOURCE LINE # 232
00005B E500       F    2530             MOV     A,context?453
00005D 240B            2531             ADD     A,#0BH
00005F F8              2532             MOV     R0,A
000060 7408            2533             MOV     A,#08H
000062 26              2534             ADD     A,@R0
000063 F6              2535             MOV     @R0,A
000064 18              2536             DEC     R0
000065 E4              2537             CLR     A
000066 36              2538             ADDC    A,@R0
000067 F6              2539             MOV     @R0,A
                       2540     ;         /* Force it to 32 bits */
                       2541     ;         context->Length_Low &= 0xFFFFFFFF;
                       2542                             ; SOURCE LINE # 234
000068 E500       F    2543             MOV     A,context?453
00006A 240A            2544             ADD     A,#0AH
00006C F8              2545             MOV     R0,A
00006D E6              2546             MOV     A,@R0
00006E F6              2547             MOV     @R0,A
00006F 08              2548             INC     R0
000070 E6              2549             MOV     A,@R0
000071 F6              2550             MOV     @R0,A
                       2551     ;         if (context->Length_Low == 0)
                       2552                             ; SOURCE LINE # 235
000072 E500       F    2553             MOV     A,context?453
000074 240B            2554             ADD     A,#0BH
000076 F9              2555             MOV     R1,A
000077 E7              2556             MOV     A,@R1
000078 19              2557             DEC     R1
000079 47              2558             ORL     A,@R1
00007A 702A            2559             JNZ     ?C0039
                       2560     ;         {
                       2561                             ; SOURCE LINE # 236
                       2562     ;             context->Length_High++;
                       2563                             ; SOURCE LINE # 237
AX51 MACRO ASSEMBLER  MAIN                                                                  05/14/09 22:31:03 PAGE    40

00007C E500       F    2564             MOV     A,context?453
00007E 240C            2565             ADD     A,#0CH
000080 F8              2566             MOV     R0,A
000081 08              2567             INC     R0
000082 06              2568             INC     @R0
000083 E6              2569             MOV     A,@R0
000084 18              2570             DEC     R0
000085 7001            2571             JNZ     ?C0078
000087 06              2572             INC     @R0
000088                 2573     ?C0078:
                       2574     ;             /* Force it to 32 bits */
                       2575     ;             context->Length_High &= 0xFFFFFFFF;
                       2576                             ; SOURCE LINE # 239
000088 E500       F    2577             MOV     A,context?453
00008A 240C            2578             ADD     A,#0CH
00008C F8              2579             MOV     R0,A
00008D E6              2580             MOV     A,@R0
00008E F6              2581             MOV     @R0,A
00008F 08              2582             INC     R0
000090 E6              2583             MOV     A,@R0
000091 F6              2584             MOV     @R0,A
                       2585     ;             if (context->Length_High == 0)
                       2586                             ; SOURCE LINE # 240
000092 E500       F    2587             MOV     A,context?453
000094 240D            2588             ADD     A,#0DH
000096 F9              2589             MOV     R1,A
000097 E7              2590             MOV     A,@R1
000098 19              2591             DEC     R1
000099 47              2592             ORL     A,@R1
00009A 700A            2593             JNZ     ?C0039
                       2594     ;             {
                       2595                             ; SOURCE LINE # 241
                       2596     ;                 /* Message is too long */
                       2597     ;                 context->Corrupted = 1;
                       2598                             ; SOURCE LINE # 243
00009C E500       F    2599             MOV     A,context?453
00009E 2451            2600             ADD     A,#051H
0000A0 F8              2601             MOV     R0,A
0000A1 7600            2602             MOV     @R0,#00H
0000A3 08              2603             INC     R0
0000A4 7601            2604             MOV     @R0,#01H
                       2605     ;             }
                       2606                             ; SOURCE LINE # 244
                       2607     ;         }
                       2608                             ; SOURCE LINE # 245
0000A6                 2609     ?C0039:
                       2610     ; 
                       2611     ;         if (context->Message_Block_Index == 32)
                       2612                             ; SOURCE LINE # 247
0000A6 E500       F    2613             MOV     A,context?453
0000A8 244E            2614             ADD     A,#04EH
0000AA F9              2615             MOV     R1,A
0000AB E7              2616             MOV     A,@R1
0000AC B42005          2617             CJNE    A,#020H,?C0041
                       2618     ;         {
                       2619                             ; SOURCE LINE # 248
                       2620     ;             SHA1ProcessMessageBlock(context);
                       2621                             ; SOURCE LINE # 249
0000AF AF00       F    2622             MOV     R7,context?453
0000B1 120000     F    2623             LCALL   _SHA1ProcessMessageBlock
                       2624     ;         }
                       2625                             ; SOURCE LINE # 250
0000B4                 2626     ?C0041:
                       2627     ; 
                       2628     ;         message_array++;
                       2629                             ; SOURCE LINE # 252
AX51 MACRO ASSEMBLER  MAIN                                                                  05/14/09 22:31:03 PAGE    41

0000B4 0500       F    2630             INC     message_array?454
                       2631     ;     }
                       2632                             ; SOURCE LINE # 253
0000B6 020000     F    2633             LJMP    ?C0037
                       2634     ; }
                       2635                             ; SOURCE LINE # 254
0000B9                 2636     ?C0034:
0000B9 22              2637             RET     
                       2638     ; END OF _SHA1Input
                       2639     
                       2640     ; 
                       2641     ; 
                       2642     ; void main()
                       2643     
------                 2644             RSEG  ?PR?main?MAIN
000000                 2645     main:
                       2646             USING   0
                       2647                             ; SOURCE LINE # 257
                       2648     ; {
                       2649                             ; SOURCE LINE # 258
                       2650     ; 
                       2651     ;       idata char i;
                       2652     ;       idata SHA1Context sha;
                       2653     ; 
                       2654     ;       store_cpu_rate(16);
                       2655                             ; SOURCE LINE # 263
000000 7F10            2656             MOV     R7,#010H
000002 7E00            2657             MOV     R6,#00H
000004 120000     E    2658             LCALL   _store_cpu_rate
                       2659     ; 
                       2660     ;     P0_DIR &= ~0x28;
                       2661                             ; SOURCE LINE # 265
000007 5394D7          2662             ANL     P0_DIR,#0D7H
                       2663     ;     P0_ALT &= ~0x28;
                       2664                             ; SOURCE LINE # 266
00000A 5395D7          2665             ANL     P0_ALT,#0D7H
                       2666     ; 
                       2667     ;       serial_init(19200);
                       2668                             ; SOURCE LINE # 268
00000D 7F00            2669             MOV     R7,#00H
00000F 7E4B            2670             MOV     R6,#04BH
000011 120000     E    2671             LCALL   _serial_init
                       2672     ; 
                       2673     ; 
                       2674     ;       for(i=0;i<6;i++)
                       2675                             ; SOURCE LINE # 271
000014 E4              2676             CLR     A
000015 7800       F    2677             MOV     R0,#LOW (i?556)
000017 F6              2678             MOV     @R0,A
000018                 2679     ?C0042:
                       2680     ;       {
                       2681                             ; SOURCE LINE # 272
                       2682     ;               blink_led();
                       2683                             ; SOURCE LINE # 273
000018 638020          2684             XRL     P0,#020H
                       2685     ;               mdelay(400);
                       2686                             ; SOURCE LINE # 274
00001B 7F90            2687             MOV     R7,#090H
00001D 7E01            2688             MOV     R6,#01H
00001F 120000     E    2689             LCALL   _mdelay
                       2690     ;       }       
                       2691                             ; SOURCE LINE # 275
000022 7800       F    2692             MOV     R0,#LOW (i?556)
000024 06              2693             INC     @R0
000025 C3              2694             CLR     C
000026 E6              2695             MOV     A,@R0
AX51 MACRO ASSEMBLER  MAIN                                                                  05/14/09 22:31:03 PAGE    42

000027 6480            2696             XRL     A,#080H
000029 9486            2697             SUBB    A,#086H
00002B 40EB            2698             JC      ?C0042
00002D                 2699     ?C0043:
                       2700     ;       
                       2701     ;       sha_counter++;
                       2702                             ; SOURCE LINE # 277
00002D 0500       F    2703             INC     sha_counter+01H
00002F E500       F    2704             MOV     A,sha_counter+01H
000031 7002            2705             JNZ     ?C0079
000033 0500       F    2706             INC     sha_counter
000035                 2707     ?C0079:
000035                 2708     ?C0045:
                       2709     ; 
                       2710     ;       while(1)
                       2711                             ; SOURCE LINE # 279
                       2712     ;       {
                       2713                             ; SOURCE LINE # 280
                       2714     ;               SHA1Reset(&sha);
                       2715                             ; SOURCE LINE # 281
000035 7F00       F    2716             MOV     R7,#LOW (sha?557)
000037 120000     F    2717             LCALL   _SHA1Reset
                       2718     ;               SHA1Input(&sha, (const unsigned char *) TESTA, 3);
                       2719                             ; SOURCE LINE # 282
00003A 7D00       F    2720             MOV     R5,#LOW (?SC_0)
00003C 7B03            2721             MOV     R3,#03H
00003E 7A00            2722             MOV     R2,#00H
000040 120000     F    2723             LCALL   _SHA1Input
                       2724     ; 
                       2725     ;               SHA1Result(&sha);
                       2726                             ; SOURCE LINE # 284
000043 7F00       F    2727             MOV     R7,#LOW (sha?557)
000045 120000     F    2728             LCALL   _SHA1Result
                       2729     ;               sha_counter++;
                       2730                             ; SOURCE LINE # 285
000048 0500       F    2731             INC     sha_counter+01H
00004A E500       F    2732             MOV     A,sha_counter+01H
00004C 7002            2733             JNZ     ?C0080
00004E 0500       F    2734             INC     sha_counter
000050                 2735     ?C0080:
                       2736     ;               blink_led();
                       2737                             ; SOURCE LINE # 286
000050 638020          2738             XRL     P0,#020H
                       2739     ;               int_print(sha_counter);
                       2740                             ; SOURCE LINE # 287
000053 AE00       F    2741             MOV     R6,sha_counter
000055 AF00       F    2742             MOV     R7,sha_counter+01H
000057 120000     E    2743             LCALL   _?int_print
                       2744     ;               puts("\r\n");
                       2745                             ; SOURCE LINE # 288
00005A 7BFF            2746             MOV     R3,#0FFH
00005C 7A00       F    2747             MOV     R2,#HIGH (?SC_4)
00005E 7900       F    2748             MOV     R1,#LOW (?SC_4)
000060 120000     E    2749             LCALL   _puts
                       2750     ;       }       
                       2751                             ; SOURCE LINE # 289
000063 80D0            2752             SJMP    ?C0045
                       2753     ; END OF main
                       2754     
                       2755             END
AX51 MACRO ASSEMBLER  MAIN                                                                  05/14/09 22:31:03 PAGE    43

SYMBOL TABLE LISTING
------ ----- -------


N A M E                                    T Y P E  V A L U E     ATTRIBUTES

?_SHA1INPUT?BYTE. . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?_SHA1INPUT?MAIN
?_SHA1PADMESSAGE?BYTE . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?_SHA1PADMESSAGE?MAIN
?_SHA1PROCESSMESSAGEBLOCK?BYTE. . . . .    D  ADDR  0000H     R   SEG=?DT?_SHA1PROCESSMESSAGEBLOCK?MAIN
?_SHA1RESULT?BYTE . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?_SHA1RESULT?MAIN
?C0001. . . . . . . . . . . . . . . . .    C  ADDR  001BH     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0002. . . . . . . . . . . . . . . . .    C  ADDR  010CH     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0004. . . . . . . . . . . . . . . . .    C  ADDR  0113H     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0005. . . . . . . . . . . . . . . . .    C  ADDR  0215H     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0007. . . . . . . . . . . . . . . . .    C  ADDR  026DH     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0008. . . . . . . . . . . . . . . . .    C  ADDR  0391H     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0010. . . . . . . . . . . . . . . . .    C  ADDR  0398H     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0011. . . . . . . . . . . . . . . . .    C  ADDR  04A8H     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0013. . . . . . . . . . . . . . . . .    C  ADDR  04AFH     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0014. . . . . . . . . . . . . . . . .    C  ADDR  05DCH     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0016. . . . . . . . . . . . . . . . .    C  ADDR  05E3H     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0017. . . . . . . . . . . . . . . . .    C  ADDR  06F2H     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0021. . . . . . . . . . . . . . . . .    C  ADDR  0062H     R   SEG=?PR?_SHA1PADMESSAGE?MAIN
?C0022. . . . . . . . . . . . . . . . .    C  ADDR  001FH     R   SEG=?PR?_SHA1PADMESSAGE?MAIN
?C0023. . . . . . . . . . . . . . . . .    C  ADDR  003EH     R   SEG=?PR?_SHA1PADMESSAGE?MAIN
?C0024. . . . . . . . . . . . . . . . .    C  ADDR  0043H     R   SEG=?PR?_SHA1PADMESSAGE?MAIN
?C0026. . . . . . . . . . . . . . . . .    C  ADDR  0091H     R   SEG=?PR?_SHA1PADMESSAGE?MAIN
?C0027. . . . . . . . . . . . . . . . .    C  ADDR  0072H     R   SEG=?PR?_SHA1PADMESSAGE?MAIN
?C0030. . . . . . . . . . . . . . . . .    C  ADDR  0011H     R   SEG=?PR?_SHA1RESULT?MAIN
?C0031. . . . . . . . . . . . . . . . .    C  ADDR  002EH     R   SEG=?PR?_SHA1RESULT?MAIN
?C0032. . . . . . . . . . . . . . . . .    C  ADDR  002AH     R   SEG=?PR?_SHA1RESULT?MAIN
?C0033. . . . . . . . . . . . . . . . .    C  ADDR  0011H     R   SEG=?PR?_SHA1INPUT?MAIN
?C0034. . . . . . . . . . . . . . . . .    C  ADDR  00B9H     R   SEG=?PR?_SHA1INPUT?MAIN
?C0036. . . . . . . . . . . . . . . . .    C  ADDR  0025H     R   SEG=?PR?_SHA1INPUT?MAIN
?C0037. . . . . . . . . . . . . . . . .    C  ADDR  0030H     R   SEG=?PR?_SHA1INPUT?MAIN
?C0039. . . . . . . . . . . . . . . . .    C  ADDR  00A6H     R   SEG=?PR?_SHA1INPUT?MAIN
?C0041. . . . . . . . . . . . . . . . .    C  ADDR  00B4H     R   SEG=?PR?_SHA1INPUT?MAIN
?C0042. . . . . . . . . . . . . . . . .    C  ADDR  0018H     R   SEG=?PR?MAIN?MAIN
?C0043. . . . . . . . . . . . . . . . .    C  ADDR  002DH     R   SEG=?PR?MAIN?MAIN
?C0045. . . . . . . . . . . . . . . . .    C  ADDR  0035H     R   SEG=?PR?MAIN?MAIN
?C0048. . . . . . . . . . . . . . . . .    C  ADDR  0036H     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0049. . . . . . . . . . . . . . . . .    C  ADDR  0079H     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0050. . . . . . . . . . . . . . . . .    C  ADDR  0100H     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0051. . . . . . . . . . . . . . . . .    C  ADDR  01CFH     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0052. . . . . . . . . . . . . . . . .    C  ADDR  0209H     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0053. . . . . . . . . . . . . . . . .    C  ADDR  0275H     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0054. . . . . . . . . . . . . . . . .    C  ADDR  0290H     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0055. . . . . . . . . . . . . . . . .    C  ADDR  032BH     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0056. . . . . . . . . . . . . . . . .    C  ADDR  0346H     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0057. . . . . . . . . . . . . . . . .    C  ADDR  0385H     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0058. . . . . . . . . . . . . . . . .    C  ADDR  03A0H     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0059. . . . . . . . . . . . . . . . .    C  ADDR  03BBH     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0060. . . . . . . . . . . . . . . . .    C  ADDR  0442H     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0061. . . . . . . . . . . . . . . . .    C  ADDR  045DH     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0062. . . . . . . . . . . . . . . . .    C  ADDR  049CH     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0063. . . . . . . . . . . . . . . . .    C  ADDR  04B7H     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0064. . . . . . . . . . . . . . . . .    C  ADDR  04D2H     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0065. . . . . . . . . . . . . . . . .    C  ADDR  0576H     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0066. . . . . . . . . . . . . . . . .    C  ADDR  0591H     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0067. . . . . . . . . . . . . . . . .    C  ADDR  05D0H     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0068. . . . . . . . . . . . . . . . .    C  ADDR  05EBH     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0069. . . . . . . . . . . . . . . . .    C  ADDR  0606H     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0070. . . . . . . . . . . . . . . . .    C  ADDR  068CH     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0071. . . . . . . . . . . . . . . . .    C  ADDR  06A7H     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0072. . . . . . . . . . . . . . . . .    C  ADDR  06E6H     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
?C0073. . . . . . . . . . . . . . . . .    C  ADDR  009CH     R   SEG=?PR?_SHA1PADMESSAGE?MAIN
AX51 MACRO ASSEMBLER  MAIN                                                                  05/14/09 22:31:03 PAGE    44

?C0074. . . . . . . . . . . . . . . . .    C  ADDR  00B6H     R   SEG=?PR?_SHA1PADMESSAGE?MAIN
?C0075. . . . . . . . . . . . . . . . .    C  ADDR  00ECH     R   SEG=?PR?_SHA1PADMESSAGE?MAIN
?C0076. . . . . . . . . . . . . . . . .    C  ADDR  0106H     R   SEG=?PR?_SHA1PADMESSAGE?MAIN
?C0077. . . . . . . . . . . . . . . . .    C  ADDR  003AH     R   SEG=?PR?_SHA1INPUT?MAIN
?C0078. . . . . . . . . . . . . . . . .    C  ADDR  0088H     R   SEG=?PR?_SHA1INPUT?MAIN
?C0079. . . . . . . . . . . . . . . . .    C  ADDR  0035H     R   SEG=?PR?MAIN?MAIN
?C0080. . . . . . . . . . . . . . . . .    C  ADDR  0050H     R   SEG=?PR?MAIN?MAIN
?C?COPY . . . . . . . . . . . . . . . .    C  ADDR  -------       EXT
?C_INITSEG. . . . . . . . . . . . . . .    C  SEG   000004H       REL=UNIT, ALN=BYTE
?C_STARTUP. . . . . . . . . . . . . . .    C  ADDR  -------       EXT
?CO?MAIN. . . . . . . . . . . . . . . .    C  SEG   00000FH       REL=UNIT, ALN=BYTE
?DT?_SHA1INPUT?MAIN . . . . . . . . . .    D  SEG   000004H       REL=UNIT, ALN=BYTE
?DT?_SHA1PADMESSAGE?MAIN. . . . . . . .    D  SEG   000001H       REL=UNIT, ALN=BYTE
?DT?_SHA1PROCESSMESSAGEBLOCK?MAIN . . .    D  SEG   000001H       REL=UNIT, ALN=BYTE
?DT?_SHA1RESULT?MAIN. . . . . . . . . .    D  SEG   000001H       REL=UNIT, ALN=BYTE
?DT?MAIN. . . . . . . . . . . . . . . .    D  SEG   000002H       REL=UNIT, ALN=BYTE
?ID?_SHA1PROCESSMESSAGEBLOCK?MAIN . . .    I  SEG   000016H       REL=UNIT, ALN=BYTE
?ID?MAIN?MAIN . . . . . . . . . . . . .    I  SEG   000054H       REL=UNIT, ALN=BYTE
?PR?_SHA1INPUT?MAIN . . . . . . . . . .    C  SEG   0000BAH       REL=UNIT, ALN=BYTE
?PR?_SHA1PADMESSAGE?MAIN. . . . . . . .    C  SEG   000136H       REL=UNIT, ALN=BYTE
?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN . . .    C  SEG   000772H       REL=UNIT, ALN=BYTE
?PR?_SHA1RESET?MAIN . . . . . . . . . .    C  SEG   000052H       REL=UNIT, ALN=BYTE
?PR?_SHA1RESULT?MAIN. . . . . . . . . .    C  SEG   00002FH       REL=UNIT, ALN=BYTE
?PR?MAIN?MAIN . . . . . . . . . . . . .    C  SEG   000065H       REL=UNIT, ALN=BYTE
?SC_0 . . . . . . . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?CO?MAIN
?SC_4 . . . . . . . . . . . . . . . . .    C  ADDR  0004H     R   SEG=?CO?MAIN
?XD?_SHA1PROCESSMESSAGEBLOCK?MAIN . . .    X  SEG   0000A0H       REL=UNIT, ALN=BYTE
_?INT_PRINT . . . . . . . . . . . . . .    C  ADDR  -------       EXT
_?IX1000. . . . . . . . . . . . . . . .    C  ADDR  0007H     R   SEG=?CO?MAIN
_MDELAY . . . . . . . . . . . . . . . .    C  ADDR  -------       EXT
_PUTS . . . . . . . . . . . . . . . . .    C  ADDR  -------       EXT
_SERIAL_INIT. . . . . . . . . . . . . .    C  ADDR  -------       EXT
_SHA1INPUT. . . . . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?_SHA1INPUT?MAIN
_SHA1PADMESSAGE . . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?_SHA1PADMESSAGE?MAIN
_SHA1PROCESSMESSAGEBLOCK. . . . . . . .    C  ADDR  0000H     R   SEG=?PR?_SHA1PROCESSMESSAGEBLOCK?MAIN
_SHA1RESET. . . . . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?_SHA1RESET?MAIN
_SHA1RESULT . . . . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?_SHA1RESULT?MAIN
_STORE_CPU_RATE . . . . . . . . . . . .    C  ADDR  -------       EXT
A?045 . . . . . . . . . . . . . . . . .    I  ADDR  000CH     R   SEG=?ID?_SHA1PROCESSMESSAGEBLOCK?MAIN
AC. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.6   A   
ACC . . . . . . . . . . . . . . . . . .    D  ADDR  00E0H     A   
ADCCON. . . . . . . . . . . . . . . . .    D  ADDR  00A1H     A   
ADCDATAH. . . . . . . . . . . . . . . .    D  ADDR  00A2H     A   
ADCDATAL. . . . . . . . . . . . . . . .    D  ADDR  00A3H     A   
ADCSTATIC . . . . . . . . . . . . . . .    D  ADDR  00A4H     A   
AR0 . . . . . . . . . . . . . . . . . .    D  ADDR  0000H     A   
AR1 . . . . . . . . . . . . . . . . . .    D  ADDR  0001H     A   
AR2 . . . . . . . . . . . . . . . . . .    D  ADDR  0002H     A   
AR3 . . . . . . . . . . . . . . . . . .    D  ADDR  0003H     A   
AR4 . . . . . . . . . . . . . . . . . .    D  ADDR  0004H     A   
AR5 . . . . . . . . . . . . . . . . . .    D  ADDR  0005H     A   
AR6 . . . . . . . . . . . . . . . . . .    D  ADDR  0006H     A   
AR7 . . . . . . . . . . . . . . . . . .    D  ADDR  0007H     A   
B . . . . . . . . . . . . . . . . . . .    D  ADDR  00F0H     A   
B?046 . . . . . . . . . . . . . . . . .    I  ADDR  000EH     R   SEG=?ID?_SHA1PROCESSMESSAGEBLOCK?MAIN
C?047 . . . . . . . . . . . . . . . . .    I  ADDR  0010H     R   SEG=?ID?_SHA1PROCESSMESSAGEBLOCK?MAIN
C_T2. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.1   A   
CE. . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.6   A   
CK_CTRL . . . . . . . . . . . . . . . .    D  ADDR  00B6H     A   
CKCON . . . . . . . . . . . . . . . . .    D  ADDR  008EH     A   
CLK1. . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.1   A   
CLK2. . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.5   A   
CONTEXT?040 . . . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?_SHA1PROCESSMESSAGEBLOCK?MAIN
CONTEXT?251 . . . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?_SHA1PADMESSAGE?MAIN
CONTEXT?352 . . . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?_SHA1RESULT?MAIN
CONTEXT?453 . . . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?_SHA1INPUT?MAIN
AX51 MACRO ASSEMBLER  MAIN                                                                  05/14/09 22:31:03 PAGE    45

CP_RL2. . . . . . . . . . . . . . . . .    B  ADDR  00C8H.0   A   
CPRL2 . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.0   A   
CS. . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.3   A   
CT2 . . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.1   A   
CY. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.7   A   
D?048 . . . . . . . . . . . . . . . . .    I  ADDR  0012H     R   SEG=?ID?_SHA1PROCESSMESSAGEBLOCK?MAIN
DATA? . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.0   A   
DEV_OFFSET. . . . . . . . . . . . . . .    D  ADDR  00BEH     A   
DIN0. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.2   A   
DIO0. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.0   A   
DIO1. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.1   A   
DIO2. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.0   A   
DIO3. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.1   A   
DIO4. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.2   A   
DIO5. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.3   A   
DIO6. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.4   A   
DIO7. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.5   A   
DIO8. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.6   A   
DIO9. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.7   A   
DOUT2 . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.4   A   
DPH . . . . . . . . . . . . . . . . . .    D  ADDR  0083H     A   
DPH0. . . . . . . . . . . . . . . . . .    D  ADDR  0083H     A   
DPH1. . . . . . . . . . . . . . . . . .    D  ADDR  0085H     A   
DPL . . . . . . . . . . . . . . . . . .    D  ADDR  0082H     A   
DPL0. . . . . . . . . . . . . . . . . .    D  ADDR  0082H     A   
DPL1. . . . . . . . . . . . . . . . . .    D  ADDR  0084H     A   
DPS . . . . . . . . . . . . . . . . . .    D  ADDR  0086H     A   
DR1 . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.2   A   
DR2 . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.6   A   
DR2_CE. . . . . . . . . . . . . . . . .    B  ADDR  00A0H.6   A   
E?049 . . . . . . . . . . . . . . . . .    I  ADDR  0014H     R   SEG=?ID?_SHA1PROCESSMESSAGEBLOCK?MAIN
EA. . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.7   A   
EICON . . . . . . . . . . . . . . . . .    D  ADDR  00D8H     A   
EIE . . . . . . . . . . . . . . . . . .    D  ADDR  00E8H     A   
EIP . . . . . . . . . . . . . . . . . .    D  ADDR  00F8H     A   
ES. . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.4   A   
ET0 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.1   A   
ET1 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.3   A   
ET2 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.5   A   
EWDI. . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.4   A   
EX0 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.0   A   
EX1 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.2   A   
EX2 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.0   A   
EX3 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.1   A   
EX4 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.2   A   
EX5 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.3   A   
EXEN2 . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.3   A   
EXF2. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.6   A   
EXIF. . . . . . . . . . . . . . . . . .    D  ADDR  0091H     A   
F0. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.5   A   
F1. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.1   A   
I?556 . . . . . . . . . . . . . . . . .    I  ADDR  0000H     R   SEG=?ID?MAIN?MAIN
IE. . . . . . . . . . . . . . . . . . .    D  ADDR  00A8H     A   
IE0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.1   A   
IE1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.3   A   
INT0_N. . . . . . . . . . . . . . . . .    B  ADDR  0080H.3   A   
INT1_N. . . . . . . . . . . . . . . . .    B  ADDR  0080H.4   A   
IP. . . . . . . . . . . . . . . . . . .    D  ADDR  00B8H     A   
IT0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.0   A   
IT1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.2   A   
K?041 . . . . . . . . . . . . . . . . .    I  ADDR  0000H     R   SEG=?ID?_SHA1PROCESSMESSAGEBLOCK?MAIN
LENGTH?455. . . . . . . . . . . . . . .    D  ADDR  0002H     R   SEG=?DT?_SHA1INPUT?MAIN
MAIN. . . . . . . . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?MAIN?MAIN
MESSAGE_ARRAY?454 . . . . . . . . . . .    D  ADDR  0001H     R   SEG=?DT?_SHA1INPUT?MAIN
MPAGE . . . . . . . . . . . . . . . . .    D  ADDR  0092H     A   
OV. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.2   A   
AX51 MACRO ASSEMBLER  MAIN                                                                  05/14/09 22:31:03 PAGE    46

P . . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.0   A   
P0. . . . . . . . . . . . . . . . . . .    D  ADDR  0080H     A   
P0_0. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.0   A   
P0_1. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.1   A   
P0_2. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.2   A   
P0_3. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.3   A   
P0_4. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.4   A   
P0_5. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.5   A   
P0_6. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.6   A   
P0_7. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.7   A   
P0_ALT. . . . . . . . . . . . . . . . .    D  ADDR  0095H     A   
P0_DIR. . . . . . . . . . . . . . . . .    D  ADDR  0094H     A   
P1. . . . . . . . . . . . . . . . . . .    D  ADDR  0090H     A   
P1_0. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.0   A   
P1_1. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.1   A   
P1_2. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.2   A   
P1_ALT. . . . . . . . . . . . . . . . .    D  ADDR  0097H     A   
P1_DIR. . . . . . . . . . . . . . . . .    D  ADDR  0096H     A   
PCON. . . . . . . . . . . . . . . . . .    D  ADDR  0087H     A   
PS. . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.4   A   
PSW . . . . . . . . . . . . . . . . . .    D  ADDR  00D0H     A   
PT0 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.1   A   
PT1 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.3   A   
PT2 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.5   A   
PWDI. . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.4   A   
PWM . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.7   A   
PWMCON. . . . . . . . . . . . . . . . .    D  ADDR  00A9H     A   
PWMDUTY . . . . . . . . . . . . . . . .    D  ADDR  00AAH     A   
PWR_UP. . . . . . . . . . . . . . . . .    B  ADDR  00A0H.7   A   
PX0 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.0   A   
PX1 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.2   A   
PX2 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.0   A   
PX3 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.1   A   
PX4 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.2   A   
PX5 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.3   A   
RADIO . . . . . . . . . . . . . . . . .    D  ADDR  00A0H     A   
RB8 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.2   A   
RCAP2H. . . . . . . . . . . . . . . . .    D  ADDR  00CBH     A   
RCAP2L. . . . . . . . . . . . . . . . .    D  ADDR  00CAH     A   
RCLK. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.5   A   
REGX_CTRL . . . . . . . . . . . . . . .    D  ADDR  00ADH     A   
REGX_LSB. . . . . . . . . . . . . . . .    D  ADDR  00ACH     A   
REGX_MSB. . . . . . . . . . . . . . . .    D  ADDR  00ABH     A   
REN . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.4   A   
RI. . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.0   A   
RS0 . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.3   A   
RS1 . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.4   A   
RSTREAS . . . . . . . . . . . . . . . .    D  ADDR  00B1H     A   
RXD . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.1   A   
SBUF. . . . . . . . . . . . . . . . . .    D  ADDR  0099H     A   
SCON. . . . . . . . . . . . . . . . . .    D  ADDR  0098H     A   
SHA?557 . . . . . . . . . . . . . . . .    I  ADDR  0001H     R   SEG=?ID?MAIN?MAIN
SHA_COUNTER . . . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?MAIN
SM0 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.7   A   
SM1 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.6   A   
SM2 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.5   A   
SP. . . . . . . . . . . . . . . . . . .    D  ADDR  0081H     A   
SPC_FNC . . . . . . . . . . . . . . . .    D  ADDR  008FH     A   
SPI_CTRL. . . . . . . . . . . . . . . .    D  ADDR  00B3H     A   
SPI_DATA. . . . . . . . . . . . . . . .    D  ADDR  00B2H     A   
SPICLK. . . . . . . . . . . . . . . . .    D  ADDR  00B4H     A   
T0. . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.5   A   
T1. . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.6   A   
T1_1V2. . . . . . . . . . . . . . . . .    D  ADDR  00BCH     A   
T2. . . . . . . . . . . . . . . . . . .    B  ADDR  0090H.0   A   
T2_1V2. . . . . . . . . . . . . . . . .    D  ADDR  00BDH     A   
AX51 MACRO ASSEMBLER  MAIN                                                                  05/14/09 22:31:03 PAGE    47

T2CON . . . . . . . . . . . . . . . . .    D  ADDR  00C8H     A   
T?042 . . . . . . . . . . . . . . . . .    I  ADDR  0008H     R   SEG=?ID?_SHA1PROCESSMESSAGEBLOCK?MAIN
TB8 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.3   A   
TCLK. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.4   A   
TCON. . . . . . . . . . . . . . . . . .    D  ADDR  0088H     A   
TEMP?043. . . . . . . . . . . . . . . .    I  ADDR  000AH     R   SEG=?ID?_SHA1PROCESSMESSAGEBLOCK?MAIN
TEST_MODE . . . . . . . . . . . . . . .    D  ADDR  00B7H     A   
TF0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.5   A   
TF1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.7   A   
TF2 . . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.7   A   
TH0 . . . . . . . . . . . . . . . . . .    D  ADDR  008CH     A   
TH1 . . . . . . . . . . . . . . . . . .    D  ADDR  008DH     A   
TH2 . . . . . . . . . . . . . . . . . .    D  ADDR  00CDH     A   
TI. . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.1   A   
TICK_DV . . . . . . . . . . . . . . . .    D  ADDR  00B5H     A   
TL0 . . . . . . . . . . . . . . . . . .    D  ADDR  008AH     A   
TL1 . . . . . . . . . . . . . . . . . .    D  ADDR  008BH     A   
TL2 . . . . . . . . . . . . . . . . . .    D  ADDR  00CCH     A   
TMOD. . . . . . . . . . . . . . . . . .    D  ADDR  0089H     A   
TR0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.4   A   
TR1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.6   A   
TR2 . . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.2   A   
TXD . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.2   A   
W?044 . . . . . . . . . . . . . . . . .    X  ADDR  0000H     R   SEG=?XD?_SHA1PROCESSMESSAGEBLOCK?MAIN
WDTI. . . . . . . . . . . . . . . . . .    B  ADDR  00D8H.3   A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S).
