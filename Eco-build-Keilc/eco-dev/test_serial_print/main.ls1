AX51 MACRO ASSEMBLER  MAIN                                                                  05/03/09 16:37:09 PAGE     1


MACRO ASSEMBLER AX51 V3.06a
OBJECT MODULE PLACED IN .\main.obj
ASSEMBLER INVOKED BY: C:\Keil\C51\BIN\AX51.exe .\main.src EP DEBUG SYMBOLS OJ(.\main.obj) PR(.\main.ls1) 

LOC    OBJ             LINE     SOURCE

                          1     ; ./main.src generated from: .\main.c
                          2     ; COMPILER INVOKED BY:
                          3     ;        C:\Keil\C51\BIN\C51.exe .\main.c BROWSE DEBUG CODE LISTINCLUDE SYMBOLS PREPRINT
                                INCDIR(../../Include) SRC(./main.src)
                          4     
                          5     $nomod51 
                          6     
                          7     NAME    MAIN
                          8     
 00A0.7                   9     PWR_UP  BIT     0A0H.7
 0080                    10     P0      DATA    080H
 0090                    11     P1      DATA    090H
 00D0.6                  12     AC      BIT     0D0H.6
 0080.5                  13     T0      BIT     080H.5
 00B3                    14     SPI_CTRL        DATA    0B3H
 0080.6                  15     T1      BIT     080H.6
 00A8.7                  16     EA      BIT     0A8H.7
 0090.0                  17     T2      BIT     090H.0
 00A0.6                  18     CE      BIT     0A0H.6
 00BE                    19     DEV_OFFSET      DATA    0BEH
 00A0.1                  20     CLK1    BIT     0A0H.1
 0090.2                  21     DIN0    BIT     090H.2
 00A0.5                  22     CLK2    BIT     0A0H.5
 0090.0                  23     DIO0    BIT     090H.0
 0083                    24     DPH0    DATA    083H
 0090.1                  25     DIO1    BIT     090H.1
 00A8                    26     IE      DATA    0A8H
 0085                    27     DPH1    DATA    085H
 0080.0                  28     DIO2    BIT     080H.0
 0080.1                  29     DIO3    BIT     080H.1
 0080.0                  30     P0_0    BIT     080H.0
 0090.0                  31     P1_0    BIT     090H.0
 0080.2                  32     DIO4    BIT     080H.2
 0080.1                  33     P0_1    BIT     080H.1
 0082                    34     DPL0    DATA    082H
 0090.1                  35     P1_1    BIT     090H.1
 0080.3                  36     DIO5    BIT     080H.3
 0080.2                  37     P0_2    BIT     080H.2
 0084                    38     DPL1    DATA    084H
 0090.2                  39     P1_2    BIT     090H.2
 0080.4                  40     DIO6    BIT     080H.4
 0080.3                  41     P0_3    BIT     080H.3
 0080.5                  42     DIO7    BIT     080H.5
 0080.4                  43     P0_4    BIT     080H.4
 00A4                    44     ADCSTATIC       DATA    0A4H
 0080.6                  45     DIO8    BIT     080H.6
 0080.5                  46     P0_5    BIT     080H.5
 00C8.6                  47     EXF2    BIT     0C8H.6
 00A0.3                  48     CS      BIT     0A0H.3
 0080.7                  49     DIO9    BIT     080H.7
 0080.6                  50     P0_6    BIT     080H.6
 0080.7                  51     P0_7    BIT     080H.7
 00A8.4                  52     ES      BIT     0A8H.4
 00B8                    53     IP      DATA    0B8H
 00A0.0                  54     DATA?   BIT     0A0H.0
 0098.0                  55     RI      BIT     098H.0
 00D0.7                  56     CY      BIT     0D0H.7
 0098.1                  57     TI      BIT     098H.1
AX51 MACRO ASSEMBLER  MAIN                                                                  05/03/09 16:37:09 PAGE     2

 00BC                    58     T1_1V2  DATA    0BCH
 008F                    59     SPC_FNC DATA    08FH
 00BD                    60     T2_1V2  DATA    0BDH
 00CB                    61     RCAP2H  DATA    0CBH
 00B8.4                  62     PS      BIT     0B8H.4
 0081                    63     SP      DATA    081H
 00D0.2                  64     OV      BIT     0D0H.2
 00B6                    65     CK_CTRL DATA    0B6H
 00CA                    66     RCAP2L  DATA    0CAH
 00B5                    67     TICK_DV DATA    0B5H
 00B1                    68     RSTREAS DATA    0B1H
 00C8.1                  69     C_T2    BIT     0C8H.1
 00E8.4                  70     EWDI    BIT     0E8H.4
 00A1                    71     ADCCON  DATA    0A1H
 00C8.5                  72     RCLK    BIT     0C8H.5
 00A2                    73     ADCDATAH        DATA    0A2H
 0091                    74     EXIF    DATA    091H
 00C8.4                  75     TCLK    BIT     0C8H.4
 00A0.6                  76     DR2_CE  BIT     0A0H.6
 00A3                    77     ADCDATAL        DATA    0A3H
 0099                    78     SBUF    DATA    099H
 0087                    79     PCON    DATA    087H
 0098                    80     SCON    DATA    098H
 00F8.4                  81     PWDI    BIT     0F8H.4
 0089                    82     TMOD    DATA    089H
 0088                    83     TCON    DATA    088H
 00D8.3                  84     WDTI    BIT     0D8H.3
 00AA                    85     PWMDUTY DATA    0AAH
 0088.1                  86     IE0     BIT     088H.1
 0088.3                  87     IE1     BIT     088H.3
 0094                    88     P0_DIR  DATA    094H
 00F0                    89     B       DATA    0F0H
 0096                    90     P1_DIR  DATA    096H
 0095                    91     P0_ALT  DATA    095H
 0097                    92     P1_ALT  DATA    097H
 00C8.0                  93     CP_RL2  BIT     0C8H.0
 00A0.2                  94     DR1     BIT     0A0H.2
 00E0                    95     ACC     DATA    0E0H
 00A0.6                  96     DR2     BIT     0A0H.6
 00B7                    97     TEST_MODE       DATA    0B7H
 00B4                    98     SPICLK  DATA    0B4H
 00C8.1                  99     CT2     BIT     0C8H.1
 00A8.1                 100     ET0     BIT     0A8H.1
 00A8.3                 101     ET1     BIT     0A8H.3
 0088.5                 102     TF0     BIT     088H.5
 0080.3                 103     INT0_N  BIT     080H.3
 00A8.5                 104     ET2     BIT     0A8H.5
 0088.7                 105     TF1     BIT     088H.7
 0080.4                 106     INT1_N  BIT     080H.4
 00C8.7                 107     TF2     BIT     0C8H.7
 0098.2                 108     RB8     BIT     098H.2
 008C                   109     TH0     DATA    08CH
 00A8.0                 110     EX0     BIT     0A8H.0
 0088.0                 111     IT0     BIT     088H.0
 008D                   112     TH1     DATA    08DH
 00A8.2                 113     EX1     BIT     0A8H.2
 0098.3                 114     TB8     BIT     098H.3
 0088.2                 115     IT1     BIT     088H.2
 00CD                   116     TH2     DATA    0CDH
 00AD                   117     REGX_CTRL       DATA    0ADH
 00E8.0                 118     EX2     BIT     0E8H.0
 00D0.0                 119     P       BIT     0D0H.0
 00E8.1                 120     EX3     BIT     0E8H.1
 0098.7                 121     SM0     BIT     098H.7
 008A                   122     TL0     DATA    08AH
 00E8.2                 123     EX4     BIT     0E8H.2
AX51 MACRO ASSEMBLER  MAIN                                                                  05/03/09 16:37:09 PAGE     3

 0098.6                 124     SM1     BIT     098H.6
 008B                   125     TL1     DATA    08BH
 00E8.3                 126     EX5     BIT     0E8H.3
 0098.5                 127     SM2     BIT     098H.5
 00CC                   128     TL2     DATA    0CCH
 00E8                   129     EIE     DATA    0E8H
 00B8.1                 130     PT0     BIT     0B8H.1
 00D0.3                 131     RS0     BIT     0D0H.3
 00B8.3                 132     PT1     BIT     0B8H.3
 00D0.4                 133     RS1     BIT     0D0H.4
 00B8.5                 134     PT2     BIT     0B8H.5
 0088.4                 135     TR0     BIT     088H.4
 00A9                   136     PWMCON  DATA    0A9H
 0088.6                 137     TR1     BIT     088H.6
 00C8.2                 138     TR2     BIT     0C8H.2
 00B8.0                 139     PX0     BIT     0B8H.0
 00B8.2                 140     PX1     BIT     0B8H.2
 00F8.0                 141     PX2     BIT     0F8H.0
 00F8.1                 142     PX3     BIT     0F8H.1
 00F8.2                 143     PX4     BIT     0F8H.2
 0083                   144     DPH     DATA    083H
 00F8.3                 145     PX5     BIT     0F8H.3
 00F8                   146     EIP     DATA    0F8H
 0082                   147     DPL     DATA    082H
 00C8.3                 148     EXEN2   BIT     0C8H.3
 00C8.0                 149     CPRL2   BIT     0C8H.0
 0098.4                 150     REN     BIT     098H.4
 00C8                   151     T2CON   DATA    0C8H
 0086                   152     DPS     DATA    086H
 00B2                   153     SPI_DATA        DATA    0B2H
 0092                   154     MPAGE   DATA    092H
 0080.1                 155     RXD     BIT     080H.1
 00A0.4                 156     DOUT2   BIT     0A0H.4
 00D8                   157     EICON   DATA    0D8H
 008E                   158     CKCON   DATA    08EH
 0080.2                 159     TXD     BIT     080H.2
 00A0                   160     RADIO   DATA    0A0H
 0080.7                 161     PWM     BIT     080H.7
 00D0.5                 162     F0      BIT     0D0H.5
 00D0.1                 163     F1      BIT     0D0H.1
 00AC                   164     REGX_LSB        DATA    0ACH
 00D0                   165     PSW     DATA    0D0H
 00AB                   166     REGX_MSB        DATA    0ABH
------                  167     ?PR?timer0?MAIN      SEGMENT CODE 
------                  168     ?PR?_log_2?MAIN      SEGMENT CODE 
------                  169     ?DT?_log_2?MAIN      SEGMENT DATA OVERLAYABLE 
------                  170     ?PR?delta_compress?MAIN                  SEGMENT CODE 
------                  171     ?DT?delta_compress?MAIN                  SEGMENT DATA OVERLAYABLE 
------                  172     ?PR?main?MAIN        SEGMENT CODE 
------                  173     ?DT?main?MAIN        SEGMENT DATA OVERLAYABLE 
------                  174     ?CO?MAIN             SEGMENT CODE 
------                  175     ?C_INITSEG           SEGMENT CODE 
------                  176     ?DT?MAIN             SEGMENT DATA 
------                  177     ?ID?MAIN             SEGMENT IDATA 
------                  178     ?ID?delta_compress?MAIN                  SEGMENT IDATA OVERLAYABLE 
                        179             EXTRN   CODE (_mdelay)
                        180             EXTRN   CODE (_rf_configure)
                        181             EXTRN   CODE (_serial_init)
                        182             EXTRN   CODE (_log10)
                        183             EXTRN   CODE (_adc_read)
                        184             EXTRN   CODE (_adc_init)
                        185             EXTRN   CODE (_puts)
                        186             EXTRN   CODE (_?int_print)
                        187             EXTRN   CODE (_rf_send)
                        188             EXTRN   DATA (?_rf_send?BYTE)
                        189             EXTRN   CODE (_store_cpu_rate)
AX51 MACRO ASSEMBLER  MAIN                                                                  05/03/09 16:37:09 PAGE     4

                        190             EXTRN   CODE (rf_init)
                        191             EXTRN   CODE (?C?FCASTI)
                        192             EXTRN   CODE (?C?LSTIDATA)
                        193             EXTRN   CODE (?C?LLDIDATA)
                        194             EXTRN   CODE (?C?CASTF)
                        195             EXTRN   CODE (?C_STARTUP)
                        196             PUBLIC  rf_data
                        197             PUBLIC  dst_addr
                        198             PUBLIC  msg
                        199             PUBLIC  test_counter
                        200             PUBLIC  flag
                        201             PUBLIC  timer_counter
                        202             PUBLIC  main
                        203             PUBLIC  delta_compress
                        204             PUBLIC  _log_2
                        205             PUBLIC  timer0
                        206     
------                  207             RSEG  ?DT?main?MAIN
000000                  208     ?main?BYTE:
000000                  209               i?346:   DS   2
                        210     
------                  211             RSEG  ?DT?_log_2?MAIN
000000                  212     ?_log_2?BYTE:
000000                  213               x?140:   DS   2
                        214     
------                  215             RSEG  ?DT?delta_compress?MAIN
000000                  216     ?delta_compress?BYTE:
000000                  217               i?241:   DS   2
000002                  218             ORG  2
000002                  219               j?242:   DS   2
000004                  220             ORG  4
000004                  221             now?244:   DS   2
000006                  222             ORG  6
000006                  223            prev?245:   DS   2
                        224     
------                  225             RSEG  ?DT?MAIN
000000                  226       timer_counter:   DS   2
000002                  227                flag:   DS   2
000004                  228        test_counter:   DS   2
000006                  229            dst_addr:   DS   3
000009                  230             rf_data:   DS   15
                        231     
------                  232             RSEG  ?ID?MAIN
000000                  233                 msg:   DS   54
                        234     
------                  235             RSEG  ?ID?delta_compress?MAIN
000000                  236           delta?243:   DS   4
                        237     
------                  238             RSEG  ?CO?MAIN
000000                  239     ?SC_0:
000000 74657374         240             DB  't' ,'e' ,'s' ,'t' ,':' ,000H
000004 3A00                     
                        241     
000006                  242     ?SC_6:
000006 0D0A00           243             DB  00DH,00AH,000H
                        244     
                        245     
------                  246             RSEG  ?C_INITSEG
000000 0F               247             DB      00FH
000001 00         F     248             DB      rf_data
000002 00               249             DB      000H
000003 A0               250             DB      0A0H
000004 00               251             DB      000H
000005 00               252             DB      000H
000006 00               253             DB      000H
000007 00               254             DB      000H
AX51 MACRO ASSEMBLER  MAIN                                                                  05/03/09 16:37:09 PAGE     5

000008 00               255             DB      000H
000009 F2               256             DB      0F2H
00000A F2               257             DB      0F2H
00000B F2               258             DB      0F2H
00000C F2               259             DB      0F2H
00000D F2               260             DB      0F2H
00000E 63               261             DB      063H
00000F 6F               262             DB      06FH
000010 EC               263             DB      0ECH
                        264     
000011 03               265             DB      003H
000012 00         F     266             DB      dst_addr
000013 F1               267             DB      0F1H
000014 F1               268             DB      0F1H
000015 F1               269             DB      0F1H
                        270     
                        271     ; #include "Eco/reg24e1.h"
                        272     ; #include "Eco/eco_sys.h"
                        273     ; #include "utils/utils.h"
                        274     ; #include "serial/serial.h"
                        275     ; #include "isr/isr_rf.h"
                        276     ; #include "eeprom/eeprom.h"
                        277     ; //#include "eco_page.h"
                        278     ; #include "adc/adc.h"
                        279     ; #include <math.h>
                        280     ; 
                        281     ; #define LEN 27
                        282     ; struct rf_config rf_data = { {0x00}, /* data2 width */
                        283     ;     {0xA0}, /* data1 width */ 
                        284     ;     {0x00, 0x00, 0x00, 0x00, 0x00}, /* addr2 */
                        285     ;     {0xF2, 0xF2, 0xF2, 0xF2, 0xF2}, /* addr1, host addr */
                        286     ;     {0x63}, /* 24-bit address, 16-bit CRC */
                        287     ;     {0x6f, 0xEC} };
                        288     ; 
                        289     ; //struct rf_config *cfg = &rf_data;
                        290     ; char dst_addr[3] = { 0xF1, 0xF1, 0xF1 };
                        291     ; char idata msg[54];
                        292     ; 
                        293     ; volatile unsigned int test_counter;
                        294     ; volatile unsigned int flag;
                        295     ; volatile unsigned int timer_counter;
                        296     ; 
00000B                  297     CSEG    AT      0000BH
00000B 020000     F     298             LJMP    timer0
                        299     
                        300     ; void timer0() interrupt 1
                        301     
------                  302             RSEG  ?PR?timer0?MAIN
                        303             USING   0
000000                  304     timer0:
000000 C0E0             305             PUSH    ACC
000002 C0D0             306             PUSH    PSW
                        307                             ; SOURCE LINE # 27
                        308     ; {
                        309     ;       if(timer_counter < 5000)
                        310                             ; SOURCE LINE # 29
000004 C3               311             CLR     C
000005 E500       F     312             MOV     A,timer_counter+01H
000007 9488             313             SUBB    A,#088H
000009 E500       F     314             MOV     A,timer_counter
00000B 9413             315             SUBB    A,#013H
00000D 500A             316             JNC     ?C0001
                        317     ;       {
                        318                             ; SOURCE LINE # 30
                        319     ;               timer_counter++;
                        320                             ; SOURCE LINE # 31
AX51 MACRO ASSEMBLER  MAIN                                                                  05/03/09 16:37:09 PAGE     6

00000F 0500       F     321             INC     timer_counter+01H
000011 E500       F     322             MOV     A,timer_counter+01H
000013 7012             323             JNZ     ?C0003
000015 0500       F     324             INC     timer_counter
000017                  325     ?C0026:
                        326     ;       }
                        327                             ; SOURCE LINE # 32
000017 800E             328             SJMP    ?C0003
000019                  329     ?C0001:
                        330     ;       else
                        331     ;       {
                        332                             ; SOURCE LINE # 34
                        333     ;               timer_counter = 0;
                        334                             ; SOURCE LINE # 35
000019 750000     F     335             MOV     timer_counter,#00H
00001C 750000     F     336             MOV     timer_counter+01H,#00H
                        337     ;               flag = 1;
                        338                             ; SOURCE LINE # 36
00001F 750000     F     339             MOV     flag,#00H
000022 750001     F     340             MOV     flag+01H,#01H
                        341     ;               EA = 0;
                        342                             ; SOURCE LINE # 37
000025 C2AF             343             CLR     EA
                        344     ;       }       
                        345                             ; SOURCE LINE # 38
                        346     ;       
                        347     ; }
                        348                             ; SOURCE LINE # 40
000027                  349     ?C0003:
000027 D0D0             350             POP     PSW
000029 D0E0             351             POP     ACC
00002B 32               352             RETI    
                        353     ; END OF timer0
                        354     
                        355     ; int log_2(int x)
                        356     
------                  357             RSEG  ?PR?_log_2?MAIN
000000                  358     _log_2:
                        359             USING   0
                        360                             ; SOURCE LINE # 41
000000 8E00       F     361             MOV     x?140,R6
000002 8F00       F     362             MOV     x?140+01H,R7
                        363     ; {
                        364                             ; SOURCE LINE # 42
                        365     ;     //EA = 0;   
                        366     ;     if( x > 0)
                        367                             ; SOURCE LINE # 44
000004 D3               368             SETB    C
000005 E500       F     369             MOV     A,x?140+01H
000007 9400             370             SUBB    A,#00H
000009 E500       F     371             MOV     A,x?140
00000B 6480             372             XRL     A,#080H
00000D 9480             373             SUBB    A,#080H
00000F 4020             374             JC      ?C0004
                        375     ;     {   
                        376                             ; SOURCE LINE # 45
                        377     ;               if (x < 0) log10(x);
                        378                             ; SOURCE LINE # 46
000011 E500       F     379             MOV     A,x?140
000013 6480             380             XRL     A,#080H
000015 9480             381             SUBB    A,#080H
000017 500B             382             JNC     ?C0006
000019 AC00       F     383             MOV     R4,x?140
00001B AD00       F     384             MOV     R5,x?140+01H
00001D EC               385             MOV     A,R4
00001E 120000     E     386             LCALL   ?C?FCASTI
AX51 MACRO ASSEMBLER  MAIN                                                                  05/03/09 16:37:09 PAGE     7

000021 120000     E     387             LCALL   _log10
000024                  388     ?C0006:
                        389     ;         while(x--)
                        390                             ; SOURCE LINE # 47
000024 E500       F     391             MOV     A,x?140+01H
000026 1500       F     392             DEC     x?140+01H
000028 AE00       F     393             MOV     R6,x?140
00002A 7002             394             JNZ     ?C0027
00002C 1500       F     395             DEC     x?140
00002E                  396     ?C0027:
00002E 4E               397             ORL     A,R6
00002F 70F3             398             JNZ     ?C0006
                        399     ;         ;
                        400     ;               return ;
                        401     ;     }   
                        402                             ; SOURCE LINE # 50
000031                  403     ?C0004:
                        404     ;     else if(x == 0)
                        405                             ; SOURCE LINE # 51
                        406     ;     {   
                        407                             ; SOURCE LINE # 52
                        408     ;         return ;
                        409     ;     }   
                        410                             ; SOURCE LINE # 54
                        411     ;     else
                        412     ;     {   
                        413                             ; SOURCE LINE # 56
                        414     ;         return ;    
                        415     ;     }
                        416                             ; SOURCE LINE # 58
                        417     ; }
                        418                             ; SOURCE LINE # 59
000031                  419     ?C0008:
000031 22               420             RET     
                        421     ; END OF _log_2
                        422     
                        423     ; 
                        424     ; void delta_compress()
                        425     
------                  426             RSEG  ?PR?delta_compress?MAIN
000000                  427     delta_compress:
                        428             USING   0
                        429                             ; SOURCE LINE # 61
                        430     ; {
                        431                             ; SOURCE LINE # 62
                        432     ;     int i,j;
                        433     ;     float idata delta;
                        434     ;     int now,prev;
                        435     ;     test_counter++;
                        436                             ; SOURCE LINE # 66
000000 0500       F     437             INC     test_counter+01H
000002 E500       F     438             MOV     A,test_counter+01H
000004 7002             439             JNZ     ?C0028
000006 0500       F     440             INC     test_counter
000008                  441     ?C0028:
                        442     ;     now = prev = (msg[0]<<8) + msg[1];
                        443                             ; SOURCE LINE # 67
000008 7800       F     444             MOV     R0,#LOW (msg)
00000A E6               445             MOV     A,@R0
00000B FF               446             MOV     R7,A
00000C 33               447             RLC     A
00000D 95E0             448             SUBB    A,ACC
00000F EF               449             MOV     A,R7
000010 FE               450             MOV     R6,A
000011 08               451             INC     R0
000012 E6               452             MOV     A,@R0
AX51 MACRO ASSEMBLER  MAIN                                                                  05/03/09 16:37:09 PAGE     8

000013 FD               453             MOV     R5,A
000014 33               454             RLC     A
000015 95E0             455             SUBB    A,ACC
000017 FC               456             MOV     R4,A
000018 E4               457             CLR     A
000019 2D               458             ADD     A,R5
00001A FF               459             MOV     R7,A
00001B EE               460             MOV     A,R6
00001C 3C               461             ADDC    A,R4
00001D F500       F     462             MOV     prev?245,A
00001F 8F00       F     463             MOV     prev?245+01H,R7
000021 F500       F     464             MOV     now?244,A
000023 8F00       F     465             MOV     now?244+01H,R7
                        466     ; 
                        467     ;     for(i=2,j=2;i<54;i+=2,j++)
                        468                             ; SOURCE LINE # 69
000025 750000     F     469             MOV     i?241,#00H
000028 750002     F     470             MOV     i?241+01H,#02H
00002B 750000     F     471             MOV     j?242,#00H
00002E 750002     F     472             MOV     j?242+01H,#02H
000031                  473     ?C0012:
000031 C3               474             CLR     C
000032 E500       F     475             MOV     A,i?241+01H
000034 9436             476             SUBB    A,#036H
000036 E500       F     477             MOV     A,i?241
000038 6480             478             XRL     A,#080H
00003A 9480             479             SUBB    A,#080H
00003C 505C             480             JNC     ?C0015
                        481     ;     {
                        482                             ; SOURCE LINE # 70
                        483     ;         prev = now;
                        484                             ; SOURCE LINE # 71
00003E 850000     F     485             MOV     prev?245,now?244
000041 850000     F     486             MOV     prev?245+01H,now?244+01H
                        487     ;         now = (msg[i]<<8) + msg[i+1];
                        488                             ; SOURCE LINE # 72
000044 AD00       F     489             MOV     R5,i?241+01H
000046 7400       F     490             MOV     A,#LOW (msg)
000048 2D               491             ADD     A,R5
000049 F8               492             MOV     R0,A
00004A E6               493             MOV     A,@R0
00004B FF               494             MOV     R7,A
00004C EF               495             MOV     A,R7
00004D FE               496             MOV     R6,A
00004E 7400       F     497             MOV     A,#LOW (msg+01H)
000050 2D               498             ADD     A,R5
000051 F8               499             MOV     R0,A
000052 E6               500             MOV     A,@R0
000053 FD               501             MOV     R5,A
000054 33               502             RLC     A
000055 95E0             503             SUBB    A,ACC
000057 FC               504             MOV     R4,A
000058 E4               505             CLR     A
000059 2D               506             ADD     A,R5
00005A F500       F     507             MOV     now?244+01H,A
00005C EE               508             MOV     A,R6
00005D 3C               509             ADDC    A,R4
00005E F500       F     510             MOV     now?244,A
                        511     ;         delta = now - prev;
                        512                             ; SOURCE LINE # 73
000060 C3               513             CLR     C
000061 E500       F     514             MOV     A,now?244+01H
000063 9500       F     515             SUBB    A,prev?245+01H
000065 FD               516             MOV     R5,A
000066 E500       F     517             MOV     A,now?244
000068 9500       F     518             SUBB    A,prev?245
AX51 MACRO ASSEMBLER  MAIN                                                                  05/03/09 16:37:09 PAGE     9

00006A FC               519             MOV     R4,A
00006B 120000     E     520             LCALL   ?C?FCASTI
00006E 7800       F     521             MOV     R0,#LOW (delta?243)
000070 120000     E     522             LCALL   ?C?LSTIDATA
                        523     ;         log_2(delta);
                        524                             ; SOURCE LINE # 74
000073 7800       F     525             MOV     R0,#LOW (delta?243)
000075 120000     E     526             LCALL   ?C?LLDIDATA
000078 120000     E     527             LCALL   ?C?CASTF
00007B 120000     F     528             LCALL   _log_2
                        529     ;         msg[j] = now;
                        530                             ; SOURCE LINE # 75
00007E 7400       F     531             MOV     A,#LOW (msg)
000080 2500       F     532             ADD     A,j?242+01H
000082 F8               533             MOV     R0,A
000083 A600       F     534             MOV     @R0,now?244+01H
                        535     ;     }
                        536                             ; SOURCE LINE # 76
000085 7402             537             MOV     A,#02H
000087 2500       F     538             ADD     A,i?241+01H
000089 F500       F     539             MOV     i?241+01H,A
00008B E4               540             CLR     A
00008C 3500       F     541             ADDC    A,i?241
00008E F500       F     542             MOV     i?241,A
000090 0500       F     543             INC     j?242+01H
000092 E500       F     544             MOV     A,j?242+01H
000094 709B             545             JNZ     ?C0012
000096 0500       F     546             INC     j?242
000098                  547     ?C0029:
000098 8097             548             SJMP    ?C0012
                        549     ; }
                        550                             ; SOURCE LINE # 77
00009A                  551     ?C0015:
00009A 22               552             RET     
                        553     ; END OF delta_compress
                        554     
                        555     ; 
                        556     ; 
                        557     ; int main()
                        558     
------                  559             RSEG  ?PR?main?MAIN
000000                  560     main:
                        561             USING   0
                        562                             ; SOURCE LINE # 80
                        563     ; {
                        564                             ; SOURCE LINE # 81
                        565     ; 
                        566     ;       int i;
                        567     ;       int accx;
                        568     ;       store_cpu_rate(16);
                        569                             ; SOURCE LINE # 85
000000 7F10             570             MOV     R7,#010H
000002 7E00             571             MOV     R6,#00H
000004 120000     E     572             LCALL   _store_cpu_rate
                        573     ;       /* init led */
                        574     ;       P0_DIR &= ~0x28;
                        575                             ; SOURCE LINE # 87
000007 5394D7           576             ANL     P0_DIR,#0D7H
                        577     ;       P0_ALT &= ~0x28;
                        578                             ; SOURCE LINE # 88
00000A 5395D7           579             ANL     P0_ALT,#0D7H
                        580     ; 
                        581     ;       //eco_page_init();
                        582     ; 
                        583     ;       serial_init(19200);
                        584                             ; SOURCE LINE # 92
AX51 MACRO ASSEMBLER  MAIN                                                                  05/03/09 16:37:09 PAGE    10

00000D 7F00             585             MOV     R7,#00H
00000F 7E4B             586             MOV     R6,#04BH
000011 120000     E     587             LCALL   _serial_init
                        588     ;       puts("test:");
                        589                             ; SOURCE LINE # 93
000014 7BFF             590             MOV     R3,#0FFH
000016 7A00       F     591             MOV     R2,#HIGH (?SC_0)
000018 7900       F     592             MOV     R1,#LOW (?SC_0)
00001A 120000     E     593             LCALL   _puts
                        594     ;       int_print(test_counter);
                        595                             ; SOURCE LINE # 94
00001D AE00       F     596             MOV     R6,test_counter
00001F AF00       F     597             MOV     R7,test_counter+01H
000021 120000     E     598             LCALL   _?int_print
                        599     ;       puts("\r\n");
                        600                             ; SOURCE LINE # 95
000024 7BFF             601             MOV     R3,#0FFH
000026 7A00       F     602             MOV     R2,#HIGH (?SC_6)
000028 7900       F     603             MOV     R1,#LOW (?SC_6)
00002A 120000     E     604             LCALL   _puts
                        605     ; 
                        606     ;       for (i = 0; i < 6; i++) {
                        607                             ; SOURCE LINE # 97
00002D E4               608             CLR     A
00002E F500       F     609             MOV     i?346,A
000030 F500       F     610             MOV     i?346+01H,A
000032                  611     ?C0016:
                        612     ;               blink_led();
                        613                             ; SOURCE LINE # 98
000032 638020           614             XRL     P0,#020H
                        615     ;               mdelay(400);
                        616                             ; SOURCE LINE # 99
000035 7F90             617             MOV     R7,#090H
000037 7E01             618             MOV     R6,#01H
000039 120000     E     619             LCALL   _mdelay
                        620     ;       }
                        621                             ; SOURCE LINE # 100
00003C 0500       F     622             INC     i?346+01H
00003E E500       F     623             MOV     A,i?346+01H
000040 7002             624             JNZ     ?C0030
000042 0500       F     625             INC     i?346
000044                  626     ?C0030:
000044 C3               627             CLR     C
000045 9406             628             SUBB    A,#06H
000047 E500       F     629             MOV     A,i?346
000049 6480             630             XRL     A,#080H
00004B 9480             631             SUBB    A,#080H
00004D 40E3             632             JC      ?C0016
00004F                  633     ?C0017:
                        634     ;       /* init adc */
                        635     ;       adc_init(ADC_CLK_D8, ADC_RES_12, EXTREF);
                        636                             ; SOURCE LINE # 102
00004F 7B10             637             MOV     R3,#010H
000051 7D03             638             MOV     R5,#03H
000053 7F20             639             MOV     R7,#020H
000055 120000     E     640             LCALL   _adc_init
                        641     ; 
                        642     ;       /* rf */
                        643     ;       rf_init();
                        644                             ; SOURCE LINE # 105
000058 120000     E     645             LCALL   rf_init
                        646     ;       rf_configure(&rf_data);
                        647                             ; SOURCE LINE # 106
00005B 7B00             648             MOV     R3,#00H
00005D 7A00       F     649             MOV     R2,#HIGH (rf_data)
00005F 7900       F     650             MOV     R1,#LOW (rf_data)
AX51 MACRO ASSEMBLER  MAIN                                                                  05/03/09 16:37:09 PAGE    11

000061 120000     E     651             LCALL   _rf_configure
                        652     ; 
                        653     ;       //volatile value for calculating 
                        654     ;       test_counter = 0;
                        655                             ; SOURCE LINE # 109
000064 E4               656             CLR     A
000065 F500       F     657             MOV     test_counter,A
000067 F500       F     658             MOV     test_counter+01H,A
                        659     ;       timer_counter = 0;
                        660                             ; SOURCE LINE # 110
000069 F500       F     661             MOV     timer_counter,A
00006B F500       F     662             MOV     timer_counter+01H,A
                        663     ;       flag = 0;
                        664                             ; SOURCE LINE # 111
00006D F500       F     665             MOV     flag,A
00006F F500       F     666             MOV     flag+01H,A
                        667     ;       /* init timer */
                        668     ;       // TMOD.1 TMOD.2 [1 0] 8-bit counter with auto-reload
                        669     ;       TMOD = 0x02;
                        670                             ; SOURCE LINE # 114
000071 758902           671             MOV     TMOD,#02H
                        672     ;       TH0 = 0x00;
                        673                             ; SOURCE LINE # 115
000074 F58C             674             MOV     TH0,A
                        675     ;       //enable interrupt
                        676     ;       EA = 1;
                        677                             ; SOURCE LINE # 117
000076 D2AF             678             SETB    EA
                        679     ;       //enable timer interrupt
                        680     ;       ET0 = 1;
                        681                             ; SOURCE LINE # 119
000078 D2A9             682             SETB    ET0
                        683     ;       //set to 1 to enable counting on Timer 0.               
                        684     ;       TR0 = 1;        
                        685                             ; SOURCE LINE # 121
00007A D28C             686             SETB    TR0
00007C                  687     ?C0019:
                        688     ; 
                        689     ;       while(1)
                        690                             ; SOURCE LINE # 123
                        691     ;       {
                        692                             ; SOURCE LINE # 124
                        693     ;               for(i=0;i<LEN*2;i+=2)
                        694                             ; SOURCE LINE # 125
00007C E4               695             CLR     A
00007D F500       F     696             MOV     i?346,A
00007F F500       F     697             MOV     i?346+01H,A
000081                  698     ?C0021:
000081 C3               699             CLR     C
000082 E500       F     700             MOV     A,i?346+01H
000084 9436             701             SUBB    A,#036H
000086 E500       F     702             MOV     A,i?346
000088 6480             703             XRL     A,#080H
00008A 9480             704             SUBB    A,#080H
00008C 5028             705             JNC     ?C0022
                        706     ;               {
                        707                             ; SOURCE LINE # 126
                        708     ;                       accx = adc_read(X_AXIS);
                        709                             ; SOURCE LINE # 127
00008E 7F03             710             MOV     R7,#03H
000090 120000     E     711             LCALL   _adc_read
                        712     ;---- Variable 'accx?347' assigned to Register 'R4/R5' ----
000093 AD07             713             MOV     R5,AR7
000095 AC06             714             MOV     R4,AR6
                        715     ;                       msg[i] = (accx >> 8);
                        716                             ; SOURCE LINE # 128
AX51 MACRO ASSEMBLER  MAIN                                                                  05/03/09 16:37:09 PAGE    12

000097 EC               717             MOV     A,R4
000098 FF               718             MOV     R7,A
000099 AE00       F     719             MOV     R6,i?346+01H
00009B 7400       F     720             MOV     A,#LOW (msg)
00009D 2E               721             ADD     A,R6
00009E F8               722             MOV     R0,A
00009F A607             723             MOV     @R0,AR7
                        724     ;                       msg[i+1] = accx & 0xff;
                        725                             ; SOURCE LINE # 129
0000A1 AF05             726             MOV     R7,AR5
0000A3 7400       F     727             MOV     A,#LOW (msg+01H)
0000A5 2E               728             ADD     A,R6
0000A6 F8               729             MOV     R0,A
0000A7 A607             730             MOV     @R0,AR7
                        731     ;               }
                        732                             ; SOURCE LINE # 130
0000A9 7402             733             MOV     A,#02H
0000AB 2500       F     734             ADD     A,i?346+01H
0000AD F500       F     735             MOV     i?346+01H,A
0000AF E4               736             CLR     A
0000B0 3500       F     737             ADDC    A,i?346
0000B2 F500       F     738             MOV     i?346,A
0000B4 80CB             739             SJMP    ?C0021
0000B6                  740     ?C0022:
                        741     ; 
                        742     ;               delta_compress();
                        743                             ; SOURCE LINE # 132
0000B6 120000     F     744             LCALL   delta_compress
                        745     ;               
                        746     ;               if(flag == 1)
                        747                             ; SOURCE LINE # 134
0000B9 E500       F     748             MOV     A,flag+01H
0000BB 6401             749             XRL     A,#01H
0000BD 4500       F     750             ORL     A,flag
0000BF 7019             751             JNZ     ?C0024
                        752     ;               {
                        753                             ; SOURCE LINE # 135
                        754     ;                       flag = 0;
                        755                             ; SOURCE LINE # 136
0000C1 F500       F     756             MOV     flag,A
0000C3 F500       F     757             MOV     flag+01H,A
                        758     ;                       blink_led();
                        759                             ; SOURCE LINE # 137
0000C5 638020           760             XRL     P0,#020H
                        761     ;                       int_print(test_counter);
                        762                             ; SOURCE LINE # 138
0000C8 AE00       F     763             MOV     R6,test_counter
0000CA AF00       F     764             MOV     R7,test_counter+01H
0000CC 120000     E     765             LCALL   _?int_print
                        766     ;                       puts("\r\n");
                        767                             ; SOURCE LINE # 139
0000CF 7BFF             768             MOV     R3,#0FFH
0000D1 7A00       F     769             MOV     R2,#HIGH (?SC_6)
0000D3 7900       F     770             MOV     R1,#LOW (?SC_6)
0000D5 120000     E     771             LCALL   _puts
                        772     ;                       EA = 1;
                        773                             ; SOURCE LINE # 140
0000D8 D2AF             774             SETB    EA
                        775     ;               }
                        776                             ; SOURCE LINE # 141
0000DA                  777     ?C0024:
                        778     ;               
                        779     ;               rf_send(dst_addr, 3, msg, 20);
                        780                             ; SOURCE LINE # 143
0000DA 750000     E     781             MOV     ?_rf_send?BYTE+04H,#00H
0000DD 750000     F     782             MOV     ?_rf_send?BYTE+05H,#HIGH (msg)
AX51 MACRO ASSEMBLER  MAIN                                                                  05/03/09 16:37:09 PAGE    13

0000E0 750000     F     783             MOV     ?_rf_send?BYTE+06H,#LOW (msg)
0000E3 750014     E     784             MOV     ?_rf_send?BYTE+07H,#014H
0000E6 7B00             785             MOV     R3,#00H
0000E8 7A00       F     786             MOV     R2,#HIGH (dst_addr)
0000EA 7900       F     787             MOV     R1,#LOW (dst_addr)
0000EC 7D03             788             MOV     R5,#03H
0000EE 120000     E     789             LCALL   _rf_send
                        790     ;       }
                        791                             ; SOURCE LINE # 144
0000F1 8089             792             SJMP    ?C0019
                        793     ; END OF main
                        794     
                        795             END
AX51 MACRO ASSEMBLER  MAIN                                                                  05/03/09 16:37:09 PAGE    14

SYMBOL TABLE LISTING
------ ----- -------


N A M E                                  T Y P E  V A L U E     ATTRIBUTES

?_LOG_2?BYTE. . . . . . . . . . . . . .  D  ADDR  0000H     R   SEG=?DT?_LOG_2?MAIN
?_RF_SEND?BYTE. . . . . . . . . . . . .  D  ADDR  -------       EXT
?C0001. . . . . . . . . . . . . . . . .  C  ADDR  0019H     R   SEG=?PR?TIMER0?MAIN
?C0003. . . . . . . . . . . . . . . . .  C  ADDR  0027H     R   SEG=?PR?TIMER0?MAIN
?C0004. . . . . . . . . . . . . . . . .  C  ADDR  0031H     R   SEG=?PR?_LOG_2?MAIN
?C0006. . . . . . . . . . . . . . . . .  C  ADDR  0024H     R   SEG=?PR?_LOG_2?MAIN
?C0008. . . . . . . . . . . . . . . . .  C  ADDR  0031H     R   SEG=?PR?_LOG_2?MAIN
?C0012. . . . . . . . . . . . . . . . .  C  ADDR  0031H     R   SEG=?PR?DELTA_COMPRESS?MAIN
?C0015. . . . . . . . . . . . . . . . .  C  ADDR  009AH     R   SEG=?PR?DELTA_COMPRESS?MAIN
?C0016. . . . . . . . . . . . . . . . .  C  ADDR  0032H     R   SEG=?PR?MAIN?MAIN
?C0017. . . . . . . . . . . . . . . . .  C  ADDR  004FH     R   SEG=?PR?MAIN?MAIN
?C0019. . . . . . . . . . . . . . . . .  C  ADDR  007CH     R   SEG=?PR?MAIN?MAIN
?C0021. . . . . . . . . . . . . . . . .  C  ADDR  0081H     R   SEG=?PR?MAIN?MAIN
?C0022. . . . . . . . . . . . . . . . .  C  ADDR  00B6H     R   SEG=?PR?MAIN?MAIN
?C0024. . . . . . . . . . . . . . . . .  C  ADDR  00DAH     R   SEG=?PR?MAIN?MAIN
?C0026. . . . . . . . . . . . . . . . .  C  ADDR  0017H     R   SEG=?PR?TIMER0?MAIN
?C0027. . . . . . . . . . . . . . . . .  C  ADDR  002EH     R   SEG=?PR?_LOG_2?MAIN
?C0028. . . . . . . . . . . . . . . . .  C  ADDR  0008H     R   SEG=?PR?DELTA_COMPRESS?MAIN
?C0029. . . . . . . . . . . . . . . . .  C  ADDR  0098H     R   SEG=?PR?DELTA_COMPRESS?MAIN
?C0030. . . . . . . . . . . . . . . . .  C  ADDR  0044H     R   SEG=?PR?MAIN?MAIN
?C?CASTF. . . . . . . . . . . . . . . .  C  ADDR  -------       EXT
?C?FCASTI . . . . . . . . . . . . . . .  C  ADDR  -------       EXT
?C?LLDIDATA . . . . . . . . . . . . . .  C  ADDR  -------       EXT
?C?LSTIDATA . . . . . . . . . . . . . .  C  ADDR  -------       EXT
?C_INITSEG. . . . . . . . . . . . . . .  C  SEG   000016H       REL=UNIT, ALN=BYTE
?C_STARTUP. . . . . . . . . . . . . . .  C  ADDR  -------       EXT
?CO?MAIN. . . . . . . . . . . . . . . .  C  SEG   000009H       REL=UNIT, ALN=BYTE
?DELTA_COMPRESS?BYTE. . . . . . . . . .  D  ADDR  0000H     R   SEG=?DT?DELTA_COMPRESS?MAIN
?DT?_LOG_2?MAIN . . . . . . . . . . . .  D  SEG   000002H       REL=UNIT, ALN=BYTE
?DT?DELTA_COMPRESS?MAIN . . . . . . . .  D  SEG   000008H       REL=UNIT, ALN=BYTE
?DT?MAIN. . . . . . . . . . . . . . . .  D  SEG   000018H       REL=UNIT, ALN=BYTE
?DT?MAIN?MAIN . . . . . . . . . . . . .  D  SEG   000002H       REL=UNIT, ALN=BYTE
?ID?DELTA_COMPRESS?MAIN . . . . . . . .  I  SEG   000004H       REL=UNIT, ALN=BYTE
?ID?MAIN. . . . . . . . . . . . . . . .  I  SEG   000036H       REL=UNIT, ALN=BYTE
?MAIN?BYTE. . . . . . . . . . . . . . .  D  ADDR  0000H     R   SEG=?DT?MAIN?MAIN
?PR?_LOG_2?MAIN . . . . . . . . . . . .  C  SEG   000032H       REL=UNIT, ALN=BYTE
?PR?DELTA_COMPRESS?MAIN . . . . . . . .  C  SEG   00009BH       REL=UNIT, ALN=BYTE
?PR?MAIN?MAIN . . . . . . . . . . . . .  C  SEG   0000F3H       REL=UNIT, ALN=BYTE
?PR?TIMER0?MAIN . . . . . . . . . . . .  C  SEG   00002CH       REL=UNIT, ALN=BYTE
?SC_0 . . . . . . . . . . . . . . . . .  C  ADDR  0000H     R   SEG=?CO?MAIN
?SC_6 . . . . . . . . . . . . . . . . .  C  ADDR  0006H     R   SEG=?CO?MAIN
_?INT_PRINT . . . . . . . . . . . . . .  C  ADDR  -------       EXT
_ADC_INIT . . . . . . . . . . . . . . .  C  ADDR  -------       EXT
_ADC_READ . . . . . . . . . . . . . . .  C  ADDR  -------       EXT
_LOG10. . . . . . . . . . . . . . . . .  C  ADDR  -------       EXT
_LOG_2. . . . . . . . . . . . . . . . .  C  ADDR  0000H     R   SEG=?PR?_LOG_2?MAIN
_MDELAY . . . . . . . . . . . . . . . .  C  ADDR  -------       EXT
_PUTS . . . . . . . . . . . . . . . . .  C  ADDR  -------       EXT
_RF_CONFIGURE . . . . . . . . . . . . .  C  ADDR  -------       EXT
_RF_SEND. . . . . . . . . . . . . . . .  C  ADDR  -------       EXT
_SERIAL_INIT. . . . . . . . . . . . . .  C  ADDR  -------       EXT
_STORE_CPU_RATE . . . . . . . . . . . .  C  ADDR  -------       EXT
AC. . . . . . . . . . . . . . . . . . .  B  ADDR  00D0H.6   A   
ACC . . . . . . . . . . . . . . . . . .  D  ADDR  00E0H     A   
ADCCON. . . . . . . . . . . . . . . . .  D  ADDR  00A1H     A   
ADCDATAH. . . . . . . . . . . . . . . .  D  ADDR  00A2H     A   
ADCDATAL. . . . . . . . . . . . . . . .  D  ADDR  00A3H     A   
ADCSTATIC . . . . . . . . . . . . . . .  D  ADDR  00A4H     A   
AR5 . . . . . . . . . . . . . . . . . .  D  ADDR  0005H     A   
AR6 . . . . . . . . . . . . . . . . . .  D  ADDR  0006H     A   
AX51 MACRO ASSEMBLER  MAIN                                                                  05/03/09 16:37:09 PAGE    15

AR7 . . . . . . . . . . . . . . . . . .  D  ADDR  0007H     A   
B . . . . . . . . . . . . . . . . . . .  D  ADDR  00F0H     A   
C_T2. . . . . . . . . . . . . . . . . .  B  ADDR  00C8H.1   A   
CE. . . . . . . . . . . . . . . . . . .  B  ADDR  00A0H.6   A   
CK_CTRL . . . . . . . . . . . . . . . .  D  ADDR  00B6H     A   
CKCON . . . . . . . . . . . . . . . . .  D  ADDR  008EH     A   
CLK1. . . . . . . . . . . . . . . . . .  B  ADDR  00A0H.1   A   
CLK2. . . . . . . . . . . . . . . . . .  B  ADDR  00A0H.5   A   
CP_RL2. . . . . . . . . . . . . . . . .  B  ADDR  00C8H.0   A   
CPRL2 . . . . . . . . . . . . . . . . .  B  ADDR  00C8H.0   A   
CS. . . . . . . . . . . . . . . . . . .  B  ADDR  00A0H.3   A   
CT2 . . . . . . . . . . . . . . . . . .  B  ADDR  00C8H.1   A   
CY. . . . . . . . . . . . . . . . . . .  B  ADDR  00D0H.7   A   
DATA? . . . . . . . . . . . . . . . . .  B  ADDR  00A0H.0   A   
DELTA?243 . . . . . . . . . . . . . . .  I  ADDR  0000H     R   SEG=?ID?DELTA_COMPRESS?MAIN
DELTA_COMPRESS. . . . . . . . . . . . .  C  ADDR  0000H     R   SEG=?PR?DELTA_COMPRESS?MAIN
DEV_OFFSET. . . . . . . . . . . . . . .  D  ADDR  00BEH     A   
DIN0. . . . . . . . . . . . . . . . . .  B  ADDR  0090H.2   A   
DIO0. . . . . . . . . . . . . . . . . .  B  ADDR  0090H.0   A   
DIO1. . . . . . . . . . . . . . . . . .  B  ADDR  0090H.1   A   
DIO2. . . . . . . . . . . . . . . . . .  B  ADDR  0080H.0   A   
DIO3. . . . . . . . . . . . . . . . . .  B  ADDR  0080H.1   A   
DIO4. . . . . . . . . . . . . . . . . .  B  ADDR  0080H.2   A   
DIO5. . . . . . . . . . . . . . . . . .  B  ADDR  0080H.3   A   
DIO6. . . . . . . . . . . . . . . . . .  B  ADDR  0080H.4   A   
DIO7. . . . . . . . . . . . . . . . . .  B  ADDR  0080H.5   A   
DIO8. . . . . . . . . . . . . . . . . .  B  ADDR  0080H.6   A   
DIO9. . . . . . . . . . . . . . . . . .  B  ADDR  0080H.7   A   
DOUT2 . . . . . . . . . . . . . . . . .  B  ADDR  00A0H.4   A   
DPH . . . . . . . . . . . . . . . . . .  D  ADDR  0083H     A   
DPH0. . . . . . . . . . . . . . . . . .  D  ADDR  0083H     A   
DPH1. . . . . . . . . . . . . . . . . .  D  ADDR  0085H     A   
DPL . . . . . . . . . . . . . . . . . .  D  ADDR  0082H     A   
DPL0. . . . . . . . . . . . . . . . . .  D  ADDR  0082H     A   
DPL1. . . . . . . . . . . . . . . . . .  D  ADDR  0084H     A   
DPS . . . . . . . . . . . . . . . . . .  D  ADDR  0086H     A   
DR1 . . . . . . . . . . . . . . . . . .  B  ADDR  00A0H.2   A   
DR2 . . . . . . . . . . . . . . . . . .  B  ADDR  00A0H.6   A   
DR2_CE. . . . . . . . . . . . . . . . .  B  ADDR  00A0H.6   A   
DST_ADDR. . . . . . . . . . . . . . . .  D  ADDR  0006H     R   SEG=?DT?MAIN
EA. . . . . . . . . . . . . . . . . . .  B  ADDR  00A8H.7   A   
EICON . . . . . . . . . . . . . . . . .  D  ADDR  00D8H     A   
EIE . . . . . . . . . . . . . . . . . .  D  ADDR  00E8H     A   
EIP . . . . . . . . . . . . . . . . . .  D  ADDR  00F8H     A   
ES. . . . . . . . . . . . . . . . . . .  B  ADDR  00A8H.4   A   
ET0 . . . . . . . . . . . . . . . . . .  B  ADDR  00A8H.1   A   
ET1 . . . . . . . . . . . . . . . . . .  B  ADDR  00A8H.3   A   
ET2 . . . . . . . . . . . . . . . . . .  B  ADDR  00A8H.5   A   
EWDI. . . . . . . . . . . . . . . . . .  B  ADDR  00E8H.4   A   
EX0 . . . . . . . . . . . . . . . . . .  B  ADDR  00A8H.0   A   
EX1 . . . . . . . . . . . . . . . . . .  B  ADDR  00A8H.2   A   
EX2 . . . . . . . . . . . . . . . . . .  B  ADDR  00E8H.0   A   
EX3 . . . . . . . . . . . . . . . . . .  B  ADDR  00E8H.1   A   
EX4 . . . . . . . . . . . . . . . . . .  B  ADDR  00E8H.2   A   
EX5 . . . . . . . . . . . . . . . . . .  B  ADDR  00E8H.3   A   
EXEN2 . . . . . . . . . . . . . . . . .  B  ADDR  00C8H.3   A   
EXF2. . . . . . . . . . . . . . . . . .  B  ADDR  00C8H.6   A   
EXIF. . . . . . . . . . . . . . . . . .  D  ADDR  0091H     A   
F0. . . . . . . . . . . . . . . . . . .  B  ADDR  00D0H.5   A   
F1. . . . . . . . . . . . . . . . . . .  B  ADDR  00D0H.1   A   
FLAG. . . . . . . . . . . . . . . . . .  D  ADDR  0002H     R   SEG=?DT?MAIN
I?241 . . . . . . . . . . . . . . . . .  D  ADDR  0000H     R   SEG=?DT?DELTA_COMPRESS?MAIN
I?346 . . . . . . . . . . . . . . . . .  D  ADDR  0000H     R   SEG=?DT?MAIN?MAIN
IE. . . . . . . . . . . . . . . . . . .  D  ADDR  00A8H     A   
IE0 . . . . . . . . . . . . . . . . . .  B  ADDR  0088H.1   A   
IE1 . . . . . . . . . . . . . . . . . .  B  ADDR  0088H.3   A   
AX51 MACRO ASSEMBLER  MAIN                                                                  05/03/09 16:37:09 PAGE    16

INT0_N. . . . . . . . . . . . . . . . .  B  ADDR  0080H.3   A   
INT1_N. . . . . . . . . . . . . . . . .  B  ADDR  0080H.4   A   
IP. . . . . . . . . . . . . . . . . . .  D  ADDR  00B8H     A   
IT0 . . . . . . . . . . . . . . . . . .  B  ADDR  0088H.0   A   
IT1 . . . . . . . . . . . . . . . . . .  B  ADDR  0088H.2   A   
J?242 . . . . . . . . . . . . . . . . .  D  ADDR  0002H     R   SEG=?DT?DELTA_COMPRESS?MAIN
MAIN. . . . . . . . . . . . . . . . . .  C  ADDR  0000H     R   SEG=?PR?MAIN?MAIN
MPAGE . . . . . . . . . . . . . . . . .  D  ADDR  0092H     A   
MSG . . . . . . . . . . . . . . . . . .  I  ADDR  0000H     R   SEG=?ID?MAIN
NOW?244 . . . . . . . . . . . . . . . .  D  ADDR  0004H     R   SEG=?DT?DELTA_COMPRESS?MAIN
OV. . . . . . . . . . . . . . . . . . .  B  ADDR  00D0H.2   A   
P . . . . . . . . . . . . . . . . . . .  B  ADDR  00D0H.0   A   
P0. . . . . . . . . . . . . . . . . . .  D  ADDR  0080H     A   
P0_0. . . . . . . . . . . . . . . . . .  B  ADDR  0080H.0   A   
P0_1. . . . . . . . . . . . . . . . . .  B  ADDR  0080H.1   A   
P0_2. . . . . . . . . . . . . . . . . .  B  ADDR  0080H.2   A   
P0_3. . . . . . . . . . . . . . . . . .  B  ADDR  0080H.3   A   
P0_4. . . . . . . . . . . . . . . . . .  B  ADDR  0080H.4   A   
P0_5. . . . . . . . . . . . . . . . . .  B  ADDR  0080H.5   A   
P0_6. . . . . . . . . . . . . . . . . .  B  ADDR  0080H.6   A   
P0_7. . . . . . . . . . . . . . . . . .  B  ADDR  0080H.7   A   
P0_ALT. . . . . . . . . . . . . . . . .  D  ADDR  0095H     A   
P0_DIR. . . . . . . . . . . . . . . . .  D  ADDR  0094H     A   
P1. . . . . . . . . . . . . . . . . . .  D  ADDR  0090H     A   
P1_0. . . . . . . . . . . . . . . . . .  B  ADDR  0090H.0   A   
P1_1. . . . . . . . . . . . . . . . . .  B  ADDR  0090H.1   A   
P1_2. . . . . . . . . . . . . . . . . .  B  ADDR  0090H.2   A   
P1_ALT. . . . . . . . . . . . . . . . .  D  ADDR  0097H     A   
P1_DIR. . . . . . . . . . . . . . . . .  D  ADDR  0096H     A   
PCON. . . . . . . . . . . . . . . . . .  D  ADDR  0087H     A   
PREV?245. . . . . . . . . . . . . . . .  D  ADDR  0006H     R   SEG=?DT?DELTA_COMPRESS?MAIN
PS. . . . . . . . . . . . . . . . . . .  B  ADDR  00B8H.4   A   
PSW . . . . . . . . . . . . . . . . . .  D  ADDR  00D0H     A   
PT0 . . . . . . . . . . . . . . . . . .  B  ADDR  00B8H.1   A   
PT1 . . . . . . . . . . . . . . . . . .  B  ADDR  00B8H.3   A   
PT2 . . . . . . . . . . . . . . . . . .  B  ADDR  00B8H.5   A   
PWDI. . . . . . . . . . . . . . . . . .  B  ADDR  00F8H.4   A   
PWM . . . . . . . . . . . . . . . . . .  B  ADDR  0080H.7   A   
PWMCON. . . . . . . . . . . . . . . . .  D  ADDR  00A9H     A   
PWMDUTY . . . . . . . . . . . . . . . .  D  ADDR  00AAH     A   
PWR_UP. . . . . . . . . . . . . . . . .  B  ADDR  00A0H.7   A   
PX0 . . . . . . . . . . . . . . . . . .  B  ADDR  00B8H.0   A   
PX1 . . . . . . . . . . . . . . . . . .  B  ADDR  00B8H.2   A   
PX2 . . . . . . . . . . . . . . . . . .  B  ADDR  00F8H.0   A   
PX3 . . . . . . . . . . . . . . . . . .  B  ADDR  00F8H.1   A   
PX4 . . . . . . . . . . . . . . . . . .  B  ADDR  00F8H.2   A   
PX5 . . . . . . . . . . . . . . . . . .  B  ADDR  00F8H.3   A   
RADIO . . . . . . . . . . . . . . . . .  D  ADDR  00A0H     A   
RB8 . . . . . . . . . . . . . . . . . .  B  ADDR  0098H.2   A   
RCAP2H. . . . . . . . . . . . . . . . .  D  ADDR  00CBH     A   
RCAP2L. . . . . . . . . . . . . . . . .  D  ADDR  00CAH     A   
RCLK. . . . . . . . . . . . . . . . . .  B  ADDR  00C8H.5   A   
REGX_CTRL . . . . . . . . . . . . . . .  D  ADDR  00ADH     A   
REGX_LSB. . . . . . . . . . . . . . . .  D  ADDR  00ACH     A   
REGX_MSB. . . . . . . . . . . . . . . .  D  ADDR  00ABH     A   
REN . . . . . . . . . . . . . . . . . .  B  ADDR  0098H.4   A   
RF_DATA . . . . . . . . . . . . . . . .  D  ADDR  0009H     R   SEG=?DT?MAIN
RF_INIT . . . . . . . . . . . . . . . .  C  ADDR  -------       EXT
RI. . . . . . . . . . . . . . . . . . .  B  ADDR  0098H.0   A   
RS0 . . . . . . . . . . . . . . . . . .  B  ADDR  00D0H.3   A   
RS1 . . . . . . . . . . . . . . . . . .  B  ADDR  00D0H.4   A   
RSTREAS . . . . . . . . . . . . . . . .  D  ADDR  00B1H     A   
RXD . . . . . . . . . . . . . . . . . .  B  ADDR  0080H.1   A   
SBUF. . . . . . . . . . . . . . . . . .  D  ADDR  0099H     A   
SCON. . . . . . . . . . . . . . . . . .  D  ADDR  0098H     A   
SM0 . . . . . . . . . . . . . . . . . .  B  ADDR  0098H.7   A   
AX51 MACRO ASSEMBLER  MAIN                                                                  05/03/09 16:37:09 PAGE    17

SM1 . . . . . . . . . . . . . . . . . .  B  ADDR  0098H.6   A   
SM2 . . . . . . . . . . . . . . . . . .  B  ADDR  0098H.5   A   
SP. . . . . . . . . . . . . . . . . . .  D  ADDR  0081H     A   
SPC_FNC . . . . . . . . . . . . . . . .  D  ADDR  008FH     A   
SPI_CTRL. . . . . . . . . . . . . . . .  D  ADDR  00B3H     A   
SPI_DATA. . . . . . . . . . . . . . . .  D  ADDR  00B2H     A   
SPICLK. . . . . . . . . . . . . . . . .  D  ADDR  00B4H     A   
T0. . . . . . . . . . . . . . . . . . .  B  ADDR  0080H.5   A   
T1. . . . . . . . . . . . . . . . . . .  B  ADDR  0080H.6   A   
T1_1V2. . . . . . . . . . . . . . . . .  D  ADDR  00BCH     A   
T2. . . . . . . . . . . . . . . . . . .  B  ADDR  0090H.0   A   
T2_1V2. . . . . . . . . . . . . . . . .  D  ADDR  00BDH     A   
T2CON . . . . . . . . . . . . . . . . .  D  ADDR  00C8H     A   
TB8 . . . . . . . . . . . . . . . . . .  B  ADDR  0098H.3   A   
TCLK. . . . . . . . . . . . . . . . . .  B  ADDR  00C8H.4   A   
TCON. . . . . . . . . . . . . . . . . .  D  ADDR  0088H     A   
TEST_COUNTER. . . . . . . . . . . . . .  D  ADDR  0004H     R   SEG=?DT?MAIN
TEST_MODE . . . . . . . . . . . . . . .  D  ADDR  00B7H     A   
TF0 . . . . . . . . . . . . . . . . . .  B  ADDR  0088H.5   A   
TF1 . . . . . . . . . . . . . . . . . .  B  ADDR  0088H.7   A   
TF2 . . . . . . . . . . . . . . . . . .  B  ADDR  00C8H.7   A   
TH0 . . . . . . . . . . . . . . . . . .  D  ADDR  008CH     A   
TH1 . . . . . . . . . . . . . . . . . .  D  ADDR  008DH     A   
TH2 . . . . . . . . . . . . . . . . . .  D  ADDR  00CDH     A   
TI. . . . . . . . . . . . . . . . . . .  B  ADDR  0098H.1   A   
TICK_DV . . . . . . . . . . . . . . . .  D  ADDR  00B5H     A   
TIMER0. . . . . . . . . . . . . . . . .  C  ADDR  0000H     R   SEG=?PR?TIMER0?MAIN
TIMER_COUNTER . . . . . . . . . . . . .  D  ADDR  0000H     R   SEG=?DT?MAIN
TL0 . . . . . . . . . . . . . . . . . .  D  ADDR  008AH     A   
TL1 . . . . . . . . . . . . . . . . . .  D  ADDR  008BH     A   
TL2 . . . . . . . . . . . . . . . . . .  D  ADDR  00CCH     A   
TMOD. . . . . . . . . . . . . . . . . .  D  ADDR  0089H     A   
TR0 . . . . . . . . . . . . . . . . . .  B  ADDR  0088H.4   A   
TR1 . . . . . . . . . . . . . . . . . .  B  ADDR  0088H.6   A   
TR2 . . . . . . . . . . . . . . . . . .  B  ADDR  00C8H.2   A   
TXD . . . . . . . . . . . . . . . . . .  B  ADDR  0080H.2   A   
WDTI. . . . . . . . . . . . . . . . . .  B  ADDR  00D8H.3   A   
X?140 . . . . . . . . . . . . . . . . .  D  ADDR  0000H     R   SEG=?DT?_LOG_2?MAIN


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S).
