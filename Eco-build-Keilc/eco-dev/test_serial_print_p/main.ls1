AX51 MACRO ASSEMBLER  MAIN                                                                  05/01/09 00:43:28 PAGE     1


MACRO ASSEMBLER AX51 V3.06a
OBJECT MODULE PLACED IN .\main.obj
ASSEMBLER INVOKED BY: C:\Keil\C51\BIN\AX51.exe .\main.src EP DEBUG SYMBOLS OJ(.\main.obj) PR(.\main.ls1) 

LOC    OBJ             LINE     SOURCE

                          1     ; ./main.src generated from: .\main.c
                          2     ; COMPILER INVOKED BY:
                          3     ;        C:\Keil\C51\BIN\C51.exe .\main.c BROWSE DEBUG CODE LISTINCLUDE SYMBOLS PREPRINT
                                INCDIR(../../Include) SRC(./main.src)
                          4     
                          5     $nomod51 
                          6     
                          7     NAME    MAIN
                          8     
 00A0.7                   9     PWR_UP  BIT     0A0H.7
 0080                    10     P0      DATA    080H
 0090                    11     P1      DATA    090H
 00D0.6                  12     AC      BIT     0D0H.6
 0080.5                  13     T0      BIT     080H.5
 00B3                    14     SPI_CTRL        DATA    0B3H
 0080.6                  15     T1      BIT     080H.6
 00A8.7                  16     EA      BIT     0A8H.7
 0090.0                  17     T2      BIT     090H.0
 00A0.6                  18     CE      BIT     0A0H.6
 00BE                    19     DEV_OFFSET      DATA    0BEH
 00A0.1                  20     CLK1    BIT     0A0H.1
 0090.2                  21     DIN0    BIT     090H.2
 00A0.5                  22     CLK2    BIT     0A0H.5
 0090.0                  23     DIO0    BIT     090H.0
 0083                    24     DPH0    DATA    083H
 0090.1                  25     DIO1    BIT     090H.1
 00A8                    26     IE      DATA    0A8H
 0085                    27     DPH1    DATA    085H
 0080.0                  28     DIO2    BIT     080H.0
 0080.1                  29     DIO3    BIT     080H.1
 0080.0                  30     P0_0    BIT     080H.0
 0090.0                  31     P1_0    BIT     090H.0
 0080.2                  32     DIO4    BIT     080H.2
 0080.1                  33     P0_1    BIT     080H.1
 0082                    34     DPL0    DATA    082H
 0090.1                  35     P1_1    BIT     090H.1
 0080.3                  36     DIO5    BIT     080H.3
 0080.2                  37     P0_2    BIT     080H.2
 0084                    38     DPL1    DATA    084H
 0090.2                  39     P1_2    BIT     090H.2
 0080.4                  40     DIO6    BIT     080H.4
 0080.3                  41     P0_3    BIT     080H.3
 0080.5                  42     DIO7    BIT     080H.5
 0080.4                  43     P0_4    BIT     080H.4
 00A4                    44     ADCSTATIC       DATA    0A4H
 0080.6                  45     DIO8    BIT     080H.6
 0080.5                  46     P0_5    BIT     080H.5
 00C8.6                  47     EXF2    BIT     0C8H.6
 00A0.3                  48     CS      BIT     0A0H.3
 0080.7                  49     DIO9    BIT     080H.7
 0080.6                  50     P0_6    BIT     080H.6
 0080.7                  51     P0_7    BIT     080H.7
 00A8.4                  52     ES      BIT     0A8H.4
 00B8                    53     IP      DATA    0B8H
 00A0.0                  54     DATA?   BIT     0A0H.0
 0098.0                  55     RI      BIT     098H.0
 00D0.7                  56     CY      BIT     0D0H.7
 0098.1                  57     TI      BIT     098H.1
AX51 MACRO ASSEMBLER  MAIN                                                                  05/01/09 00:43:28 PAGE     2

 00BC                    58     T1_1V2  DATA    0BCH
 008F                    59     SPC_FNC DATA    08FH
 00BD                    60     T2_1V2  DATA    0BDH
 00CB                    61     RCAP2H  DATA    0CBH
 00B8.4                  62     PS      BIT     0B8H.4
 0081                    63     SP      DATA    081H
 00D0.2                  64     OV      BIT     0D0H.2
 00B6                    65     CK_CTRL DATA    0B6H
 00CA                    66     RCAP2L  DATA    0CAH
 00B5                    67     TICK_DV DATA    0B5H
 00B1                    68     RSTREAS DATA    0B1H
 00C8.1                  69     C_T2    BIT     0C8H.1
 00E8.4                  70     EWDI    BIT     0E8H.4
 00A1                    71     ADCCON  DATA    0A1H
 00C8.5                  72     RCLK    BIT     0C8H.5
 00A2                    73     ADCDATAH        DATA    0A2H
 0091                    74     EXIF    DATA    091H
 00C8.4                  75     TCLK    BIT     0C8H.4
 00A0.6                  76     DR2_CE  BIT     0A0H.6
 00A3                    77     ADCDATAL        DATA    0A3H
 0099                    78     SBUF    DATA    099H
 0087                    79     PCON    DATA    087H
 0098                    80     SCON    DATA    098H
 00F8.4                  81     PWDI    BIT     0F8H.4
 0089                    82     TMOD    DATA    089H
 0088                    83     TCON    DATA    088H
 00D8.3                  84     WDTI    BIT     0D8H.3
 00AA                    85     PWMDUTY DATA    0AAH
 0088.1                  86     IE0     BIT     088H.1
 0088.3                  87     IE1     BIT     088H.3
 0094                    88     P0_DIR  DATA    094H
 00F0                    89     B       DATA    0F0H
 0096                    90     P1_DIR  DATA    096H
 0095                    91     P0_ALT  DATA    095H
 0097                    92     P1_ALT  DATA    097H
 00C8.0                  93     CP_RL2  BIT     0C8H.0
 00A0.2                  94     DR1     BIT     0A0H.2
 00E0                    95     ACC     DATA    0E0H
 00A0.6                  96     DR2     BIT     0A0H.6
 00B7                    97     TEST_MODE       DATA    0B7H
 00B4                    98     SPICLK  DATA    0B4H
 00C8.1                  99     CT2     BIT     0C8H.1
 00A8.1                 100     ET0     BIT     0A8H.1
 00A8.3                 101     ET1     BIT     0A8H.3
 0088.5                 102     TF0     BIT     088H.5
 0080.3                 103     INT0_N  BIT     080H.3
 00A8.5                 104     ET2     BIT     0A8H.5
 0088.7                 105     TF1     BIT     088H.7
 0080.4                 106     INT1_N  BIT     080H.4
 00C8.7                 107     TF2     BIT     0C8H.7
 0098.2                 108     RB8     BIT     098H.2
 008C                   109     TH0     DATA    08CH
 00A8.0                 110     EX0     BIT     0A8H.0
 0088.0                 111     IT0     BIT     088H.0
 008D                   112     TH1     DATA    08DH
 00A8.2                 113     EX1     BIT     0A8H.2
 0098.3                 114     TB8     BIT     098H.3
 0088.2                 115     IT1     BIT     088H.2
 00CD                   116     TH2     DATA    0CDH
 00AD                   117     REGX_CTRL       DATA    0ADH
 00E8.0                 118     EX2     BIT     0E8H.0
 00D0.0                 119     P       BIT     0D0H.0
 00E8.1                 120     EX3     BIT     0E8H.1
 0098.7                 121     SM0     BIT     098H.7
 008A                   122     TL0     DATA    08AH
 00E8.2                 123     EX4     BIT     0E8H.2
AX51 MACRO ASSEMBLER  MAIN                                                                  05/01/09 00:43:28 PAGE     3

 0098.6                 124     SM1     BIT     098H.6
 008B                   125     TL1     DATA    08BH
 00E8.3                 126     EX5     BIT     0E8H.3
 0098.5                 127     SM2     BIT     098H.5
 00CC                   128     TL2     DATA    0CCH
 00E8                   129     EIE     DATA    0E8H
 00B8.1                 130     PT0     BIT     0B8H.1
 00D0.3                 131     RS0     BIT     0D0H.3
 00B8.3                 132     PT1     BIT     0B8H.3
 00D0.4                 133     RS1     BIT     0D0H.4
 00B8.5                 134     PT2     BIT     0B8H.5
 0088.4                 135     TR0     BIT     088H.4
 00A9                   136     PWMCON  DATA    0A9H
 0088.6                 137     TR1     BIT     088H.6
 00C8.2                 138     TR2     BIT     0C8H.2
 00B8.0                 139     PX0     BIT     0B8H.0
 00B8.2                 140     PX1     BIT     0B8H.2
 00F8.0                 141     PX2     BIT     0F8H.0
 00F8.1                 142     PX3     BIT     0F8H.1
 00F8.2                 143     PX4     BIT     0F8H.2
 0083                   144     DPH     DATA    083H
 00F8.3                 145     PX5     BIT     0F8H.3
 00F8                   146     EIP     DATA    0F8H
 0082                   147     DPL     DATA    082H
 00C8.3                 148     EXEN2   BIT     0C8H.3
 00C8.0                 149     CPRL2   BIT     0C8H.0
 0098.4                 150     REN     BIT     098H.4
 00C8                   151     T2CON   DATA    0C8H
 0086                   152     DPS     DATA    086H
 00B2                   153     SPI_DATA        DATA    0B2H
 0092                   154     MPAGE   DATA    092H
 0080.1                 155     RXD     BIT     080H.1
 00A0.4                 156     DOUT2   BIT     0A0H.4
 00D8                   157     EICON   DATA    0D8H
 008E                   158     CKCON   DATA    08EH
 0080.2                 159     TXD     BIT     080H.2
 00A0                   160     RADIO   DATA    0A0H
 0080.7                 161     PWM     BIT     080H.7
 00D0.5                 162     F0      BIT     0D0H.5
 00D0.1                 163     F1      BIT     0D0H.1
 00AC                   164     REGX_LSB        DATA    0ACH
 00D0                   165     PSW     DATA    0D0H
 00AB                   166     REGX_MSB        DATA    0ABH
------                  167     ?PR?timer0?MAIN      SEGMENT CODE 
------                  168     ?PR?_log_2?MAIN      SEGMENT CODE 
------                  169     ?DT?_log_2?MAIN      SEGMENT DATA OVERLAYABLE 
------                  170     ?PR?delta_compress?MAIN                  SEGMENT CODE 
------                  171     ?DT?delta_compress?MAIN                  SEGMENT DATA OVERLAYABLE 
------                  172     ?PR?main?MAIN        SEGMENT CODE 
------                  173     ?DT?main?MAIN        SEGMENT DATA OVERLAYABLE 
------                  174     ?CO?MAIN             SEGMENT CODE 
------                  175     ?C_INITSEG           SEGMENT CODE 
------                  176     ?DT?MAIN             SEGMENT DATA 
------                  177     ?ID?MAIN             SEGMENT IDATA 
------                  178     ?ID?delta_compress?MAIN                  SEGMENT IDATA OVERLAYABLE 
                        179             EXTRN   CODE (_mdelay)
                        180             EXTRN   CODE (_rf_configure)
                        181             EXTRN   CODE (_serial_init)
                        182             EXTRN   CODE (_log10)
                        183             EXTRN   CODE (_adc_read)
                        184             EXTRN   CODE (_adc_init)
                        185             EXTRN   CODE (_puts)
                        186             EXTRN   CODE (eco_page_init)
                        187             EXTRN   CODE (_?int_print)
                        188             EXTRN   CODE (_rf_send)
                        189             EXTRN   DATA (?_rf_send?BYTE)
AX51 MACRO ASSEMBLER  MAIN                                                                  05/01/09 00:43:28 PAGE     4

                        190             EXTRN   CODE (_store_cpu_rate)
                        191             EXTRN   CODE (rf_init)
                        192             EXTRN   CODE (?C?SLCMP)
                        193             EXTRN   CODE (?C?FCASTI)
                        194             EXTRN   CODE (?C?FPDIV)
                        195             EXTRN   CODE (?C?FPADD)
                        196             EXTRN   CODE (?C?CASTF)
                        197             EXTRN   CODE (?C?FPNEG)
                        198             EXTRN   CODE (?C?LSTIDATA)
                        199             EXTRN   CODE (?C_STARTUP)
                        200             PUBLIC  rf_data
                        201             PUBLIC  dst_addr
                        202             PUBLIC  msg
                        203             PUBLIC  test_counter
                        204             PUBLIC  flag
                        205             PUBLIC  timer_counter
                        206             PUBLIC  main
                        207             PUBLIC  delta_compress
                        208             PUBLIC  _log_2
                        209             PUBLIC  timer0
                        210     
------                  211             RSEG  ?DT?main?MAIN
000000                  212     ?main?BYTE:
000000                  213               i?346:   DS   2
000002                  214             ORG  2
000002                  215            accx?347:   DS   2
                        216     
------                  217             RSEG  ?DT?_log_2?MAIN
000000                  218     ?_log_2?BYTE:
000000                  219               x?140:   DS   2
                        220     
------                  221             RSEG  ?DT?delta_compress?MAIN
000000                  222     ?delta_compress?BYTE:
000000                  223               i?241:   DS   2
000002                  224             ORG  2
000002                  225               j?242:   DS   2
000004                  226             ORG  4
000004                  227             now?244:   DS   2
000006                  228             ORG  6
000006                  229            prev?245:   DS   2
                        230     
------                  231             RSEG  ?DT?MAIN
000000                  232       timer_counter:   DS   2
000002                  233                flag:   DS   2
000004                  234        test_counter:   DS   2
000006                  235            dst_addr:   DS   3
000009                  236             rf_data:   DS   15
                        237     
------                  238             RSEG  ?ID?MAIN
000000                  239                 msg:   DS   54
                        240     
------                  241             RSEG  ?ID?delta_compress?MAIN
000000                  242           delta?243:   DS   4
                        243     
------                  244             RSEG  ?CO?MAIN
000000                  245     ?SC_0:
000000 733A00           246             DB  's' ,':' ,000H
                        247     
000003                  248     ?SC_3:
000003 0D0A00           249             DB  00DH,00AH,000H
                        250     
                        251     
------                  252             RSEG  ?C_INITSEG
000000 0F               253             DB      00FH
000001 00         F     254             DB      rf_data
000002 00               255             DB      000H
AX51 MACRO ASSEMBLER  MAIN                                                                  05/01/09 00:43:28 PAGE     5

000003 A0               256             DB      0A0H
000004 00               257             DB      000H
000005 00               258             DB      000H
000006 00               259             DB      000H
000007 00               260             DB      000H
000008 00               261             DB      000H
000009 F2               262             DB      0F2H
00000A F2               263             DB      0F2H
00000B F2               264             DB      0F2H
00000C F2               265             DB      0F2H
00000D F2               266             DB      0F2H
00000E 63               267             DB      063H
00000F 6F               268             DB      06FH
000010 EC               269             DB      0ECH
                        270     
000011 03               271             DB      003H
000012 00         F     272             DB      dst_addr
000013 F1               273             DB      0F1H
000014 F1               274             DB      0F1H
000015 F1               275             DB      0F1H
                        276     
                        277     ; #include "Eco/reg24e1.h"
                        278     ; #include "Eco/eco_sys.h"
                        279     ; #include "utils/utils.h"
                        280     ; #include "serial/serial.h"
                        281     ; #include "isr/isr_rf.h"
                        282     ; #include "eeprom/eeprom.h"
                        283     ; #include "eco_page.h"
                        284     ; #include "adc/adc.h"
                        285     ; #include <math.h>
                        286     ; 
                        287     ; #define LEN 27
                        288     ; struct rf_config rf_data = { {0x00}, /* data2 width */
                        289     ;     {0xA0}, /* data1 width */ 
                        290     ;     {0x00, 0x00, 0x00, 0x00, 0x00}, /* addr2 */
                        291     ;     {0xF2, 0xF2, 0xF2, 0xF2, 0xF2}, /* addr1, host addr */
                        292     ;     {0x63}, /* 24-bit address, 16-bit CRC */
                        293     ;     {0x6f, 0xEC} };
                        294     ; 
                        295     ; //struct rf_config *cfg = &rf_data;
                        296     ; char dst_addr[3] = { 0xF1, 0xF1, 0xF1 };
                        297     ; char idata msg[54];
                        298     ; 
                        299     ; volatile unsigned int test_counter;
                        300     ; volatile unsigned int flag;
                        301     ; volatile unsigned int timer_counter;
                        302     ; 
00000B                  303     CSEG    AT      0000BH
00000B 020000     F     304             LJMP    timer0
                        305     
                        306     ; void timer0() interrupt 1
                        307     
------                  308             RSEG  ?PR?timer0?MAIN
                        309             USING   0
000000                  310     timer0:
000000 C0E0             311             PUSH    ACC
000002 C0F0             312             PUSH    B
000004 C083             313             PUSH    DPH
000006 C082             314             PUSH    DPL
000008 C0D0             315             PUSH    PSW
00000A 75D000           316             MOV     PSW,#00H
00000D C000             317             PUSH    AR0
00000F C001             318             PUSH    AR1
000011 C002             319             PUSH    AR2
000013 C003             320             PUSH    AR3
000015 C004             321             PUSH    AR4
AX51 MACRO ASSEMBLER  MAIN                                                                  05/01/09 00:43:28 PAGE     6

000017 C005             322             PUSH    AR5
000019 C006             323             PUSH    AR6
00001B C007             324             PUSH    AR7
                        325             USING   0
                        326                             ; SOURCE LINE # 27
                        327     ; {
                        328     ;       if(timer_counter < 50000)
                        329                             ; SOURCE LINE # 29
00001D AE00       F     330             MOV     R6,timer_counter
00001F AF00       F     331             MOV     R7,timer_counter+01H
000021 E4               332             CLR     A
000022 FC               333             MOV     R4,A
000023 FD               334             MOV     R5,A
000024 7B50             335             MOV     R3,#050H
000026 7AC3             336             MOV     R2,#0C3H
000028 F9               337             MOV     R1,A
000029 F8               338             MOV     R0,A
00002A D3               339             SETB    C
00002B 120000     E     340             LCALL   ?C?SLCMP
00002E 400A             341             JC      ?C0001
                        342     ;       {
                        343                             ; SOURCE LINE # 30
                        344     ;               timer_counter++;
                        345                             ; SOURCE LINE # 31
000030 0500       F     346             INC     timer_counter+01H
000032 E500       F     347             MOV     A,timer_counter+01H
000034 7012             348             JNZ     ?C0003
000036 0500       F     349             INC     timer_counter
000038                  350     ?C0023:
                        351     ;       }
                        352                             ; SOURCE LINE # 32
000038 800E             353             SJMP    ?C0003
00003A                  354     ?C0001:
                        355     ;       else
                        356     ;       {
                        357                             ; SOURCE LINE # 34
                        358     ;               timer_counter = 0;
                        359                             ; SOURCE LINE # 35
00003A 750000     F     360             MOV     timer_counter,#00H
00003D 750000     F     361             MOV     timer_counter+01H,#00H
                        362     ;               flag = 1;
                        363                             ; SOURCE LINE # 36
000040 750000     F     364             MOV     flag,#00H
000043 750001     F     365             MOV     flag+01H,#01H
                        366     ;               EA = 0;
                        367                             ; SOURCE LINE # 37
000046 C2AF             368             CLR     EA
                        369     ;       }       
                        370                             ; SOURCE LINE # 38
                        371     ;       
                        372     ; }
                        373                             ; SOURCE LINE # 40
000048                  374     ?C0003:
000048 D007             375             POP     AR7
00004A D006             376             POP     AR6
00004C D005             377             POP     AR5
00004E D004             378             POP     AR4
000050 D003             379             POP     AR3
000052 D002             380             POP     AR2
000054 D001             381             POP     AR1
000056 D000             382             POP     AR0
000058 D0D0             383             POP     PSW
00005A D082             384             POP     DPL
00005C D083             385             POP     DPH
00005E D0F0             386             POP     B
000060 D0E0             387             POP     ACC
AX51 MACRO ASSEMBLER  MAIN                                                                  05/01/09 00:43:28 PAGE     7

000062 32               388             RETI    
                        389     ; END OF timer0
                        390     
                        391     ; 
                        392     ; int log_2(int x)
                        393     
------                  394             RSEG  ?PR?_log_2?MAIN
000000                  395     _log_2:
                        396             USING   0
                        397                             ; SOURCE LINE # 42
000000 8E00       F     398             MOV     x?140,R6
000002 8F00       F     399             MOV     x?140+01H,R7
                        400     ; {
                        401                             ; SOURCE LINE # 43
                        402     ;       
                        403     ;       if( x > 0)
                        404                             ; SOURCE LINE # 45
000004 D3               405             SETB    C
000005 E500       F     406             MOV     A,x?140+01H
000007 9400             407             SUBB    A,#00H
000009 E500       F     408             MOV     A,x?140
00000B 6480             409             XRL     A,#080H
00000D 9480             410             SUBB    A,#080H
00000F 403A             411             JC      ?C0004
                        412     ;       {
                        413                             ; SOURCE LINE # 46
                        414     ;               return ((float)log10(x))/(float)(log10(2)) + 1;
                        415                             ; SOURCE LINE # 47
000011 AC00       F     416             MOV     R4,x?140
000013 AD00       F     417             MOV     R5,x?140+01H
000015 EC               418             MOV     A,R4
000016 120000     E     419             LCALL   ?C?FCASTI
000019 120000     E     420             LCALL   _log10
00001C C004             421             PUSH    AR4
00001E C005             422             PUSH    AR5
000020 C006             423             PUSH    AR6
000022 C007             424             PUSH    AR7
000024 7F00             425             MOV     R7,#00H
000026 7E00             426             MOV     R6,#00H
000028 7D00             427             MOV     R5,#00H
00002A 7C40             428             MOV     R4,#040H
00002C 120000     E     429             LCALL   _log10
00002F A804             430             MOV     R0,AR4
000031 A905             431             MOV     R1,AR5
000033 AA06             432             MOV     R2,AR6
000035 AB07             433             MOV     R3,AR7
000037 D007             434             POP     AR7
000039 D006             435             POP     AR6
00003B D005             436             POP     AR5
00003D D004             437             POP     AR4
00003F 120000     E     438             LCALL   ?C?FPDIV
000042 E4               439             CLR     A
000043 FB               440             MOV     R3,A
000044 FA               441             MOV     R2,A
000045 7980             442             MOV     R1,#080H
000047 783F             443             MOV     R0,#03FH
000049 8047             444             SJMP    ?C0027
                        445     ;       }
                        446                             ; SOURCE LINE # 48
00004B                  447     ?C0004:
                        448     ;       else if(x == 0)
                        449                             ; SOURCE LINE # 49
00004B E500       F     450             MOV     A,x?140+01H
00004D 4500       F     451             ORL     A,x?140
00004F 7003             452             JNZ     ?C0007
                        453     ;       {
AX51 MACRO ASSEMBLER  MAIN                                                                  05/01/09 00:43:28 PAGE     8

                        454                             ; SOURCE LINE # 50
                        455     ;               return 0;
                        456                             ; SOURCE LINE # 51
000051 FE               457             MOV     R6,A
000052 FF               458             MOV     R7,A
000053 22               459             RET     
                        460     ;       }
                        461                             ; SOURCE LINE # 52
000054                  462     ?C0007:
                        463     ;       else
                        464     ;       {
                        465                             ; SOURCE LINE # 54
                        466     ;               return -((float)log10(-x))/(float)(log10(2)) + 2;
                        467                             ; SOURCE LINE # 55
000054 C3               468             CLR     C
000055 E4               469             CLR     A
000056 9500       F     470             SUBB    A,x?140+01H
000058 FD               471             MOV     R5,A
000059 E4               472             CLR     A
00005A 9500       F     473             SUBB    A,x?140
00005C FC               474             MOV     R4,A
00005D 120000     E     475             LCALL   ?C?FCASTI
000060 120000     E     476             LCALL   _log10
000063 120000     E     477             LCALL   ?C?FPNEG
000066 C004             478             PUSH    AR4
000068 C005             479             PUSH    AR5
00006A C006             480             PUSH    AR6
00006C C007             481             PUSH    AR7
00006E 7F00             482             MOV     R7,#00H
000070 7E00             483             MOV     R6,#00H
000072 7D00             484             MOV     R5,#00H
000074 7C40             485             MOV     R4,#040H
000076 120000     E     486             LCALL   _log10
000079 A804             487             MOV     R0,AR4
00007B A905             488             MOV     R1,AR5
00007D AA06             489             MOV     R2,AR6
00007F AB07             490             MOV     R3,AR7
000081 D007             491             POP     AR7
000083 D006             492             POP     AR6
000085 D005             493             POP     AR5
000087 D004             494             POP     AR4
000089 120000     E     495             LCALL   ?C?FPDIV
00008C E4               496             CLR     A
00008D FB               497             MOV     R3,A
00008E FA               498             MOV     R2,A
00008F F9               499             MOV     R1,A
000090 7840             500             MOV     R0,#040H
000092                  501     ?C0027:
000092 120000     E     502             LCALL   ?C?FPADD
000095 120000     E     503             LCALL   ?C?CASTF
                        504     ;       }
                        505                             ; SOURCE LINE # 56
                        506     ; }
                        507                             ; SOURCE LINE # 57
000098                  508     ?C0005:
000098 22               509             RET     
                        510     ; END OF _log_2
                        511     
                        512     ; 
                        513     ; 
                        514     ; void delta_compress()
                        515     
------                  516             RSEG  ?PR?delta_compress?MAIN
000000                  517     delta_compress:
                        518             USING   0
                        519                             ; SOURCE LINE # 60
AX51 MACRO ASSEMBLER  MAIN                                                                  05/01/09 00:43:28 PAGE     9

                        520     ; {
                        521                             ; SOURCE LINE # 61
                        522     ;       int i,j;
                        523     ;       float idata delta;
                        524     ;       int now,prev;
                        525     ;       test_counter++;
                        526                             ; SOURCE LINE # 65
000000 0500       F     527             INC     test_counter+01H
000002 E500       F     528             MOV     A,test_counter+01H
000004 7002             529             JNZ     ?C0024
000006 0500       F     530             INC     test_counter
000008                  531     ?C0024:
                        532     ;       now = prev = (msg[0]<<8) + msg[1];
                        533                             ; SOURCE LINE # 66
000008 7800       F     534             MOV     R0,#LOW (msg)
00000A E6               535             MOV     A,@R0
00000B FF               536             MOV     R7,A
00000C 33               537             RLC     A
00000D 95E0             538             SUBB    A,ACC
00000F EF               539             MOV     A,R7
000010 FE               540             MOV     R6,A
000011 08               541             INC     R0
000012 E6               542             MOV     A,@R0
000013 FD               543             MOV     R5,A
000014 33               544             RLC     A
000015 95E0             545             SUBB    A,ACC
000017 FC               546             MOV     R4,A
000018 E4               547             CLR     A
000019 2D               548             ADD     A,R5
00001A FF               549             MOV     R7,A
00001B EE               550             MOV     A,R6
00001C 3C               551             ADDC    A,R4
00001D F500       F     552             MOV     prev?245,A
00001F 8F00       F     553             MOV     prev?245+01H,R7
000021 F500       F     554             MOV     now?244,A
000023 8F00       F     555             MOV     now?244+01H,R7
                        556     ;       
                        557     ;       for(i=2,j=2;i<54;i+=2,j++)
                        558                             ; SOURCE LINE # 68
000025 750000     F     559             MOV     i?241,#00H
000028 750002     F     560             MOV     i?241+01H,#02H
00002B 750000     F     561             MOV     j?242,#00H
00002E 750002     F     562             MOV     j?242+01H,#02H
000031                  563     ?C0009:
000031 C3               564             CLR     C
000032 E500       F     565             MOV     A,i?241+01H
000034 9436             566             SUBB    A,#036H
000036 E500       F     567             MOV     A,i?241
000038 6480             568             XRL     A,#080H
00003A 9480             569             SUBB    A,#080H
00003C 5051             570             JNC     ?C0012
                        571     ;       {
                        572                             ; SOURCE LINE # 69
                        573     ;               prev = now;
                        574                             ; SOURCE LINE # 70
00003E 850000     F     575             MOV     prev?245,now?244
000041 850000     F     576             MOV     prev?245+01H,now?244+01H
                        577     ;               now = (msg[i]<<8) + msg[i+1];
                        578                             ; SOURCE LINE # 71
000044 AD00       F     579             MOV     R5,i?241+01H
000046 7400       F     580             MOV     A,#LOW (msg)
000048 2D               581             ADD     A,R5
000049 F8               582             MOV     R0,A
00004A E6               583             MOV     A,@R0
00004B FF               584             MOV     R7,A
00004C EF               585             MOV     A,R7
AX51 MACRO ASSEMBLER  MAIN                                                                  05/01/09 00:43:28 PAGE    10

00004D FE               586             MOV     R6,A
00004E 7400       F     587             MOV     A,#LOW (msg+01H)
000050 2D               588             ADD     A,R5
000051 F8               589             MOV     R0,A
000052 E6               590             MOV     A,@R0
000053 FD               591             MOV     R5,A
000054 33               592             RLC     A
000055 95E0             593             SUBB    A,ACC
000057 FC               594             MOV     R4,A
000058 E4               595             CLR     A
000059 2D               596             ADD     A,R5
00005A F500       F     597             MOV     now?244+01H,A
00005C EE               598             MOV     A,R6
00005D 3C               599             ADDC    A,R4
00005E F500       F     600             MOV     now?244,A
                        601     ;               delta = now - prev;
                        602                             ; SOURCE LINE # 72
000060 C3               603             CLR     C
000061 E500       F     604             MOV     A,now?244+01H
000063 9500       F     605             SUBB    A,prev?245+01H
000065 FD               606             MOV     R5,A
000066 E500       F     607             MOV     A,now?244
000068 9500       F     608             SUBB    A,prev?245
00006A FC               609             MOV     R4,A
00006B 120000     E     610             LCALL   ?C?FCASTI
00006E 7800       F     611             MOV     R0,#LOW (delta?243)
000070 120000     E     612             LCALL   ?C?LSTIDATA
                        613     ;               //while(k--);   
                        614     ;               //if(log_2(delta)>8)
                        615     ;               //{
                        616     ;               //      EA = 1;
                        617     ;               msg[j] = now;
                        618                             ; SOURCE LINE # 77
000073 7400       F     619             MOV     A,#LOW (msg)
000075 2500       F     620             ADD     A,j?242+01H
000077 F8               621             MOV     R0,A
000078 A600       F     622             MOV     @R0,now?244+01H
                        623     ;               //}
                        624     ;               //else
                        625     ;               //{
                        626     ;               //      EA = 1;
                        627     ;               //      msg[j] = delta;
                        628     ;               //}
                        629     ;       }
                        630                             ; SOURCE LINE # 84
00007A 7402             631             MOV     A,#02H
00007C 2500       F     632             ADD     A,i?241+01H
00007E F500       F     633             MOV     i?241+01H,A
000080 E4               634             CLR     A
000081 3500       F     635             ADDC    A,i?241
000083 F500       F     636             MOV     i?241,A
000085 0500       F     637             INC     j?242+01H
000087 E500       F     638             MOV     A,j?242+01H
000089 70A6             639             JNZ     ?C0009
00008B 0500       F     640             INC     j?242
00008D                  641     ?C0025:
00008D 80A2             642             SJMP    ?C0009
                        643     ; }
                        644                             ; SOURCE LINE # 85
00008F                  645     ?C0012:
00008F 22               646             RET     
                        647     ; END OF delta_compress
                        648     
                        649     ; 
                        650     ; 
                        651     ; int main()
AX51 MACRO ASSEMBLER  MAIN                                                                  05/01/09 00:43:28 PAGE    11

                        652     
------                  653             RSEG  ?PR?main?MAIN
000000                  654     main:
                        655             USING   0
                        656                             ; SOURCE LINE # 88
                        657     ; {
                        658                             ; SOURCE LINE # 89
                        659     ; 
                        660     ;       int i;
                        661     ;       int accx;
                        662     ;       store_cpu_rate(16);
                        663                             ; SOURCE LINE # 93
000000 7F10             664             MOV     R7,#010H
000002 7E00             665             MOV     R6,#00H
000004 120000     E     666             LCALL   _store_cpu_rate
                        667     ;       /* init led */
                        668     ;       P0_DIR &= ~0x28;
                        669                             ; SOURCE LINE # 95
000007 5394D7           670             ANL     P0_DIR,#0D7H
                        671     ;       P0_ALT &= ~0x28;
                        672                             ; SOURCE LINE # 96
00000A 5395D7           673             ANL     P0_ALT,#0D7H
                        674     ; 
                        675     ; 
                        676     ;       eco_page_init();
                        677                             ; SOURCE LINE # 99
00000D 120000     E     678             LCALL   eco_page_init
                        679     ; 
                        680     ; 
                        681     ;       serial_init(19200);
                        682                             ; SOURCE LINE # 102
000010 7F00             683             MOV     R7,#00H
000012 7E4B             684             MOV     R6,#04BH
000014 120000     E     685             LCALL   _serial_init
                        686     ;       puts("s:");
                        687                             ; SOURCE LINE # 103
000017 7BFF             688             MOV     R3,#0FFH
000019 7A00       F     689             MOV     R2,#HIGH (?SC_0)
00001B 7900       F     690             MOV     R1,#LOW (?SC_0)
00001D 120000     E     691             LCALL   _puts
                        692     ;       int_print(test_counter);
                        693                             ; SOURCE LINE # 104
000020 AE00       F     694             MOV     R6,test_counter
000022 AF00       F     695             MOV     R7,test_counter+01H
000024 120000     E     696             LCALL   _?int_print
                        697     ;       puts("\r\n");
                        698                             ; SOURCE LINE # 105
000027 7BFF             699             MOV     R3,#0FFH
000029 7A00       F     700             MOV     R2,#HIGH (?SC_3)
00002B 7900       F     701             MOV     R1,#LOW (?SC_3)
00002D 120000     E     702             LCALL   _puts
                        703     ; 
                        704     ;       for (i = 0; i < 6; i++) {
                        705                             ; SOURCE LINE # 107
000030 E4               706             CLR     A
000031 F500       F     707             MOV     i?346,A
000033 F500       F     708             MOV     i?346+01H,A
000035                  709     ?C0013:
                        710     ;               blink_led();
                        711                             ; SOURCE LINE # 108
000035 638020           712             XRL     P0,#020H
                        713     ;               mdelay(400);
                        714                             ; SOURCE LINE # 109
000038 7F90             715             MOV     R7,#090H
00003A 7E01             716             MOV     R6,#01H
00003C 120000     E     717             LCALL   _mdelay
AX51 MACRO ASSEMBLER  MAIN                                                                  05/01/09 00:43:28 PAGE    12

                        718     ;       }
                        719                             ; SOURCE LINE # 110
00003F 0500       F     720             INC     i?346+01H
000041 E500       F     721             MOV     A,i?346+01H
000043 7002             722             JNZ     ?C0026
000045 0500       F     723             INC     i?346
000047                  724     ?C0026:
000047 C3               725             CLR     C
000048 9406             726             SUBB    A,#06H
00004A E500       F     727             MOV     A,i?346
00004C 6480             728             XRL     A,#080H
00004E 9480             729             SUBB    A,#080H
000050 40E3             730             JC      ?C0013
000052                  731     ?C0014:
                        732     ;       /* init adc */
                        733     ;       adc_init(ADC_CLK_D8, ADC_RES_12, EXTREF);
                        734                             ; SOURCE LINE # 112
000052 7B10             735             MOV     R3,#010H
000054 7D03             736             MOV     R5,#03H
000056 7F20             737             MOV     R7,#020H
000058 120000     E     738             LCALL   _adc_init
                        739     ; 
                        740     ;       /* rf */
                        741     ;       rf_init();
                        742                             ; SOURCE LINE # 115
00005B 120000     E     743             LCALL   rf_init
                        744     ;       rf_configure(&rf_data);
                        745                             ; SOURCE LINE # 116
00005E 7B00             746             MOV     R3,#00H
000060 7A00       F     747             MOV     R2,#HIGH (rf_data)
000062 7900       F     748             MOV     R1,#LOW (rf_data)
000064 120000     E     749             LCALL   _rf_configure
                        750     ; 
                        751     ;       //volatile value for calculating 
                        752     ;       test_counter = 0;
                        753                             ; SOURCE LINE # 119
000067 E4               754             CLR     A
000068 F500       F     755             MOV     test_counter,A
00006A F500       F     756             MOV     test_counter+01H,A
                        757     ;       timer_counter = 0;
                        758                             ; SOURCE LINE # 120
00006C F500       F     759             MOV     timer_counter,A
00006E F500       F     760             MOV     timer_counter+01H,A
                        761     ;       flag = 0;
                        762                             ; SOURCE LINE # 121
000070 F500       F     763             MOV     flag,A
000072 F500       F     764             MOV     flag+01H,A
                        765     ;       /* init timer */
                        766     ;       // TMOD.1 TMOD.2 [1 0] 8-bit counter with auto-reload
                        767     ;       TMOD = 0x02;
                        768                             ; SOURCE LINE # 124
000074 758902           769             MOV     TMOD,#02H
                        770     ;       TH0 = 0x00;
                        771                             ; SOURCE LINE # 125
000077 F58C             772             MOV     TH0,A
                        773     ;       //enable interrupt
                        774     ;       EA = 1;
                        775                             ; SOURCE LINE # 127
000079 D2AF             776             SETB    EA
                        777     ;       //enable timer interrupt
                        778     ;       ET0 = 1;
                        779                             ; SOURCE LINE # 129
00007B D2A9             780             SETB    ET0
                        781     ;       //set to 1 to enable counting on Timer 0.               
                        782     ;       TR0 = 1;        
                        783                             ; SOURCE LINE # 131
AX51 MACRO ASSEMBLER  MAIN                                                                  05/01/09 00:43:28 PAGE    13

00007D D28C             784             SETB    TR0
00007F                  785     ?C0016:
                        786     ; 
                        787     ;       while(1)
                        788                             ; SOURCE LINE # 133
                        789     ;       {
                        790                             ; SOURCE LINE # 134
                        791     ;               for(i=0;i<LEN*2;i+=2)
                        792                             ; SOURCE LINE # 135
00007F E4               793             CLR     A
000080 F500       F     794             MOV     i?346,A
000082 F500       F     795             MOV     i?346+01H,A
000084                  796     ?C0018:
000084 C3               797             CLR     C
000085 E500       F     798             MOV     A,i?346+01H
000087 9436             799             SUBB    A,#036H
000089 E500       F     800             MOV     A,i?346
00008B 6480             801             XRL     A,#080H
00008D 9480             802             SUBB    A,#080H
00008F 502E             803             JNC     ?C0019
                        804     ;               {
                        805                             ; SOURCE LINE # 136
                        806     ;                       accx = adc_read(X_AXIS);
                        807                             ; SOURCE LINE # 137
000091 7F03             808             MOV     R7,#03H
000093 120000     E     809             LCALL   _adc_read
000096 8E00       F     810             MOV     accx?347,R6
000098 8F00       F     811             MOV     accx?347+01H,R7
                        812     ;                       msg[i] = (accx >> 8);
                        813                             ; SOURCE LINE # 138
00009A E500       F     814             MOV     A,accx?347
00009C FF               815             MOV     R7,A
00009D AE00       F     816             MOV     R6,i?346+01H
00009F 7400       F     817             MOV     A,#LOW (msg)
0000A1 2E               818             ADD     A,R6
0000A2 F8               819             MOV     R0,A
0000A3 A607             820             MOV     @R0,AR7
                        821     ;                       msg[i+1] = accx & 0xff;
                        822                             ; SOURCE LINE # 139
0000A5 7400       F     823             MOV     A,#LOW (msg+01H)
0000A7 2E               824             ADD     A,R6
0000A8 F8               825             MOV     R0,A
0000A9 A600       F     826             MOV     @R0,accx?347+01H
                        827     ;                       mdelay(5);
                        828                             ; SOURCE LINE # 140
0000AB 7F05             829             MOV     R7,#05H
0000AD 7E00             830             MOV     R6,#00H
0000AF 120000     E     831             LCALL   _mdelay
                        832     ;               }
                        833                             ; SOURCE LINE # 141
0000B2 7402             834             MOV     A,#02H
0000B4 2500       F     835             ADD     A,i?346+01H
0000B6 F500       F     836             MOV     i?346+01H,A
0000B8 E4               837             CLR     A
0000B9 3500       F     838             ADDC    A,i?346
0000BB F500       F     839             MOV     i?346,A
0000BD 80C5             840             SJMP    ?C0018
0000BF                  841     ?C0019:
                        842     ; 
                        843     ;               delta_compress();
                        844                             ; SOURCE LINE # 143
0000BF 120000     F     845             LCALL   delta_compress
                        846     ;               rf_send(dst_addr, 3, msg, 20);
                        847                             ; SOURCE LINE # 144
0000C2 750000     E     848             MOV     ?_rf_send?BYTE+04H,#00H
0000C5 750000     F     849             MOV     ?_rf_send?BYTE+05H,#HIGH (msg)
AX51 MACRO ASSEMBLER  MAIN                                                                  05/01/09 00:43:28 PAGE    14

0000C8 750000     F     850             MOV     ?_rf_send?BYTE+06H,#LOW (msg)
0000CB 750014     E     851             MOV     ?_rf_send?BYTE+07H,#014H
0000CE 7B00             852             MOV     R3,#00H
0000D0 7A00       F     853             MOV     R2,#HIGH (dst_addr)
0000D2 7900       F     854             MOV     R1,#LOW (dst_addr)
0000D4 7D03             855             MOV     R5,#03H
0000D6 120000     E     856             LCALL   _rf_send
                        857     ;               
                        858     ;               if(flag == 1)
                        859                             ; SOURCE LINE # 146
0000D9 E500       F     860             MOV     A,flag+01H
0000DB 6401             861             XRL     A,#01H
0000DD 4500       F     862             ORL     A,flag
0000DF 709E             863             JNZ     ?C0016
                        864     ;               {
                        865                             ; SOURCE LINE # 147
                        866     ;                       flag = 0;
                        867                             ; SOURCE LINE # 148
0000E1 F500       F     868             MOV     flag,A
0000E3 F500       F     869             MOV     flag+01H,A
                        870     ;                       blink_led();
                        871                             ; SOURCE LINE # 149
0000E5 638020           872             XRL     P0,#020H
                        873     ;                       int_print(test_counter);
                        874                             ; SOURCE LINE # 150
0000E8 AE00       F     875             MOV     R6,test_counter
0000EA AF00       F     876             MOV     R7,test_counter+01H
0000EC 120000     E     877             LCALL   _?int_print
                        878     ;                       puts("\r\n");
                        879                             ; SOURCE LINE # 151
0000EF 7BFF             880             MOV     R3,#0FFH
0000F1 7A00       F     881             MOV     R2,#HIGH (?SC_3)
0000F3 7900       F     882             MOV     R1,#LOW (?SC_3)
0000F5 120000     E     883             LCALL   _puts
                        884     ;                       EA = 1;
                        885                             ; SOURCE LINE # 152
0000F8 D2AF             886             SETB    EA
                        887     ;               }
                        888                             ; SOURCE LINE # 153
                        889     ;       }
                        890                             ; SOURCE LINE # 154
0000FA 8083             891             SJMP    ?C0016
                        892     ; END OF main
                        893     
                        894             END
AX51 MACRO ASSEMBLER  MAIN                                                                  05/01/09 00:43:28 PAGE    15

SYMBOL TABLE LISTING
------ ----- -------


N A M E                                  T Y P E  V A L U E     ATTRIBUTES

?_LOG_2?BYTE. . . . . . . . . . . . . .  D  ADDR  0000H     R   SEG=?DT?_LOG_2?MAIN
?_RF_SEND?BYTE. . . . . . . . . . . . .  D  ADDR  -------       EXT
?C0001. . . . . . . . . . . . . . . . .  C  ADDR  003AH     R   SEG=?PR?TIMER0?MAIN
?C0003. . . . . . . . . . . . . . . . .  C  ADDR  0048H     R   SEG=?PR?TIMER0?MAIN
?C0004. . . . . . . . . . . . . . . . .  C  ADDR  004BH     R   SEG=?PR?_LOG_2?MAIN
?C0005. . . . . . . . . . . . . . . . .  C  ADDR  0098H     R   SEG=?PR?_LOG_2?MAIN
?C0007. . . . . . . . . . . . . . . . .  C  ADDR  0054H     R   SEG=?PR?_LOG_2?MAIN
?C0009. . . . . . . . . . . . . . . . .  C  ADDR  0031H     R   SEG=?PR?DELTA_COMPRESS?MAIN
?C0012. . . . . . . . . . . . . . . . .  C  ADDR  008FH     R   SEG=?PR?DELTA_COMPRESS?MAIN
?C0013. . . . . . . . . . . . . . . . .  C  ADDR  0035H     R   SEG=?PR?MAIN?MAIN
?C0014. . . . . . . . . . . . . . . . .  C  ADDR  0052H     R   SEG=?PR?MAIN?MAIN
?C0016. . . . . . . . . . . . . . . . .  C  ADDR  007FH     R   SEG=?PR?MAIN?MAIN
?C0018. . . . . . . . . . . . . . . . .  C  ADDR  0084H     R   SEG=?PR?MAIN?MAIN
?C0019. . . . . . . . . . . . . . . . .  C  ADDR  00BFH     R   SEG=?PR?MAIN?MAIN
?C0023. . . . . . . . . . . . . . . . .  C  ADDR  0038H     R   SEG=?PR?TIMER0?MAIN
?C0024. . . . . . . . . . . . . . . . .  C  ADDR  0008H     R   SEG=?PR?DELTA_COMPRESS?MAIN
?C0025. . . . . . . . . . . . . . . . .  C  ADDR  008DH     R   SEG=?PR?DELTA_COMPRESS?MAIN
?C0026. . . . . . . . . . . . . . . . .  C  ADDR  0047H     R   SEG=?PR?MAIN?MAIN
?C0027. . . . . . . . . . . . . . . . .  C  ADDR  0092H     R   SEG=?PR?_LOG_2?MAIN
?C?CASTF. . . . . . . . . . . . . . . .  C  ADDR  -------       EXT
?C?FCASTI . . . . . . . . . . . . . . .  C  ADDR  -------       EXT
?C?FPADD. . . . . . . . . . . . . . . .  C  ADDR  -------       EXT
?C?FPDIV. . . . . . . . . . . . . . . .  C  ADDR  -------       EXT
?C?FPNEG. . . . . . . . . . . . . . . .  C  ADDR  -------       EXT
?C?LSTIDATA . . . . . . . . . . . . . .  C  ADDR  -------       EXT
?C?SLCMP. . . . . . . . . . . . . . . .  C  ADDR  -------       EXT
?C_INITSEG. . . . . . . . . . . . . . .  C  SEG   000016H       REL=UNIT, ALN=BYTE
?C_STARTUP. . . . . . . . . . . . . . .  C  ADDR  -------       EXT
?CO?MAIN. . . . . . . . . . . . . . . .  C  SEG   000006H       REL=UNIT, ALN=BYTE
?DELTA_COMPRESS?BYTE. . . . . . . . . .  D  ADDR  0000H     R   SEG=?DT?DELTA_COMPRESS?MAIN
?DT?_LOG_2?MAIN . . . . . . . . . . . .  D  SEG   000002H       REL=UNIT, ALN=BYTE
?DT?DELTA_COMPRESS?MAIN . . . . . . . .  D  SEG   000008H       REL=UNIT, ALN=BYTE
?DT?MAIN. . . . . . . . . . . . . . . .  D  SEG   000018H       REL=UNIT, ALN=BYTE
?DT?MAIN?MAIN . . . . . . . . . . . . .  D  SEG   000004H       REL=UNIT, ALN=BYTE
?ID?DELTA_COMPRESS?MAIN . . . . . . . .  I  SEG   000004H       REL=UNIT, ALN=BYTE
?ID?MAIN. . . . . . . . . . . . . . . .  I  SEG   000036H       REL=UNIT, ALN=BYTE
?MAIN?BYTE. . . . . . . . . . . . . . .  D  ADDR  0000H     R   SEG=?DT?MAIN?MAIN
?PR?_LOG_2?MAIN . . . . . . . . . . . .  C  SEG   000099H       REL=UNIT, ALN=BYTE
?PR?DELTA_COMPRESS?MAIN . . . . . . . .  C  SEG   000090H       REL=UNIT, ALN=BYTE
?PR?MAIN?MAIN . . . . . . . . . . . . .  C  SEG   0000FCH       REL=UNIT, ALN=BYTE
?PR?TIMER0?MAIN . . . . . . . . . . . .  C  SEG   000063H       REL=UNIT, ALN=BYTE
?SC_0 . . . . . . . . . . . . . . . . .  C  ADDR  0000H     R   SEG=?CO?MAIN
?SC_3 . . . . . . . . . . . . . . . . .  C  ADDR  0003H     R   SEG=?CO?MAIN
_?INT_PRINT . . . . . . . . . . . . . .  C  ADDR  -------       EXT
_ADC_INIT . . . . . . . . . . . . . . .  C  ADDR  -------       EXT
_ADC_READ . . . . . . . . . . . . . . .  C  ADDR  -------       EXT
_LOG10. . . . . . . . . . . . . . . . .  C  ADDR  -------       EXT
_LOG_2. . . . . . . . . . . . . . . . .  C  ADDR  0000H     R   SEG=?PR?_LOG_2?MAIN
_MDELAY . . . . . . . . . . . . . . . .  C  ADDR  -------       EXT
_PUTS . . . . . . . . . . . . . . . . .  C  ADDR  -------       EXT
_RF_CONFIGURE . . . . . . . . . . . . .  C  ADDR  -------       EXT
_RF_SEND. . . . . . . . . . . . . . . .  C  ADDR  -------       EXT
_SERIAL_INIT. . . . . . . . . . . . . .  C  ADDR  -------       EXT
_STORE_CPU_RATE . . . . . . . . . . . .  C  ADDR  -------       EXT
AC. . . . . . . . . . . . . . . . . . .  B  ADDR  00D0H.6   A   
ACC . . . . . . . . . . . . . . . . . .  D  ADDR  00E0H     A   
ACCX?347. . . . . . . . . . . . . . . .  D  ADDR  0002H     R   SEG=?DT?MAIN?MAIN
ADCCON. . . . . . . . . . . . . . . . .  D  ADDR  00A1H     A   
ADCDATAH. . . . . . . . . . . . . . . .  D  ADDR  00A2H     A   
ADCDATAL. . . . . . . . . . . . . . . .  D  ADDR  00A3H     A   
AX51 MACRO ASSEMBLER  MAIN                                                                  05/01/09 00:43:28 PAGE    16

ADCSTATIC . . . . . . . . . . . . . . .  D  ADDR  00A4H     A   
AR0 . . . . . . . . . . . . . . . . . .  D  ADDR  0000H     A   
AR1 . . . . . . . . . . . . . . . . . .  D  ADDR  0001H     A   
AR2 . . . . . . . . . . . . . . . . . .  D  ADDR  0002H     A   
AR3 . . . . . . . . . . . . . . . . . .  D  ADDR  0003H     A   
AR4 . . . . . . . . . . . . . . . . . .  D  ADDR  0004H     A   
AR5 . . . . . . . . . . . . . . . . . .  D  ADDR  0005H     A   
AR6 . . . . . . . . . . . . . . . . . .  D  ADDR  0006H     A   
AR7 . . . . . . . . . . . . . . . . . .  D  ADDR  0007H     A   
B . . . . . . . . . . . . . . . . . . .  D  ADDR  00F0H     A   
C_T2. . . . . . . . . . . . . . . . . .  B  ADDR  00C8H.1   A   
CE. . . . . . . . . . . . . . . . . . .  B  ADDR  00A0H.6   A   
CK_CTRL . . . . . . . . . . . . . . . .  D  ADDR  00B6H     A   
CKCON . . . . . . . . . . . . . . . . .  D  ADDR  008EH     A   
CLK1. . . . . . . . . . . . . . . . . .  B  ADDR  00A0H.1   A   
CLK2. . . . . . . . . . . . . . . . . .  B  ADDR  00A0H.5   A   
CP_RL2. . . . . . . . . . . . . . . . .  B  ADDR  00C8H.0   A   
CPRL2 . . . . . . . . . . . . . . . . .  B  ADDR  00C8H.0   A   
CS. . . . . . . . . . . . . . . . . . .  B  ADDR  00A0H.3   A   
CT2 . . . . . . . . . . . . . . . . . .  B  ADDR  00C8H.1   A   
CY. . . . . . . . . . . . . . . . . . .  B  ADDR  00D0H.7   A   
DATA? . . . . . . . . . . . . . . . . .  B  ADDR  00A0H.0   A   
DELTA?243 . . . . . . . . . . . . . . .  I  ADDR  0000H     R   SEG=?ID?DELTA_COMPRESS?MAIN
DELTA_COMPRESS. . . . . . . . . . . . .  C  ADDR  0000H     R   SEG=?PR?DELTA_COMPRESS?MAIN
DEV_OFFSET. . . . . . . . . . . . . . .  D  ADDR  00BEH     A   
DIN0. . . . . . . . . . . . . . . . . .  B  ADDR  0090H.2   A   
DIO0. . . . . . . . . . . . . . . . . .  B  ADDR  0090H.0   A   
DIO1. . . . . . . . . . . . . . . . . .  B  ADDR  0090H.1   A   
DIO2. . . . . . . . . . . . . . . . . .  B  ADDR  0080H.0   A   
DIO3. . . . . . . . . . . . . . . . . .  B  ADDR  0080H.1   A   
DIO4. . . . . . . . . . . . . . . . . .  B  ADDR  0080H.2   A   
DIO5. . . . . . . . . . . . . . . . . .  B  ADDR  0080H.3   A   
DIO6. . . . . . . . . . . . . . . . . .  B  ADDR  0080H.4   A   
DIO7. . . . . . . . . . . . . . . . . .  B  ADDR  0080H.5   A   
DIO8. . . . . . . . . . . . . . . . . .  B  ADDR  0080H.6   A   
DIO9. . . . . . . . . . . . . . . . . .  B  ADDR  0080H.7   A   
DOUT2 . . . . . . . . . . . . . . . . .  B  ADDR  00A0H.4   A   
DPH . . . . . . . . . . . . . . . . . .  D  ADDR  0083H     A   
DPH0. . . . . . . . . . . . . . . . . .  D  ADDR  0083H     A   
DPH1. . . . . . . . . . . . . . . . . .  D  ADDR  0085H     A   
DPL . . . . . . . . . . . . . . . . . .  D  ADDR  0082H     A   
DPL0. . . . . . . . . . . . . . . . . .  D  ADDR  0082H     A   
DPL1. . . . . . . . . . . . . . . . . .  D  ADDR  0084H     A   
DPS . . . . . . . . . . . . . . . . . .  D  ADDR  0086H     A   
DR1 . . . . . . . . . . . . . . . . . .  B  ADDR  00A0H.2   A   
DR2 . . . . . . . . . . . . . . . . . .  B  ADDR  00A0H.6   A   
DR2_CE. . . . . . . . . . . . . . . . .  B  ADDR  00A0H.6   A   
DST_ADDR. . . . . . . . . . . . . . . .  D  ADDR  0006H     R   SEG=?DT?MAIN
EA. . . . . . . . . . . . . . . . . . .  B  ADDR  00A8H.7   A   
ECO_PAGE_INIT . . . . . . . . . . . . .  C  ADDR  -------       EXT
EICON . . . . . . . . . . . . . . . . .  D  ADDR  00D8H     A   
EIE . . . . . . . . . . . . . . . . . .  D  ADDR  00E8H     A   
EIP . . . . . . . . . . . . . . . . . .  D  ADDR  00F8H     A   
ES. . . . . . . . . . . . . . . . . . .  B  ADDR  00A8H.4   A   
ET0 . . . . . . . . . . . . . . . . . .  B  ADDR  00A8H.1   A   
ET1 . . . . . . . . . . . . . . . . . .  B  ADDR  00A8H.3   A   
ET2 . . . . . . . . . . . . . . . . . .  B  ADDR  00A8H.5   A   
EWDI. . . . . . . . . . . . . . . . . .  B  ADDR  00E8H.4   A   
EX0 . . . . . . . . . . . . . . . . . .  B  ADDR  00A8H.0   A   
EX1 . . . . . . . . . . . . . . . . . .  B  ADDR  00A8H.2   A   
EX2 . . . . . . . . . . . . . . . . . .  B  ADDR  00E8H.0   A   
EX3 . . . . . . . . . . . . . . . . . .  B  ADDR  00E8H.1   A   
EX4 . . . . . . . . . . . . . . . . . .  B  ADDR  00E8H.2   A   
EX5 . . . . . . . . . . . . . . . . . .  B  ADDR  00E8H.3   A   
EXEN2 . . . . . . . . . . . . . . . . .  B  ADDR  00C8H.3   A   
EXF2. . . . . . . . . . . . . . . . . .  B  ADDR  00C8H.6   A   
AX51 MACRO ASSEMBLER  MAIN                                                                  05/01/09 00:43:28 PAGE    17

EXIF. . . . . . . . . . . . . . . . . .  D  ADDR  0091H     A   
F0. . . . . . . . . . . . . . . . . . .  B  ADDR  00D0H.5   A   
F1. . . . . . . . . . . . . . . . . . .  B  ADDR  00D0H.1   A   
FLAG. . . . . . . . . . . . . . . . . .  D  ADDR  0002H     R   SEG=?DT?MAIN
I?241 . . . . . . . . . . . . . . . . .  D  ADDR  0000H     R   SEG=?DT?DELTA_COMPRESS?MAIN
I?346 . . . . . . . . . . . . . . . . .  D  ADDR  0000H     R   SEG=?DT?MAIN?MAIN
IE. . . . . . . . . . . . . . . . . . .  D  ADDR  00A8H     A   
IE0 . . . . . . . . . . . . . . . . . .  B  ADDR  0088H.1   A   
IE1 . . . . . . . . . . . . . . . . . .  B  ADDR  0088H.3   A   
INT0_N. . . . . . . . . . . . . . . . .  B  ADDR  0080H.3   A   
INT1_N. . . . . . . . . . . . . . . . .  B  ADDR  0080H.4   A   
IP. . . . . . . . . . . . . . . . . . .  D  ADDR  00B8H     A   
IT0 . . . . . . . . . . . . . . . . . .  B  ADDR  0088H.0   A   
IT1 . . . . . . . . . . . . . . . . . .  B  ADDR  0088H.2   A   
J?242 . . . . . . . . . . . . . . . . .  D  ADDR  0002H     R   SEG=?DT?DELTA_COMPRESS?MAIN
MAIN. . . . . . . . . . . . . . . . . .  C  ADDR  0000H     R   SEG=?PR?MAIN?MAIN
MPAGE . . . . . . . . . . . . . . . . .  D  ADDR  0092H     A   
MSG . . . . . . . . . . . . . . . . . .  I  ADDR  0000H     R   SEG=?ID?MAIN
NOW?244 . . . . . . . . . . . . . . . .  D  ADDR  0004H     R   SEG=?DT?DELTA_COMPRESS?MAIN
OV. . . . . . . . . . . . . . . . . . .  B  ADDR  00D0H.2   A   
P . . . . . . . . . . . . . . . . . . .  B  ADDR  00D0H.0   A   
P0. . . . . . . . . . . . . . . . . . .  D  ADDR  0080H     A   
P0_0. . . . . . . . . . . . . . . . . .  B  ADDR  0080H.0   A   
P0_1. . . . . . . . . . . . . . . . . .  B  ADDR  0080H.1   A   
P0_2. . . . . . . . . . . . . . . . . .  B  ADDR  0080H.2   A   
P0_3. . . . . . . . . . . . . . . . . .  B  ADDR  0080H.3   A   
P0_4. . . . . . . . . . . . . . . . . .  B  ADDR  0080H.4   A   
P0_5. . . . . . . . . . . . . . . . . .  B  ADDR  0080H.5   A   
P0_6. . . . . . . . . . . . . . . . . .  B  ADDR  0080H.6   A   
P0_7. . . . . . . . . . . . . . . . . .  B  ADDR  0080H.7   A   
P0_ALT. . . . . . . . . . . . . . . . .  D  ADDR  0095H     A   
P0_DIR. . . . . . . . . . . . . . . . .  D  ADDR  0094H     A   
P1. . . . . . . . . . . . . . . . . . .  D  ADDR  0090H     A   
P1_0. . . . . . . . . . . . . . . . . .  B  ADDR  0090H.0   A   
P1_1. . . . . . . . . . . . . . . . . .  B  ADDR  0090H.1   A   
P1_2. . . . . . . . . . . . . . . . . .  B  ADDR  0090H.2   A   
P1_ALT. . . . . . . . . . . . . . . . .  D  ADDR  0097H     A   
P1_DIR. . . . . . . . . . . . . . . . .  D  ADDR  0096H     A   
PCON. . . . . . . . . . . . . . . . . .  D  ADDR  0087H     A   
PREV?245. . . . . . . . . . . . . . . .  D  ADDR  0006H     R   SEG=?DT?DELTA_COMPRESS?MAIN
PS. . . . . . . . . . . . . . . . . . .  B  ADDR  00B8H.4   A   
PSW . . . . . . . . . . . . . . . . . .  D  ADDR  00D0H     A   
PT0 . . . . . . . . . . . . . . . . . .  B  ADDR  00B8H.1   A   
PT1 . . . . . . . . . . . . . . . . . .  B  ADDR  00B8H.3   A   
PT2 . . . . . . . . . . . . . . . . . .  B  ADDR  00B8H.5   A   
PWDI. . . . . . . . . . . . . . . . . .  B  ADDR  00F8H.4   A   
PWM . . . . . . . . . . . . . . . . . .  B  ADDR  0080H.7   A   
PWMCON. . . . . . . . . . . . . . . . .  D  ADDR  00A9H     A   
PWMDUTY . . . . . . . . . . . . . . . .  D  ADDR  00AAH     A   
PWR_UP. . . . . . . . . . . . . . . . .  B  ADDR  00A0H.7   A   
PX0 . . . . . . . . . . . . . . . . . .  B  ADDR  00B8H.0   A   
PX1 . . . . . . . . . . . . . . . . . .  B  ADDR  00B8H.2   A   
PX2 . . . . . . . . . . . . . . . . . .  B  ADDR  00F8H.0   A   
PX3 . . . . . . . . . . . . . . . . . .  B  ADDR  00F8H.1   A   
PX4 . . . . . . . . . . . . . . . . . .  B  ADDR  00F8H.2   A   
PX5 . . . . . . . . . . . . . . . . . .  B  ADDR  00F8H.3   A   
RADIO . . . . . . . . . . . . . . . . .  D  ADDR  00A0H     A   
RB8 . . . . . . . . . . . . . . . . . .  B  ADDR  0098H.2   A   
RCAP2H. . . . . . . . . . . . . . . . .  D  ADDR  00CBH     A   
RCAP2L. . . . . . . . . . . . . . . . .  D  ADDR  00CAH     A   
RCLK. . . . . . . . . . . . . . . . . .  B  ADDR  00C8H.5   A   
REGX_CTRL . . . . . . . . . . . . . . .  D  ADDR  00ADH     A   
REGX_LSB. . . . . . . . . . . . . . . .  D  ADDR  00ACH     A   
REGX_MSB. . . . . . . . . . . . . . . .  D  ADDR  00ABH     A   
REN . . . . . . . . . . . . . . . . . .  B  ADDR  0098H.4   A   
RF_DATA . . . . . . . . . . . . . . . .  D  ADDR  0009H     R   SEG=?DT?MAIN
AX51 MACRO ASSEMBLER  MAIN                                                                  05/01/09 00:43:28 PAGE    18

RF_INIT . . . . . . . . . . . . . . . .  C  ADDR  -------       EXT
RI. . . . . . . . . . . . . . . . . . .  B  ADDR  0098H.0   A   
RS0 . . . . . . . . . . . . . . . . . .  B  ADDR  00D0H.3   A   
RS1 . . . . . . . . . . . . . . . . . .  B  ADDR  00D0H.4   A   
RSTREAS . . . . . . . . . . . . . . . .  D  ADDR  00B1H     A   
RXD . . . . . . . . . . . . . . . . . .  B  ADDR  0080H.1   A   
SBUF. . . . . . . . . . . . . . . . . .  D  ADDR  0099H     A   
SCON. . . . . . . . . . . . . . . . . .  D  ADDR  0098H     A   
SM0 . . . . . . . . . . . . . . . . . .  B  ADDR  0098H.7   A   
SM1 . . . . . . . . . . . . . . . . . .  B  ADDR  0098H.6   A   
SM2 . . . . . . . . . . . . . . . . . .  B  ADDR  0098H.5   A   
SP. . . . . . . . . . . . . . . . . . .  D  ADDR  0081H     A   
SPC_FNC . . . . . . . . . . . . . . . .  D  ADDR  008FH     A   
SPI_CTRL. . . . . . . . . . . . . . . .  D  ADDR  00B3H     A   
SPI_DATA. . . . . . . . . . . . . . . .  D  ADDR  00B2H     A   
SPICLK. . . . . . . . . . . . . . . . .  D  ADDR  00B4H     A   
T0. . . . . . . . . . . . . . . . . . .  B  ADDR  0080H.5   A   
T1. . . . . . . . . . . . . . . . . . .  B  ADDR  0080H.6   A   
T1_1V2. . . . . . . . . . . . . . . . .  D  ADDR  00BCH     A   
T2. . . . . . . . . . . . . . . . . . .  B  ADDR  0090H.0   A   
T2_1V2. . . . . . . . . . . . . . . . .  D  ADDR  00BDH     A   
T2CON . . . . . . . . . . . . . . . . .  D  ADDR  00C8H     A   
TB8 . . . . . . . . . . . . . . . . . .  B  ADDR  0098H.3   A   
TCLK. . . . . . . . . . . . . . . . . .  B  ADDR  00C8H.4   A   
TCON. . . . . . . . . . . . . . . . . .  D  ADDR  0088H     A   
TEST_COUNTER. . . . . . . . . . . . . .  D  ADDR  0004H     R   SEG=?DT?MAIN
TEST_MODE . . . . . . . . . . . . . . .  D  ADDR  00B7H     A   
TF0 . . . . . . . . . . . . . . . . . .  B  ADDR  0088H.5   A   
TF1 . . . . . . . . . . . . . . . . . .  B  ADDR  0088H.7   A   
TF2 . . . . . . . . . . . . . . . . . .  B  ADDR  00C8H.7   A   
TH0 . . . . . . . . . . . . . . . . . .  D  ADDR  008CH     A   
TH1 . . . . . . . . . . . . . . . . . .  D  ADDR  008DH     A   
TH2 . . . . . . . . . . . . . . . . . .  D  ADDR  00CDH     A   
TI. . . . . . . . . . . . . . . . . . .  B  ADDR  0098H.1   A   
TICK_DV . . . . . . . . . . . . . . . .  D  ADDR  00B5H     A   
TIMER0. . . . . . . . . . . . . . . . .  C  ADDR  0000H     R   SEG=?PR?TIMER0?MAIN
TIMER_COUNTER . . . . . . . . . . . . .  D  ADDR  0000H     R   SEG=?DT?MAIN
TL0 . . . . . . . . . . . . . . . . . .  D  ADDR  008AH     A   
TL1 . . . . . . . . . . . . . . . . . .  D  ADDR  008BH     A   
TL2 . . . . . . . . . . . . . . . . . .  D  ADDR  00CCH     A   
TMOD. . . . . . . . . . . . . . . . . .  D  ADDR  0089H     A   
TR0 . . . . . . . . . . . . . . . . . .  B  ADDR  0088H.4   A   
TR1 . . . . . . . . . . . . . . . . . .  B  ADDR  0088H.6   A   
TR2 . . . . . . . . . . . . . . . . . .  B  ADDR  00C8H.2   A   
TXD . . . . . . . . . . . . . . . . . .  B  ADDR  0080H.2   A   
WDTI. . . . . . . . . . . . . . . . . .  B  ADDR  00D8H.3   A   
X?140 . . . . . . . . . . . . . . . . .  D  ADDR  0000H     R   SEG=?DT?_LOG_2?MAIN


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S).
