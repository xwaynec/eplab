AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/01/09 15:32:03 PAGE     1


MACRO ASSEMBLER AX51 V3.06a
OBJECT MODULE PLACED IN .\eco_page.obj
ASSEMBLER INVOKED BY: C:\Keil\C51\BIN\AX51.exe .\eco_page.src EP DEBUG SYMBOLS OJ(.\eco_page.obj) PR(.\eco_page.ls1) 

LOC    OBJ             LINE     SOURCE

                          1     ; ./eco_page.src generated from: .\eco_page.c
                          2     ; COMPILER INVOKED BY:
                          3     ;        C:\Keil\C51\BIN\C51.exe .\eco_page.c BROWSE DEBUG CODE LISTINCLUDE SYMBOLS PREP
                               RINT ROM(LARGE) INCDIR(../../Include) SRC(./eco_page.src)
                          4     
                          5     $nomod51 
                          6     
                          7     NAME    ECO_PAGE
                          8     
 00A0.7                   9     PWR_UP  BIT     0A0H.7
 0080                    10     P0      DATA    080H
 0090                    11     P1      DATA    090H
 00D0.6                  12     AC      BIT     0D0H.6
 0080.5                  13     T0      BIT     080H.5
 00B3                    14     SPI_CTRL        DATA    0B3H
 0080.6                  15     T1      BIT     080H.6
 00A8.7                  16     EA      BIT     0A8H.7
 0090.0                  17     T2      BIT     090H.0
 00A0.6                  18     CE      BIT     0A0H.6
 00BE                    19     DEV_OFFSET      DATA    0BEH
 00A0.1                  20     CLK1    BIT     0A0H.1
 0090.2                  21     DIN0    BIT     090H.2
 00A0.5                  22     CLK2    BIT     0A0H.5
 0090.0                  23     DIO0    BIT     090H.0
 0083                    24     DPH0    DATA    083H
 0090.1                  25     DIO1    BIT     090H.1
 00A8                    26     IE      DATA    0A8H
 0085                    27     DPH1    DATA    085H
 0080.0                  28     DIO2    BIT     080H.0
 0080.1                  29     DIO3    BIT     080H.1
 0080.0                  30     P0_0    BIT     080H.0
 0090.0                  31     P1_0    BIT     090H.0
 0080.2                  32     DIO4    BIT     080H.2
 0080.1                  33     P0_1    BIT     080H.1
 0082                    34     DPL0    DATA    082H
 0090.1                  35     P1_1    BIT     090H.1
 0080.3                  36     DIO5    BIT     080H.3
 0080.2                  37     P0_2    BIT     080H.2
 0084                    38     DPL1    DATA    084H
 0090.2                  39     P1_2    BIT     090H.2
 0080.4                  40     DIO6    BIT     080H.4
 0080.3                  41     P0_3    BIT     080H.3
 0080.5                  42     DIO7    BIT     080H.5
 0080.4                  43     P0_4    BIT     080H.4
 00A4                    44     ADCSTATIC       DATA    0A4H
 0080.6                  45     DIO8    BIT     080H.6
 0080.5                  46     P0_5    BIT     080H.5
 00C8.6                  47     EXF2    BIT     0C8H.6
 00A0.3                  48     CS      BIT     0A0H.3
 0080.7                  49     DIO9    BIT     080H.7
 0080.6                  50     P0_6    BIT     080H.6
 0080.7                  51     P0_7    BIT     080H.7
 00A8.4                  52     ES      BIT     0A8H.4
 00B8                    53     IP      DATA    0B8H
 00A0.0                  54     DATA?   BIT     0A0H.0
 0098.0                  55     RI      BIT     098H.0
 00D0.7                  56     CY      BIT     0D0H.7
 0098.1                  57     TI      BIT     098H.1
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/01/09 15:32:03 PAGE     2

 00BC                    58     T1_1V2  DATA    0BCH
 008F                    59     SPC_FNC DATA    08FH
 00BD                    60     T2_1V2  DATA    0BDH
 00CB                    61     RCAP2H  DATA    0CBH
 00B8.4                  62     PS      BIT     0B8H.4
 0081                    63     SP      DATA    081H
 00D0.2                  64     OV      BIT     0D0H.2
 00B6                    65     CK_CTRL DATA    0B6H
 00CA                    66     RCAP2L  DATA    0CAH
 00B5                    67     TICK_DV DATA    0B5H
 00B1                    68     RSTREAS DATA    0B1H
 00C8.1                  69     C_T2    BIT     0C8H.1
 00E8.4                  70     EWDI    BIT     0E8H.4
 00A1                    71     ADCCON  DATA    0A1H
 00C8.5                  72     RCLK    BIT     0C8H.5
 00A2                    73     ADCDATAH        DATA    0A2H
 0091                    74     EXIF    DATA    091H
 00C8.4                  75     TCLK    BIT     0C8H.4
 00A0.6                  76     DR2_CE  BIT     0A0H.6
 00A3                    77     ADCDATAL        DATA    0A3H
 0099                    78     SBUF    DATA    099H
 0087                    79     PCON    DATA    087H
 0098                    80     SCON    DATA    098H
 00F8.4                  81     PWDI    BIT     0F8H.4
 0089                    82     TMOD    DATA    089H
 0088                    83     TCON    DATA    088H
 00D8.3                  84     WDTI    BIT     0D8H.3
 00AA                    85     PWMDUTY DATA    0AAH
 0088.1                  86     IE0     BIT     088H.1
 0088.3                  87     IE1     BIT     088H.3
 0094                    88     P0_DIR  DATA    094H
 00F0                    89     B       DATA    0F0H
 0096                    90     P1_DIR  DATA    096H
 0095                    91     P0_ALT  DATA    095H
 0097                    92     P1_ALT  DATA    097H
 00C8.0                  93     CP_RL2  BIT     0C8H.0
 00A0.2                  94     DR1     BIT     0A0H.2
 00E0                    95     ACC     DATA    0E0H
 00A0.6                  96     DR2     BIT     0A0H.6
 00B7                    97     TEST_MODE       DATA    0B7H
 00B4                    98     SPICLK  DATA    0B4H
 00C8.1                  99     CT2     BIT     0C8H.1
 00A8.1                 100     ET0     BIT     0A8H.1
 00A8.3                 101     ET1     BIT     0A8H.3
 0088.5                 102     TF0     BIT     088H.5
 0080.3                 103     INT0_N  BIT     080H.3
 00A8.5                 104     ET2     BIT     0A8H.5
 0088.7                 105     TF1     BIT     088H.7
 0080.4                 106     INT1_N  BIT     080H.4
 00C8.7                 107     TF2     BIT     0C8H.7
 0098.2                 108     RB8     BIT     098H.2
 008C                   109     TH0     DATA    08CH
 00A8.0                 110     EX0     BIT     0A8H.0
 0088.0                 111     IT0     BIT     088H.0
 008D                   112     TH1     DATA    08DH
 00A8.2                 113     EX1     BIT     0A8H.2
 0098.3                 114     TB8     BIT     098H.3
 0088.2                 115     IT1     BIT     088H.2
 00CD                   116     TH2     DATA    0CDH
 00AD                   117     REGX_CTRL       DATA    0ADH
 00E8.0                 118     EX2     BIT     0E8H.0
 00D0.0                 119     P       BIT     0D0H.0
 00E8.1                 120     EX3     BIT     0E8H.1
 0098.7                 121     SM0     BIT     098H.7
 008A                   122     TL0     DATA    08AH
 00E8.2                 123     EX4     BIT     0E8H.2
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/01/09 15:32:03 PAGE     3

 0098.6                 124     SM1     BIT     098H.6
 008B                   125     TL1     DATA    08BH
 00E8.3                 126     EX5     BIT     0E8H.3
 0098.5                 127     SM2     BIT     098H.5
 00CC                   128     TL2     DATA    0CCH
 00E8                   129     EIE     DATA    0E8H
 00B8.1                 130     PT0     BIT     0B8H.1
 00D0.3                 131     RS0     BIT     0D0H.3
 00B8.3                 132     PT1     BIT     0B8H.3
 00D0.4                 133     RS1     BIT     0D0H.4
 00B8.5                 134     PT2     BIT     0B8H.5
 0088.4                 135     TR0     BIT     088H.4
 00A9                   136     PWMCON  DATA    0A9H
 0088.6                 137     TR1     BIT     088H.6
 00C8.2                 138     TR2     BIT     0C8H.2
 00B8.0                 139     PX0     BIT     0B8H.0
 00B8.2                 140     PX1     BIT     0B8H.2
 00F8.0                 141     PX2     BIT     0F8H.0
 00F8.1                 142     PX3     BIT     0F8H.1
 00F8.2                 143     PX4     BIT     0F8H.2
 0083                   144     DPH     DATA    083H
 00F8.3                 145     PX5     BIT     0F8H.3
 00F8                   146     EIP     DATA    0F8H
 0082                   147     DPL     DATA    082H
 00C8.3                 148     EXEN2   BIT     0C8H.3
 00C8.0                 149     CPRL2   BIT     0C8H.0
 0098.4                 150     REN     BIT     098H.4
 00C8                   151     T2CON   DATA    0C8H
 0086                   152     DPS     DATA    086H
 00B2                   153     SPI_DATA        DATA    0B2H
 0092                   154     MPAGE   DATA    092H
 0080.1                 155     RXD     BIT     080H.1
 00A0.4                 156     DOUT2   BIT     0A0H.4
 00D8                   157     EICON   DATA    0D8H
 008E                   158     CKCON   DATA    08EH
 0080.2                 159     TXD     BIT     080H.2
 00A0                   160     RADIO   DATA    0A0H
 0080.7                 161     PWM     BIT     080H.7
 00D0.5                 162     F0      BIT     0D0H.5
 00D0.1                 163     F1      BIT     0D0H.1
 00AC                   164     REGX_LSB        DATA    0ACH
 00D0                   165     PSW     DATA    0D0H
 00AB                   166     REGX_MSB        DATA    0ABH
------                  167     ?PR?eco_page_init?ECO_PAGE               SEGMENT CODE 
------                  168     ?PR?eco_page_manager?ECO_PAGE            SEGMENT CODE 
------                  169     ?DT?eco_page_manager?ECO_PAGE            SEGMENT DATA OVERLAYABLE 
------                  170     ?DT?ECO_PAGE         SEGMENT DATA 
------                  171     ?ID?ECO_PAGE         SEGMENT IDATA 
                        172             EXTRN   CODE (_eeprom_read)
                        173             EXTRN   CODE (?C?ICALL2)
                        174             EXTRN   CODE (eeprom_init)
                        175             EXTRN   CODE (?C?UIDIV)
                        176             PUBLIC  ECO_PAGE_TABLE_INDEX
                        177             PUBLIC  ECO_PAGE_REGISTER7
                        178             PUBLIC  ECO_PAGE_REGISTER6
                        179             PUBLIC  ECO_PAGE_REGISTER5
                        180             PUBLIC  ECO_PAGE_REGISTER4
                        181             PUBLIC  ECO_PAGE_ADDR
                        182             PUBLIC  ECO_PAGE_REGISTER3
                        183             PUBLIC  ECO_PAGE_REGISTER2
                        184             PUBLIC  ECO_PAGE_REGISTER1
                        185             PUBLIC  ECO_PAGE_PREV_VID
                        186             PUBLIC  ECO_PAGE_PREV_PID
                        187             PUBLIC  ECO_PAGE_SPI_CONN
                        188             PUBLIC  ECO_PAGE_TABLE
                        189             PUBLIC  eco_page_manager
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/01/09 15:32:03 PAGE     4

                        190             PUBLIC  eco_page_init
                        191     
------                  192             RSEG  ?DT?eco_page_manager?ECO_PAGE
000000                  193     ?eco_page_manager?BYTE:
000004                  194             ORG  4
000004                  195             seg?140:   DS   2
000000                  196             ORG  0
000000                  197               i?141:   DS   2
000002                  198             ORG  2
000002                  199      page_index?142:   DS   2
                        200     
------                  201             RSEG  ?DT?ECO_PAGE
000000                  202      ECO_PAGE_TABLE:   DS   2
000002                  203     ECO_PAGE_SPI_CONN:   DS   1
000003                  204     ECO_PAGE_PREV_PID:   DS   1
000004                  205     ECO_PAGE_PREV_VID:   DS   1
000005                  206       ECO_PAGE_ADDR:   DS   2
000007                  207     ECO_PAGE_TABLE_INDEX:   DS   1
                        208     
------                  209             RSEG  ?ID?ECO_PAGE
000000                  210     ECO_PAGE_REGISTER1:   DS   1
000001                  211     ECO_PAGE_REGISTER2:   DS   1
000002                  212     ECO_PAGE_REGISTER3:   DS   1
000003                  213     ECO_PAGE_REGISTER4:   DS   1
000004                  214     ECO_PAGE_REGISTER5:   DS   1
000005                  215     ECO_PAGE_REGISTER6:   DS   1
000006                  216     ECO_PAGE_REGISTER7:   DS   1
                        217     ; /*
                        218     ;  * Author(s): Wei-Han Chen (Embedded Platform Lab, NTHU)
                        219     ;  * Copyright (c) 2009 National Tsing Hua University (NTHU) 
                        220     ;  * Permission to copy, modify, and distribute this program is granted 
                        221     ;  * for noncommercial purposes, provided the author(s) and copyright
                        222     ;  * notice are retained. All other uses require explicit written
                        223     ;  * permission from NTHU. 
                        224     ;  *
                        225     ;  * Eco Paging Library 
                        226     ;  *
                        227     ;  * Wei-Han Chen <xwaynec@gmail.com> 
                        228     ;  * 2009/2/13
                        229     ;  */
                        230     ; 
                        231     ; #include "eco_page.h"
                        232     ; #include "eeprom/eeprom.h"
                        233     ; 
                        234     ; #define ECO_PAGE_SIZE 256
                        235     ; //#define ECO_PAGE_SIZE 128
                        236     ; //#define ECO_PAGE_SIZE 64
                        237     ; 
                        238     ; //#define ECO_PAGE_ADDR_OFFSET 47
                        239     ; //#define ECO_PAGE_ADDR_OFFSET 23
                        240     ; //#define ECO_PAGE_ADDR_OFFSET 11 
                        241     ; 
                        242     ; //test for data compress
                        243     ; #define ECO_PAGE_ADDR_OFFSET 15
                        244     ; 
                        245     ; #if ECO_PAGE_SIZE == 64
                        246     ;       
                        247     ;       #define ECO_PAGE_ENTRY  (64-ECO_PAGE_ADDR_OFFSET)
                        248     ;       #define ECO_PAGE_SHIFT  6
                        249     ;       #define ECO_PAGE_MASK   0x003F
                        250     ;       #define ECO_PAGE_MOV_MASK       0xFFC0
                        251     ; 
                        252     ;       unsigned int idata ECO_PAGE_TABLE[ECO_PAGE_ENTRY];
                        253     ;       //Eco page virtual address id
                        254     ;       unsigned int ECO_PAGE_PREV_VID;
                        255     ;       //Eco page physical address id 
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/01/09 15:32:03 PAGE     5

                        256     ;       unsigned int ECO_PAGE_PREV_PID;
                        257     ; 
                        258     ; #elif ECO_PAGE_SIZE == 128
                        259     ;       
                        260     ;       #define ECO_PAGE_ENTRY (32-ECO_PAGE_ADDR_OFFSET)
                        261     ;       #define ECO_PAGE_SHIFT  7
                        262     ;       #define ECO_PAGE_MASK   0x007F
                        263     ;       #define ECO_PAGE_MOV_MASK       0xFF80
                        264     ; 
                        265     ;       unsigned int idata ECO_PAGE_TABLE[ECO_PAGE_ENTRY];
                        266     ;       //Eco page virtual address id
                        267     ;       unsigned int ECO_PAGE_PREV_VID;
                        268     ;       //Eco page physical address id 
                        269     ;       unsigned int ECO_PAGE_PREV_PID;
                        270     ; 
                        271     ; #elif ECO_PAGE_SIZE == 256
                        272     ;       
                        273     ;       #define ECO_PAGE_ENTRY  (16-ECO_PAGE_ADDR_OFFSET)
                        274     ;       #define ECO_PAGE_SHIFT  8       
                        275     ;       #define ECO_PAGE_MASK   0x00FF
                        276     ;       #define ECO_PAGE_MOV_MASK       0xFF00
                        277     ; 
                        278     ;       unsigned int ECO_PAGE_TABLE[ECO_PAGE_ENTRY];
                        279     ;       //Eco page virtual address id
                        280     ;       unsigned char ECO_PAGE_PREV_VID;
                        281     ;       //Eco page physical address id 
                        282     ;       unsigned char ECO_PAGE_PREV_PID;
                        283     ; 
                        284     ; #endif
                        285     ; 
                        286     ; unsigned char ECO_PAGE_TABLE_INDEX;
                        287     ; unsigned int ECO_PAGE_ADDR;
                        288     ; unsigned char ECO_PAGE_SPI_CONN;
                        289     ; 
                        290     ; unsigned char idata ECO_PAGE_REGISTER1;
                        291     ; unsigned char idata ECO_PAGE_REGISTER2;
                        292     ; unsigned char idata ECO_PAGE_REGISTER3;
                        293     ; unsigned char idata ECO_PAGE_REGISTER4;
                        294     ; unsigned char idata ECO_PAGE_REGISTER5;
                        295     ; unsigned char idata ECO_PAGE_REGISTER6;
                        296     ; unsigned char idata ECO_PAGE_REGISTER7;
                        297     ; 
                        298     ; 
                        299     ; void eco_page_init()
                        300     
------                  301             RSEG  ?PR?eco_page_init?ECO_PAGE
000000                  302     eco_page_init:
                        303                             ; SOURCE LINE # 83
                        304     ; {
                        305                             ; SOURCE LINE # 84
                        306     ;       ECO_PAGE_TABLE_INDEX = ECO_PAGE_ENTRY - 1;
                        307                             ; SOURCE LINE # 85
000000 E4               308             CLR     A
000001 F500       F     309             MOV     ECO_PAGE_TABLE_INDEX,A
                        310     ;       
                        311     ;       ECO_PAGE_ADDR = 0;
                        312                             ; SOURCE LINE # 87
000003 F500       F     313             MOV     ECO_PAGE_ADDR,A
000005 F500       F     314             MOV     ECO_PAGE_ADDR+01H,A
                        315     ;       ECO_PAGE_PREV_VID = 0;
                        316                             ; SOURCE LINE # 88
000007 F500       F     317             MOV     ECO_PAGE_PREV_VID,A
                        318     ;       ECO_PAGE_PREV_PID = 0;
                        319                             ; SOURCE LINE # 89
000009 F500       F     320             MOV     ECO_PAGE_PREV_PID,A
                        321     ; 
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/01/09 15:32:03 PAGE     6

                        322     ; }
                        323                             ; SOURCE LINE # 91
00000B 22               324             RET     
                        325     ; END OF eco_page_init
                        326     
                        327     ; 
                        328     ; //LRU page replacement
                        329     ; /*void eco_page_manager()
                        330     ; {
                        331     ;       unsigned int i;
                        332     ;       unsigned int page_index = -1;
                        333     ; 
                        334     ;       //if page id is the same with the last page id
                        335     ;       if(((ECO_PAGE_ADDR >> 8) & 0x7F) == (ECO_PAGE_PREV_PID & 0x7F))
                        336     ;       {
                        337     ;               //virtual address id + function offset
                        338     ;               ECO_PAGE_ADDR = (ECO_PAGE_PREV_VID << 8) + (ECO_PAGE_ADDR & 0x00FF);
                        339     ;               #pragma asm
00000C 7800       F     340             MOV     R0,#LOW (ECO_PAGE_REGISTER1)
00000E E6               341             MOV     A,@R0
00000F F9               342             MOV     R1,A
000010 7800       F     343             MOV     R0,#LOW (ECO_PAGE_REGISTER2)
000012 E6               344             MOV     A,@R0
000013 FA               345             MOV     R2,A
000014 7800       F     346             MOV     R0,#LOW (ECO_PAGE_REGISTER3)
000016 E6               347             MOV     A,@R0
000017 FB               348             MOV     R3,A
000018 7800       F     349             MOV     R0,#LOW (ECO_PAGE_REGISTER4)
00001A E6               350             MOV     A,@R0
00001B FC               351             MOV     R4,A
00001C 7800       F     352             MOV     R0,#LOW (ECO_PAGE_REGISTER5)
00001E E6               353             MOV     A,@R0
00001F FD               354             MOV     R5,A
000020 7800       F     355             MOV     R0,#LOW (ECO_PAGE_REGISTER6)
000022 E6               356             MOV     A,@R0
000023 FE               357             MOV     R6,A
000024 7800       F     358             MOV     R0,#LOW (ECO_PAGE_REGISTER7)
000026 E6               359             MOV     A,@R0
000027 FF               360             MOV     R7,A
000028 8500B3     F     361             MOV     SPI_CTRL,ECO_PAGE_SPI_CONN
00002B 850083     F     362             MOV     DPH,ECO_PAGE_ADDR
00002E 850082     F     363             MOV     DPL,ECO_PAGE_ADDR+01H
000031 120000     E     364             LCALL   ?C?ICALL2
                        365     ;               //eco_page_function_call        
                        366     ;               //MOV     DPH,ECO_PAGE_ADDR
                        367     ;               //MOV     DPL,ECO_PAGE_ADDR+01H
                        368     ;               //LCALL ?C?ICALL2
                        369     ;               #pragma endasm
                        370     ;               return ;
                        371     ;       }       
                        372     ;       
                        373     ;       //check page table
                        374     ;       for(i=0;i<ECO_PAGE_ENTRY;i++)
                        375     ;       {
                        376     ;               if((ECO_PAGE_ADDR >> 8) == ECO_PAGE_TABLE[i])
                        377     ;               {
                        378     ;                       page_index = i;
                        379     ;                       
                        380     ;                       //set LRU bit is 1
                        381     ;                       ECO_PAGE_TABLE[i] = ECO_PAGE_TABLE[i] | 0x80;
                        382     ;                       break;
                        383     ;               }
                        384     ;       }
                        385     ; 
                        386     ;       if(page_index != -1)
                        387     ;       {
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/01/09 15:32:03 PAGE     7

                        388     ;               //store function physical addres id 
                        389     ;               ECO_PAGE_PREV_PID = ECO_PAGE_ADDR >> 8;
                        390     ;       
                        391     ;               //memory page is in ram
                        392     ;               ECO_PAGE_ADDR = ((page_index + ECO_PAGE_ADDR_OFFSET) << 8) + (ECO_PAGE_A
                               DDR & 0x00FF);
                        393     ; 
                        394     ;               //cache the virtual address id
                        395     ;               ECO_PAGE_PREV_VID = ECO_PAGE_ADDR >> 8;
                        396     ; 
                        397     ;               #pragma asm
000034 7800       F     398             MOV     R0,#LOW (ECO_PAGE_REGISTER1)
000036 E6               399             MOV     A,@R0
000037 F9               400             MOV     R1,A
000038 7800       F     401             MOV     R0,#LOW (ECO_PAGE_REGISTER2)
00003A E6               402             MOV     A,@R0
00003B FA               403             MOV     R2,A
00003C 7800       F     404             MOV     R0,#LOW (ECO_PAGE_REGISTER3)
00003E E6               405             MOV     A,@R0
00003F FB               406             MOV     R3,A
000040 7800       F     407             MOV     R0,#LOW (ECO_PAGE_REGISTER4)
000042 E6               408             MOV     A,@R0
000043 FC               409             MOV     R4,A
000044 7800       F     410             MOV     R0,#LOW (ECO_PAGE_REGISTER5)
000046 E6               411             MOV     A,@R0
000047 FD               412             MOV     R5,A
000048 7800       F     413             MOV     R0,#LOW (ECO_PAGE_REGISTER6)
00004A E6               414             MOV     A,@R0
00004B FE               415             MOV     R6,A
00004C 7800       F     416             MOV     R0,#LOW (ECO_PAGE_REGISTER7)
00004E E6               417             MOV     A,@R0
00004F FF               418             MOV     R7,A
000050 8500B3     F     419             MOV     SPI_CTRL,ECO_PAGE_SPI_CONN
000053 850083     F     420             MOV     DPH,ECO_PAGE_ADDR
000056 850082     F     421             MOV     DPL,ECO_PAGE_ADDR+01H
000059 120000     E     422             LCALL   ?C?ICALL2
                        423     ;               //eco_page_function_call
                        424     ;               //MOV     DPH,ECO_PAGE_ADDR
                        425     ;               //MOV     DPL,ECO_PAGE_ADDR+01H
                        426     ;               //LCALL ?C?ICALL2
                        427     ;               #pragma endasm
                        428     ; 
                        429     ;               return ;
                        430     ;       }       
                        431     ;       else
                        432     ;       {
                        433     ;               //page fault
                        434     ;               for(i=ECO_PAGE_TABLE_INDEX+1; ;i=(i+1)%10)
                        435     ;               {
                        436     ;                       if((ECO_PAGE_TABLE[i] & 0x80) == 0x80)
                        437     ;                       {
                        438     ;                               //LRU bit is 1 and then set this bit is 0
                        439     ;                               ECO_PAGE_TABLE[i] = ECO_PAGE_TABLE[i] & 0x7F;
                        440     ;                       }
                        441     ;                       else
                        442     ;                       {
                        443     ;                               unsigned char xdata *seg = (unsigned char xdata *)((i + 
                               ECO_PAGE_ADDR_OFFSET)<<8);
                        444     ;                               unsigned int j;
                        445     ;                               
                        446     ;                               //memory page is in ram
                        447     ;                               eeprom_init();
                        448     ; 
                        449     ;                               //mov code from eeprom to external ram
                        450     ;                               for(j=0;j<256;j++)
                        451     ;                               {
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/01/09 15:32:03 PAGE     8

                        452     ;                                       *(seg+j) = eeprom_read(ECO_ADDR_SHIFT(ECO_PAGE_A
                               DDR & 0xFF00 ) +j);
                        453     ;                               }
                        454     ;                               
                        455     ;                               //update page table to connect this physical address id 
                               with virtual address id 
                        456     ;                               ECO_PAGE_TABLE[i] = ECO_PAGE_ADDR >> 8;
                        457     ; 
                        458     ;                               //store physical address id
                        459     ;                               ECO_PAGE_PREV_PID = ECO_PAGE_TABLE[i];
                        460     ; 
                        461     ;                               //update page address e.g.  (page_id<<8) + page_offset
                        462     ;                               ECO_PAGE_ADDR = ((i + ECO_PAGE_ADDR_OFFSET) << 8) + (ECO
                               _PAGE_ADDR & 0x00FF);
                        463     ; 
                        464     ;                               //store virtual address id 
                        465     ;                               ECO_PAGE_PREV_VID = ECO_PAGE_ADDR >> 8; 
                        466     ; 
                        467     ;                               //mov to the next index
                        468     ;                               ECO_PAGE_TABLE_INDEX = i;
                        469     ; 
                        470     ;                               //jump  to function address
                        471     ;                               #pragma asm
00005C 7800       F     472             MOV     R0,#LOW (ECO_PAGE_REGISTER1)
00005E E6               473             MOV     A,@R0
00005F F9               474             MOV     R1,A
000060 7800       F     475             MOV     R0,#LOW (ECO_PAGE_REGISTER2)
000062 E6               476             MOV     A,@R0
000063 FA               477             MOV     R2,A
000064 7800       F     478             MOV     R0,#LOW (ECO_PAGE_REGISTER3)
000066 E6               479             MOV     A,@R0
000067 FB               480             MOV     R3,A
000068 7800       F     481             MOV     R0,#LOW (ECO_PAGE_REGISTER4)
00006A E6               482             MOV     A,@R0
00006B FC               483             MOV     R4,A
00006C 7800       F     484             MOV     R0,#LOW (ECO_PAGE_REGISTER5)
00006E E6               485             MOV     A,@R0
00006F FD               486             MOV     R5,A
000070 7800       F     487             MOV     R0,#LOW (ECO_PAGE_REGISTER6)
000072 E6               488             MOV     A,@R0
000073 FE               489             MOV     R6,A
000074 7800       F     490             MOV     R0,#LOW (ECO_PAGE_REGISTER7)
000076 E6               491             MOV     A,@R0
000077 FF               492             MOV     R7,A
000078 8500B3     F     493             MOV     SPI_CTRL,ECO_PAGE_SPI_CONN
00007B 850083     F     494             MOV     DPH,ECO_PAGE_ADDR
00007E 850082     F     495             MOV     DPL,ECO_PAGE_ADDR+01H
000081 120000     E     496             LCALL   ?C?ICALL2
                        497     ;                               //eco_page_function_call
                        498     ;                               //MOV     DPH,ECO_PAGE_ADDR
                        499     ;                               //MOV     DPL,ECO_PAGE_ADDR+01H
                        500     ;                               //LCALL        ?C?ICALL2               
                        501     ;                               #pragma endasm
                        502     ;                               
                        503     ;                               return ;
                        504     ;                               
                        505     ;                       }
                        506     ;               }
                        507     ;                       
                        508     ;       }
                        509     ;                               
                        510     ; }
                        511     ; */
                        512     ; 
                        513     ; void eco_page_manager()
                        514     
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/01/09 15:32:03 PAGE     9

------                  515             RSEG  ?PR?eco_page_manager?ECO_PAGE
000000                  516     eco_page_manager:
                        517             USING   0
                        518                             ; SOURCE LINE # 203
                        519     ; {
                        520                             ; SOURCE LINE # 204
                        521     ;       unsigned int i;
                        522     ;       unsigned int page_index = -1; 
                        523                             ; SOURCE LINE # 206
000000 74FF             524             MOV     A,#0FFH
000002 F500       F     525             MOV     page_index?142,A
000004 F500       F     526             MOV     page_index?142+01H,A
                        527     ; 
                        528     ;       //Check POP instruction 
                        529     ;       //for(i=0;i<10;i++)
                        530     ;       //{    
                        531     ;       //      blink_led();
                        532     ;       //      mdelay(200);
                        533     ;       //}    
                        534     ;       //mdelay(1000);
                        535     ;       
                        536     ;       //if page id is the same with the last page id
                        537     ;       if((ECO_PAGE_ADDR >> ECO_PAGE_SHIFT) == ECO_PAGE_PREV_PID)
                        538                             ; SOURCE LINE # 217
000006 E500       F     539             MOV     A,ECO_PAGE_ADDR
000008 B50037           540             CJNE    A,ECO_PAGE_PREV_PID,?C0002
                        541     ;       {
                        542                             ; SOURCE LINE # 218
                        543     ;               //virtual address id + function offset
                        544     ;               ECO_PAGE_ADDR = (ECO_PAGE_PREV_VID << ECO_PAGE_SHIFT) + (ECO_PAGE_ADDR &
                                ECO_PAGE_MASK);
                        545                             ; SOURCE LINE # 220
00000B E500       F     546             MOV     A,ECO_PAGE_PREV_VID
00000D FE               547             MOV     R6,A
00000E 7C00             548             MOV     R4,#00H
000010 E4               549             CLR     A
000011 2500       F     550             ADD     A,ECO_PAGE_ADDR+01H
000013 F500       F     551             MOV     ECO_PAGE_ADDR+01H,A
000015 EC               552             MOV     A,R4
000016 3E               553             ADDC    A,R6
000017 F500       F     554             MOV     ECO_PAGE_ADDR,A
                        555     ;               #pragma asm
000019 7800       F     556             MOV     R0,#LOW (ECO_PAGE_REGISTER1)
00001B E6               557             MOV     A,@R0
00001C F9               558             MOV     R1,A
00001D 7800       F     559             MOV     R0,#LOW (ECO_PAGE_REGISTER2)
00001F E6               560             MOV     A,@R0
000020 FA               561             MOV     R2,A
000021 7800       F     562             MOV     R0,#LOW (ECO_PAGE_REGISTER3)
000023 E6               563             MOV     A,@R0
000024 FB               564             MOV     R3,A
000025 7800       F     565             MOV     R0,#LOW (ECO_PAGE_REGISTER4)
000027 E6               566             MOV     A,@R0
000028 FC               567             MOV     R4,A
000029 7800       F     568             MOV     R0,#LOW (ECO_PAGE_REGISTER5)
00002B E6               569             MOV     A,@R0
00002C FD               570             MOV     R5,A
00002D 7800       F     571             MOV     R0,#LOW (ECO_PAGE_REGISTER6)
00002F E6               572             MOV     A,@R0
000030 FE               573             MOV     R6,A
000031 7800       F     574             MOV     R0,#LOW (ECO_PAGE_REGISTER7)
000033 E6               575             MOV     A,@R0
000034 FF               576             MOV     R7,A
000035 8500B3     F     577             MOV     SPI_CTRL,ECO_PAGE_SPI_CONN
000038 850083     F     578             MOV     DPH,ECO_PAGE_ADDR
00003B 850082     F     579             MOV     DPL,ECO_PAGE_ADDR+01H
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/01/09 15:32:03 PAGE    10

00003E 120000     E     580             LCALL   ?C?ICALL2
                        581     ;               //eco_page_function_call
                        582               
000041 22               583             RET     
                        584     ;               #pragma endasm
                        585     ;               return ;
                        586     ;       }       
                        587                             ; SOURCE LINE # 225
000042                  588     ?C0002:
                        589     ;                               
                        590     ;       //Check Table   
                        591     ;       for(i=0;i<ECO_PAGE_ENTRY;i++)
                        592                             ; SOURCE LINE # 228
000042 E4               593             CLR     A
000043 F500       F     594             MOV     i?141,A
000045 F500       F     595             MOV     i?141+01H,A
000047                  596     ?C0004:
                        597     ;       {   
                        598                             ; SOURCE LINE # 229
                        599     ;               if((ECO_PAGE_ADDR >> ECO_PAGE_SHIFT) == ECO_PAGE_TABLE[i])
                        600                             ; SOURCE LINE # 230
000047 E500       F     601             MOV     A,i?141+01H
000049 25E0             602             ADD     A,ACC
00004B 2400       F     603             ADD     A,#LOW (ECO_PAGE_TABLE)
00004D F8               604             MOV     R0,A
00004E E6               605             MOV     A,@R0
00004F FC               606             MOV     R4,A
000050 08               607             INC     R0
000051 E6               608             MOV     A,@R0
000052 FD               609             MOV     R5,A
000053 E500       F     610             MOV     A,ECO_PAGE_ADDR
000055 B5050C           611             CJNE    A,AR5,?C0006
000058 E4               612             CLR     A
000059 B50408           613             CJNE    A,AR4,?C0006
                        614     ;               {
                        615                             ; SOURCE LINE # 231
                        616     ;                       page_index = i;
                        617                             ; SOURCE LINE # 232
00005C 850000     F     618             MOV     page_index?142,i?141
00005F 850000     F     619             MOV     page_index?142+01H,i?141+01H
                        620     ;                       break;
                        621                             ; SOURCE LINE # 233
000062 800E             622             SJMP    ?C0005
                        623     ;               }
                        624                             ; SOURCE LINE # 234
                        625     ;       }
                        626                             ; SOURCE LINE # 235
000064                  627     ?C0006:
000064 0500       F     628             INC     i?141+01H
000066 E500       F     629             MOV     A,i?141+01H
000068 7002             630             JNZ     ?C0015
00006A 0500       F     631             INC     i?141
00006C                  632     ?C0015:
00006C 6401             633             XRL     A,#01H
00006E 4500       F     634             ORL     A,i?141
000070 70D5             635             JNZ     ?C0004
000072                  636     ?C0005:
                        637     ; 
                        638     ;       if(page_index != -1) 
                        639                             ; SOURCE LINE # 237
000072 E500       F     640             MOV     A,page_index?142+01H
000074 F4               641             CPL     A
000075 7003             642             JNZ     ?C0016
000077 E500       F     643             MOV     A,page_index?142
000079 F4               644             CPL     A
00007A                  645     ?C0016:
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/01/09 15:32:03 PAGE    11

00007A 6041             646             JZ      ?C0008
                        647     ;       {  
                        648                             ; SOURCE LINE # 238
                        649     ;               //store function physical addres id 
                        650     ;               ECO_PAGE_PREV_PID = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;
                        651                             ; SOURCE LINE # 240
00007C E500       F     652             MOV     A,ECO_PAGE_ADDR
00007E F500       F     653             MOV     ECO_PAGE_PREV_PID,A
                        654     ;       
                        655     ;               //memory page is in ram
                        656     ;               ECO_PAGE_ADDR = ((page_index + ECO_PAGE_ADDR_OFFSET) << ECO_PAGE_SHIFT) 
                               + (ECO_PAGE_ADDR & ECO_PAGE_MASK);
                        657                             ; SOURCE LINE # 243
000080 E500       F     658             MOV     A,page_index?142+01H
000082 240F             659             ADD     A,#0FH
000084 FF               660             MOV     R7,A
000085 EF               661             MOV     A,R7
000086 FE               662             MOV     R6,A
000087 7C00             663             MOV     R4,#00H
000089 E4               664             CLR     A
00008A 2500       F     665             ADD     A,ECO_PAGE_ADDR+01H
00008C F500       F     666             MOV     ECO_PAGE_ADDR+01H,A
00008E EC               667             MOV     A,R4
00008F 3E               668             ADDC    A,R6
000090 F500       F     669             MOV     ECO_PAGE_ADDR,A
                        670     ; 
                        671     ;               //cache the virtual address id
                        672     ;               ECO_PAGE_PREV_VID = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;
                        673                             ; SOURCE LINE # 246
000092 F500       F     674             MOV     ECO_PAGE_PREV_VID,A
                        675     ; 
                        676     ;               #pragma asm
000094 7800       F     677             MOV     R0,#LOW (ECO_PAGE_REGISTER1)
000096 E6               678             MOV     A,@R0
000097 F9               679             MOV     R1,A
000098 7800       F     680             MOV     R0,#LOW (ECO_PAGE_REGISTER2)
00009A E6               681             MOV     A,@R0
00009B FA               682             MOV     R2,A
00009C 7800       F     683             MOV     R0,#LOW (ECO_PAGE_REGISTER3)
00009E E6               684             MOV     A,@R0
00009F FB               685             MOV     R3,A
0000A0 7800       F     686             MOV     R0,#LOW (ECO_PAGE_REGISTER4)
0000A2 E6               687             MOV     A,@R0
0000A3 FC               688             MOV     R4,A
0000A4 7800       F     689             MOV     R0,#LOW (ECO_PAGE_REGISTER5)
0000A6 E6               690             MOV     A,@R0
0000A7 FD               691             MOV     R5,A
0000A8 7800       F     692             MOV     R0,#LOW (ECO_PAGE_REGISTER6)
0000AA E6               693             MOV     A,@R0
0000AB FE               694             MOV     R6,A
0000AC 7800       F     695             MOV     R0,#LOW (ECO_PAGE_REGISTER7)
0000AE E6               696             MOV     A,@R0
0000AF FF               697             MOV     R7,A
0000B0 8500B3     F     698             MOV     SPI_CTRL,ECO_PAGE_SPI_CONN
0000B3 850083     F     699             MOV     DPH,ECO_PAGE_ADDR
0000B6 850082     F     700             MOV     DPL,ECO_PAGE_ADDR+01H
0000B9 120000     E     701             LCALL   ?C?ICALL2
                        702     ;               //eco_page_function_call
                        703               
                        704     ;               //MOV     DPH,ECO_PAGE_ADDR
                        705               
                        706     ;               //MOV     DPL,ECO_PAGE_ADDR+01H
                        707               
                        708     ;               //LCALL ?C?ICALL2
                        709               
                        710     ;               #pragma endasm
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/01/09 15:32:03 PAGE    12

                        711     ;       }   
                        712                             ; SOURCE LINE # 254
0000BC 22               713             RET     
0000BD                  714     ?C0008:
                        715     ;       else
                        716     ;       {
                        717                             ; SOURCE LINE # 256
                        718     ;               //page fault
                        719     ;               // Move Data from EEPROM to iRAM 
                        720     ;               unsigned char xdata *seg = (unsigned char xdata *)((ECO_PAGE_TABLE_INDEX
                                + ECO_PAGE_ADDR_OFFSET) << ECO_PAGE_SHIFT);
                        721                             ; SOURCE LINE # 259
0000BD E500       F     722             MOV     A,ECO_PAGE_TABLE_INDEX
0000BF 240F             723             ADD     A,#0FH
0000C1 FF               724             MOV     R7,A
0000C2 E4               725             CLR     A
0000C3 33               726             RLC     A
0000C4 EF               727             MOV     A,R7
0000C5 F500       F     728             MOV     seg?140,A
0000C7 750000     F     729             MOV     seg?140+01H,#00H
                        730     ;               
                        731     ;               //memory page is in ram
                        732     ;               eeprom_init();
                        733                             ; SOURCE LINE # 262
0000CA 120000     E     734             LCALL   eeprom_init
                        735     ; 
                        736     ;               //mov code from eeprom to external ram
                        737     ;               for(i=0;i<ECO_PAGE_SIZE;i++)
                        738                             ; SOURCE LINE # 265
0000CD E4               739             CLR     A
0000CE F500       F     740             MOV     i?141,A
0000D0 F500       F     741             MOV     i?141+01H,A
0000D2                  742     ?C0010:
                        743     ;               {
                        744                             ; SOURCE LINE # 266
                        745     ;                       *(seg+i) = eeprom_read(ECO_ADDR_SHIFT(ECO_PAGE_ADDR & ECO_PAGE_M
                               OV_MASK) +i);
                        746                             ; SOURCE LINE # 267
0000D2 E4               747             CLR     A
0000D3 2403             748             ADD     A,#03H
0000D5 FF               749             MOV     R7,A
0000D6 E4               750             CLR     A
0000D7 3500       F     751             ADDC    A,ECO_PAGE_ADDR
0000D9 CF               752             XCH     A,R7
0000DA 2500       F     753             ADD     A,i?141+01H
0000DC CF               754             XCH     A,R7
0000DD 3500       F     755             ADDC    A,i?141
0000DF FE               756             MOV     R6,A
0000E0 120000     E     757             LCALL   _eeprom_read
0000E3 E500       F     758             MOV     A,seg?140+01H
0000E5 2500       F     759             ADD     A,i?141+01H
0000E7 F582             760             MOV     DPL,A
0000E9 E500       F     761             MOV     A,seg?140
0000EB 3500       F     762             ADDC    A,i?141
0000ED F583             763             MOV     DPH,A
0000EF EF               764             MOV     A,R7
0000F0 F0               765             MOVX    @DPTR,A
                        766     ;               }
                        767                             ; SOURCE LINE # 268
0000F1 0500       F     768             INC     i?141+01H
0000F3 E500       F     769             MOV     A,i?141+01H
0000F5 7002             770             JNZ     ?C0017
0000F7 0500       F     771             INC     i?141
0000F9                  772     ?C0017:
0000F9 C3               773             CLR     C
0000FA E500       F     774             MOV     A,i?141
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/01/09 15:32:03 PAGE    13

0000FC 9401             775             SUBB    A,#01H
0000FE 40D2             776             JC      ?C0010
000100                  777     ?C0011:
                        778     ;               
                        779     ;               //update page table to connect this physical address id with virtual add
                               ress id 
                        780     ;               ECO_PAGE_TABLE[ECO_PAGE_TABLE_INDEX] = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;
                        781                             ; SOURCE LINE # 271
000100 E500       F     782             MOV     A,ECO_PAGE_ADDR
000102 FF               783             MOV     R7,A
000103 7E00             784             MOV     R6,#00H
000105 E500       F     785             MOV     A,ECO_PAGE_TABLE_INDEX
000107 25E0             786             ADD     A,ACC
000109 2400       F     787             ADD     A,#LOW (ECO_PAGE_TABLE)
00010B F8               788             MOV     R0,A
00010C A606             789             MOV     @R0,AR6
00010E 08               790             INC     R0
00010F A607             791             MOV     @R0,AR7
                        792     ; 
                        793     ;               //store physical address id
                        794     ;               //ECO_PAGE_PREV_PID = ECO_PAGE_TABLE[ECO_PAGE_TABLE_INDEX];
                        795     ;               ECO_PAGE_PREV_PID = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;
                        796                             ; SOURCE LINE # 275
000111 8F00       F     797             MOV     ECO_PAGE_PREV_PID,R7
                        798     ; 
                        799     ;               //update page address
                        800     ;               ECO_PAGE_ADDR = ((ECO_PAGE_TABLE_INDEX + ECO_PAGE_ADDR_OFFSET) << ECO_PA
                               GE_SHIFT) + (ECO_PAGE_ADDR & ECO_PAGE_MASK);
                        801                             ; SOURCE LINE # 278
000113 E500       F     802             MOV     A,ECO_PAGE_TABLE_INDEX
000115 FD               803             MOV     R5,A
000116 7C00             804             MOV     R4,#00H
000118 240F             805             ADD     A,#0FH
00011A FF               806             MOV     R7,A
00011B EF               807             MOV     A,R7
00011C FE               808             MOV     R6,A
00011D 7A00             809             MOV     R2,#00H
00011F E4               810             CLR     A
000120 2500       F     811             ADD     A,ECO_PAGE_ADDR+01H
000122 F500       F     812             MOV     ECO_PAGE_ADDR+01H,A
000124 EA               813             MOV     A,R2
000125 3E               814             ADDC    A,R6
000126 F500       F     815             MOV     ECO_PAGE_ADDR,A
                        816     ; 
                        817     ;               //store virtual address id 
                        818     ;               ECO_PAGE_PREV_VID = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;    
                        819                             ; SOURCE LINE # 281
000128 F500       F     820             MOV     ECO_PAGE_PREV_VID,A
                        821     ; 
                        822     ;               //mov to the next index
                        823     ;               ECO_PAGE_TABLE_INDEX = (ECO_PAGE_TABLE_INDEX + 1) % ECO_PAGE_ENTRY;
                        824                             ; SOURCE LINE # 284
00012A ED               825             MOV     A,R5
00012B 2401             826             ADD     A,#01H
00012D FF               827             MOV     R7,A
00012E EC               828             MOV     A,R4
00012F 33               829             RLC     A
000130 FE               830             MOV     R6,A
000131 7D01             831             MOV     R5,#01H
000133 120000     E     832             LCALL   ?C?UIDIV
000136 8D00       F     833             MOV     ECO_PAGE_TABLE_INDEX,R5
                        834     ;                       
                        835     ;               //jump  to function address
                        836     ;               #pragma asm
000138 7800       F     837             MOV     R0,#LOW (ECO_PAGE_REGISTER1)
00013A E6               838             MOV     A,@R0
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/01/09 15:32:03 PAGE    14

00013B F9               839             MOV     R1,A
00013C 7800       F     840             MOV     R0,#LOW (ECO_PAGE_REGISTER2)
00013E E6               841             MOV     A,@R0
00013F FA               842             MOV     R2,A
000140 7800       F     843             MOV     R0,#LOW (ECO_PAGE_REGISTER3)
000142 E6               844             MOV     A,@R0
000143 FB               845             MOV     R3,A
000144 7800       F     846             MOV     R0,#LOW (ECO_PAGE_REGISTER4)
000146 E6               847             MOV     A,@R0
000147 FC               848             MOV     R4,A
000148 7800       F     849             MOV     R0,#LOW (ECO_PAGE_REGISTER5)
00014A E6               850             MOV     A,@R0
00014B FD               851             MOV     R5,A
00014C 7800       F     852             MOV     R0,#LOW (ECO_PAGE_REGISTER6)
00014E E6               853             MOV     A,@R0
00014F FE               854             MOV     R6,A
000150 7800       F     855             MOV     R0,#LOW (ECO_PAGE_REGISTER7)
000152 E6               856             MOV     A,@R0
000153 FF               857             MOV     R7,A
000154 8500B3     F     858             MOV     SPI_CTRL,ECO_PAGE_SPI_CONN
000157 850083     F     859             MOV     DPH,ECO_PAGE_ADDR
00015A 850082     F     860             MOV     DPL,ECO_PAGE_ADDR+01H
00015D 120000     E     861             LCALL   ?C?ICALL2
                        862     ;               //eco_page_function_call
                        863               
                        864     ;               //MOV     DPH,ECO_PAGE_ADDR
                        865               
                        866     ;               //MOV     DPL,ECO_PAGE_ADDR+01H
                        867               
                        868     ;               //LCALL        ?C?ICALL2               
                        869               
                        870     ;               #pragma endasm
                        871     ; 
                        872     ;       }
                        873                             ; SOURCE LINE # 294
                        874     ; 
                        875     ; }
                        876                             ; SOURCE LINE # 296
000160                  877     ?C0003:
000160 22               878             RET     
                        879     ; END OF eco_page_manager
                        880     
                        881             END
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/01/09 15:32:03 PAGE    15

SYMBOL TABLE LISTING
------ ----- -------


N A M E                                    T Y P E  V A L U E     ATTRIBUTES

?C0002. . . . . . . . . . . . . . . . .    C  ADDR  0042H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0003. . . . . . . . . . . . . . . . .    C  ADDR  0160H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0004. . . . . . . . . . . . . . . . .    C  ADDR  0047H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0005. . . . . . . . . . . . . . . . .    C  ADDR  0072H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0006. . . . . . . . . . . . . . . . .    C  ADDR  0064H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0008. . . . . . . . . . . . . . . . .    C  ADDR  00BDH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0010. . . . . . . . . . . . . . . . .    C  ADDR  00D2H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0011. . . . . . . . . . . . . . . . .    C  ADDR  0100H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0015. . . . . . . . . . . . . . . . .    C  ADDR  006CH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0016. . . . . . . . . . . . . . . . .    C  ADDR  007AH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0017. . . . . . . . . . . . . . . . .    C  ADDR  00F9H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C?ICALL2 . . . . . . . . . . . . . . .    C  ADDR  -------       EXT
?C?UIDIV. . . . . . . . . . . . . . . .    C  ADDR  -------       EXT
?DT?ECO_PAGE. . . . . . . . . . . . . .    D  SEG   000008H       REL=UNIT, ALN=BYTE
?DT?ECO_PAGE_MANAGER?ECO_PAGE . . . . .    D  SEG   000006H       REL=UNIT, ALN=BYTE
?ECO_PAGE_MANAGER?BYTE. . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?ECO_PAGE_MANAGER?ECO_PAGE
?ID?ECO_PAGE. . . . . . . . . . . . . .    I  SEG   000007H       REL=UNIT, ALN=BYTE
?PR?ECO_PAGE_INIT?ECO_PAGE. . . . . . .    C  SEG   000084H       REL=UNIT, ALN=BYTE
?PR?ECO_PAGE_MANAGER?ECO_PAGE . . . . .    C  SEG   000161H       REL=UNIT, ALN=BYTE
_EEPROM_READ. . . . . . . . . . . . . .    C  ADDR  -------       EXT
AC. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.6   A   
ACC . . . . . . . . . . . . . . . . . .    D  ADDR  00E0H     A   
ADCCON. . . . . . . . . . . . . . . . .    D  ADDR  00A1H     A   
ADCDATAH. . . . . . . . . . . . . . . .    D  ADDR  00A2H     A   
ADCDATAL. . . . . . . . . . . . . . . .    D  ADDR  00A3H     A   
ADCSTATIC . . . . . . . . . . . . . . .    D  ADDR  00A4H     A   
AR4 . . . . . . . . . . . . . . . . . .    D  ADDR  0004H     A   
AR5 . . . . . . . . . . . . . . . . . .    D  ADDR  0005H     A   
AR6 . . . . . . . . . . . . . . . . . .    D  ADDR  0006H     A   
AR7 . . . . . . . . . . . . . . . . . .    D  ADDR  0007H     A   
B . . . . . . . . . . . . . . . . . . .    D  ADDR  00F0H     A   
C_T2. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.1   A   
CE. . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.6   A   
CK_CTRL . . . . . . . . . . . . . . . .    D  ADDR  00B6H     A   
CKCON . . . . . . . . . . . . . . . . .    D  ADDR  008EH     A   
CLK1. . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.1   A   
CLK2. . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.5   A   
CP_RL2. . . . . . . . . . . . . . . . .    B  ADDR  00C8H.0   A   
CPRL2 . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.0   A   
CS. . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.3   A   
CT2 . . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.1   A   
CY. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.7   A   
DATA? . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.0   A   
DEV_OFFSET. . . . . . . . . . . . . . .    D  ADDR  00BEH     A   
DIN0. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.2   A   
DIO0. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.0   A   
DIO1. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.1   A   
DIO2. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.0   A   
DIO3. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.1   A   
DIO4. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.2   A   
DIO5. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.3   A   
DIO6. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.4   A   
DIO7. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.5   A   
DIO8. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.6   A   
DIO9. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.7   A   
DOUT2 . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.4   A   
DPH . . . . . . . . . . . . . . . . . .    D  ADDR  0083H     A   
DPH0. . . . . . . . . . . . . . . . . .    D  ADDR  0083H     A   
DPH1. . . . . . . . . . . . . . . . . .    D  ADDR  0085H     A   
DPL . . . . . . . . . . . . . . . . . .    D  ADDR  0082H     A   
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/01/09 15:32:03 PAGE    16

DPL0. . . . . . . . . . . . . . . . . .    D  ADDR  0082H     A   
DPL1. . . . . . . . . . . . . . . . . .    D  ADDR  0084H     A   
DPS . . . . . . . . . . . . . . . . . .    D  ADDR  0086H     A   
DR1 . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.2   A   
DR2 . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.6   A   
DR2_CE. . . . . . . . . . . . . . . . .    B  ADDR  00A0H.6   A   
EA. . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.7   A   
ECO_PAGE. . . . . . . . . . . . . . . .    -- ----  -------       
ECO_PAGE_ADDR . . . . . . . . . . . . .    D  ADDR  0005H     R   SEG=?DT?ECO_PAGE
ECO_PAGE_INIT . . . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?ECO_PAGE_INIT?ECO_PAGE
ECO_PAGE_MANAGER. . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
ECO_PAGE_PREV_PID . . . . . . . . . . .    D  ADDR  0003H     R   SEG=?DT?ECO_PAGE
ECO_PAGE_PREV_VID . . . . . . . . . . .    D  ADDR  0004H     R   SEG=?DT?ECO_PAGE
ECO_PAGE_REGISTER1. . . . . . . . . . .    I  ADDR  0000H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER2. . . . . . . . . . .    I  ADDR  0001H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER3. . . . . . . . . . .    I  ADDR  0002H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER4. . . . . . . . . . .    I  ADDR  0003H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER5. . . . . . . . . . .    I  ADDR  0004H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER6. . . . . . . . . . .    I  ADDR  0005H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER7. . . . . . . . . . .    I  ADDR  0006H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_SPI_CONN . . . . . . . . . . .    D  ADDR  0002H     R   SEG=?DT?ECO_PAGE
ECO_PAGE_TABLE. . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?ECO_PAGE
ECO_PAGE_TABLE_INDEX. . . . . . . . . .    D  ADDR  0007H     R   SEG=?DT?ECO_PAGE
EEPROM_INIT . . . . . . . . . . . . . .    C  ADDR  -------       EXT
EICON . . . . . . . . . . . . . . . . .    D  ADDR  00D8H     A   
EIE . . . . . . . . . . . . . . . . . .    D  ADDR  00E8H     A   
EIP . . . . . . . . . . . . . . . . . .    D  ADDR  00F8H     A   
ES. . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.4   A   
ET0 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.1   A   
ET1 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.3   A   
ET2 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.5   A   
EWDI. . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.4   A   
EX0 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.0   A   
EX1 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.2   A   
EX2 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.0   A   
EX3 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.1   A   
EX4 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.2   A   
EX5 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.3   A   
EXEN2 . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.3   A   
EXF2. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.6   A   
EXIF. . . . . . . . . . . . . . . . . .    D  ADDR  0091H     A   
F0. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.5   A   
F1. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.1   A   
I?141 . . . . . . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?ECO_PAGE_MANAGER?ECO_PAGE
IE. . . . . . . . . . . . . . . . . . .    D  ADDR  00A8H     A   
IE0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.1   A   
IE1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.3   A   
INT0_N. . . . . . . . . . . . . . . . .    B  ADDR  0080H.3   A   
INT1_N. . . . . . . . . . . . . . . . .    B  ADDR  0080H.4   A   
IP. . . . . . . . . . . . . . . . . . .    D  ADDR  00B8H     A   
IT0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.0   A   
IT1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.2   A   
MPAGE . . . . . . . . . . . . . . . . .    D  ADDR  0092H     A   
OV. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.2   A   
P . . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.0   A   
P0. . . . . . . . . . . . . . . . . . .    D  ADDR  0080H     A   
P0_0. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.0   A   
P0_1. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.1   A   
P0_2. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.2   A   
P0_3. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.3   A   
P0_4. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.4   A   
P0_5. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.5   A   
P0_6. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.6   A   
P0_7. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.7   A   
P0_ALT. . . . . . . . . . . . . . . . .    D  ADDR  0095H     A   
P0_DIR. . . . . . . . . . . . . . . . .    D  ADDR  0094H     A   
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/01/09 15:32:03 PAGE    17

P1. . . . . . . . . . . . . . . . . . .    D  ADDR  0090H     A   
P1_0. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.0   A   
P1_1. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.1   A   
P1_2. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.2   A   
P1_ALT. . . . . . . . . . . . . . . . .    D  ADDR  0097H     A   
P1_DIR. . . . . . . . . . . . . . . . .    D  ADDR  0096H     A   
PAGE_INDEX?142. . . . . . . . . . . . .    D  ADDR  0002H     R   SEG=?DT?ECO_PAGE_MANAGER?ECO_PAGE
PCON. . . . . . . . . . . . . . . . . .    D  ADDR  0087H     A   
PS. . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.4   A   
PSW . . . . . . . . . . . . . . . . . .    D  ADDR  00D0H     A   
PT0 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.1   A   
PT1 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.3   A   
PT2 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.5   A   
PWDI. . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.4   A   
PWM . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.7   A   
PWMCON. . . . . . . . . . . . . . . . .    D  ADDR  00A9H     A   
PWMDUTY . . . . . . . . . . . . . . . .    D  ADDR  00AAH     A   
PWR_UP. . . . . . . . . . . . . . . . .    B  ADDR  00A0H.7   A   
PX0 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.0   A   
PX1 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.2   A   
PX2 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.0   A   
PX3 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.1   A   
PX4 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.2   A   
PX5 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.3   A   
RADIO . . . . . . . . . . . . . . . . .    D  ADDR  00A0H     A   
RB8 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.2   A   
RCAP2H. . . . . . . . . . . . . . . . .    D  ADDR  00CBH     A   
RCAP2L. . . . . . . . . . . . . . . . .    D  ADDR  00CAH     A   
RCLK. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.5   A   
REGX_CTRL . . . . . . . . . . . . . . .    D  ADDR  00ADH     A   
REGX_LSB. . . . . . . . . . . . . . . .    D  ADDR  00ACH     A   
REGX_MSB. . . . . . . . . . . . . . . .    D  ADDR  00ABH     A   
REN . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.4   A   
RI. . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.0   A   
RS0 . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.3   A   
RS1 . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.4   A   
RSTREAS . . . . . . . . . . . . . . . .    D  ADDR  00B1H     A   
RXD . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.1   A   
SBUF. . . . . . . . . . . . . . . . . .    D  ADDR  0099H     A   
SCON. . . . . . . . . . . . . . . . . .    D  ADDR  0098H     A   
SEG?140 . . . . . . . . . . . . . . . .    D  ADDR  0004H     R   SEG=?DT?ECO_PAGE_MANAGER?ECO_PAGE
SM0 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.7   A   
SM1 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.6   A   
SM2 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.5   A   
SP. . . . . . . . . . . . . . . . . . .    D  ADDR  0081H     A   
SPC_FNC . . . . . . . . . . . . . . . .    D  ADDR  008FH     A   
SPI_CTRL. . . . . . . . . . . . . . . .    D  ADDR  00B3H     A   
SPI_DATA. . . . . . . . . . . . . . . .    D  ADDR  00B2H     A   
SPICLK. . . . . . . . . . . . . . . . .    D  ADDR  00B4H     A   
T0. . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.5   A   
T1. . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.6   A   
T1_1V2. . . . . . . . . . . . . . . . .    D  ADDR  00BCH     A   
T2. . . . . . . . . . . . . . . . . . .    B  ADDR  0090H.0   A   
T2_1V2. . . . . . . . . . . . . . . . .    D  ADDR  00BDH     A   
T2CON . . . . . . . . . . . . . . . . .    D  ADDR  00C8H     A   
TB8 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.3   A   
TCLK. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.4   A   
TCON. . . . . . . . . . . . . . . . . .    D  ADDR  0088H     A   
TEST_MODE . . . . . . . . . . . . . . .    D  ADDR  00B7H     A   
TF0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.5   A   
TF1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.7   A   
TF2 . . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.7   A   
TH0 . . . . . . . . . . . . . . . . . .    D  ADDR  008CH     A   
TH1 . . . . . . . . . . . . . . . . . .    D  ADDR  008DH     A   
TH2 . . . . . . . . . . . . . . . . . .    D  ADDR  00CDH     A   
TI. . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.1   A   
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              05/01/09 15:32:03 PAGE    18

TICK_DV . . . . . . . . . . . . . . . .    D  ADDR  00B5H     A   
TL0 . . . . . . . . . . . . . . . . . .    D  ADDR  008AH     A   
TL1 . . . . . . . . . . . . . . . . . .    D  ADDR  008BH     A   
TL2 . . . . . . . . . . . . . . . . . .    D  ADDR  00CCH     A   
TMOD. . . . . . . . . . . . . . . . . .    D  ADDR  0089H     A   
TR0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.4   A   
TR1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.6   A   
TR2 . . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.2   A   
TXD . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.2   A   
WDTI. . . . . . . . . . . . . . . . . .    B  ADDR  00D8H.3   A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S).
