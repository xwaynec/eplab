AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/22/09 16:13:51 PAGE     1


MACRO ASSEMBLER AX51 V3.06a
OBJECT MODULE PLACED IN .\eco_page.obj
ASSEMBLER INVOKED BY: C:\Keil\C51\BIN\AX51.exe .\eco_page.src EP DEBUG SYMBOLS OJ(.\eco_page.obj) PR(.\eco_page.ls1) 

LOC    OBJ             LINE     SOURCE

                          1     ; ./eco_page.src generated from: .\eco_page.c
                          2     ; COMPILER INVOKED BY:
                          3     ;        C:\Keil\C51\BIN\C51.exe .\eco_page.c BROWSE DEBUG CODE LISTINCLUDE SYMBOLS PREP
                               RINT ROM(LARGE) INCDIR(../../Include) SRC(./eco_page.src)
                          4     
                          5     $nomod51 
                          6     
                          7     NAME    ECO_PAGE
                          8     
 00A0.7                   9     PWR_UP  BIT     0A0H.7
 0080                    10     P0      DATA    080H
 0090                    11     P1      DATA    090H
 00D0.6                  12     AC      BIT     0D0H.6
 0080.5                  13     T0      BIT     080H.5
 00B3                    14     SPI_CTRL        DATA    0B3H
 0080.6                  15     T1      BIT     080H.6
 00A8.7                  16     EA      BIT     0A8H.7
 0090.0                  17     T2      BIT     090H.0
 00A0.6                  18     CE      BIT     0A0H.6
 00BE                    19     DEV_OFFSET      DATA    0BEH
 00A0.1                  20     CLK1    BIT     0A0H.1
 0090.2                  21     DIN0    BIT     090H.2
 00A0.5                  22     CLK2    BIT     0A0H.5
 0090.0                  23     DIO0    BIT     090H.0
 0083                    24     DPH0    DATA    083H
 0090.1                  25     DIO1    BIT     090H.1
 00A8                    26     IE      DATA    0A8H
 0085                    27     DPH1    DATA    085H
 0080.0                  28     DIO2    BIT     080H.0
 0080.1                  29     DIO3    BIT     080H.1
 0080.0                  30     P0_0    BIT     080H.0
 0090.0                  31     P1_0    BIT     090H.0
 0080.2                  32     DIO4    BIT     080H.2
 0080.1                  33     P0_1    BIT     080H.1
 0082                    34     DPL0    DATA    082H
 0090.1                  35     P1_1    BIT     090H.1
 0080.3                  36     DIO5    BIT     080H.3
 0080.2                  37     P0_2    BIT     080H.2
 0084                    38     DPL1    DATA    084H
 0090.2                  39     P1_2    BIT     090H.2
 0080.4                  40     DIO6    BIT     080H.4
 0080.3                  41     P0_3    BIT     080H.3
 0080.5                  42     DIO7    BIT     080H.5
 0080.4                  43     P0_4    BIT     080H.4
 00A4                    44     ADCSTATIC       DATA    0A4H
 0080.6                  45     DIO8    BIT     080H.6
 0080.5                  46     P0_5    BIT     080H.5
 00C8.6                  47     EXF2    BIT     0C8H.6
 00A0.3                  48     CS      BIT     0A0H.3
 0080.7                  49     DIO9    BIT     080H.7
 0080.6                  50     P0_6    BIT     080H.6
 0080.7                  51     P0_7    BIT     080H.7
 00A8.4                  52     ES      BIT     0A8H.4
 00B8                    53     IP      DATA    0B8H
 00A0.0                  54     DATA?   BIT     0A0H.0
 0098.0                  55     RI      BIT     098H.0
 00D0.7                  56     CY      BIT     0D0H.7
 0098.1                  57     TI      BIT     098H.1
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/22/09 16:13:51 PAGE     2

 00BC                    58     T1_1V2  DATA    0BCH
 008F                    59     SPC_FNC DATA    08FH
 00BD                    60     T2_1V2  DATA    0BDH
 00CB                    61     RCAP2H  DATA    0CBH
 00B8.4                  62     PS      BIT     0B8H.4
 0081                    63     SP      DATA    081H
 00D0.2                  64     OV      BIT     0D0H.2
 00B6                    65     CK_CTRL DATA    0B6H
 00CA                    66     RCAP2L  DATA    0CAH
 00B5                    67     TICK_DV DATA    0B5H
 00B1                    68     RSTREAS DATA    0B1H
 00C8.1                  69     C_T2    BIT     0C8H.1
 00E8.4                  70     EWDI    BIT     0E8H.4
 00A1                    71     ADCCON  DATA    0A1H
 00C8.5                  72     RCLK    BIT     0C8H.5
 00A2                    73     ADCDATAH        DATA    0A2H
 0091                    74     EXIF    DATA    091H
 00C8.4                  75     TCLK    BIT     0C8H.4
 00A0.6                  76     DR2_CE  BIT     0A0H.6
 00A3                    77     ADCDATAL        DATA    0A3H
 0099                    78     SBUF    DATA    099H
 0087                    79     PCON    DATA    087H
 0098                    80     SCON    DATA    098H
 00F8.4                  81     PWDI    BIT     0F8H.4
 0089                    82     TMOD    DATA    089H
 0088                    83     TCON    DATA    088H
 00D8.3                  84     WDTI    BIT     0D8H.3
 00AA                    85     PWMDUTY DATA    0AAH
 0088.1                  86     IE0     BIT     088H.1
 0088.3                  87     IE1     BIT     088H.3
 0094                    88     P0_DIR  DATA    094H
 00F0                    89     B       DATA    0F0H
 0096                    90     P1_DIR  DATA    096H
 0095                    91     P0_ALT  DATA    095H
 0097                    92     P1_ALT  DATA    097H
 00C8.0                  93     CP_RL2  BIT     0C8H.0
 00A0.2                  94     DR1     BIT     0A0H.2
 00E0                    95     ACC     DATA    0E0H
 00A0.6                  96     DR2     BIT     0A0H.6
 00B7                    97     TEST_MODE       DATA    0B7H
 00B4                    98     SPICLK  DATA    0B4H
 00C8.1                  99     CT2     BIT     0C8H.1
 00A8.1                 100     ET0     BIT     0A8H.1
 00A8.3                 101     ET1     BIT     0A8H.3
 0088.5                 102     TF0     BIT     088H.5
 0080.3                 103     INT0_N  BIT     080H.3
 00A8.5                 104     ET2     BIT     0A8H.5
 0088.7                 105     TF1     BIT     088H.7
 0080.4                 106     INT1_N  BIT     080H.4
 00C8.7                 107     TF2     BIT     0C8H.7
 0098.2                 108     RB8     BIT     098H.2
 008C                   109     TH0     DATA    08CH
 00A8.0                 110     EX0     BIT     0A8H.0
 0088.0                 111     IT0     BIT     088H.0
 008D                   112     TH1     DATA    08DH
 00A8.2                 113     EX1     BIT     0A8H.2
 0098.3                 114     TB8     BIT     098H.3
 0088.2                 115     IT1     BIT     088H.2
 00CD                   116     TH2     DATA    0CDH
 00AD                   117     REGX_CTRL       DATA    0ADH
 00E8.0                 118     EX2     BIT     0E8H.0
 00D0.0                 119     P       BIT     0D0H.0
 00E8.1                 120     EX3     BIT     0E8H.1
 0098.7                 121     SM0     BIT     098H.7
 008A                   122     TL0     DATA    08AH
 00E8.2                 123     EX4     BIT     0E8H.2
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/22/09 16:13:51 PAGE     3

 0098.6                 124     SM1     BIT     098H.6
 008B                   125     TL1     DATA    08BH
 00E8.3                 126     EX5     BIT     0E8H.3
 0098.5                 127     SM2     BIT     098H.5
 00CC                   128     TL2     DATA    0CCH
 00E8                   129     EIE     DATA    0E8H
 00B8.1                 130     PT0     BIT     0B8H.1
 00D0.3                 131     RS0     BIT     0D0H.3
 00B8.3                 132     PT1     BIT     0B8H.3
 00D0.4                 133     RS1     BIT     0D0H.4
 00B8.5                 134     PT2     BIT     0B8H.5
 0088.4                 135     TR0     BIT     088H.4
 00A9                   136     PWMCON  DATA    0A9H
 0088.6                 137     TR1     BIT     088H.6
 00C8.2                 138     TR2     BIT     0C8H.2
 00B8.0                 139     PX0     BIT     0B8H.0
 00B8.2                 140     PX1     BIT     0B8H.2
 00F8.0                 141     PX2     BIT     0F8H.0
 00F8.1                 142     PX3     BIT     0F8H.1
 00F8.2                 143     PX4     BIT     0F8H.2
 0083                   144     DPH     DATA    083H
 00F8.3                 145     PX5     BIT     0F8H.3
 00F8                   146     EIP     DATA    0F8H
 0082                   147     DPL     DATA    082H
 00C8.3                 148     EXEN2   BIT     0C8H.3
 00C8.0                 149     CPRL2   BIT     0C8H.0
 0098.4                 150     REN     BIT     098H.4
 00C8                   151     T2CON   DATA    0C8H
 0086                   152     DPS     DATA    086H
 00B2                   153     SPI_DATA        DATA    0B2H
 0092                   154     MPAGE   DATA    092H
 0080.1                 155     RXD     BIT     080H.1
 00A0.4                 156     DOUT2   BIT     0A0H.4
 00D8                   157     EICON   DATA    0D8H
 008E                   158     CKCON   DATA    08EH
 0080.2                 159     TXD     BIT     080H.2
 00A0                   160     RADIO   DATA    0A0H
 0080.7                 161     PWM     BIT     080H.7
 00D0.5                 162     F0      BIT     0D0H.5
 00D0.1                 163     F1      BIT     0D0H.1
 00AC                   164     REGX_LSB        DATA    0ACH
 00D0                   165     PSW     DATA    0D0H
 00AB                   166     REGX_MSB        DATA    0ABH
------                  167     ?PR?eco_page_init?ECO_PAGE               SEGMENT CODE 
------                  168     ?PR?eco_page_manager?ECO_PAGE            SEGMENT CODE 
------                  169     ?DT?eco_page_manager?ECO_PAGE            SEGMENT DATA OVERLAYABLE 
------                  170     ?DT?ECO_PAGE         SEGMENT DATA 
------                  171     ?ID?ECO_PAGE         SEGMENT IDATA 
                        172             EXTRN   CODE (_eeprom_read)
                        173             EXTRN   CODE (?C?ICALL2)
                        174             EXTRN   CODE (eeprom_init)
                        175             PUBLIC  ECO_PAGE_TABLE_INDEX
                        176             PUBLIC  ECO_PAGE_REGISTER7
                        177             PUBLIC  ECO_PAGE_REGISTER6
                        178             PUBLIC  ECO_PAGE_REGISTER5
                        179             PUBLIC  ECO_PAGE_REGISTER4
                        180             PUBLIC  ECO_PAGE_ADDR
                        181             PUBLIC  ECO_PAGE_REGISTER3
                        182             PUBLIC  ECO_PAGE_REGISTER2
                        183             PUBLIC  ECO_PAGE_REGISTER1
                        184             PUBLIC  ECO_PAGE_PREV_VID
                        185             PUBLIC  ECO_PAGE_PREV_PID
                        186             PUBLIC  ECO_PAGE_SPI_CONN
                        187             PUBLIC  ECO_PAGE_TABLE
                        188             PUBLIC  eco_page_manager
                        189             PUBLIC  eco_page_init
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/22/09 16:13:51 PAGE     4

                        190     
------                  191             RSEG  ?DT?eco_page_manager?ECO_PAGE
000000                  192     ?eco_page_manager?BYTE:
000004                  193             ORG  4
000004                  194             seg?140:   DS   2
000000                  195             ORG  0
000000                  196               i?141:   DS   2
000002                  197             ORG  2
000002                  198      page_index?142:   DS   2
                        199     
------                  200             RSEG  ?DT?ECO_PAGE
000000                  201      ECO_PAGE_TABLE:   DS   8
000008                  202     ECO_PAGE_SPI_CONN:   DS   1
000009                  203     ECO_PAGE_PREV_PID:   DS   1
00000A                  204     ECO_PAGE_PREV_VID:   DS   1
00000B                  205       ECO_PAGE_ADDR:   DS   2
00000D                  206     ECO_PAGE_TABLE_INDEX:   DS   1
                        207     
------                  208             RSEG  ?ID?ECO_PAGE
000000                  209     ECO_PAGE_REGISTER1:   DS   1
000001                  210     ECO_PAGE_REGISTER2:   DS   1
000002                  211     ECO_PAGE_REGISTER3:   DS   1
000003                  212     ECO_PAGE_REGISTER4:   DS   1
000004                  213     ECO_PAGE_REGISTER5:   DS   1
000005                  214     ECO_PAGE_REGISTER6:   DS   1
000006                  215     ECO_PAGE_REGISTER7:   DS   1
                        216     ; /*
                        217     ;  * Author(s): Wei-Han Chen (Embedded Platform Lab, NTHU)
                        218     ;  * Copyright (c) 2009 National Tsing Hua University (NTHU) 
                        219     ;  * Permission to copy, modify, and distribute this program is granted 
                        220     ;  * for noncommercial purposes, provided the author(s) and copyright
                        221     ;  * notice are retained. All other uses require explicit written
                        222     ;  * permission from NTHU. 
                        223     ;  *
                        224     ;  * Eco Paging Library 
                        225     ;  *
                        226     ;  * Wei-Han Chen <xwaynec@gmail.com> 
                        227     ;  * 2009/2/13
                        228     ;  */
                        229     ; 
                        230     ; #include "eco_page.h"
                        231     ; #include "eeprom/eeprom.h"
                        232     ; 
                        233     ; #define ECO_PAGE_SIZE 256
                        234     ; #define ECO_PAGE_ADDR_OFFSET  11      
                        235     ; 
                        236     ; #if ECO_PAGE_SIZE == 64
                        237     ;       
                        238     ;       #define ECO_PAGE_ENTRY  48
                        239     ;       #define ECO_PAGE_SHIFT  6
                        240     ;       #define ECO_PAGE_MASK   0x003F
                        241     ;       #define ECO_PAGE_MOV_MASK       0xFC00
                        242     ; 
                        243     ;       unsigned int idata ECO_PAGE_TABLE[63-ECO_PAGE_ADDR_OFFSET] = {0};
                        244     ;       //Eco page virtual address id
                        245     ;       unsigned int ECO_PAGE_PREV_VID;
                        246     ;       //Eco page physical address id 
                        247     ;       unsigned int ECO_PAGE_PREV_PID;
                        248     ; 
                        249     ; #elif ECO_PAGE_SIZE == 128
                        250     ;       
                        251     ;       #define ECO_PAGE_ENTRY 24       
                        252     ;       #define ECO_PAGE_SHIFT  7
                        253     ;       #define ECO_PAGE_MASK   0x007F
                        254     ;       #define ECO_PAGE_MOV_MASK       0xFE00
                        255     ; 
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/22/09 16:13:51 PAGE     5

                        256     ;       //unsigned int idata ECO_PAGE_TABLE[32-ECO_PAGE_ADDR_OFFSET] = {1,2,3,4,5,6,7,8,
                               9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24};
                        257     ;       unsigned int idata ECO_PAGE_TABLE[31-ECO_PAGE_ADDR_OFFSET];
                        258     ;       //Eco page virtual address id
                        259     ;       unsigned int ECO_PAGE_PREV_VID;
                        260     ;       //Eco page physical address id 
                        261     ;       unsigned int ECO_PAGE_PREV_PID;
                        262     ; 
                        263     ; #elif ECO_PAGE_SIZE == 256
                        264     ;       
                        265     ;       #define ECO_PAGE_ENTRY  (15-ECO_PAGE_ADDR_OFFSET)
                        266     ;       #define ECO_PAGE_SHIFT  8       
                        267     ;       #define ECO_PAGE_MASK   0x00FF
                        268     ;       #define ECO_PAGE_MOV_MASK       0xFF00
                        269     ;       
                        270     ; 
                        271     ;       unsigned int ECO_PAGE_TABLE[ECO_PAGE_ENTRY];
                        272     ;       //Eco page virtual address id
                        273     ;       unsigned char ECO_PAGE_PREV_VID;
                        274     ;       //Eco page physical address id 
                        275     ;       unsigned char ECO_PAGE_PREV_PID;
                        276     ; 
                        277     ; #endif
                        278     ; 
                        279     ; unsigned char ECO_PAGE_TABLE_INDEX;
                        280     ; 
                        281     ; unsigned int ECO_PAGE_ADDR;
                        282     ; 
                        283     ; unsigned char ECO_PAGE_SPI_CONN;
                        284     ; 
                        285     ; unsigned char idata ECO_PAGE_REGISTER1;
                        286     ; unsigned char idata ECO_PAGE_REGISTER2;
                        287     ; unsigned char idata ECO_PAGE_REGISTER3;
                        288     ; unsigned char idata ECO_PAGE_REGISTER4;
                        289     ; unsigned char idata ECO_PAGE_REGISTER5;
                        290     ; unsigned char idata ECO_PAGE_REGISTER6;
                        291     ; unsigned char idata ECO_PAGE_REGISTER7;
                        292     ; 
                        293     ; 
                        294     ; void eco_page_init()
                        295     
------                  296             RSEG  ?PR?eco_page_init?ECO_PAGE
000000                  297     eco_page_init:
                        298                             ; SOURCE LINE # 79
                        299     ; {
                        300                             ; SOURCE LINE # 80
                        301     ;       ECO_PAGE_TABLE_INDEX = 0;
                        302                             ; SOURCE LINE # 81
000000 E4               303             CLR     A
000001 F500       F     304             MOV     ECO_PAGE_TABLE_INDEX,A
                        305     ;       
                        306     ;       ECO_PAGE_ADDR = 0;
                        307                             ; SOURCE LINE # 83
000003 F500       F     308             MOV     ECO_PAGE_ADDR,A
000005 F500       F     309             MOV     ECO_PAGE_ADDR+01H,A
                        310     ;       ECO_PAGE_PREV_VID = 0;
                        311                             ; SOURCE LINE # 84
000007 F500       F     312             MOV     ECO_PAGE_PREV_VID,A
                        313     ;       ECO_PAGE_PREV_PID = 0;
                        314                             ; SOURCE LINE # 85
000009 F500       F     315             MOV     ECO_PAGE_PREV_PID,A
                        316     ; 
                        317     ;       /*
                        318     ;       ECO_PAGE_TABLE[0] = 0; 
                        319     ;       ECO_PAGE_TABLE[1] = 0; 
                        320     ;       ECO_PAGE_TABLE[2] = 0;
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/22/09 16:13:51 PAGE     6

                        321     ;       ECO_PAGE_TABLE[3] = 0; 
                        322     ;       ECO_PAGE_TABLE[4] = 0; 
                        323     ;       ECO_PAGE_TABLE[5] = 0; 
                        324     ;       ECO_PAGE_TABLE[6] = 0; 
                        325     ;       ECO_PAGE_TABLE[7] = 0; 
                        326     ;       ECO_PAGE_TABLE[8] = 0; 
                        327     ;       ECO_PAGE_TABLE[9] = 0;
                        328     ;       ECO_PAGE_TABLE[10] = 0; 
                        329     ;       ECO_PAGE_TABLE[11] = 0; 
                        330     ;       ECO_PAGE_TABLE[12] = 0;
                        331     ;       */      
                        332     ; }
                        333                             ; SOURCE LINE # 102
00000B 22               334             RET     
                        335     ; END OF eco_page_init
                        336     
                        337     ; 
                        338     ; //LRU page replacement
                        339     ; /*void eco_page_manager()
                        340     ; {
                        341     ;       unsigned int i;
                        342     ;       unsigned int page_index = -1;
                        343     ; 
                        344     ;       //if page id is the same with the last page id
                        345     ;       if(((ECO_PAGE_ADDR >> 8) & 0x7F) == (ECO_PAGE_PREV_PID & 0x7F))
                        346     ;       {
                        347     ;               //virtual address id + function offset
                        348     ;               ECO_PAGE_ADDR = (ECO_PAGE_PREV_VID << 8) + (ECO_PAGE_ADDR & 0x00FF);
                        349     ;               #pragma asm
                        350     ;               //eco_page_function_call        
                        351     ;               //MOV     DPH,ECO_PAGE_ADDR
                        352     ;               //MOV     DPL,ECO_PAGE_ADDR+01H
                        353     ;               //LCALL ?C?ICALL2
                        354     ;               #pragma endasm
                        355     ;               return ;
                        356     ;       }       
                        357     ;       
                        358     ;       //check page table
                        359     ;       for(i=0;i<ECO_PAGE_ENTRY;i++)
                        360     ;       {
                        361     ;               if((ECO_PAGE_ADDR >> 8) == ECO_PAGE_TABLE[i])
                        362     ;               {
                        363     ;                       page_index = i;
                        364     ;                       
                        365     ;                       //set LRU bit is 1
                        366     ;                       ECO_PAGE_TABLE[i] = ECO_PAGE_TABLE[i] | 0x80;
                        367     ;                       break;
                        368     ;               }
                        369     ;       }
                        370     ; 
                        371     ;       if(page_index != -1)
                        372     ;       {
                        373     ;               //store function physical addres id 
                        374     ;               ECO_PAGE_PREV_PID = ECO_PAGE_ADDR >> 8;
                        375     ;       
                        376     ;               //memory page is in ram
                        377     ;               ECO_PAGE_ADDR = ((page_index + ECO_PAGE_ADDR_OFFSET) << 8) + (ECO_PAGE_A
                               DDR & 0x00FF);
                        378     ; 
                        379     ;               //cache the virtual address id
                        380     ;               ECO_PAGE_PREV_VID = ECO_PAGE_ADDR >> 8;
                        381     ; 
                        382     ;               #pragma asm
                        383     ;               //eco_page_function_call
                        384     ;               //MOV     DPH,ECO_PAGE_ADDR
                        385     ;               //MOV     DPL,ECO_PAGE_ADDR+01H
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/22/09 16:13:51 PAGE     7

                        386     ;               //LCALL ?C?ICALL2
                        387     ;               #pragma endasm
                        388     ; 
                        389     ;               return ;
                        390     ;       }       
                        391     ;       else
                        392     ;       {
                        393     ;               //page fault
                        394     ;               for(i=ECO_PAGE_TABLE_INDEX+1; ;i=(i+1)%10)
                        395     ;               {
                        396     ;                       if((ECO_PAGE_TABLE[i] & 0x80) == 0x80)
                        397     ;                       {
                        398     ;                               //LRU bit is 1 and then set this bit is 0
                        399     ;                               ECO_PAGE_TABLE[i] = ECO_PAGE_TABLE[i] & 0x7F;
                        400     ;                       }
                        401     ;                       else
                        402     ;                       {
                        403     ;                               unsigned char xdata *seg = (unsigned char xdata *)((i + 
                               ECO_PAGE_ADDR_OFFSET)<<8);
                        404     ;                               unsigned int j;
                        405     ;                               
                        406     ;                               //memory page is in ram
                        407     ;                               eeprom_init();
                        408     ; 
                        409     ;                               //mov code from eeprom to external ram
                        410     ;                               for(j=0;j<256;j++)
                        411     ;                               {
                        412     ;                                       *(seg+j) = eeprom_read(ECO_ADDR_SHIFT(ECO_PAGE_A
                               DDR & 0xFF00 ) +j);
                        413     ;                               }
                        414     ;                               
                        415     ;                               //update page table to connect this physical address id 
                               with virtual address id 
                        416     ;                               ECO_PAGE_TABLE[i] = ECO_PAGE_ADDR >> 8;
                        417     ; 
                        418     ;                               //store physical address id
                        419     ;                               ECO_PAGE_PREV_PID = ECO_PAGE_TABLE[i];
                        420     ; 
                        421     ;                               //update page address e.g.  (page_id<<8) + page_offset
                        422     ;                               ECO_PAGE_ADDR = ((i + ECO_PAGE_ADDR_OFFSET) << 8) + (ECO
                               _PAGE_ADDR & 0x00FF);
                        423     ; 
                        424     ;                               //store virtual address id 
                        425     ;                               ECO_PAGE_PREV_VID = ECO_PAGE_ADDR >> 8; 
                        426     ; 
                        427     ;                               //mov to the next index
                        428     ;                               ECO_PAGE_TABLE_INDEX = i;
                        429     ; 
                        430     ;                               //jump  to function address
                        431     ;                               #pragma asm
                        432     ;                               //eco_page_function_call
                        433     ;                               //MOV     DPH,ECO_PAGE_ADDR
                        434     ;                               //MOV     DPL,ECO_PAGE_ADDR+01H
                        435     ;                               //LCALL        ?C?ICALL2               
                        436     ;                               #pragma endasm
                        437     ;                               
                        438     ;                               return ;
                        439     ;                               
                        440     ;                       }
                        441     ;               }
                        442     ;                       
                        443     ;       }
                        444     ;                               
                        445     ; }
                        446     ; */
                        447     ; 
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/22/09 16:13:51 PAGE     8

                        448     ; void eco_page_manager()
                        449     
------                  450             RSEG  ?PR?eco_page_manager?ECO_PAGE
000000                  451     eco_page_manager:
                        452             USING   0
                        453                             ; SOURCE LINE # 214
                        454     ; {
                        455                             ; SOURCE LINE # 215
                        456     ;       unsigned int i;
                        457     ;       unsigned int page_index = -1; 
                        458                             ; SOURCE LINE # 217
000000 74FF             459             MOV     A,#0FFH
000002 F500       F     460             MOV     page_index?142,A
000004 F500       F     461             MOV     page_index?142+01H,A
                        462     ; 
                        463     ;       //Check POP instruction 
                        464     ;       //for(i=0;i<10;i++)
                        465     ;       //{    
                        466     ;       //      blink_led();
                        467     ;       //      mdelay(200);
                        468     ;       //}    
                        469     ;       //mdelay(1000);
                        470     ;       
                        471     ;       //if page id is the same with the last page id
                        472     ;       if((ECO_PAGE_ADDR >> ECO_PAGE_SHIFT) == ECO_PAGE_PREV_PID)
                        473                             ; SOURCE LINE # 228
000006 E500       F     474             MOV     A,ECO_PAGE_ADDR
000008 B50037           475             CJNE    A,ECO_PAGE_PREV_PID,?C0002
                        476     ;       {
                        477                             ; SOURCE LINE # 229
                        478     ;               //virtual address id + function offset
                        479     ;               ECO_PAGE_ADDR = (ECO_PAGE_PREV_VID << 8) + (ECO_PAGE_ADDR & 0x00FF);
                        480                             ; SOURCE LINE # 231
00000B E500       F     481             MOV     A,ECO_PAGE_PREV_VID
00000D FE               482             MOV     R6,A
00000E 7C00             483             MOV     R4,#00H
000010 E4               484             CLR     A
000011 2500       F     485             ADD     A,ECO_PAGE_ADDR+01H
000013 F500       F     486             MOV     ECO_PAGE_ADDR+01H,A
000015 EC               487             MOV     A,R4
000016 3E               488             ADDC    A,R6
000017 F500       F     489             MOV     ECO_PAGE_ADDR,A
                        490     ;               #pragma asm
000019 7800       F     491             MOV     R0,#LOW (ECO_PAGE_REGISTER1)
00001B E6               492             MOV     A,@R0
00001C F9               493             MOV     R1,A
00001D 7800       F     494             MOV     R0,#LOW (ECO_PAGE_REGISTER2)
00001F E6               495             MOV     A,@R0
000020 FA               496             MOV     R2,A
000021 7800       F     497             MOV     R0,#LOW (ECO_PAGE_REGISTER3)
000023 E6               498             MOV     A,@R0
000024 FB               499             MOV     R3,A
000025 7800       F     500             MOV     R0,#LOW (ECO_PAGE_REGISTER4)
000027 E6               501             MOV     A,@R0
000028 FC               502             MOV     R4,A
000029 7800       F     503             MOV     R0,#LOW (ECO_PAGE_REGISTER5)
00002B E6               504             MOV     A,@R0
00002C FD               505             MOV     R5,A
00002D 7800       F     506             MOV     R0,#LOW (ECO_PAGE_REGISTER6)
00002F E6               507             MOV     A,@R0
000030 FE               508             MOV     R6,A
000031 7800       F     509             MOV     R0,#LOW (ECO_PAGE_REGISTER7)
000033 E6               510             MOV     A,@R0
000034 FF               511             MOV     R7,A
000035 8500B3     F     512             MOV     SPI_CTRL,ECO_PAGE_SPI_CONN
000038 850083     F     513             MOV     DPH,ECO_PAGE_ADDR
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/22/09 16:13:51 PAGE     9

00003B 850082     F     514             MOV     DPL,ECO_PAGE_ADDR+01H
00003E 120000     E     515             LCALL   ?C?ICALL2
                        516     ;               //eco_page_function_call
                        517               
000041 22               518             RET     
                        519     ;               #pragma endasm
                        520     ;               return ;
                        521     ;       }       
                        522                             ; SOURCE LINE # 236
000042                  523     ?C0002:
                        524     ;                               
                        525     ;       //Check Table   
                        526     ;       for(i=0;i<ECO_PAGE_ENTRY;i++)
                        527                             ; SOURCE LINE # 239
000042 E4               528             CLR     A
000043 F500       F     529             MOV     i?141,A
000045 F500       F     530             MOV     i?141+01H,A
000047                  531     ?C0004:
                        532     ;       {   
                        533                             ; SOURCE LINE # 240
                        534     ;               if((ECO_PAGE_ADDR >> ECO_PAGE_SHIFT) == ECO_PAGE_TABLE[i])
                        535                             ; SOURCE LINE # 241
000047 E500       F     536             MOV     A,i?141+01H
000049 25E0             537             ADD     A,ACC
00004B 2400       F     538             ADD     A,#LOW (ECO_PAGE_TABLE)
00004D F8               539             MOV     R0,A
00004E E6               540             MOV     A,@R0
00004F FC               541             MOV     R4,A
000050 08               542             INC     R0
000051 E6               543             MOV     A,@R0
000052 FD               544             MOV     R5,A
000053 E500       F     545             MOV     A,ECO_PAGE_ADDR
000055 B5050C           546             CJNE    A,AR5,?C0006
000058 E4               547             CLR     A
000059 B50408           548             CJNE    A,AR4,?C0006
                        549     ;               {
                        550                             ; SOURCE LINE # 242
                        551     ;                       page_index = i;
                        552                             ; SOURCE LINE # 243
00005C 850000     F     553             MOV     page_index?142,i?141
00005F 850000     F     554             MOV     page_index?142+01H,i?141+01H
                        555     ;                       break;
                        556                             ; SOURCE LINE # 244
000062 800E             557             SJMP    ?C0005
                        558     ;               }
                        559                             ; SOURCE LINE # 245
                        560     ;       }
                        561                             ; SOURCE LINE # 246
000064                  562     ?C0006:
000064 0500       F     563             INC     i?141+01H
000066 E500       F     564             MOV     A,i?141+01H
000068 7002             565             JNZ     ?C0015
00006A 0500       F     566             INC     i?141
00006C                  567     ?C0015:
00006C 6404             568             XRL     A,#04H
00006E 4500       F     569             ORL     A,i?141
000070 70D5             570             JNZ     ?C0004
000072                  571     ?C0005:
                        572     ; 
                        573     ;       if(page_index != -1) 
                        574                             ; SOURCE LINE # 248
000072 E500       F     575             MOV     A,page_index?142+01H
000074 F4               576             CPL     A
000075 7003             577             JNZ     ?C0016
000077 E500       F     578             MOV     A,page_index?142
000079 F4               579             CPL     A
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/22/09 16:13:51 PAGE    10

00007A                  580     ?C0016:
00007A 6041             581             JZ      ?C0008
                        582     ;       {  
                        583                             ; SOURCE LINE # 249
                        584     ;               //store function physical addres id 
                        585     ;               ECO_PAGE_PREV_PID = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;
                        586                             ; SOURCE LINE # 251
00007C E500       F     587             MOV     A,ECO_PAGE_ADDR
00007E F500       F     588             MOV     ECO_PAGE_PREV_PID,A
                        589     ;       
                        590     ;               //memory page is in ram
                        591     ;               ECO_PAGE_ADDR = ((page_index + ECO_PAGE_ADDR_OFFSET) << ECO_PAGE_SHIFT) 
                               + (ECO_PAGE_ADDR & ECO_PAGE_MASK);
                        592                             ; SOURCE LINE # 254
000080 E500       F     593             MOV     A,page_index?142+01H
000082 240B             594             ADD     A,#0BH
000084 FF               595             MOV     R7,A
000085 EF               596             MOV     A,R7
000086 FE               597             MOV     R6,A
000087 7C00             598             MOV     R4,#00H
000089 E4               599             CLR     A
00008A 2500       F     600             ADD     A,ECO_PAGE_ADDR+01H
00008C F500       F     601             MOV     ECO_PAGE_ADDR+01H,A
00008E EC               602             MOV     A,R4
00008F 3E               603             ADDC    A,R6
000090 F500       F     604             MOV     ECO_PAGE_ADDR,A
                        605     ; 
                        606     ;               //cache the virtual address id
                        607     ;               ECO_PAGE_PREV_VID = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;
                        608                             ; SOURCE LINE # 257
000092 F500       F     609             MOV     ECO_PAGE_PREV_VID,A
                        610     ; 
                        611     ;               #pragma asm
000094 7800       F     612             MOV     R0,#LOW (ECO_PAGE_REGISTER1)
000096 E6               613             MOV     A,@R0
000097 F9               614             MOV     R1,A
000098 7800       F     615             MOV     R0,#LOW (ECO_PAGE_REGISTER2)
00009A E6               616             MOV     A,@R0
00009B FA               617             MOV     R2,A
00009C 7800       F     618             MOV     R0,#LOW (ECO_PAGE_REGISTER3)
00009E E6               619             MOV     A,@R0
00009F FB               620             MOV     R3,A
0000A0 7800       F     621             MOV     R0,#LOW (ECO_PAGE_REGISTER4)
0000A2 E6               622             MOV     A,@R0
0000A3 FC               623             MOV     R4,A
0000A4 7800       F     624             MOV     R0,#LOW (ECO_PAGE_REGISTER5)
0000A6 E6               625             MOV     A,@R0
0000A7 FD               626             MOV     R5,A
0000A8 7800       F     627             MOV     R0,#LOW (ECO_PAGE_REGISTER6)
0000AA E6               628             MOV     A,@R0
0000AB FE               629             MOV     R6,A
0000AC 7800       F     630             MOV     R0,#LOW (ECO_PAGE_REGISTER7)
0000AE E6               631             MOV     A,@R0
0000AF FF               632             MOV     R7,A
0000B0 8500B3     F     633             MOV     SPI_CTRL,ECO_PAGE_SPI_CONN
0000B3 850083     F     634             MOV     DPH,ECO_PAGE_ADDR
0000B6 850082     F     635             MOV     DPL,ECO_PAGE_ADDR+01H
0000B9 120000     E     636             LCALL   ?C?ICALL2
                        637     ;               //eco_page_function_call
                        638               
                        639     ;               //MOV     DPH,ECO_PAGE_ADDR
                        640               
                        641     ;               //MOV     DPL,ECO_PAGE_ADDR+01H
                        642               
                        643     ;               //LCALL ?C?ICALL2
                        644               
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/22/09 16:13:51 PAGE    11

                        645     ;               #pragma endasm
                        646     ;       }   
                        647                             ; SOURCE LINE # 265
0000BC 22               648             RET     
0000BD                  649     ?C0008:
                        650     ;       else
                        651     ;       {
                        652                             ; SOURCE LINE # 267
                        653     ;               //page fault
                        654     ;               // Move Data from EEPROM to iRAM 
                        655     ;               unsigned char xdata *seg = (unsigned char xdata *)((ECO_PAGE_TABLE_INDEX
                                + ECO_PAGE_ADDR_OFFSET) << ECO_PAGE_SHIFT);
                        656                             ; SOURCE LINE # 270
0000BD E500       F     657             MOV     A,ECO_PAGE_TABLE_INDEX
0000BF 240B             658             ADD     A,#0BH
0000C1 FF               659             MOV     R7,A
0000C2 E4               660             CLR     A
0000C3 33               661             RLC     A
0000C4 EF               662             MOV     A,R7
0000C5 F500       F     663             MOV     seg?140,A
0000C7 750000     F     664             MOV     seg?140+01H,#00H
                        665     ;               
                        666     ;               //memory page is in ram
                        667     ;               eeprom_init();
                        668                             ; SOURCE LINE # 273
0000CA 120000     E     669             LCALL   eeprom_init
                        670     ; 
                        671     ;               //mov code from eeprom to external ram
                        672     ;               for(i=0;i<ECO_PAGE_SIZE;i++)
                        673                             ; SOURCE LINE # 276
0000CD E4               674             CLR     A
0000CE F500       F     675             MOV     i?141,A
0000D0 F500       F     676             MOV     i?141+01H,A
0000D2                  677     ?C0010:
                        678     ;               {
                        679                             ; SOURCE LINE # 277
                        680     ;                       *(seg+i) = eeprom_read(ECO_ADDR_SHIFT(ECO_PAGE_ADDR & ECO_PAGE_M
                               OV_MASK) +i);
                        681                             ; SOURCE LINE # 278
0000D2 E4               682             CLR     A
0000D3 2403             683             ADD     A,#03H
0000D5 FF               684             MOV     R7,A
0000D6 E4               685             CLR     A
0000D7 3500       F     686             ADDC    A,ECO_PAGE_ADDR
0000D9 CF               687             XCH     A,R7
0000DA 2500       F     688             ADD     A,i?141+01H
0000DC CF               689             XCH     A,R7
0000DD 3500       F     690             ADDC    A,i?141
0000DF FE               691             MOV     R6,A
0000E0 120000     E     692             LCALL   _eeprom_read
0000E3 E500       F     693             MOV     A,seg?140+01H
0000E5 2500       F     694             ADD     A,i?141+01H
0000E7 F582             695             MOV     DPL,A
0000E9 E500       F     696             MOV     A,seg?140
0000EB 3500       F     697             ADDC    A,i?141
0000ED F583             698             MOV     DPH,A
0000EF EF               699             MOV     A,R7
0000F0 F0               700             MOVX    @DPTR,A
                        701     ;               }
                        702                             ; SOURCE LINE # 279
0000F1 0500       F     703             INC     i?141+01H
0000F3 E500       F     704             MOV     A,i?141+01H
0000F5 7002             705             JNZ     ?C0017
0000F7 0500       F     706             INC     i?141
0000F9                  707     ?C0017:
0000F9 C3               708             CLR     C
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/22/09 16:13:51 PAGE    12

0000FA E500       F     709             MOV     A,i?141
0000FC 9401             710             SUBB    A,#01H
0000FE 40D2             711             JC      ?C0010
000100                  712     ?C0011:
                        713     ;               
                        714     ;               //update page table to connect this physical address id with virtual add
                               ress id 
                        715     ;               ECO_PAGE_TABLE[ECO_PAGE_TABLE_INDEX] = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;
                        716                             ; SOURCE LINE # 282
000100 E500       F     717             MOV     A,ECO_PAGE_ADDR
000102 FF               718             MOV     R7,A
000103 E500       F     719             MOV     A,ECO_PAGE_TABLE_INDEX
000105 25E0             720             ADD     A,ACC
000107 2400       F     721             ADD     A,#LOW (ECO_PAGE_TABLE)
000109 F8               722             MOV     R0,A
00010A 7600             723             MOV     @R0,#00H
00010C 08               724             INC     R0
00010D A607             725             MOV     @R0,AR7
                        726     ; 
                        727     ;               //store physical address id
                        728     ;               ECO_PAGE_PREV_PID = ECO_PAGE_TABLE[ECO_PAGE_TABLE_INDEX];
                        729                             ; SOURCE LINE # 285
00010F E500       F     730             MOV     A,ECO_PAGE_TABLE_INDEX
000111 25E0             731             ADD     A,ACC
000113 2400       F     732             ADD     A,#LOW (ECO_PAGE_TABLE)
000115 F8               733             MOV     R0,A
000116 08               734             INC     R0
000117 E6               735             MOV     A,@R0
000118 F500       F     736             MOV     ECO_PAGE_PREV_PID,A
                        737     ; 
                        738     ;               //update page address
                        739     ;               ECO_PAGE_ADDR = ((ECO_PAGE_TABLE_INDEX + ECO_PAGE_ADDR_OFFSET) << ECO_PA
                               GE_SHIFT) + (ECO_PAGE_ADDR & ECO_PAGE_MASK);
                        740                             ; SOURCE LINE # 288
00011A E500       F     741             MOV     A,ECO_PAGE_TABLE_INDEX
00011C 240B             742             ADD     A,#0BH
00011E FF               743             MOV     R7,A
00011F EF               744             MOV     A,R7
000120 FE               745             MOV     R6,A
000121 7C00             746             MOV     R4,#00H
000123 E4               747             CLR     A
000124 2500       F     748             ADD     A,ECO_PAGE_ADDR+01H
000126 F500       F     749             MOV     ECO_PAGE_ADDR+01H,A
000128 EC               750             MOV     A,R4
000129 3E               751             ADDC    A,R6
00012A F500       F     752             MOV     ECO_PAGE_ADDR,A
                        753     ; 
                        754     ;               //store virtual address id 
                        755     ;               ECO_PAGE_PREV_VID = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;    
                        756                             ; SOURCE LINE # 291
00012C F500       F     757             MOV     ECO_PAGE_PREV_VID,A
                        758     ; 
                        759     ;               //mov to the next index
                        760     ;               ECO_PAGE_TABLE_INDEX++;
                        761                             ; SOURCE LINE # 294
00012E 0500       F     762             INC     ECO_PAGE_TABLE_INDEX
                        763     ;                       
                        764     ;               //jump  to function address
                        765     ;               #pragma asm
000130 7800       F     766             MOV     R0,#LOW (ECO_PAGE_REGISTER1)
000132 E6               767             MOV     A,@R0
000133 F9               768             MOV     R1,A
000134 7800       F     769             MOV     R0,#LOW (ECO_PAGE_REGISTER2)
000136 E6               770             MOV     A,@R0
000137 FA               771             MOV     R2,A
000138 7800       F     772             MOV     R0,#LOW (ECO_PAGE_REGISTER3)
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/22/09 16:13:51 PAGE    13

00013A E6               773             MOV     A,@R0
00013B FB               774             MOV     R3,A
00013C 7800       F     775             MOV     R0,#LOW (ECO_PAGE_REGISTER4)
00013E E6               776             MOV     A,@R0
00013F FC               777             MOV     R4,A
000140 7800       F     778             MOV     R0,#LOW (ECO_PAGE_REGISTER5)
000142 E6               779             MOV     A,@R0
000143 FD               780             MOV     R5,A
000144 7800       F     781             MOV     R0,#LOW (ECO_PAGE_REGISTER6)
000146 E6               782             MOV     A,@R0
000147 FE               783             MOV     R6,A
000148 7800       F     784             MOV     R0,#LOW (ECO_PAGE_REGISTER7)
00014A E6               785             MOV     A,@R0
00014B FF               786             MOV     R7,A
00014C 8500B3     F     787             MOV     SPI_CTRL,ECO_PAGE_SPI_CONN
00014F 850083     F     788             MOV     DPH,ECO_PAGE_ADDR
000152 850082     F     789             MOV     DPL,ECO_PAGE_ADDR+01H
000155 120000     E     790             LCALL   ?C?ICALL2
                        791     ;               //eco_page_function_call
                        792               
                        793     ;               //MOV     DPH,ECO_PAGE_ADDR
                        794               
                        795     ;               //MOV     DPL,ECO_PAGE_ADDR+01H
                        796               
                        797     ;               //LCALL        ?C?ICALL2               
                        798               
                        799     ;               #pragma endasm
                        800     ; 
                        801     ;       }
                        802                             ; SOURCE LINE # 304
                        803     ; 
                        804     ; }
                        805                             ; SOURCE LINE # 306
000158                  806     ?C0003:
000158 22               807             RET     
                        808     ; END OF eco_page_manager
                        809     
                        810             END
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/22/09 16:13:51 PAGE    14

SYMBOL TABLE LISTING
------ ----- -------


N A M E                                    T Y P E  V A L U E     ATTRIBUTES

?C0002. . . . . . . . . . . . . . . . .    C  ADDR  0042H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0003. . . . . . . . . . . . . . . . .    C  ADDR  0158H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0004. . . . . . . . . . . . . . . . .    C  ADDR  0047H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0005. . . . . . . . . . . . . . . . .    C  ADDR  0072H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0006. . . . . . . . . . . . . . . . .    C  ADDR  0064H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0008. . . . . . . . . . . . . . . . .    C  ADDR  00BDH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0010. . . . . . . . . . . . . . . . .    C  ADDR  00D2H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0011. . . . . . . . . . . . . . . . .    C  ADDR  0100H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0015. . . . . . . . . . . . . . . . .    C  ADDR  006CH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0016. . . . . . . . . . . . . . . . .    C  ADDR  007AH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0017. . . . . . . . . . . . . . . . .    C  ADDR  00F9H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C?ICALL2 . . . . . . . . . . . . . . .    C  ADDR  -------       EXT
?DT?ECO_PAGE. . . . . . . . . . . . . .    D  SEG   00000EH       REL=UNIT, ALN=BYTE
?DT?ECO_PAGE_MANAGER?ECO_PAGE . . . . .    D  SEG   000006H       REL=UNIT, ALN=BYTE
?ECO_PAGE_MANAGER?BYTE. . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?ECO_PAGE_MANAGER?ECO_PAGE
?ID?ECO_PAGE. . . . . . . . . . . . . .    I  SEG   000007H       REL=UNIT, ALN=BYTE
?PR?ECO_PAGE_INIT?ECO_PAGE. . . . . . .    C  SEG   00000CH       REL=UNIT, ALN=BYTE
?PR?ECO_PAGE_MANAGER?ECO_PAGE . . . . .    C  SEG   000159H       REL=UNIT, ALN=BYTE
_EEPROM_READ. . . . . . . . . . . . . .    C  ADDR  -------       EXT
AC. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.6   A   
ACC . . . . . . . . . . . . . . . . . .    D  ADDR  00E0H     A   
ADCCON. . . . . . . . . . . . . . . . .    D  ADDR  00A1H     A   
ADCDATAH. . . . . . . . . . . . . . . .    D  ADDR  00A2H     A   
ADCDATAL. . . . . . . . . . . . . . . .    D  ADDR  00A3H     A   
ADCSTATIC . . . . . . . . . . . . . . .    D  ADDR  00A4H     A   
AR4 . . . . . . . . . . . . . . . . . .    D  ADDR  0004H     A   
AR5 . . . . . . . . . . . . . . . . . .    D  ADDR  0005H     A   
AR7 . . . . . . . . . . . . . . . . . .    D  ADDR  0007H     A   
B . . . . . . . . . . . . . . . . . . .    D  ADDR  00F0H     A   
C_T2. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.1   A   
CE. . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.6   A   
CK_CTRL . . . . . . . . . . . . . . . .    D  ADDR  00B6H     A   
CKCON . . . . . . . . . . . . . . . . .    D  ADDR  008EH     A   
CLK1. . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.1   A   
CLK2. . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.5   A   
CP_RL2. . . . . . . . . . . . . . . . .    B  ADDR  00C8H.0   A   
CPRL2 . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.0   A   
CS. . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.3   A   
CT2 . . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.1   A   
CY. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.7   A   
DATA? . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.0   A   
DEV_OFFSET. . . . . . . . . . . . . . .    D  ADDR  00BEH     A   
DIN0. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.2   A   
DIO0. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.0   A   
DIO1. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.1   A   
DIO2. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.0   A   
DIO3. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.1   A   
DIO4. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.2   A   
DIO5. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.3   A   
DIO6. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.4   A   
DIO7. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.5   A   
DIO8. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.6   A   
DIO9. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.7   A   
DOUT2 . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.4   A   
DPH . . . . . . . . . . . . . . . . . .    D  ADDR  0083H     A   
DPH0. . . . . . . . . . . . . . . . . .    D  ADDR  0083H     A   
DPH1. . . . . . . . . . . . . . . . . .    D  ADDR  0085H     A   
DPL . . . . . . . . . . . . . . . . . .    D  ADDR  0082H     A   
DPL0. . . . . . . . . . . . . . . . . .    D  ADDR  0082H     A   
DPL1. . . . . . . . . . . . . . . . . .    D  ADDR  0084H     A   
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/22/09 16:13:51 PAGE    15

DPS . . . . . . . . . . . . . . . . . .    D  ADDR  0086H     A   
DR1 . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.2   A   
DR2 . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.6   A   
DR2_CE. . . . . . . . . . . . . . . . .    B  ADDR  00A0H.6   A   
EA. . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.7   A   
ECO_PAGE. . . . . . . . . . . . . . . .    -- ----  -------       
ECO_PAGE_ADDR . . . . . . . . . . . . .    D  ADDR  000BH     R   SEG=?DT?ECO_PAGE
ECO_PAGE_INIT . . . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?ECO_PAGE_INIT?ECO_PAGE
ECO_PAGE_MANAGER. . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
ECO_PAGE_PREV_PID . . . . . . . . . . .    D  ADDR  0009H     R   SEG=?DT?ECO_PAGE
ECO_PAGE_PREV_VID . . . . . . . . . . .    D  ADDR  000AH     R   SEG=?DT?ECO_PAGE
ECO_PAGE_REGISTER1. . . . . . . . . . .    I  ADDR  0000H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER2. . . . . . . . . . .    I  ADDR  0001H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER3. . . . . . . . . . .    I  ADDR  0002H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER4. . . . . . . . . . .    I  ADDR  0003H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER5. . . . . . . . . . .    I  ADDR  0004H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER6. . . . . . . . . . .    I  ADDR  0005H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER7. . . . . . . . . . .    I  ADDR  0006H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_SPI_CONN . . . . . . . . . . .    D  ADDR  0008H     R   SEG=?DT?ECO_PAGE
ECO_PAGE_TABLE. . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?ECO_PAGE
ECO_PAGE_TABLE_INDEX. . . . . . . . . .    D  ADDR  000DH     R   SEG=?DT?ECO_PAGE
EEPROM_INIT . . . . . . . . . . . . . .    C  ADDR  -------       EXT
EICON . . . . . . . . . . . . . . . . .    D  ADDR  00D8H     A   
EIE . . . . . . . . . . . . . . . . . .    D  ADDR  00E8H     A   
EIP . . . . . . . . . . . . . . . . . .    D  ADDR  00F8H     A   
ES. . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.4   A   
ET0 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.1   A   
ET1 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.3   A   
ET2 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.5   A   
EWDI. . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.4   A   
EX0 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.0   A   
EX1 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.2   A   
EX2 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.0   A   
EX3 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.1   A   
EX4 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.2   A   
EX5 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.3   A   
EXEN2 . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.3   A   
EXF2. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.6   A   
EXIF. . . . . . . . . . . . . . . . . .    D  ADDR  0091H     A   
F0. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.5   A   
F1. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.1   A   
I?141 . . . . . . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?ECO_PAGE_MANAGER?ECO_PAGE
IE. . . . . . . . . . . . . . . . . . .    D  ADDR  00A8H     A   
IE0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.1   A   
IE1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.3   A   
INT0_N. . . . . . . . . . . . . . . . .    B  ADDR  0080H.3   A   
INT1_N. . . . . . . . . . . . . . . . .    B  ADDR  0080H.4   A   
IP. . . . . . . . . . . . . . . . . . .    D  ADDR  00B8H     A   
IT0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.0   A   
IT1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.2   A   
MPAGE . . . . . . . . . . . . . . . . .    D  ADDR  0092H     A   
OV. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.2   A   
P . . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.0   A   
P0. . . . . . . . . . . . . . . . . . .    D  ADDR  0080H     A   
P0_0. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.0   A   
P0_1. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.1   A   
P0_2. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.2   A   
P0_3. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.3   A   
P0_4. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.4   A   
P0_5. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.5   A   
P0_6. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.6   A   
P0_7. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.7   A   
P0_ALT. . . . . . . . . . . . . . . . .    D  ADDR  0095H     A   
P0_DIR. . . . . . . . . . . . . . . . .    D  ADDR  0094H     A   
P1. . . . . . . . . . . . . . . . . . .    D  ADDR  0090H     A   
P1_0. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.0   A   
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/22/09 16:13:51 PAGE    16

P1_1. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.1   A   
P1_2. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.2   A   
P1_ALT. . . . . . . . . . . . . . . . .    D  ADDR  0097H     A   
P1_DIR. . . . . . . . . . . . . . . . .    D  ADDR  0096H     A   
PAGE_INDEX?142. . . . . . . . . . . . .    D  ADDR  0002H     R   SEG=?DT?ECO_PAGE_MANAGER?ECO_PAGE
PCON. . . . . . . . . . . . . . . . . .    D  ADDR  0087H     A   
PS. . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.4   A   
PSW . . . . . . . . . . . . . . . . . .    D  ADDR  00D0H     A   
PT0 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.1   A   
PT1 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.3   A   
PT2 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.5   A   
PWDI. . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.4   A   
PWM . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.7   A   
PWMCON. . . . . . . . . . . . . . . . .    D  ADDR  00A9H     A   
PWMDUTY . . . . . . . . . . . . . . . .    D  ADDR  00AAH     A   
PWR_UP. . . . . . . . . . . . . . . . .    B  ADDR  00A0H.7   A   
PX0 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.0   A   
PX1 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.2   A   
PX2 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.0   A   
PX3 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.1   A   
PX4 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.2   A   
PX5 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.3   A   
RADIO . . . . . . . . . . . . . . . . .    D  ADDR  00A0H     A   
RB8 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.2   A   
RCAP2H. . . . . . . . . . . . . . . . .    D  ADDR  00CBH     A   
RCAP2L. . . . . . . . . . . . . . . . .    D  ADDR  00CAH     A   
RCLK. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.5   A   
REGX_CTRL . . . . . . . . . . . . . . .    D  ADDR  00ADH     A   
REGX_LSB. . . . . . . . . . . . . . . .    D  ADDR  00ACH     A   
REGX_MSB. . . . . . . . . . . . . . . .    D  ADDR  00ABH     A   
REN . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.4   A   
RI. . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.0   A   
RS0 . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.3   A   
RS1 . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.4   A   
RSTREAS . . . . . . . . . . . . . . . .    D  ADDR  00B1H     A   
RXD . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.1   A   
SBUF. . . . . . . . . . . . . . . . . .    D  ADDR  0099H     A   
SCON. . . . . . . . . . . . . . . . . .    D  ADDR  0098H     A   
SEG?140 . . . . . . . . . . . . . . . .    D  ADDR  0004H     R   SEG=?DT?ECO_PAGE_MANAGER?ECO_PAGE
SM0 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.7   A   
SM1 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.6   A   
SM2 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.5   A   
SP. . . . . . . . . . . . . . . . . . .    D  ADDR  0081H     A   
SPC_FNC . . . . . . . . . . . . . . . .    D  ADDR  008FH     A   
SPI_CTRL. . . . . . . . . . . . . . . .    D  ADDR  00B3H     A   
SPI_DATA. . . . . . . . . . . . . . . .    D  ADDR  00B2H     A   
SPICLK. . . . . . . . . . . . . . . . .    D  ADDR  00B4H     A   
T0. . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.5   A   
T1. . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.6   A   
T1_1V2. . . . . . . . . . . . . . . . .    D  ADDR  00BCH     A   
T2. . . . . . . . . . . . . . . . . . .    B  ADDR  0090H.0   A   
T2_1V2. . . . . . . . . . . . . . . . .    D  ADDR  00BDH     A   
T2CON . . . . . . . . . . . . . . . . .    D  ADDR  00C8H     A   
TB8 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.3   A   
TCLK. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.4   A   
TCON. . . . . . . . . . . . . . . . . .    D  ADDR  0088H     A   
TEST_MODE . . . . . . . . . . . . . . .    D  ADDR  00B7H     A   
TF0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.5   A   
TF1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.7   A   
TF2 . . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.7   A   
TH0 . . . . . . . . . . . . . . . . . .    D  ADDR  008CH     A   
TH1 . . . . . . . . . . . . . . . . . .    D  ADDR  008DH     A   
TH2 . . . . . . . . . . . . . . . . . .    D  ADDR  00CDH     A   
TI. . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.1   A   
TICK_DV . . . . . . . . . . . . . . . .    D  ADDR  00B5H     A   
TL0 . . . . . . . . . . . . . . . . . .    D  ADDR  008AH     A   
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/22/09 16:13:51 PAGE    17

TL1 . . . . . . . . . . . . . . . . . .    D  ADDR  008BH     A   
TL2 . . . . . . . . . . . . . . . . . .    D  ADDR  00CCH     A   
TMOD. . . . . . . . . . . . . . . . . .    D  ADDR  0089H     A   
TR0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.4   A   
TR1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.6   A   
TR2 . . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.2   A   
TXD . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.2   A   
WDTI. . . . . . . . . . . . . . . . . .    B  ADDR  00D8H.3   A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S).
