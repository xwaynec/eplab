C51 COMPILER V8.08   RF                                                                    08/11/2008 21:51:38 PAGE 1   


C51 COMPILER V8.08, COMPILATION OF MODULE RF
OBJECT MODULE PLACED IN .\rf.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\..\Include\rf\rf.c BROWSE INCDIR(..\..\Include) DEBUG OBJECTEXTEND CODE 
                    -LISTINCLUDE SYMBOLS PRINT(.\rf.lst) PREPRINT(.\rf.i) OBJECT(.\rf.obj)

line level    source

   1          /*
   2           * (C) 2006 The Regents of the University of California. All Rights Reserved.
   3           * Created by Seung-mok Yoo, Department of Electrical Engineering & Computer
   4           * Science
   5           *
   6           * Copyright (C) 2006 The Regents of the University of California. All Rights
   7           * Reserved. Permission to use, copy, modify, and distribute this software and
   8           * its documentation for educational, research and non-profit purposes, without
   9           * fee, and without a written agreement is hereby granted, provided that the
  10           * above copyright notice, this paragraph and the following two paragraphs
  11           * appear in all copies. This software program and documentation are
  12           * copyrighted by The Regents of the University of California ("The University
  13           * of California").
  14           *
  15           * THE SOFTWARE PROGRAM AND DOCUMENTATION ARE SUPPLIED "AS IS," WITHOUT ANY
  16           * ACCOMPANYING SERVICES FROM THE UNIVERSITY OF CALFORNIA. FURTHERMORE, THE
  17           * UNIVERSITY OF CALIFORNIA DOES NOT WARRANT THAT THE OPERATION OF THE PROGRAM
  18           * WILL BE UNINTERRUPTED OR ERROR-FREE. THE END-USER UNDERSTANDS THAT THE
  19           * PROGRAM WAS DEVELOPED FOR RESEARCH PURPOSES AND IS ADVISED NOT TO RELY
  20           * EXCLUSIVELY ON THE PROGRAM FOR ANY REASON.
  21           *
  22           * IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY FOR
  23           * DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES, INCLUDING
  24           * LOST PROFITS, ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION,
  25           * EVEN IF THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
  26           * SUCH DAMAGES. THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY
  27           * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  28           * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE PROVIDED
  29           * HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF CALIFORNIA HAS NO
  30           * OBLIGATIONS TO PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR
  31           * MODIFICATIONS. 
  32           */
  33          #include "Eco/reg24e1.h"
   1      =1  #ifndef REGnRF24E1_H
   2      =1  #define REGnRF24E1_H
   3      =1  
   4      =1  /*  BYTE Registers  */
   5      =1  sfr P0                  = 0x80 ;
   6      =1  sfr SP                  = 0x81 ;
   7      =1  sfr DPL                 = 0x82 ;
   8      =1  sfr DPL0                = 0x82 ;
   9      =1  sfr DPH                 = 0x83 ;
  10      =1  sfr DPH0                = 0x83 ;
  11      =1  sfr DPL1                = 0x84 ;
  12      =1  sfr DPH1                = 0x85 ;
  13      =1  sfr DPS                 = 0x86 ;
  14      =1  sfr PCON                = 0x87 ;
  15      =1  sfr TCON                = 0x88 ;
  16      =1  sfr TMOD                = 0x89 ;
  17      =1  sfr TL0                 = 0x8A ;
  18      =1  sfr TL1                 = 0x8B ;
  19      =1  sfr TH0                 = 0x8C ;
  20      =1  sfr TH1                 = 0x8D ;
  21      =1  sfr CKCON               = 0x8E ;
C51 COMPILER V8.08   RF                                                                    08/11/2008 21:51:38 PAGE 2   

  22      =1  sfr SPC_FNC             = 0x8F ;
  23      =1  sfr P1          = 0x90 ;
  24      =1  sfr EXIF                = 0x91 ;
  25      =1  sfr MPAGE               = 0x92 ;
  26      =1  sfr P0_DIR              = 0x94 ;
  27      =1  sfr P0_ALT              = 0x95 ;
  28      =1  sfr P1_DIR              = 0x96 ;
  29      =1  sfr P1_ALT              = 0x97 ;
  30      =1  sfr SCON                = 0x98 ;
  31      =1  sfr SBUF                = 0x99 ;
  32      =1  sfr RADIO               = 0xA0 ;
  33      =1  sfr ADCCON              = 0xA1 ;
  34      =1  sfr ADCDATAH    = 0xA2 ;
  35      =1  sfr ADCDATAL    = 0xA3 ;
  36      =1  sfr ADCSTATIC   = 0xA4 ;
  37      =1  sfr IE                  = 0xA8 ;
  38      =1  sfr PWMCON              = 0xA9 ;
  39      =1  sfr PWMDUTY             = 0xAA ;
  40      =1  sfr REGX_MSB    = 0xAB ;
  41      =1  sfr REGX_LSB    = 0xAC ;
  42      =1  sfr REGX_CTRL   = 0xAD ;
  43      =1  sfr RSTREAS             = 0xB1 ;
  44      =1  sfr SPI_DATA    = 0xB2 ;
  45      =1  sfr SPI_CTRL    = 0xB3 ;
  46      =1  sfr SPICLK              = 0xB4 ;
  47      =1  sfr TICK_DV             = 0xB5 ;
  48      =1  sfr CK_CTRL             = 0xB6 ;
  49      =1  sfr TEST_MODE   = 0xB7 ;
  50      =1  sfr IP                  = 0xB8 ;
  51      =1  sfr T1_1V2              = 0xBC ;
  52      =1  sfr T2_1V2              = 0xBD ;
  53      =1  sfr DEV_OFFSET  = 0xBE ;
  54      =1  sfr T2CON               = 0xC8 ;
  55      =1  sfr RCAP2L              = 0xCA ;
  56      =1  sfr RCAP2H              = 0xCB ;
  57      =1  sfr TL2                 = 0xCC ;
  58      =1  sfr TH2                 = 0xCD ;
  59      =1  sfr PSW                 = 0xD0 ;
  60      =1  sfr EICON               = 0xD8 ;
  61      =1  sfr ACC                 = 0xE0 ;
  62      =1  sfr EIE                 = 0xE8 ;
  63      =1  sfr B                   = 0xF0 ;
  64      =1  sfr EIP                 = 0xF8 ;
  65      =1  
  66      =1  
  67      =1  /*  BIT Registers  */
  68      =1  /* P0 */
  69      =1  sbit P0_0       = 0x80  ;
  70      =1  sbit DIO2       = 0x80  ;
  71      =1  sbit P0_1       = 0x81  ;
  72      =1  sbit RXD        = 0x81  ;
  73      =1  sbit DIO3       = 0x81  ;
  74      =1  sbit P0_2       = 0x82  ;
  75      =1  sbit TXD        = 0x82  ;
  76      =1  sbit DIO4       = 0x82  ;
  77      =1  sbit P0_3       = 0x83  ;
  78      =1  sbit INT0_N     = 0x83  ;
  79      =1  sbit DIO5       = 0x83  ;
  80      =1  sbit P0_4       = 0x84  ;
  81      =1  sbit INT1_N     = 0x84  ;
  82      =1  sbit DIO6       = 0x84  ;
  83      =1  sbit P0_5       = 0x85  ;
C51 COMPILER V8.08   RF                                                                    08/11/2008 21:51:38 PAGE 3   

  84      =1  sbit T0         = 0x85  ;
  85      =1  sbit DIO7       = 0x85  ;
  86      =1  sbit P0_6       = 0x86  ;
  87      =1  sbit T1         = 0x86  ;
  88      =1  sbit DIO8       = 0x86  ;
  89      =1  sbit P0_7       = 0x87  ;
  90      =1  sbit PWM        = 0x87  ;
  91      =1  sbit DIO9       = 0x87  ;
  92      =1  
  93      =1  /*  TCON  */
  94      =1  sbit IT0        = 0x88 ;
  95      =1  sbit IE0        = 0x89 ;
  96      =1  sbit IT1        = 0x8A ;
  97      =1  sbit IE1        = 0x8B ;
  98      =1  sbit TR0        = 0x8C ;
  99      =1  sbit TF0        = 0x8D ;
 100      =1  sbit TR1        = 0x8E ;
 101      =1  sbit TF1        = 0x8F ;
 102      =1  
 103      =1  /* P1 */
 104      =1  sbit P1_0       = 0x90 ;
 105      =1  sbit T2         = 0x90 ;
 106      =1  sbit DIO0       = 0x90 ;
 107      =1  sbit P1_1       = 0x91 ;
 108      =1  sbit DIO1       = 0x91 ;
 109      =1  sbit P1_2       = 0x92 ;
 110      =1  sbit DIN0       = 0x92 ;
 111      =1  
 112      =1  /*  SCON  */
 113      =1  sbit RI         = 0x98 ;
 114      =1  sbit TI         = 0x99 ;
 115      =1  sbit RB8        = 0x9A ;
 116      =1  sbit TB8        = 0x9B ;
 117      =1  sbit REN        = 0x9C ;
 118      =1  sbit SM2        = 0x9D ;
 119      =1  sbit SM1        = 0x9E ;
 120      =1  sbit SM0        = 0x9F ;
 121      =1  
 122      =1  /* P2 */
 123      =1  sbit DATA       = 0xA0 ;
 124      =1  sbit CLK1       = 0xA1 ;
 125      =1  sbit DR1        = 0xA2 ;
 126      =1  sbit CS         = 0xA3 ;
 127      =1  sbit DOUT2      = 0xA4 ;
 128      =1  sbit CLK2       = 0xA5 ;
 129      =1  sbit DR2_CE     = 0xA6 ;
 130      =1  sbit DR2        = 0xA6 ;
 131      =1  sbit CE         = 0xA6 ;
 132      =1  sbit PWR_UP     = 0xA7 ;
 133      =1  
 134      =1  /*  IE   */
 135      =1  sbit EX0        = 0xA8 ;
 136      =1  sbit ET0        = 0xA9 ;
 137      =1  sbit EX1        = 0xAA ;
 138      =1  sbit ET1        = 0xAB ;
 139      =1  sbit ES         = 0xAC ;
 140      =1  sbit ET2        = 0xAD ;
 141      =1  sbit EA         = 0xAF ;
 142      =1  
 143      =1  /*  IP   */
 144      =1  sbit PX0        = 0xB8 ;
 145      =1  sbit PT0        = 0xB9 ;
C51 COMPILER V8.08   RF                                                                    08/11/2008 21:51:38 PAGE 4   

 146      =1  sbit PX1        = 0xBA ;
 147      =1  sbit PT1        = 0xBB ;
 148      =1  sbit PS         = 0xBC ;
 149      =1  sbit PT2        = 0xBD ;
 150      =1  
 151      =1  /*  T2CON  */
 152      =1  sbit CP_RL2     = 0xC8 ;
 153      =1  sbit CPRL2      = 0xC8 ;
 154      =1  sbit C_T2       = 0xC9 ;
 155      =1  sbit CT2        = 0xC9 ;
 156      =1  sbit TR2        = 0xCA ;
 157      =1  sbit EXEN2      = 0xCB ;
 158      =1  sbit TCLK       = 0xCC ;
 159      =1  sbit RCLK       = 0xCD ;
 160      =1  sbit EXF2       = 0xCE ;
 161      =1  sbit TF2        = 0xCF ;
 162      =1  
 163      =1  /*  PSW   */
 164      =1  sbit P          = 0xD0 ;
 165      =1  sbit F1         = 0xD1 ;
 166      =1  sbit OV         = 0xD2 ;
 167      =1  sbit RS0        = 0xD3 ;
 168      =1  sbit RS1        = 0xD4 ;
 169      =1  sbit F0         = 0xD5 ;
 170      =1  sbit AC         = 0xD6 ;
 171      =1  sbit CY         = 0xD7 ;
 172      =1  
 173      =1  /*  EICON  */
 174      =1  sbit WDTI       = 0xDB ;
 175      =1  
 176      =1  /*  EIE  */
 177      =1  sbit EX2        = 0xE8 ;
 178      =1  sbit EX3        = 0xE9 ;
 179      =1  sbit EX4        = 0xEA ;
 180      =1  sbit EX5        = 0xEB ;
 181      =1  sbit EWDI       = 0xEC ;
 182      =1  
 183      =1  /*  EIP  */
 184      =1  sbit PX2        = 0xF8 ;
 185      =1  sbit PX3        = 0xF9 ;
 186      =1  sbit PX4        = 0xFA ;
 187      =1  sbit PX5        = 0xFB ;
 188      =1  sbit PWDI       = 0xFC ;
 189      =1  
 190      =1  
 191      =1  /* BIT definitions for bits that are not directly accessible */
 192      =1  /* PCON bits */
 193      =1  #define IDL             0x01
 194      =1  #define PD              0x02
 195      =1  #define GF0             0x04
 196      =1  #define GF1             0x08
 197      =1  #define SMOD            0x80
 198      =1  
 199      =1  /* TMOD bits */
 200      =1  #define T0_M0           0x01
 201      =1  #define T0_M1           0x02
 202      =1  #define T0_CT           0x04
 203      =1  #define T0_GATE         0x08
 204      =1  #define T1_M0           0x10
 205      =1  #define T1_M1           0x20
 206      =1  #define T1_CT           0x40
 207      =1  #define T1_GATE         0x80
C51 COMPILER V8.08   RF                                                                    08/11/2008 21:51:38 PAGE 5   

 208      =1  
 209      =1  #define T0_MASK         0x0F
 210      =1  #define T1_MASK         0xF0
 211      =1  
 212      =1  /* Interrupt numbers: address = (number * 8) + 3 */
 213      =1  #define IE0_VECTOR      0       /* 0x03 external interrupt 0 */
 214      =1  #define TF0_VECTOR      1       /* 0x0b timer 0 */
 215      =1  #define IE1_VECTOR      2       /* 0x13 external interrupt 1 */
 216      =1  #define TF1_VECTOR      3       /* 0x1b timer 1 */
 217      =1  #define SI0_VECTOR      4       /* 0x23 serial port 0 */
 218      =1  
 219      =1  #endif
  34          #include "rf.h"
   1      =1  /*
   2      =1   * (C) 2006 The Regents of the University of California. All Rights Reserved.
   3      =1   * Created by Seung-mok Yoo, Department of Electrical Engineering & Computer
   4      =1   * Science
   5      =1   *
   6      =1   * Copyright (C) 2006 The Regents of the University of California. All Rights
   7      =1   * Reserved. Permission to use, copy, modify, and distribute this software and
   8      =1   * its documentation for educational, research and non-profit purposes, without
   9      =1   * fee, and without a written agreement is hereby granted, provided that the
  10      =1   * above copyright notice, this paragraph and the following two paragraphs
  11      =1   * appear in all copies. This software program and documentation are
  12      =1   * copyrighted by The Regents of the University of California ("The University
  13      =1   * of California").
  14      =1   *
  15      =1   * THE SOFTWARE PROGRAM AND DOCUMENTATION ARE SUPPLIED "AS IS," WITHOUT ANY
  16      =1   * ACCOMPANYING SERVICES FROM THE UNIVERSITY OF CALFORNIA. FURTHERMORE, THE
  17      =1   * UNIVERSITY OF CALIFORNIA DOES NOT WARRANT THAT THE OPERATION OF THE PROGRAM
  18      =1   * WILL BE UNINTERRUPTED OR ERROR-FREE. THE END-USER UNDERSTANDS THAT THE
  19      =1   * PROGRAM WAS DEVELOPED FOR RESEARCH PURPOSES AND IS ADVISED NOT TO RELY
  20      =1   * EXCLUSIVELY ON THE PROGRAM FOR ANY REASON.
  21      =1   *
  22      =1   * IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY FOR
  23      =1   * DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES, INCLUDING
  24      =1   * LOST PROFITS, ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION,
  25      =1   * EVEN IF THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
  26      =1   * SUCH DAMAGES. THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY
  27      =1   * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  28      =1   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE PROVIDED
  29      =1   * HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF CALIFORNIA HAS NO
  30      =1   * OBLIGATIONS TO PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR
  31      =1   * MODIFICATIONS. 
  32      =1   */
  33      =1  #ifndef _RF_H
  34      =1  #define _RF_H
  35      =1  
  36      =1  #define PAYLOAD_SZ                      11
  37      =1  
  38      =1  void    rf_init(void);
  39      =1  void    configRX(void);
  40      =1  void    configTX(void);
  41      =1  
  42      =1  void    Delay100us(volatile unsigned char n);
  43      =1  void    txPacket(char *buf);
  44      =1  char    rxPacket(char *buf);
  45      =1  
  46      =1  #endif // _RF_H
  35          
  36          #define DATA1_W                         1
  37          #define ADDR_INDEX                      8   // Index to address bytes in RFConfig.buf
C51 COMPILER V8.08   RF                                                                    08/11/2008 21:51:38 PAGE 6   

  38          #define ADDR_COUNT                      4   // Number of address bytes
  39          
  40          #define CONFIG_LENGTH           15
  41          
  42          
  43          const char txconf[CONFIG_LENGTH] =
  44          {
  45                  PAYLOAD_SZ << 3,                                // DATA2_W
  46                  PAYLOAD_SZ << 3,                                // DATA1_W
  47                  0x00, 0x00, 0x00, 0x00, 0x00,   // ADDR2
  48                  0x00, 0x12, 0x34, 0x56, 0x78,   // ADDR1
  49                  0x83,                                                   // 32-bit address & 16 bit CRC enabled
  50                  0x6f,                                                   // one ch, shockburst, 1Mbps, 16MHz, 0dBm
  51                  0x04                                                    // CH#: 2 & TX
  52          };
  53          
  54          const char rxconf[CONFIG_LENGTH] =
  55          {
  56                  PAYLOAD_SZ << 3,                                // DATA2_W
  57                  PAYLOAD_SZ << 3,                                // DATA1_W
  58                  0x00, 0x00, 0x00, 0x00, 0x00,   // ADDR2
  59                  0x00, 0x87, 0x65, 0x43, 0x21,   // ADDR1
  60                  0x83,                                                   // 32-bit address & 16 bit CRC enabled
  61                  0x6f,                                                   // one ch, shockburst, 1Mbps, 16MHz, 0dBm
  62                  0x05                                                    // CH#: 2 & RX
  63          };
  64          
  65          
  66          static unsigned char spi_rwByte(unsigned char b)
  67          {
  68   1              EXIF &= ~0x20;                  // Clear SPI interrupt
  69   1              SPI_DATA = b;                   // Move byte to send to SPI data register
  70   1              while((EXIF & 0x20) == 0x00);   // Wait until SPI hs finished transmitting
  71   1      
  72   1              return SPI_DATA;
  73   1      } // spi_rwByte
  74          
  75          void Delay100us(volatile unsigned char n)
  76          {
  77   1              char    i;
  78   1      
  79   1              while (n--)
  80   1                      for (i = 0; i < 35; i++);
  81   1      } // Delay100us
  82          
  83          void rf_init(void)
  84          {
  85   1          PWR_UP = 1;                     // Turn on Radio
  86   1          Delay100us(30);                 // Wait > 3ms 
  87   1          SPICLK = 0;                     // Max SPI clock (XTAL/8)
  88   1          SPI_CTRL = 0x02;                // Connect internal SPI controller to Radio
  89   1      } // rf_init
  90          
  91          
  92          void configTX(void)
  93          {
  94   1          char        i;
  95   1          
  96   1          CS = 1;
  97   1          Delay100us(0);
  98   1          for (i = 0; i < CONFIG_LENGTH; i++)
  99   1              spi_rwByte(txconf[i]);
C51 COMPILER V8.08   RF                                                                    08/11/2008 21:51:38 PAGE 7   

 100   1          CS = 0;
 101   1      } // configTX
 102          
 103          void configRX(void)
 104          {
 105   1              char    i;
 106   1      
 107   1              CS = 1;
 108   1              Delay100us(0);
 109   1              for (i = 0; i < CONFIG_LENGTH; i++)
 110   1                      spi_rwByte(rxconf[i]);
 111   1              CS = 0;
 112   1      } // configRX
 113          
 114          void txPacket(char *buf)
 115          {
 116   1              char            i;
 117   1      
 118   1              CE = 1;
 119   1              Delay100us(0);
 120   1              // Start with the address of the receiver:
 121   1              for (i = 0; i < ADDR_COUNT; i++)
 122   1                      spi_rwByte(rxconf[ADDR_INDEX+i]);
 123   1              for (i = 0; i < PAYLOAD_SZ; i++)
 124   1                      spi_rwByte(buf[i]);
 125   1              CE = 0;
 126   1              Delay100us(3);                  // Wait ~300us
 127   1      } // txPacket
 128          
 129          
 130          char rxPacket(char *buf)
 131          {
 132   1              char            i;
 133   1      
 134   1              CE = 1;
 135   1              while (DR1 == 0);
 136   1      
 137   1              for (i = 0; i < PAYLOAD_SZ; i++)
 138   1                      buf[i] = spi_rwByte(0);
 139   1              CE = 0;
 140   1              
 141   1              return 1;
 142   1      } // rxPacket
C51 COMPILER V8.08   RF                                                                    08/11/2008 21:51:38 PAGE 8   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION L?0032 (BEGIN)
0000         L?0033:
0000 2E                ADD     A,R6
0001 F8                MOV     R0,A
0002 E6                MOV     A,@R0
0003 FF                MOV     R7,A
             ; FUNCTION _spi_rwByte (BEGIN)
                                           ; SOURCE LINE # 66
;---- Variable 'b' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 67
                                           ; SOURCE LINE # 68
0004 5391DF            ANL     EXIF,#0DFH
                                           ; SOURCE LINE # 69
0007 8FB2              MOV     SPI_DATA,R7
0009         ?C0001:
                                           ; SOURCE LINE # 70
0009 E591              MOV     A,EXIF
000B 30E5FB            JNB     ACC.5,?C0001
000E         ?C0002:
                                           ; SOURCE LINE # 72
000E AFB2              MOV     R7,SPI_DATA
                                           ; SOURCE LINE # 73
0010         ?C0003:
0010 22                RET     
             ; FUNCTION _spi_rwByte (END)

             ; FUNCTION _Delay100us (BEGIN)
                                           ; SOURCE LINE # 75
;---- Variable 'i' assigned to Register 'R6' ----
0000 8F00        R     MOV     n,R7
                                           ; SOURCE LINE # 76
0002         ?C0004:
                                           ; SOURCE LINE # 79
0002 AF00        R     MOV     R7,n
0004 1500        R     DEC     n
0006 EF                MOV     A,R7
0007 600D              JZ      ?C0009
                                           ; SOURCE LINE # 80
0009 E4                CLR     A
000A FE                MOV     R6,A
000B         ?C0006:
000B C3                CLR     C
000C EE                MOV     A,R6
000D 6480              XRL     A,#080H
000F 94A3              SUBB    A,#0A3H
0011 50EF              JNC     ?C0004
0013 0E                INC     R6
0014 80F5              SJMP    ?C0006
                                           ; SOURCE LINE # 81
0016         ?C0009:
0016 22                RET     
             ; FUNCTION _Delay100us (END)

             ; FUNCTION rf_init (BEGIN)
                                           ; SOURCE LINE # 83
                                           ; SOURCE LINE # 84
                                           ; SOURCE LINE # 85
0000 D2A7              SETB    PWR_UP
                                           ; SOURCE LINE # 86
C51 COMPILER V8.08   RF                                                                    08/11/2008 21:51:38 PAGE 9   

0002 7F1E              MOV     R7,#01EH
0004 120000      R     LCALL   _Delay100us
                                           ; SOURCE LINE # 87
0007 E4                CLR     A
0008 F5B4              MOV     SPICLK,A
                                           ; SOURCE LINE # 88
000A 75B302            MOV     SPI_CTRL,#02H
                                           ; SOURCE LINE # 89
000D 22                RET     
             ; FUNCTION rf_init (END)

             ; FUNCTION configTX (BEGIN)
                                           ; SOURCE LINE # 92
                                           ; SOURCE LINE # 93
                                           ; SOURCE LINE # 96
0000 D2A3              SETB    CS
                                           ; SOURCE LINE # 97
0002 E4                CLR     A
0003 FF                MOV     R7,A
0004 120000      R     LCALL   _Delay100us
                                           ; SOURCE LINE # 98
;---- Variable 'i' assigned to Register 'R6' ----
0007 E4                CLR     A
0008 FE                MOV     R6,A
0009         ?C0011:
                                           ; SOURCE LINE # 99
0009 7400        R     MOV     A,#LOW txconf
000B 120000      R     LCALL   L?0032
000E 0E                INC     R6
000F BE0FF7            CJNE    R6,#0FH,?C0011
0012         ?C0012:
                                           ; SOURCE LINE # 100
0012 C2A3              CLR     CS
                                           ; SOURCE LINE # 101
0014 22                RET     
             ; FUNCTION configTX (END)

             ; FUNCTION configRX (BEGIN)
                                           ; SOURCE LINE # 103
                                           ; SOURCE LINE # 104
                                           ; SOURCE LINE # 107
0000 D2A3              SETB    CS
                                           ; SOURCE LINE # 108
0002 E4                CLR     A
0003 FF                MOV     R7,A
0004 120000      R     LCALL   _Delay100us
                                           ; SOURCE LINE # 109
;---- Variable 'i' assigned to Register 'R6' ----
0007 E4                CLR     A
0008 FE                MOV     R6,A
0009         ?C0015:
                                           ; SOURCE LINE # 110
0009 7400        R     MOV     A,#LOW rxconf
000B 120000      R     LCALL   L?0032
000E 0E                INC     R6
000F BE0FF7            CJNE    R6,#0FH,?C0015
0012         ?C0016:
                                           ; SOURCE LINE # 111
0012 C2A3              CLR     CS
                                           ; SOURCE LINE # 112
0014 22                RET     
             ; FUNCTION configRX (END)
C51 COMPILER V8.08   RF                                                                    08/11/2008 21:51:38 PAGE 10  


             ; FUNCTION _txPacket (BEGIN)
                                           ; SOURCE LINE # 114
0000 8B00        R     MOV     buf,R3
0002 8A00        R     MOV     buf+01H,R2
0004 8900        R     MOV     buf+02H,R1
                                           ; SOURCE LINE # 115
                                           ; SOURCE LINE # 118
0006 D2A6              SETB    CE
                                           ; SOURCE LINE # 119
0008 E4                CLR     A
0009 FF                MOV     R7,A
000A 120000      R     LCALL   _Delay100us
                                           ; SOURCE LINE # 121
;---- Variable 'i' assigned to Register 'R6' ----
000D E4                CLR     A
000E FE                MOV     R6,A
000F         ?C0019:
                                           ; SOURCE LINE # 122
000F 7400        R     MOV     A,#LOW rxconf+08H
0011 120000      R     LCALL   L?0033
0014 0E                INC     R6
0015 BE04F7            CJNE    R6,#04H,?C0019
0018         ?C0020:
                                           ; SOURCE LINE # 123
0018 E4                CLR     A
0019 FE                MOV     R6,A
001A         ?C0022:
                                           ; SOURCE LINE # 124
001A AB00        R     MOV     R3,buf
001C AA00        R     MOV     R2,buf+01H
001E A900        R     MOV     R1,buf+02H
0020 EE                MOV     A,R6
0021 FD                MOV     R5,A
0022 33                RLC     A
0023 95E0              SUBB    A,ACC
0025 8D82              MOV     DPL,R5
0027 F583              MOV     DPH,A
0029 120000      E     LCALL   ?C?CLDOPTR
002C FF                MOV     R7,A
002D 120000      R     LCALL   _spi_rwByte
0030 0E                INC     R6
0031 BE0BE6            CJNE    R6,#0BH,?C0022
0034         ?C0023:
                                           ; SOURCE LINE # 125
0034 C2A6              CLR     CE
                                           ; SOURCE LINE # 126
0036 7F03              MOV     R7,#03H
0038 020000      R     LJMP    _Delay100us
             ; FUNCTION _txPacket (END)

             ; FUNCTION _rxPacket (BEGIN)
                                           ; SOURCE LINE # 130
0000 8B00        R     MOV     buf,R3
0002 8A00        R     MOV     buf+01H,R2
0004 8900        R     MOV     buf+02H,R1
                                           ; SOURCE LINE # 131
                                           ; SOURCE LINE # 134
0006 D2A6              SETB    CE
0008         ?C0026:
                                           ; SOURCE LINE # 135
0008 30A2FD            JNB     DR1,?C0026
C51 COMPILER V8.08   RF                                                                    08/11/2008 21:51:38 PAGE 11  

000B         ?C0027:
                                           ; SOURCE LINE # 137
;---- Variable 'i' assigned to Register 'R6' ----
000B E4                CLR     A
000C FE                MOV     R6,A
000D         ?C0028:
                                           ; SOURCE LINE # 138
000D E4                CLR     A
000E FF                MOV     R7,A
000F 120000      R     LCALL   _spi_rwByte
0012 AB00        R     MOV     R3,buf
0014 AA00        R     MOV     R2,buf+01H
0016 A900        R     MOV     R1,buf+02H
0018 EE                MOV     A,R6
0019 FD                MOV     R5,A
001A 33                RLC     A
001B 95E0              SUBB    A,ACC
001D 8D82              MOV     DPL,R5
001F F583              MOV     DPH,A
0021 EF                MOV     A,R7
0022 120000      E     LCALL   ?C?CSTOPTR
0025 0E                INC     R6
0026 BE0BE4            CJNE    R6,#0BH,?C0028
0029         ?C0029:
                                           ; SOURCE LINE # 139
0029 C2A6              CLR     CE
                                           ; SOURCE LINE # 141
002B 7F01              MOV     R7,#01H
                                           ; SOURCE LINE # 142
002D         ?C0031:
002D 22                RET     
             ; FUNCTION _rxPacket (END)

C51 COMPILER V8.08   RF                                                                    08/11/2008 21:51:38 PAGE 12  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


PWR_UP . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A7H  1
SPI_CTRL . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B3H  1
CE . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A6H  1
rxconf . . . . . . . . . . . . . . . .  PUBLIC   DATA   ARRAY    0000H  15
txconf . . . . . . . . . . . . . . . .  PUBLIC   DATA   ARRAY    000FH  15
CS . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A3H  1
configRX . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  i. . . . . . . . . . . . . . . . . .  * REG *  DATA   CHAR     0006H  1
configTX . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  i. . . . . . . . . . . . . . . . . .  * REG *  DATA   CHAR     0006H  1
EXIF . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0091H  1
_spi_rwByte. . . . . . . . . . . . . .  STATIC   CODE   PROC     0004H  -----
  b. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
_rxPacket. . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  buf. . . . . . . . . . . . . . . . .  AUTO     DATA   PTR      0000H  3
  i. . . . . . . . . . . . . . . . . .  * REG *  DATA   CHAR     0006H  1
DR1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A2H  1
SPICLK . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B4H  1
_txPacket. . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  buf. . . . . . . . . . . . . . . . .  AUTO     DATA   PTR      0000H  3
  i. . . . . . . . . . . . . . . . . .  * REG *  DATA   CHAR     0006H  1
SPI_DATA . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B2H  1
_Delay100us. . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  n. . . . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0000H  1
  i. . . . . . . . . . . . . . . . . .  * REG *  DATA   CHAR     0006H  1
rf_init. . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    201    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     30       7
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
