AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/19/09 20:48:44 PAGE     1


MACRO ASSEMBLER AX51 V3.06a
OBJECT MODULE PLACED IN .\eco_page.obj
ASSEMBLER INVOKED BY: C:\Keil\C51\BIN\AX51.exe .\eco_page.src EP DEBUG SYMBOLS OJ(.\eco_page.obj) PR(.\eco_page.ls1) 

LOC    OBJ             LINE     SOURCE

                          1     ; ./eco_page.src generated from: .\eco_page.c
                          2     ; COMPILER INVOKED BY:
                          3     ;        C:\Keil\C51\BIN\C51.exe .\eco_page.c BROWSE DEBUG CODE LISTINCLUDE SYMBOLS PREP
                               RINT ROM(LARGE) INCDIR(../../Include) SRC(./eco_page.src)
                          4     
                          5     $nomod51 
                          6     
                          7     NAME    ECO_PAGE
                          8     
 00A0.7                   9     PWR_UP  BIT     0A0H.7
 0080                    10     P0      DATA    080H
 0090                    11     P1      DATA    090H
 00D0.6                  12     AC      BIT     0D0H.6
 0080.5                  13     T0      BIT     080H.5
 00B3                    14     SPI_CTRL        DATA    0B3H
 0080.6                  15     T1      BIT     080H.6
 00A8.7                  16     EA      BIT     0A8H.7
 0090.0                  17     T2      BIT     090H.0
 00A0.6                  18     CE      BIT     0A0H.6
 00BE                    19     DEV_OFFSET      DATA    0BEH
 00A0.1                  20     CLK1    BIT     0A0H.1
 0090.2                  21     DIN0    BIT     090H.2
 00A0.5                  22     CLK2    BIT     0A0H.5
 0090.0                  23     DIO0    BIT     090H.0
 0083                    24     DPH0    DATA    083H
 0090.1                  25     DIO1    BIT     090H.1
 00A8                    26     IE      DATA    0A8H
 0085                    27     DPH1    DATA    085H
 0080.0                  28     DIO2    BIT     080H.0
 0080.1                  29     DIO3    BIT     080H.1
 0080.0                  30     P0_0    BIT     080H.0
 0090.0                  31     P1_0    BIT     090H.0
 0080.2                  32     DIO4    BIT     080H.2
 0080.1                  33     P0_1    BIT     080H.1
 0082                    34     DPL0    DATA    082H
 0090.1                  35     P1_1    BIT     090H.1
 0080.3                  36     DIO5    BIT     080H.3
 0080.2                  37     P0_2    BIT     080H.2
 0084                    38     DPL1    DATA    084H
 0090.2                  39     P1_2    BIT     090H.2
 0080.4                  40     DIO6    BIT     080H.4
 0080.3                  41     P0_3    BIT     080H.3
 0080.5                  42     DIO7    BIT     080H.5
 0080.4                  43     P0_4    BIT     080H.4
 00A4                    44     ADCSTATIC       DATA    0A4H
 0080.6                  45     DIO8    BIT     080H.6
 0080.5                  46     P0_5    BIT     080H.5
 00C8.6                  47     EXF2    BIT     0C8H.6
 00A0.3                  48     CS      BIT     0A0H.3
 0080.7                  49     DIO9    BIT     080H.7
 0080.6                  50     P0_6    BIT     080H.6
 0080.7                  51     P0_7    BIT     080H.7
 00A8.4                  52     ES      BIT     0A8H.4
 00B8                    53     IP      DATA    0B8H
 00A0.0                  54     DATA?   BIT     0A0H.0
 0098.0                  55     RI      BIT     098H.0
 00D0.7                  56     CY      BIT     0D0H.7
 0098.1                  57     TI      BIT     098H.1
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/19/09 20:48:44 PAGE     2

 00BC                    58     T1_1V2  DATA    0BCH
 008F                    59     SPC_FNC DATA    08FH
 00BD                    60     T2_1V2  DATA    0BDH
 00CB                    61     RCAP2H  DATA    0CBH
 00B8.4                  62     PS      BIT     0B8H.4
 0081                    63     SP      DATA    081H
 00D0.2                  64     OV      BIT     0D0H.2
 00B6                    65     CK_CTRL DATA    0B6H
 00CA                    66     RCAP2L  DATA    0CAH
 00B5                    67     TICK_DV DATA    0B5H
 00B1                    68     RSTREAS DATA    0B1H
 00C8.1                  69     C_T2    BIT     0C8H.1
 00E8.4                  70     EWDI    BIT     0E8H.4
 00A1                    71     ADCCON  DATA    0A1H
 00C8.5                  72     RCLK    BIT     0C8H.5
 00A2                    73     ADCDATAH        DATA    0A2H
 0091                    74     EXIF    DATA    091H
 00C8.4                  75     TCLK    BIT     0C8H.4
 00A0.6                  76     DR2_CE  BIT     0A0H.6
 00A3                    77     ADCDATAL        DATA    0A3H
 0099                    78     SBUF    DATA    099H
 0087                    79     PCON    DATA    087H
 0098                    80     SCON    DATA    098H
 00F8.4                  81     PWDI    BIT     0F8H.4
 0089                    82     TMOD    DATA    089H
 0088                    83     TCON    DATA    088H
 00D8.3                  84     WDTI    BIT     0D8H.3
 00AA                    85     PWMDUTY DATA    0AAH
 0088.1                  86     IE0     BIT     088H.1
 0088.3                  87     IE1     BIT     088H.3
 0094                    88     P0_DIR  DATA    094H
 00F0                    89     B       DATA    0F0H
 0096                    90     P1_DIR  DATA    096H
 0095                    91     P0_ALT  DATA    095H
 0097                    92     P1_ALT  DATA    097H
 00C8.0                  93     CP_RL2  BIT     0C8H.0
 00A0.2                  94     DR1     BIT     0A0H.2
 00E0                    95     ACC     DATA    0E0H
 00A0.6                  96     DR2     BIT     0A0H.6
 00B7                    97     TEST_MODE       DATA    0B7H
 00B4                    98     SPICLK  DATA    0B4H
 00C8.1                  99     CT2     BIT     0C8H.1
 00A8.1                 100     ET0     BIT     0A8H.1
 00A8.3                 101     ET1     BIT     0A8H.3
 0088.5                 102     TF0     BIT     088H.5
 0080.3                 103     INT0_N  BIT     080H.3
 00A8.5                 104     ET2     BIT     0A8H.5
 0088.7                 105     TF1     BIT     088H.7
 0080.4                 106     INT1_N  BIT     080H.4
 00C8.7                 107     TF2     BIT     0C8H.7
 0098.2                 108     RB8     BIT     098H.2
 008C                   109     TH0     DATA    08CH
 00A8.0                 110     EX0     BIT     0A8H.0
 0088.0                 111     IT0     BIT     088H.0
 008D                   112     TH1     DATA    08DH
 00A8.2                 113     EX1     BIT     0A8H.2
 0098.3                 114     TB8     BIT     098H.3
 0088.2                 115     IT1     BIT     088H.2
 00CD                   116     TH2     DATA    0CDH
 00AD                   117     REGX_CTRL       DATA    0ADH
 00E8.0                 118     EX2     BIT     0E8H.0
 00D0.0                 119     P       BIT     0D0H.0
 00E8.1                 120     EX3     BIT     0E8H.1
 0098.7                 121     SM0     BIT     098H.7
 008A                   122     TL0     DATA    08AH
 00E8.2                 123     EX4     BIT     0E8H.2
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/19/09 20:48:44 PAGE     3

 0098.6                 124     SM1     BIT     098H.6
 008B                   125     TL1     DATA    08BH
 00E8.3                 126     EX5     BIT     0E8H.3
 0098.5                 127     SM2     BIT     098H.5
 00CC                   128     TL2     DATA    0CCH
 00E8                   129     EIE     DATA    0E8H
 00B8.1                 130     PT0     BIT     0B8H.1
 00D0.3                 131     RS0     BIT     0D0H.3
 00B8.3                 132     PT1     BIT     0B8H.3
 00D0.4                 133     RS1     BIT     0D0H.4
 00B8.5                 134     PT2     BIT     0B8H.5
 0088.4                 135     TR0     BIT     088H.4
 00A9                   136     PWMCON  DATA    0A9H
 0088.6                 137     TR1     BIT     088H.6
 00C8.2                 138     TR2     BIT     0C8H.2
 00B8.0                 139     PX0     BIT     0B8H.0
 00B8.2                 140     PX1     BIT     0B8H.2
 00F8.0                 141     PX2     BIT     0F8H.0
 00F8.1                 142     PX3     BIT     0F8H.1
 00F8.2                 143     PX4     BIT     0F8H.2
 0083                   144     DPH     DATA    083H
 00F8.3                 145     PX5     BIT     0F8H.3
 00F8                   146     EIP     DATA    0F8H
 0082                   147     DPL     DATA    082H
 00C8.3                 148     EXEN2   BIT     0C8H.3
 00C8.0                 149     CPRL2   BIT     0C8H.0
 0098.4                 150     REN     BIT     098H.4
 00C8                   151     T2CON   DATA    0C8H
 0086                   152     DPS     DATA    086H
 00B2                   153     SPI_DATA        DATA    0B2H
 0092                   154     MPAGE   DATA    092H
 0080.1                 155     RXD     BIT     080H.1
 00A0.4                 156     DOUT2   BIT     0A0H.4
 00D8                   157     EICON   DATA    0D8H
 008E                   158     CKCON   DATA    08EH
 0080.2                 159     TXD     BIT     080H.2
 00A0                   160     RADIO   DATA    0A0H
 0080.7                 161     PWM     BIT     080H.7
 00D0.5                 162     F0      BIT     0D0H.5
 00D0.1                 163     F1      BIT     0D0H.1
 00AC                   164     REGX_LSB        DATA    0ACH
 00D0                   165     PSW     DATA    0D0H
 00AB                   166     REGX_MSB        DATA    0ABH
------                  167     ?PR?eco_page_init?ECO_PAGE               SEGMENT CODE 
------                  168     ?PR?eco_page_manager?ECO_PAGE            SEGMENT CODE 
------                  169     ?DT?eco_page_manager?ECO_PAGE            SEGMENT DATA OVERLAYABLE 
------                  170     ?C_INITSEG           SEGMENT CODE 
------                  171     ?ID?ECO_PAGE         SEGMENT IDATA 
------                  172     ?DT?ECO_PAGE         SEGMENT DATA 
                        173             EXTRN   CODE (_eeprom_read)
                        174             EXTRN   CODE (eeprom_init)
                        175             PUBLIC  ECO_PAGE_TABLE_INDEX
                        176             PUBLIC  ECO_PAGE_REGISTER7
                        177             PUBLIC  ECO_PAGE_REGISTER6
                        178             PUBLIC  ECO_PAGE_REGISTER5
                        179             PUBLIC  ECO_PAGE_REGISTER4
                        180             PUBLIC  ECO_PAGE_ADDR
                        181             PUBLIC  ECO_PAGE_REGISTER3
                        182             PUBLIC  ECO_PAGE_REGISTER2
                        183             PUBLIC  ECO_PAGE_REGISTER1
                        184             PUBLIC  ECO_PAGE_PREV_VID
                        185             PUBLIC  ECO_PAGE_PREV_PID
                        186             PUBLIC  ECO_PAGE_SPI_CONN
                        187             PUBLIC  ECO_PAGE_TABLE
                        188             PUBLIC  eco_page_manager
                        189             PUBLIC  eco_page_init
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/19/09 20:48:44 PAGE     4

                        190     
------                  191             RSEG  ?DT?eco_page_manager?ECO_PAGE
000000                  192     ?eco_page_manager?BYTE:
000004                  193             ORG  4
000004                  194             seg?140:   DS   2
000000                  195             ORG  0
000000                  196               i?141:   DS   2
000002                  197             ORG  2
000002                  198      page_index?142:   DS   2
                        199     
------                  200             RSEG  ?ID?ECO_PAGE
000000                  201      ECO_PAGE_TABLE:   DS   40
000028                  202     ECO_PAGE_REGISTER1:   DS   1
000029                  203     ECO_PAGE_REGISTER2:   DS   1
00002A                  204     ECO_PAGE_REGISTER3:   DS   1
00002B                  205     ECO_PAGE_REGISTER4:   DS   1
00002C                  206     ECO_PAGE_REGISTER5:   DS   1
00002D                  207     ECO_PAGE_REGISTER6:   DS   1
00002E                  208     ECO_PAGE_REGISTER7:   DS   1
                        209     
------                  210             RSEG  ?DT?ECO_PAGE
000000                  211     ECO_PAGE_SPI_CONN:   DS   1
000001                  212     ECO_PAGE_PREV_PID:   DS   2
000003                  213     ECO_PAGE_PREV_VID:   DS   2
000005                  214       ECO_PAGE_ADDR:   DS   2
000007                  215     ECO_PAGE_TABLE_INDEX:   DS   1
                        216     
------                  217             RSEG  ?C_INITSEG
000000 20               218             DB      020H
000001 28               219             DB      028H
000002 00         F     220             DB      ECO_PAGE_TABLE
000003 0000             221             DW      00000H
000005 00000000         222             DB  000H,000H,000H,000H,000H,000H,000H,000H,000H,000H
000009 00000000                 
00000D 0000                     
00000F 00000000         223             DB  000H,000H,000H,000H,000H,000H,000H,000H,000H,000H
000013 00000000                 
000017 0000                     
000019 00000000         224             DB  000H,000H,000H,000H,000H,000H,000H,000H,000H,000H
00001D 00000000                 
000021 0000                     
000023 00000000         225             DB  000H,000H,000H,000H,000H,000H,000H,000H
000027 00000000                 
                        226     
                        227     
                        228     ; /*
                        229     ;  * Author(s): Wei-Han Chen (Embedded Platform Lab, NTHU)
                        230     ;  * Copyright (c) 2009 National Tsing Hua University (NTHU) 
                        231     ;  * Permission to copy, modify, and distribute this program is granted 
                        232     ;  * for noncommercial purposes, provided the author(s) and copyright
                        233     ;  * notice are retained. All other uses require explicit written
                        234     ;  * permission from NTHU. 
                        235     ;  *
                        236     ;  * Eco Paging Library 
                        237     ;  *
                        238     ;  * Wei-Han Chen <xwaynec@gmail.com> 
                        239     ;  * 2009/2/13
                        240     ;  */
                        241     ; 
                        242     ; #include "eco_page.h"
                        243     ; #include "eeprom/eeprom.h"
                        244     ; 
                        245     ; #define ECO_PAGE_SIZE 128 
                        246     ; #define ECO_PAGE_ADDR_OFFSET  12      
                        247     ; 
                        248     ; #if ECO_PAGE_SIZE == 64
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/19/09 20:48:44 PAGE     5

                        249     ;       
                        250     ;       #define ECO_PAGE_ENTRY  48
                        251     ;       #define ECO_PAGE_SHIFT  6
                        252     ;       #define ECO_PAGE_MASK   0x003F
                        253     ; 
                        254     ;       unsigned int idata ECO_PAGE_TABLE[64-ECO_PAGE_ADDR_OFFSET] = {0};
                        255     ;       //Eco page virtual address id
                        256     ;       unsigned int ECO_PAGE_PREV_VID;
                        257     ;       //Eco page physical address id 
                        258     ;       unsigned int ECO_PAGE_PREV_PID;
                        259     ; 
                        260     ; #elif ECO_PAGE_SIZE == 128
                        261     ;       
                        262     ;       #define ECO_PAGE_ENTRY 24       
                        263     ;       #define ECO_PAGE_SHIFT  7
                        264     ;       #define ECO_PAGE_MASK   0x007F
                        265     ; 
                        266     ;       unsigned int idata ECO_PAGE_TABLE[32-ECO_PAGE_ADDR_OFFSET] = {0};
                        267     ;       //unsigned int idata ECO_PAGE_TABLE[32-ECO_PAGE_ADDR_OFFSET];
                        268     ;       //Eco page virtual address id
                        269     ;       unsigned int ECO_PAGE_PREV_VID;
                        270     ;       //Eco page physical address id 
                        271     ;       unsigned int ECO_PAGE_PREV_PID;
                        272     ; 
                        273     ; #elif ECO_PAGE_SIZE == 256
                        274     ;       
                        275     ;       #define ECO_PAGE_ENTRY 12       
                        276     ;       #define ECO_PAGE_SHIFT  8       
                        277     ;       #define ECO_PAGE_MASK   0x00FF
                        278     ; 
                        279     ;       unsigned int ECO_PAGE_TABLE[16-ECO_PAGE_ADDR_OFFSET];
                        280     ;       //Eco page virtual address id
                        281     ;       unsigned char ECO_PAGE_PREV_VID;
                        282     ;       //Eco page physical address id 
                        283     ;       unsigned char ECO_PAGE_PREV_PID;
                        284     ; 
                        285     ; #endif
                        286     ; 
                        287     ; unsigned char ECO_PAGE_TABLE_INDEX;
                        288     ; 
                        289     ; unsigned int ECO_PAGE_ADDR;
                        290     ; 
                        291     ; unsigned char ECO_PAGE_SPI_CONN;
                        292     ; 
                        293     ; unsigned char idata ECO_PAGE_REGISTER1;
                        294     ; unsigned char idata ECO_PAGE_REGISTER2;
                        295     ; unsigned char idata ECO_PAGE_REGISTER3;
                        296     ; unsigned char idata ECO_PAGE_REGISTER4;
                        297     ; unsigned char idata ECO_PAGE_REGISTER5;
                        298     ; unsigned char idata ECO_PAGE_REGISTER6;
                        299     ; unsigned char idata ECO_PAGE_REGISTER7;
                        300     ; 
                        301     ; 
                        302     ; void eco_page_init()
                        303     
------                  304             RSEG  ?PR?eco_page_init?ECO_PAGE
000000                  305     eco_page_init:
                        306                             ; SOURCE LINE # 75
                        307     ; {
                        308                             ; SOURCE LINE # 76
                        309     ;       ECO_PAGE_TABLE_INDEX = 0;
                        310                             ; SOURCE LINE # 77
000000 E4               311             CLR     A
000001 F500       F     312             MOV     ECO_PAGE_TABLE_INDEX,A
                        313     ;       
                        314     ;       ECO_PAGE_ADDR = 0;
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/19/09 20:48:44 PAGE     6

                        315                             ; SOURCE LINE # 79
000003 F500       F     316             MOV     ECO_PAGE_ADDR,A
000005 F500       F     317             MOV     ECO_PAGE_ADDR+01H,A
                        318     ;       ECO_PAGE_PREV_VID = 0;
                        319                             ; SOURCE LINE # 80
000007 F500       F     320             MOV     ECO_PAGE_PREV_VID,A
000009 F500       F     321             MOV     ECO_PAGE_PREV_VID+01H,A
                        322     ;       ECO_PAGE_PREV_PID = 0;
                        323                             ; SOURCE LINE # 81
00000B F500       F     324             MOV     ECO_PAGE_PREV_PID,A
00000D F500       F     325             MOV     ECO_PAGE_PREV_PID+01H,A
                        326     ; 
                        327     ;       /*
                        328     ;       ECO_PAGE_TABLE[0] = 0; 
                        329     ;       ECO_PAGE_TABLE[1] = 0; 
                        330     ;       ECO_PAGE_TABLE[2] = 0;
                        331     ;       ECO_PAGE_TABLE[3] = 0; 
                        332     ;       ECO_PAGE_TABLE[4] = 0; 
                        333     ;       ECO_PAGE_TABLE[5] = 0; 
                        334     ;       ECO_PAGE_TABLE[6] = 0; 
                        335     ;       ECO_PAGE_TABLE[7] = 0; 
                        336     ;       ECO_PAGE_TABLE[8] = 0; 
                        337     ;       ECO_PAGE_TABLE[9] = 0;
                        338     ;       ECO_PAGE_TABLE[10] = 0; 
                        339     ;       ECO_PAGE_TABLE[11] = 0; 
                        340     ;       ECO_PAGE_TABLE[12] = 0;
                        341     ;       */      
                        342     ; }
                        343                             ; SOURCE LINE # 98
00000F 22               344             RET     
                        345     ; END OF eco_page_init
                        346     
                        347     ; 
                        348     ; //LRU page replacement
                        349     ; /*void eco_page_manager()
                        350     ; {
                        351     ;       unsigned int i;
                        352     ;       unsigned int page_index = -1;
                        353     ; 
                        354     ;       //if page id is the same with the last page id
                        355     ;       if(((ECO_PAGE_ADDR >> 8) & 0x7F) == (ECO_PAGE_PREV_PID & 0x7F))
                        356     ;       {
                        357     ;               //virtual address id + function offset
                        358     ;               ECO_PAGE_ADDR = (ECO_PAGE_PREV_VID << 8) + (ECO_PAGE_ADDR & 0x00FF);
                        359     ;               #pragma asm
                        360     ;               //eco_page_function_call        
                        361     ;               //MOV     DPH,ECO_PAGE_ADDR
                        362     ;               //MOV     DPL,ECO_PAGE_ADDR+01H
                        363     ;               //LCALL ?C?ICALL2
                        364     ;               #pragma endasm
                        365     ;               return ;
                        366     ;       }       
                        367     ;       
                        368     ;       //check page table
                        369     ;       for(i=0;i<ECO_PAGE_ENTRY;i++)
                        370     ;       {
                        371     ;               if((ECO_PAGE_ADDR >> 8) == ECO_PAGE_TABLE[i])
                        372     ;               {
                        373     ;                       page_index = i;
                        374     ;                       
                        375     ;                       //set LRU bit is 1
                        376     ;                       ECO_PAGE_TABLE[i] = ECO_PAGE_TABLE[i] | 0x80;
                        377     ;                       break;
                        378     ;               }
                        379     ;       }
                        380     ; 
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/19/09 20:48:44 PAGE     7

                        381     ;       if(page_index != -1)
                        382     ;       {
                        383     ;               //store function physical addres id 
                        384     ;               ECO_PAGE_PREV_PID = ECO_PAGE_ADDR >> 8;
                        385     ;       
                        386     ;               //memory page is in ram
                        387     ;               ECO_PAGE_ADDR = ((page_index + ECO_PAGE_ADDR_OFFSET) << 8) + (ECO_PAGE_A
                               DDR & 0x00FF);
                        388     ; 
                        389     ;               //cache the virtual address id
                        390     ;               ECO_PAGE_PREV_VID = ECO_PAGE_ADDR >> 8;
                        391     ; 
                        392     ;               #pragma asm
                        393     ;               //eco_page_function_call
                        394     ;               //MOV     DPH,ECO_PAGE_ADDR
                        395     ;               //MOV     DPL,ECO_PAGE_ADDR+01H
                        396     ;               //LCALL ?C?ICALL2
                        397     ;               #pragma endasm
                        398     ; 
                        399     ;               return ;
                        400     ;       }       
                        401     ;       else
                        402     ;       {
                        403     ;               //page fault
                        404     ;               for(i=ECO_PAGE_TABLE_INDEX+1; ;i=(i+1)%10)
                        405     ;               {
                        406     ;                       if((ECO_PAGE_TABLE[i] & 0x80) == 0x80)
                        407     ;                       {
                        408     ;                               //LRU bit is 1 and then set this bit is 0
                        409     ;                               ECO_PAGE_TABLE[i] = ECO_PAGE_TABLE[i] & 0x7F;
                        410     ;                       }
                        411     ;                       else
                        412     ;                       {
                        413     ;                               unsigned char xdata *seg = (unsigned char xdata *)((i + 
                               ECO_PAGE_ADDR_OFFSET)<<8);
                        414     ;                               unsigned int j;
                        415     ;                               
                        416     ;                               //memory page is in ram
                        417     ;                               eeprom_init();
                        418     ; 
                        419     ;                               //mov code from eeprom to external ram
                        420     ;                               for(j=0;j<256;j++)
                        421     ;                               {
                        422     ;                                       *(seg+j) = eeprom_read(ECO_ADDR_SHIFT(ECO_PAGE_A
                               DDR & 0xFF00 ) +j);
                        423     ;                               }
                        424     ;                               
                        425     ;                               //update page table to connect this physical address id 
                               with virtual address id 
                        426     ;                               ECO_PAGE_TABLE[i] = ECO_PAGE_ADDR >> 8;
                        427     ; 
                        428     ;                               //store physical address id
                        429     ;                               ECO_PAGE_PREV_PID = ECO_PAGE_TABLE[i];
                        430     ; 
                        431     ;                               //update page address e.g.  (page_id<<8) + page_offset
                        432     ;                               ECO_PAGE_ADDR = ((i + ECO_PAGE_ADDR_OFFSET) << 8) + (ECO
                               _PAGE_ADDR & 0x00FF);
                        433     ; 
                        434     ;                               //store virtual address id 
                        435     ;                               ECO_PAGE_PREV_VID = ECO_PAGE_ADDR >> 8; 
                        436     ; 
                        437     ;                               //mov to the next index
                        438     ;                               ECO_PAGE_TABLE_INDEX = i;
                        439     ; 
                        440     ;                               //jump  to function address
                        441     ;                               #pragma asm
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/19/09 20:48:44 PAGE     8

                        442     ;                               //eco_page_function_call
                        443     ;                               //MOV     DPH,ECO_PAGE_ADDR
                        444     ;                               //MOV     DPL,ECO_PAGE_ADDR+01H
                        445     ;                               //LCALL        ?C?ICALL2               
                        446     ;                               #pragma endasm
                        447     ;                               
                        448     ;                               return ;
                        449     ;                               
                        450     ;                       }
                        451     ;               }
                        452     ;                       
                        453     ;       }
                        454     ;                               
                        455     ; }
                        456     ; */
                        457     ; 
                        458     ; void eco_page_manager()
                        459     
------                  460             RSEG  ?PR?eco_page_manager?ECO_PAGE
000000                  461     eco_page_manager:
                        462             USING   0
                        463                             ; SOURCE LINE # 210
                        464     ; {
                        465                             ; SOURCE LINE # 211
                        466     ;       unsigned int i;
                        467     ;       unsigned int page_index = -1; 
                        468                             ; SOURCE LINE # 213
000000 74FF             469             MOV     A,#0FFH
000002 F500       F     470             MOV     page_index?142,A
000004 F500       F     471             MOV     page_index?142+01H,A
                        472     ; 
                        473     ;       //Check POP instruction 
                        474     ;       //for(i=0;i<10;i++)
                        475     ;       //{    
                        476     ;       //      blink_led();
                        477     ;       //      mdelay(200);
                        478     ;       //}    
                        479     ;       //mdelay(1000);
                        480     ;       
                        481     ;       //if page id is the same with the last page id
                        482     ;       if((ECO_PAGE_ADDR >> ECO_PAGE_SHIFT) == ECO_PAGE_PREV_PID)
                        483                             ; SOURCE LINE # 224
000006 E500       F     484             MOV     A,ECO_PAGE_ADDR+01H
000008 AE00       F     485             MOV     R6,ECO_PAGE_ADDR
00000A 7807             486             MOV     R0,#07H
00000C                  487     ?C0013:
00000C CE               488             XCH     A,R6
00000D C3               489             CLR     C
00000E 13               490             RRC     A
00000F CE               491             XCH     A,R6
000010 13               492             RRC     A
000011 D8F9             493             DJNZ    R0,?C0013
000013 B50013           494             CJNE    A,ECO_PAGE_PREV_PID+01H,?C0002
000016 EE               495             MOV     A,R6
000017 B5000F           496             CJNE    A,ECO_PAGE_PREV_PID,?C0002
                        497     ;       {
                        498                             ; SOURCE LINE # 225
                        499     ;               //virtual address id + function offset
                        500     ;               ECO_PAGE_ADDR = (ECO_PAGE_PREV_VID << 8) + (ECO_PAGE_ADDR & 0x00FF);
                        501                             ; SOURCE LINE # 227
00001A E500       F     502             MOV     A,ECO_PAGE_PREV_VID+01H
00001C FE               503             MOV     R6,A
00001D 7C00             504             MOV     R4,#00H
00001F E4               505             CLR     A
000020 2500       F     506             ADD     A,ECO_PAGE_ADDR+01H
000022 F500       F     507             MOV     ECO_PAGE_ADDR+01H,A
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/19/09 20:48:44 PAGE     9

000024 EC               508             MOV     A,R4
000025 3E               509             ADDC    A,R6
000026 F500       F     510             MOV     ECO_PAGE_ADDR,A
                        511     ;               #pragma asm
                        512     ;               //eco_page_function_call
                        513               
000028 22               514             RET     
                        515     ;               #pragma endasm
                        516     ;               return ;
                        517     ;       }       
                        518                             ; SOURCE LINE # 232
000029                  519     ?C0002:
                        520     ;                               
                        521     ;       //Check Table   
                        522     ;       for(i=0;i<ECO_PAGE_ENTRY;i++)
                        523                             ; SOURCE LINE # 235
000029 E4               524             CLR     A
00002A F500       F     525             MOV     i?141,A
00002C F500       F     526             MOV     i?141+01H,A
00002E                  527     ?C0004:
                        528     ;       {   
                        529                             ; SOURCE LINE # 236
                        530     ;               if((ECO_PAGE_ADDR >> ECO_PAGE_SHIFT) == ECO_PAGE_TABLE[i])
                        531                             ; SOURCE LINE # 237
00002E E500       F     532             MOV     A,i?141+01H
000030 25E0             533             ADD     A,ACC
000032 2400       F     534             ADD     A,#LOW (ECO_PAGE_TABLE+01H)
000034 F9               535             MOV     R1,A
000035 E500       F     536             MOV     A,ECO_PAGE_ADDR+01H
000037 AE00       F     537             MOV     R6,ECO_PAGE_ADDR
000039 7807             538             MOV     R0,#07H
00003B                  539     ?C0015:
00003B CE               540             XCH     A,R6
00003C C3               541             CLR     C
00003D 13               542             RRC     A
00003E CE               543             XCH     A,R6
00003F 13               544             RRC     A
000040 D8F9             545             DJNZ    R0,?C0015
000042 67               546             XRL     A,@R1
000043 7003             547             JNZ     ?C0016
000045 EE               548             MOV     A,R6
000046 19               549             DEC     R1
000047 67               550             XRL     A,@R1
000048                  551     ?C0016:
000048 7008             552             JNZ     ?C0006
                        553     ;               {
                        554                             ; SOURCE LINE # 238
                        555     ;                       page_index = i;
                        556                             ; SOURCE LINE # 239
00004A 850000     F     557             MOV     page_index?142,i?141
00004D 850000     F     558             MOV     page_index?142+01H,i?141+01H
                        559     ;                       break;
                        560                             ; SOURCE LINE # 240
000050 800E             561             SJMP    ?C0005
                        562     ;               }
                        563                             ; SOURCE LINE # 241
                        564     ;       }
                        565                             ; SOURCE LINE # 242
000052                  566     ?C0006:
000052 0500       F     567             INC     i?141+01H
000054 E500       F     568             MOV     A,i?141+01H
000056 7002             569             JNZ     ?C0017
000058 0500       F     570             INC     i?141
00005A                  571     ?C0017:
00005A 6418             572             XRL     A,#018H
00005C 4500       F     573             ORL     A,i?141
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/19/09 20:48:44 PAGE    10

00005E 70CE             574             JNZ     ?C0004
000060                  575     ?C0005:
                        576     ; 
                        577     ;       if(page_index != -1) 
                        578                             ; SOURCE LINE # 244
000060 E500       F     579             MOV     A,page_index?142+01H
000062 F4               580             CPL     A
000063 7003             581             JNZ     ?C0018
000065 E500       F     582             MOV     A,page_index?142
000067 F4               583             CPL     A
000068                  584     ?C0018:
000068 6044             585             JZ      ?C0008
                        586     ;       {  
                        587                             ; SOURCE LINE # 245
                        588     ;               //store function physical addres id 
                        589     ;               ECO_PAGE_PREV_PID = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;
                        590                             ; SOURCE LINE # 247
00006A E500       F     591             MOV     A,ECO_PAGE_ADDR+01H
00006C AE00       F     592             MOV     R6,ECO_PAGE_ADDR
00006E 7807             593             MOV     R0,#07H
000070                  594     ?C0019:
000070 CE               595             XCH     A,R6
000071 C3               596             CLR     C
000072 13               597             RRC     A
000073 CE               598             XCH     A,R6
000074 13               599             RRC     A
000075 D8F9             600             DJNZ    R0,?C0019
000077 F500       F     601             MOV     ECO_PAGE_PREV_PID+01H,A
000079 8E00       F     602             MOV     ECO_PAGE_PREV_PID,R6
                        603     ;       
                        604     ;               //memory page is in ram
                        605     ;               ECO_PAGE_ADDR = ((page_index + ECO_PAGE_ADDR_OFFSET) << ECO_PAGE_SHIFT) 
                               + (ECO_PAGE_ADDR & ECO_PAGE_MASK);
                        606                             ; SOURCE LINE # 250
00007B E500       F     607             MOV     A,page_index?142+01H
00007D 240C             608             ADD     A,#0CH
00007F FF               609             MOV     R7,A
000080 E4               610             CLR     A
000081 3500       F     611             ADDC    A,page_index?142
000083 FE               612             MOV     R6,A
000084 EF               613             MOV     A,R7
000085 7807             614             MOV     R0,#07H
000087                  615     ?C0020:
000087 C3               616             CLR     C
000088 33               617             RLC     A
000089 CE               618             XCH     A,R6
00008A 33               619             RLC     A
00008B CE               620             XCH     A,R6
00008C D8F9             621             DJNZ    R0,?C0020
00008E FF               622             MOV     R7,A
00008F 7C00             623             MOV     R4,#00H
000091 E500       F     624             MOV     A,ECO_PAGE_ADDR+01H
000093 547F             625             ANL     A,#07FH
000095 2F               626             ADD     A,R7
000096 F500       F     627             MOV     ECO_PAGE_ADDR+01H,A
000098 EC               628             MOV     A,R4
000099 3E               629             ADDC    A,R6
00009A F500       F     630             MOV     ECO_PAGE_ADDR,A
                        631     ; 
                        632     ;               //cache the virtual address id
                        633     ;               ECO_PAGE_PREV_VID = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;
                        634                             ; SOURCE LINE # 253
00009C E500       F     635             MOV     A,ECO_PAGE_ADDR+01H
00009E AE00       F     636             MOV     R6,ECO_PAGE_ADDR
0000A0 7807             637             MOV     R0,#07H
0000A2                  638     ?C0021:
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/19/09 20:48:44 PAGE    11

0000A2 CE               639             XCH     A,R6
0000A3 C3               640             CLR     C
0000A4 13               641             RRC     A
0000A5 CE               642             XCH     A,R6
0000A6 13               643             RRC     A
0000A7 D8F9             644             DJNZ    R0,?C0021
0000A9 F500       F     645             MOV     ECO_PAGE_PREV_VID+01H,A
0000AB 8E00       F     646             MOV     ECO_PAGE_PREV_VID,R6
                        647     ; 
                        648     ;               #pragma asm
                        649     ;               //eco_page_function_call
                        650               
                        651     ;               //MOV     DPH,ECO_PAGE_ADDR
                        652               
                        653     ;               //MOV     DPL,ECO_PAGE_ADDR+01H
                        654               
                        655     ;               //LCALL ?C?ICALL2
                        656               
                        657     ;               #pragma endasm
                        658     ;       }   
                        659                             ; SOURCE LINE # 261
0000AD 22               660             RET     
0000AE                  661     ?C0008:
                        662     ;       else
                        663     ;       {
                        664                             ; SOURCE LINE # 263
                        665     ;               //page fault
                        666     ;               // Move Data from EEPROM to iRAM 
                        667     ;               unsigned char xdata *seg = (unsigned char xdata *)((ECO_PAGE_TABLE_INDEX
                                + ECO_PAGE_ADDR_OFFSET) << ECO_PAGE_SHIFT);
                        668                             ; SOURCE LINE # 266
0000AE E500       F     669             MOV     A,ECO_PAGE_TABLE_INDEX
0000B0 240C             670             ADD     A,#0CH
0000B2 FF               671             MOV     R7,A
0000B3 E4               672             CLR     A
0000B4 33               673             RLC     A
0000B5 FE               674             MOV     R6,A
0000B6 EF               675             MOV     A,R7
0000B7 7807             676             MOV     R0,#07H
0000B9                  677     ?C0022:
0000B9 C3               678             CLR     C
0000BA 33               679             RLC     A
0000BB CE               680             XCH     A,R6
0000BC 33               681             RLC     A
0000BD CE               682             XCH     A,R6
0000BE D8F9             683             DJNZ    R0,?C0022
0000C0 8E00       F     684             MOV     seg?140,R6
0000C2 F500       F     685             MOV     seg?140+01H,A
                        686     ;               
                        687     ;               //memory page is in ram
                        688     ;               eeprom_init();
                        689                             ; SOURCE LINE # 269
0000C4 120000     E     690             LCALL   eeprom_init
                        691     ; 
                        692     ;               //mov code from eeprom to external ram
                        693     ;               for(i=0;i<ECO_PAGE_SIZE;i++)
                        694                             ; SOURCE LINE # 272
0000C7 E4               695             CLR     A
0000C8 F500       F     696             MOV     i?141,A
0000CA F500       F     697             MOV     i?141+01H,A
0000CC                  698     ?C0010:
                        699     ;               {
                        700                             ; SOURCE LINE # 273
                        701     ;                       *(seg+i) = eeprom_read(ECO_ADDR_SHIFT(ECO_PAGE_ADDR & ECO_PAGE_M
                               ASK) +i);
                        702                             ; SOURCE LINE # 274
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/19/09 20:48:44 PAGE    12

0000CC E500       F     703             MOV     A,ECO_PAGE_ADDR+01H
0000CE 547F             704             ANL     A,#07FH
0000D0 2403             705             ADD     A,#03H
0000D2 FF               706             MOV     R7,A
0000D3 E4               707             CLR     A
0000D4 33               708             RLC     A
0000D5 CF               709             XCH     A,R7
0000D6 2500       F     710             ADD     A,i?141+01H
0000D8 CF               711             XCH     A,R7
0000D9 3500       F     712             ADDC    A,i?141
0000DB FE               713             MOV     R6,A
0000DC 120000     E     714             LCALL   _eeprom_read
0000DF E500       F     715             MOV     A,seg?140+01H
0000E1 2500       F     716             ADD     A,i?141+01H
0000E3 F582             717             MOV     DPL,A
0000E5 E500       F     718             MOV     A,seg?140
0000E7 3500       F     719             ADDC    A,i?141
0000E9 F583             720             MOV     DPH,A
0000EB EF               721             MOV     A,R7
0000EC F0               722             MOVX    @DPTR,A
                        723     ;               }
                        724                             ; SOURCE LINE # 275
0000ED 0500       F     725             INC     i?141+01H
0000EF E500       F     726             MOV     A,i?141+01H
0000F1 7002             727             JNZ     ?C0023
0000F3 0500       F     728             INC     i?141
0000F5                  729     ?C0023:
0000F5 C3               730             CLR     C
0000F6 9480             731             SUBB    A,#080H
0000F8 E500       F     732             MOV     A,i?141
0000FA 9400             733             SUBB    A,#00H
0000FC 40CE             734             JC      ?C0010
0000FE                  735     ?C0011:
                        736     ;               
                        737     ;               //update page table to connect this physical address id with virtual add
                               ress id 
                        738     ;               ECO_PAGE_TABLE[ECO_PAGE_TABLE_INDEX] = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;
                        739                             ; SOURCE LINE # 278
0000FE E500       F     740             MOV     A,ECO_PAGE_ADDR+01H
000100 AE00       F     741             MOV     R6,ECO_PAGE_ADDR
000102 7807             742             MOV     R0,#07H
000104                  743     ?C0024:
000104 CE               744             XCH     A,R6
000105 C3               745             CLR     C
000106 13               746             RRC     A
000107 CE               747             XCH     A,R6
000108 13               748             RRC     A
000109 D8F9             749             DJNZ    R0,?C0024
00010B FF               750             MOV     R7,A
00010C E500       F     751             MOV     A,ECO_PAGE_TABLE_INDEX
00010E 25E0             752             ADD     A,ACC
000110 2400       F     753             ADD     A,#LOW (ECO_PAGE_TABLE)
000112 F8               754             MOV     R0,A
000113 A606             755             MOV     @R0,AR6
000115 08               756             INC     R0
000116 A607             757             MOV     @R0,AR7
                        758     ; 
                        759     ;               //store physical address id
                        760     ;               ECO_PAGE_PREV_PID = ECO_PAGE_TABLE[ECO_PAGE_TABLE_INDEX];
                        761                             ; SOURCE LINE # 281
000118 E500       F     762             MOV     A,ECO_PAGE_TABLE_INDEX
00011A 25E0             763             ADD     A,ACC
00011C 2400       F     764             ADD     A,#LOW (ECO_PAGE_TABLE)
00011E F8               765             MOV     R0,A
00011F E6               766             MOV     A,@R0
000120 F500       F     767             MOV     ECO_PAGE_PREV_PID,A
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/19/09 20:48:44 PAGE    13

000122 08               768             INC     R0
000123 E6               769             MOV     A,@R0
000124 F500       F     770             MOV     ECO_PAGE_PREV_PID+01H,A
                        771     ; 
                        772     ;               //update page address
                        773     ;               ECO_PAGE_ADDR = ((ECO_PAGE_TABLE_INDEX + ECO_PAGE_ADDR_OFFSET) << ECO_PA
                               GE_SHIFT) + (ECO_PAGE_ADDR & ECO_PAGE_MASK);
                        774                             ; SOURCE LINE # 284
000126 E500       F     775             MOV     A,ECO_PAGE_TABLE_INDEX
000128 240C             776             ADD     A,#0CH
00012A FF               777             MOV     R7,A
00012B E4               778             CLR     A
00012C 33               779             RLC     A
00012D FE               780             MOV     R6,A
00012E EF               781             MOV     A,R7
00012F 7807             782             MOV     R0,#07H
000131                  783     ?C0025:
000131 C3               784             CLR     C
000132 33               785             RLC     A
000133 CE               786             XCH     A,R6
000134 33               787             RLC     A
000135 CE               788             XCH     A,R6
000136 D8F9             789             DJNZ    R0,?C0025
000138 FF               790             MOV     R7,A
000139 7C00             791             MOV     R4,#00H
00013B E500       F     792             MOV     A,ECO_PAGE_ADDR+01H
00013D 547F             793             ANL     A,#07FH
00013F 2F               794             ADD     A,R7
000140 F500       F     795             MOV     ECO_PAGE_ADDR+01H,A
000142 EC               796             MOV     A,R4
000143 3E               797             ADDC    A,R6
000144 F500       F     798             MOV     ECO_PAGE_ADDR,A
                        799     ; 
                        800     ;               //store virtual address id 
                        801     ;               ECO_PAGE_PREV_VID = ECO_PAGE_ADDR >> ECO_PAGE_SHIFT;    
                        802                             ; SOURCE LINE # 287
000146 E500       F     803             MOV     A,ECO_PAGE_ADDR+01H
000148 AE00       F     804             MOV     R6,ECO_PAGE_ADDR
00014A 7807             805             MOV     R0,#07H
00014C                  806     ?C0026:
00014C CE               807             XCH     A,R6
00014D C3               808             CLR     C
00014E 13               809             RRC     A
00014F CE               810             XCH     A,R6
000150 13               811             RRC     A
000151 D8F9             812             DJNZ    R0,?C0026
000153 F500       F     813             MOV     ECO_PAGE_PREV_VID+01H,A
000155 8E00       F     814             MOV     ECO_PAGE_PREV_VID,R6
                        815     ; 
                        816     ;               //mov to the next index
                        817     ;               ECO_PAGE_TABLE_INDEX++;
                        818                             ; SOURCE LINE # 290
000157 0500       F     819             INC     ECO_PAGE_TABLE_INDEX
                        820     ;                       
                        821     ;               //jump  to function address
                        822     ;               #pragma asm
                        823     ;               //eco_page_function_call
                        824               
                        825     ;               //MOV     DPH,ECO_PAGE_ADDR
                        826               
                        827     ;               //MOV     DPL,ECO_PAGE_ADDR+01H
                        828               
                        829     ;               //LCALL        ?C?ICALL2               
                        830               
                        831     ;               #pragma endasm
                        832     ; 
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/19/09 20:48:44 PAGE    14

                        833     ;       }
                        834                             ; SOURCE LINE # 300
                        835     ; 
                        836     ; }
                        837                             ; SOURCE LINE # 302
000159                  838     ?C0003:
000159 22               839             RET     
                        840     ; END OF eco_page_manager
                        841     
                        842             END
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/19/09 20:48:44 PAGE    15

SYMBOL TABLE LISTING
------ ----- -------


N A M E                                    T Y P E  V A L U E     ATTRIBUTES

?C0002. . . . . . . . . . . . . . . . .    C  ADDR  0029H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0003. . . . . . . . . . . . . . . . .    C  ADDR  0159H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0004. . . . . . . . . . . . . . . . .    C  ADDR  002EH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0005. . . . . . . . . . . . . . . . .    C  ADDR  0060H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0006. . . . . . . . . . . . . . . . .    C  ADDR  0052H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0008. . . . . . . . . . . . . . . . .    C  ADDR  00AEH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0010. . . . . . . . . . . . . . . . .    C  ADDR  00CCH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0011. . . . . . . . . . . . . . . . .    C  ADDR  00FEH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0013. . . . . . . . . . . . . . . . .    C  ADDR  000CH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0015. . . . . . . . . . . . . . . . .    C  ADDR  003BH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0016. . . . . . . . . . . . . . . . .    C  ADDR  0048H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0017. . . . . . . . . . . . . . . . .    C  ADDR  005AH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0018. . . . . . . . . . . . . . . . .    C  ADDR  0068H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0019. . . . . . . . . . . . . . . . .    C  ADDR  0070H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0020. . . . . . . . . . . . . . . . .    C  ADDR  0087H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0021. . . . . . . . . . . . . . . . .    C  ADDR  00A2H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0022. . . . . . . . . . . . . . . . .    C  ADDR  00B9H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0023. . . . . . . . . . . . . . . . .    C  ADDR  00F5H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0024. . . . . . . . . . . . . . . . .    C  ADDR  0104H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0025. . . . . . . . . . . . . . . . .    C  ADDR  0131H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C0026. . . . . . . . . . . . . . . . .    C  ADDR  014CH     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
?C_INITSEG. . . . . . . . . . . . . . .    C  SEG   00002BH       REL=UNIT, ALN=BYTE
?DT?ECO_PAGE. . . . . . . . . . . . . .    D  SEG   000008H       REL=UNIT, ALN=BYTE
?DT?ECO_PAGE_MANAGER?ECO_PAGE . . . . .    D  SEG   000006H       REL=UNIT, ALN=BYTE
?ECO_PAGE_MANAGER?BYTE. . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?ECO_PAGE_MANAGER?ECO_PAGE
?ID?ECO_PAGE. . . . . . . . . . . . . .    I  SEG   00002FH       REL=UNIT, ALN=BYTE
?PR?ECO_PAGE_INIT?ECO_PAGE. . . . . . .    C  SEG   000010H       REL=UNIT, ALN=BYTE
?PR?ECO_PAGE_MANAGER?ECO_PAGE . . . . .    C  SEG   00015AH       REL=UNIT, ALN=BYTE
_EEPROM_READ. . . . . . . . . . . . . .    C  ADDR  -------       EXT
AC. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.6   A   
ACC . . . . . . . . . . . . . . . . . .    D  ADDR  00E0H     A   
ADCCON. . . . . . . . . . . . . . . . .    D  ADDR  00A1H     A   
ADCDATAH. . . . . . . . . . . . . . . .    D  ADDR  00A2H     A   
ADCDATAL. . . . . . . . . . . . . . . .    D  ADDR  00A3H     A   
ADCSTATIC . . . . . . . . . . . . . . .    D  ADDR  00A4H     A   
AR6 . . . . . . . . . . . . . . . . . .    D  ADDR  0006H     A   
AR7 . . . . . . . . . . . . . . . . . .    D  ADDR  0007H     A   
B . . . . . . . . . . . . . . . . . . .    D  ADDR  00F0H     A   
C_T2. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.1   A   
CE. . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.6   A   
CK_CTRL . . . . . . . . . . . . . . . .    D  ADDR  00B6H     A   
CKCON . . . . . . . . . . . . . . . . .    D  ADDR  008EH     A   
CLK1. . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.1   A   
CLK2. . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.5   A   
CP_RL2. . . . . . . . . . . . . . . . .    B  ADDR  00C8H.0   A   
CPRL2 . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.0   A   
CS. . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.3   A   
CT2 . . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.1   A   
CY. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.7   A   
DATA? . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.0   A   
DEV_OFFSET. . . . . . . . . . . . . . .    D  ADDR  00BEH     A   
DIN0. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.2   A   
DIO0. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.0   A   
DIO1. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.1   A   
DIO2. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.0   A   
DIO3. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.1   A   
DIO4. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.2   A   
DIO5. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.3   A   
DIO6. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.4   A   
DIO7. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.5   A   
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/19/09 20:48:44 PAGE    16

DIO8. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.6   A   
DIO9. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.7   A   
DOUT2 . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.4   A   
DPH . . . . . . . . . . . . . . . . . .    D  ADDR  0083H     A   
DPH0. . . . . . . . . . . . . . . . . .    D  ADDR  0083H     A   
DPH1. . . . . . . . . . . . . . . . . .    D  ADDR  0085H     A   
DPL . . . . . . . . . . . . . . . . . .    D  ADDR  0082H     A   
DPL0. . . . . . . . . . . . . . . . . .    D  ADDR  0082H     A   
DPL1. . . . . . . . . . . . . . . . . .    D  ADDR  0084H     A   
DPS . . . . . . . . . . . . . . . . . .    D  ADDR  0086H     A   
DR1 . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.2   A   
DR2 . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.6   A   
DR2_CE. . . . . . . . . . . . . . . . .    B  ADDR  00A0H.6   A   
EA. . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.7   A   
ECO_PAGE. . . . . . . . . . . . . . . .    -- ----  -------       
ECO_PAGE_ADDR . . . . . . . . . . . . .    D  ADDR  0005H     R   SEG=?DT?ECO_PAGE
ECO_PAGE_INIT . . . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?ECO_PAGE_INIT?ECO_PAGE
ECO_PAGE_MANAGER. . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?ECO_PAGE_MANAGER?ECO_PAGE
ECO_PAGE_PREV_PID . . . . . . . . . . .    D  ADDR  0001H     R   SEG=?DT?ECO_PAGE
ECO_PAGE_PREV_VID . . . . . . . . . . .    D  ADDR  0003H     R   SEG=?DT?ECO_PAGE
ECO_PAGE_REGISTER1. . . . . . . . . . .    I  ADDR  0028H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER2. . . . . . . . . . .    I  ADDR  0029H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER3. . . . . . . . . . .    I  ADDR  002AH     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER4. . . . . . . . . . .    I  ADDR  002BH     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER5. . . . . . . . . . .    I  ADDR  002CH     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER6. . . . . . . . . . .    I  ADDR  002DH     R   SEG=?ID?ECO_PAGE
ECO_PAGE_REGISTER7. . . . . . . . . . .    I  ADDR  002EH     R   SEG=?ID?ECO_PAGE
ECO_PAGE_SPI_CONN . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?ECO_PAGE
ECO_PAGE_TABLE. . . . . . . . . . . . .    I  ADDR  0000H     R   SEG=?ID?ECO_PAGE
ECO_PAGE_TABLE_INDEX. . . . . . . . . .    D  ADDR  0007H     R   SEG=?DT?ECO_PAGE
EEPROM_INIT . . . . . . . . . . . . . .    C  ADDR  -------       EXT
EICON . . . . . . . . . . . . . . . . .    D  ADDR  00D8H     A   
EIE . . . . . . . . . . . . . . . . . .    D  ADDR  00E8H     A   
EIP . . . . . . . . . . . . . . . . . .    D  ADDR  00F8H     A   
ES. . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.4   A   
ET0 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.1   A   
ET1 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.3   A   
ET2 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.5   A   
EWDI. . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.4   A   
EX0 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.0   A   
EX1 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.2   A   
EX2 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.0   A   
EX3 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.1   A   
EX4 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.2   A   
EX5 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.3   A   
EXEN2 . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.3   A   
EXF2. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.6   A   
EXIF. . . . . . . . . . . . . . . . . .    D  ADDR  0091H     A   
F0. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.5   A   
F1. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.1   A   
I?141 . . . . . . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?ECO_PAGE_MANAGER?ECO_PAGE
IE. . . . . . . . . . . . . . . . . . .    D  ADDR  00A8H     A   
IE0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.1   A   
IE1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.3   A   
INT0_N. . . . . . . . . . . . . . . . .    B  ADDR  0080H.3   A   
INT1_N. . . . . . . . . . . . . . . . .    B  ADDR  0080H.4   A   
IP. . . . . . . . . . . . . . . . . . .    D  ADDR  00B8H     A   
IT0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.0   A   
IT1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.2   A   
MPAGE . . . . . . . . . . . . . . . . .    D  ADDR  0092H     A   
OV. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.2   A   
P . . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.0   A   
P0. . . . . . . . . . . . . . . . . . .    D  ADDR  0080H     A   
P0_0. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.0   A   
P0_1. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.1   A   
P0_2. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.2   A   
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/19/09 20:48:44 PAGE    17

P0_3. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.3   A   
P0_4. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.4   A   
P0_5. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.5   A   
P0_6. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.6   A   
P0_7. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.7   A   
P0_ALT. . . . . . . . . . . . . . . . .    D  ADDR  0095H     A   
P0_DIR. . . . . . . . . . . . . . . . .    D  ADDR  0094H     A   
P1. . . . . . . . . . . . . . . . . . .    D  ADDR  0090H     A   
P1_0. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.0   A   
P1_1. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.1   A   
P1_2. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.2   A   
P1_ALT. . . . . . . . . . . . . . . . .    D  ADDR  0097H     A   
P1_DIR. . . . . . . . . . . . . . . . .    D  ADDR  0096H     A   
PAGE_INDEX?142. . . . . . . . . . . . .    D  ADDR  0002H     R   SEG=?DT?ECO_PAGE_MANAGER?ECO_PAGE
PCON. . . . . . . . . . . . . . . . . .    D  ADDR  0087H     A   
PS. . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.4   A   
PSW . . . . . . . . . . . . . . . . . .    D  ADDR  00D0H     A   
PT0 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.1   A   
PT1 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.3   A   
PT2 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.5   A   
PWDI. . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.4   A   
PWM . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.7   A   
PWMCON. . . . . . . . . . . . . . . . .    D  ADDR  00A9H     A   
PWMDUTY . . . . . . . . . . . . . . . .    D  ADDR  00AAH     A   
PWR_UP. . . . . . . . . . . . . . . . .    B  ADDR  00A0H.7   A   
PX0 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.0   A   
PX1 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.2   A   
PX2 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.0   A   
PX3 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.1   A   
PX4 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.2   A   
PX5 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.3   A   
RADIO . . . . . . . . . . . . . . . . .    D  ADDR  00A0H     A   
RB8 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.2   A   
RCAP2H. . . . . . . . . . . . . . . . .    D  ADDR  00CBH     A   
RCAP2L. . . . . . . . . . . . . . . . .    D  ADDR  00CAH     A   
RCLK. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.5   A   
REGX_CTRL . . . . . . . . . . . . . . .    D  ADDR  00ADH     A   
REGX_LSB. . . . . . . . . . . . . . . .    D  ADDR  00ACH     A   
REGX_MSB. . . . . . . . . . . . . . . .    D  ADDR  00ABH     A   
REN . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.4   A   
RI. . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.0   A   
RS0 . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.3   A   
RS1 . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.4   A   
RSTREAS . . . . . . . . . . . . . . . .    D  ADDR  00B1H     A   
RXD . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.1   A   
SBUF. . . . . . . . . . . . . . . . . .    D  ADDR  0099H     A   
SCON. . . . . . . . . . . . . . . . . .    D  ADDR  0098H     A   
SEG?140 . . . . . . . . . . . . . . . .    D  ADDR  0004H     R   SEG=?DT?ECO_PAGE_MANAGER?ECO_PAGE
SM0 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.7   A   
SM1 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.6   A   
SM2 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.5   A   
SP. . . . . . . . . . . . . . . . . . .    D  ADDR  0081H     A   
SPC_FNC . . . . . . . . . . . . . . . .    D  ADDR  008FH     A   
SPI_CTRL. . . . . . . . . . . . . . . .    D  ADDR  00B3H     A   
SPI_DATA. . . . . . . . . . . . . . . .    D  ADDR  00B2H     A   
SPICLK. . . . . . . . . . . . . . . . .    D  ADDR  00B4H     A   
T0. . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.5   A   
T1. . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.6   A   
T1_1V2. . . . . . . . . . . . . . . . .    D  ADDR  00BCH     A   
T2. . . . . . . . . . . . . . . . . . .    B  ADDR  0090H.0   A   
T2_1V2. . . . . . . . . . . . . . . . .    D  ADDR  00BDH     A   
T2CON . . . . . . . . . . . . . . . . .    D  ADDR  00C8H     A   
TB8 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.3   A   
TCLK. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.4   A   
TCON. . . . . . . . . . . . . . . . . .    D  ADDR  0088H     A   
TEST_MODE . . . . . . . . . . . . . . .    D  ADDR  00B7H     A   
AX51 MACRO ASSEMBLER  ECO_PAGE                                                              04/19/09 20:48:44 PAGE    18

TF0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.5   A   
TF1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.7   A   
TF2 . . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.7   A   
TH0 . . . . . . . . . . . . . . . . . .    D  ADDR  008CH     A   
TH1 . . . . . . . . . . . . . . . . . .    D  ADDR  008DH     A   
TH2 . . . . . . . . . . . . . . . . . .    D  ADDR  00CDH     A   
TI. . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.1   A   
TICK_DV . . . . . . . . . . . . . . . .    D  ADDR  00B5H     A   
TL0 . . . . . . . . . . . . . . . . . .    D  ADDR  008AH     A   
TL1 . . . . . . . . . . . . . . . . . .    D  ADDR  008BH     A   
TL2 . . . . . . . . . . . . . . . . . .    D  ADDR  00CCH     A   
TMOD. . . . . . . . . . . . . . . . . .    D  ADDR  0089H     A   
TR0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.4   A   
TR1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.6   A   
TR2 . . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.2   A   
TXD . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.2   A   
WDTI. . . . . . . . . . . . . . . . . .    B  ADDR  00D8H.3   A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S).
