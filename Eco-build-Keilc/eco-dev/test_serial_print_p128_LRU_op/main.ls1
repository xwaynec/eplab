AX51 MACRO ASSEMBLER  MAIN                                                                  05/03/09 23:05:28 PAGE     1


MACRO ASSEMBLER AX51 V3.06a
OBJECT MODULE PLACED IN .\main.obj
ASSEMBLER INVOKED BY: C:\Keil\C51\BIN\AX51.exe .\main.src EP DEBUG SYMBOLS OJ(.\main.obj) PR(.\main.ls1) 

LOC    OBJ             LINE     SOURCE

                          1     ; ./main.src generated from: .\main.c
                          2     ; COMPILER INVOKED BY:
                          3     ;        C:\Keil\C51\BIN\C51.exe .\main.c BROWSE DEBUG CODE LISTINCLUDE SYMBOLS PREPRINT
                                ROM(LARGE) INCDIR(../../Include) SRC(./main.src)
                          4     
                          5     $nomod51 
                          6     
                          7     NAME    MAIN
                          8     
 00A0.7                   9     PWR_UP  BIT     0A0H.7
 0080                    10     P0      DATA    080H
 0090                    11     P1      DATA    090H
 00D0.6                  12     AC      BIT     0D0H.6
 0080.5                  13     T0      BIT     080H.5
 00B3                    14     SPI_CTRL        DATA    0B3H
 0080.6                  15     T1      BIT     080H.6
 00A8.7                  16     EA      BIT     0A8H.7
 0090.0                  17     T2      BIT     090H.0
 00A0.6                  18     CE      BIT     0A0H.6
 00BE                    19     DEV_OFFSET      DATA    0BEH
 00A0.1                  20     CLK1    BIT     0A0H.1
 0090.2                  21     DIN0    BIT     090H.2
 00A0.5                  22     CLK2    BIT     0A0H.5
 0090.0                  23     DIO0    BIT     090H.0
 0083                    24     DPH0    DATA    083H
 0090.1                  25     DIO1    BIT     090H.1
 00A8                    26     IE      DATA    0A8H
 0085                    27     DPH1    DATA    085H
 0080.0                  28     DIO2    BIT     080H.0
 0080.1                  29     DIO3    BIT     080H.1
 0080.0                  30     P0_0    BIT     080H.0
 0090.0                  31     P1_0    BIT     090H.0
 0080.2                  32     DIO4    BIT     080H.2
 0080.1                  33     P0_1    BIT     080H.1
 0082                    34     DPL0    DATA    082H
 0090.1                  35     P1_1    BIT     090H.1
 0080.3                  36     DIO5    BIT     080H.3
 0080.2                  37     P0_2    BIT     080H.2
 0084                    38     DPL1    DATA    084H
 0090.2                  39     P1_2    BIT     090H.2
 0080.4                  40     DIO6    BIT     080H.4
 0080.3                  41     P0_3    BIT     080H.3
 0080.5                  42     DIO7    BIT     080H.5
 0080.4                  43     P0_4    BIT     080H.4
 00A4                    44     ADCSTATIC       DATA    0A4H
 0080.6                  45     DIO8    BIT     080H.6
 0080.5                  46     P0_5    BIT     080H.5
 00C8.6                  47     EXF2    BIT     0C8H.6
 00A0.3                  48     CS      BIT     0A0H.3
 0080.7                  49     DIO9    BIT     080H.7
 0080.6                  50     P0_6    BIT     080H.6
 0080.7                  51     P0_7    BIT     080H.7
 00A8.4                  52     ES      BIT     0A8H.4
 00B8                    53     IP      DATA    0B8H
 00A0.0                  54     DATA?   BIT     0A0H.0
 0098.0                  55     RI      BIT     098H.0
 00D0.7                  56     CY      BIT     0D0H.7
 0098.1                  57     TI      BIT     098H.1
AX51 MACRO ASSEMBLER  MAIN                                                                  05/03/09 23:05:28 PAGE     2

 00BC                    58     T1_1V2  DATA    0BCH
 008F                    59     SPC_FNC DATA    08FH
 00BD                    60     T2_1V2  DATA    0BDH
 00CB                    61     RCAP2H  DATA    0CBH
 00B8.4                  62     PS      BIT     0B8H.4
 0081                    63     SP      DATA    081H
 00D0.2                  64     OV      BIT     0D0H.2
 00B6                    65     CK_CTRL DATA    0B6H
 00CA                    66     RCAP2L  DATA    0CAH
 00B5                    67     TICK_DV DATA    0B5H
 00B1                    68     RSTREAS DATA    0B1H
 00C8.1                  69     C_T2    BIT     0C8H.1
 00E8.4                  70     EWDI    BIT     0E8H.4
 00A1                    71     ADCCON  DATA    0A1H
 00C8.5                  72     RCLK    BIT     0C8H.5
 00A2                    73     ADCDATAH        DATA    0A2H
 0091                    74     EXIF    DATA    091H
 00C8.4                  75     TCLK    BIT     0C8H.4
 00A0.6                  76     DR2_CE  BIT     0A0H.6
 00A3                    77     ADCDATAL        DATA    0A3H
 0099                    78     SBUF    DATA    099H
 0087                    79     PCON    DATA    087H
 0098                    80     SCON    DATA    098H
 00F8.4                  81     PWDI    BIT     0F8H.4
 0089                    82     TMOD    DATA    089H
 0088                    83     TCON    DATA    088H
 00D8.3                  84     WDTI    BIT     0D8H.3
 00AA                    85     PWMDUTY DATA    0AAH
 0088.1                  86     IE0     BIT     088H.1
 0088.3                  87     IE1     BIT     088H.3
 0094                    88     P0_DIR  DATA    094H
 00F0                    89     B       DATA    0F0H
 0096                    90     P1_DIR  DATA    096H
 0095                    91     P0_ALT  DATA    095H
 0097                    92     P1_ALT  DATA    097H
 00C8.0                  93     CP_RL2  BIT     0C8H.0
 00A0.2                  94     DR1     BIT     0A0H.2
 00E0                    95     ACC     DATA    0E0H
 00A0.6                  96     DR2     BIT     0A0H.6
 00B7                    97     TEST_MODE       DATA    0B7H
 00B4                    98     SPICLK  DATA    0B4H
 00C8.1                  99     CT2     BIT     0C8H.1
 00A8.1                 100     ET0     BIT     0A8H.1
 00A8.3                 101     ET1     BIT     0A8H.3
 0088.5                 102     TF0     BIT     088H.5
 0080.3                 103     INT0_N  BIT     080H.3
 00A8.5                 104     ET2     BIT     0A8H.5
 0088.7                 105     TF1     BIT     088H.7
 0080.4                 106     INT1_N  BIT     080H.4
 00C8.7                 107     TF2     BIT     0C8H.7
 0098.2                 108     RB8     BIT     098H.2
 008C                   109     TH0     DATA    08CH
 00A8.0                 110     EX0     BIT     0A8H.0
 0088.0                 111     IT0     BIT     088H.0
 008D                   112     TH1     DATA    08DH
 00A8.2                 113     EX1     BIT     0A8H.2
 0098.3                 114     TB8     BIT     098H.3
 0088.2                 115     IT1     BIT     088H.2
 00CD                   116     TH2     DATA    0CDH
 00AD                   117     REGX_CTRL       DATA    0ADH
 00E8.0                 118     EX2     BIT     0E8H.0
 00D0.0                 119     P       BIT     0D0H.0
 00E8.1                 120     EX3     BIT     0E8H.1
 0098.7                 121     SM0     BIT     098H.7
 008A                   122     TL0     DATA    08AH
 00E8.2                 123     EX4     BIT     0E8H.2
AX51 MACRO ASSEMBLER  MAIN                                                                  05/03/09 23:05:28 PAGE     3

 0098.6                 124     SM1     BIT     098H.6
 008B                   125     TL1     DATA    08BH
 00E8.3                 126     EX5     BIT     0E8H.3
 0098.5                 127     SM2     BIT     098H.5
 00CC                   128     TL2     DATA    0CCH
 00E8                   129     EIE     DATA    0E8H
 00B8.1                 130     PT0     BIT     0B8H.1
 00D0.3                 131     RS0     BIT     0D0H.3
 00B8.3                 132     PT1     BIT     0B8H.3
 00D0.4                 133     RS1     BIT     0D0H.4
 00B8.5                 134     PT2     BIT     0B8H.5
 0088.4                 135     TR0     BIT     088H.4
 00A9                   136     PWMCON  DATA    0A9H
 0088.6                 137     TR1     BIT     088H.6
 00C8.2                 138     TR2     BIT     0C8H.2
 00B8.0                 139     PX0     BIT     0B8H.0
 00B8.2                 140     PX1     BIT     0B8H.2
 00F8.0                 141     PX2     BIT     0F8H.0
 00F8.1                 142     PX3     BIT     0F8H.1
 00F8.2                 143     PX4     BIT     0F8H.2
 0083                   144     DPH     DATA    083H
 00F8.3                 145     PX5     BIT     0F8H.3
 00F8                   146     EIP     DATA    0F8H
 0082                   147     DPL     DATA    082H
 00C8.3                 148     EXEN2   BIT     0C8H.3
 00C8.0                 149     CPRL2   BIT     0C8H.0
 0098.4                 150     REN     BIT     098H.4
 00C8                   151     T2CON   DATA    0C8H
 0086                   152     DPS     DATA    086H
 00B2                   153     SPI_DATA        DATA    0B2H
 0092                   154     MPAGE   DATA    092H
 0080.1                 155     RXD     BIT     080H.1
 00A0.4                 156     DOUT2   BIT     0A0H.4
 00D8                   157     EICON   DATA    0D8H
 008E                   158     CKCON   DATA    08EH
 0080.2                 159     TXD     BIT     080H.2
 00A0                   160     RADIO   DATA    0A0H
 0080.7                 161     PWM     BIT     080H.7
 00D0.5                 162     F0      BIT     0D0H.5
 00D0.1                 163     F1      BIT     0D0H.1
 00AC                   164     REGX_LSB        DATA    0ACH
 00D0                   165     PSW     DATA    0D0H
 00AB                   166     REGX_MSB        DATA    0ABH
------                  167     ?PR?timer0?MAIN      SEGMENT CODE 
------                  168     ?PR?_log_2?MAIN      SEGMENT CODE 
------                  169     ?DT?_log_2?MAIN      SEGMENT DATA OVERLAYABLE 
------                  170     ?PR?delta_compress?MAIN                  SEGMENT CODE 
------                  171     ?DT?delta_compress?MAIN                  SEGMENT DATA OVERLAYABLE 
------                  172     ?PR?delta_compress_2?MAIN                  SEGMENT CODE 
------                  173     ?PR?main?MAIN        SEGMENT CODE 
------                  174     ?DT?main?MAIN        SEGMENT DATA OVERLAYABLE 
------                  175     ?CO?MAIN             SEGMENT CODE 
------                  176     ?C_INITSEG           SEGMENT CODE 
------                  177     ?DT?MAIN             SEGMENT DATA 
------                  178     ?ID?MAIN             SEGMENT IDATA 
------                  179     ?ID?delta_compress?MAIN                  SEGMENT IDATA OVERLAYABLE 
                        180             EXTRN   CODE (_mdelay)
                        181             EXTRN   CODE (_rf_configure)
                        182             EXTRN   CODE (_serial_init)
                        183             EXTRN   CODE (_log10)
                        184             EXTRN   CODE (_adc_read)
                        185             EXTRN   CODE (_adc_init)
                        186             EXTRN   CODE (_puts)
                        187             EXTRN   CODE (_?int_print)
                        188             EXTRN   CODE (_rf_send)
                        189             EXTRN   DATA (?_rf_send?BYTE)
AX51 MACRO ASSEMBLER  MAIN                                                                  05/03/09 23:05:28 PAGE     4

                        190             EXTRN   CODE (_store_cpu_rate)
                        191             EXTRN   CODE (rf_init)
                        192             EXTRN   CODE (?C?FCASTI)
                        193             EXTRN   CODE (?C?LSTIDATA)
                        194             EXTRN   CODE (?C?LLDIDATA)
                        195             EXTRN   CODE (?C?CASTF)
                        196             EXTRN   CODE (?C_STARTUP)
                        197     
                        198             EXTRN   CODE (eco_page_manager)
                        199         EXTRN   DATA (ECO_PAGE_ADDR)
                        200         EXTRN   DATA (ECO_PAGE_SPI_CONN)
                        201         EXTRN   IDATA (ECO_PAGE_REGISTER1)
                        202         EXTRN   IDATA (ECO_PAGE_REGISTER2)
                        203         EXTRN   IDATA (ECO_PAGE_REGISTER3)
                        204         EXTRN   IDATA (ECO_PAGE_REGISTER4)
                        205         EXTRN   IDATA (ECO_PAGE_REGISTER5)
                        206         EXTRN   IDATA (ECO_PAGE_REGISTER6)
                        207         EXTRN   IDATA (ECO_PAGE_REGISTER7)
                        208     
                        209             PUBLIC  rf_data
                        210             PUBLIC  dst_addr
                        211             PUBLIC  msg
                        212             PUBLIC  test_counter
                        213             PUBLIC  flag
                        214             PUBLIC  timer_counter
                        215             PUBLIC  main
                        216             PUBLIC  delta_compress
                        217             PUBLIC  delta_compress_2
                        218             PUBLIC  _log_2
                        219             PUBLIC  timer0
                        220     
------                  221             RSEG  ?DT?main?MAIN
000000                  222     ?main?BYTE:
000000                  223               i?346:   DS   2
                        224     
------                  225             RSEG  ?DT?_log_2?MAIN
000000                  226     ?_log_2?BYTE:
000000                  227               x?140:   DS   2
                        228     
------                  229             RSEG  ?DT?delta_compress?MAIN
000000                  230     ?delta_compress?BYTE:
000000                  231               i?241:   DS   2
000002                  232             ORG  2
000002                  233               j?242:   DS   2
000004                  234             ORG  4
000004                  235             now?244:   DS   2
000006                  236             ORG  6
000006                  237            prev?245:   DS   2
                        238     
------                  239             RSEG  ?DT?MAIN
000000                  240       timer_counter:   DS   2
000002                  241                flag:   DS   2
000004                  242        test_counter:   DS   2
000006                  243            dst_addr:   DS   3
000009                  244             rf_data:   DS   15
                        245     
------                  246             RSEG  ?ID?MAIN
000000                  247                 msg:   DS   54
                        248     
------                  249             RSEG  ?ID?delta_compress?MAIN
000000                  250           delta?243:   DS   4
                        251     
------                  252             RSEG  ?CO?MAIN
000000                  253     ?SC_0:
000000 74657374         254             DB  't' ,'e' ,'s' ,'t' ,':' ,000H
000004 3A00                     
AX51 MACRO ASSEMBLER  MAIN                                                                  05/03/09 23:05:28 PAGE     5

                        255     
000006                  256     ?SC_6:
000006 0D0A00           257             DB  00DH,00AH,000H
                        258     
                        259     
------                  260             RSEG  ?C_INITSEG
000000 0F               261             DB      00FH
000001 00         F     262             DB      rf_data
000002 00               263             DB      000H
000003 A0               264             DB      0A0H
000004 00               265             DB      000H
000005 00               266             DB      000H
000006 00               267             DB      000H
000007 00               268             DB      000H
000008 00               269             DB      000H
000009 F2               270             DB      0F2H
00000A F2               271             DB      0F2H
00000B F2               272             DB      0F2H
00000C F2               273             DB      0F2H
00000D F2               274             DB      0F2H
00000E 63               275             DB      063H
00000F 6F               276             DB      06FH
000010 EC               277             DB      0ECH
                        278     
000011 03               279             DB      003H
000012 00         F     280             DB      dst_addr
000013 F1               281             DB      0F1H
000014 F1               282             DB      0F1H
000015 F1               283             DB      0F1H
                        284     
                        285     ; #include "Eco/reg24e1.h"
                        286     ; #include "Eco/eco_sys.h"
                        287     ; #include "utils/utils.h"
                        288     ; #include "serial/serial.h"
                        289     ; #include "isr/isr_rf.h"
                        290     ; #include "eeprom/eeprom.h"
                        291     ; //#include "eco_page.h"
                        292     ; #include "adc/adc.h"
                        293     ; #include <math.h>
                        294     ; 
                        295     ; #define LEN 27
                        296     ; struct rf_config rf_data = { {0x00}, /* data2 width */
                        297     ;     {0xA0}, /* data1 width */ 
                        298     ;     {0x00, 0x00, 0x00, 0x00, 0x00}, /* addr2 */
                        299     ;     {0xF2, 0xF2, 0xF2, 0xF2, 0xF2}, /* addr1, host addr */
                        300     ;     {0x63}, /* 24-bit address, 16-bit CRC */
                        301     ;     {0x6f, 0xEC} };
                        302     ; 
                        303     ; //struct rf_config *cfg = &rf_data;
                        304     ; char dst_addr[3] = { 0xF1, 0xF1, 0xF1 };
                        305     ; char idata msg[54];
                        306     ; 
                        307     ; volatile unsigned int test_counter;
                        308     ; volatile unsigned int flag;
                        309     ; volatile unsigned int timer_counter;
                        310     ; 
00000B                  311     CSEG    AT      0000BH
00000B 020000     F     312             LJMP    timer0
                        313     
                        314     ; void timer0() interrupt 1
                        315     
------                  316             RSEG  ?PR?timer0?MAIN
                        317             USING   0
000000                  318     timer0:
000000 C0E0             319             PUSH    ACC
000002 C0D0             320             PUSH    PSW
AX51 MACRO ASSEMBLER  MAIN                                                                  05/03/09 23:05:28 PAGE     6

                        321                             ; SOURCE LINE # 27
                        322     ; {
                        323     ;       if(timer_counter < 5000)
                        324                             ; SOURCE LINE # 29
000004 C3               325             CLR     C
000005 E500       F     326             MOV     A,timer_counter+01H
000007 9488             327             SUBB    A,#088H
000009 E500       F     328             MOV     A,timer_counter
00000B 9413             329             SUBB    A,#013H
00000D 500A             330             JNC     ?C0001
                        331     ;       {
                        332                             ; SOURCE LINE # 30
                        333     ;               timer_counter++;
                        334                             ; SOURCE LINE # 31
00000F 0500       F     335             INC     timer_counter+01H
000011 E500       F     336             MOV     A,timer_counter+01H
000013 7012             337             JNZ     ?C0003
000015 0500       F     338             INC     timer_counter
000017                  339     ?C0026:
                        340     ;       }
                        341                             ; SOURCE LINE # 32
000017 800E             342             SJMP    ?C0003
000019                  343     ?C0001:
                        344     ;       else
                        345     ;       {
                        346                             ; SOURCE LINE # 34
                        347     ;               timer_counter = 0;
                        348                             ; SOURCE LINE # 35
000019 750000     F     349             MOV     timer_counter,#00H
00001C 750000     F     350             MOV     timer_counter+01H,#00H
                        351     ;               flag = 1;
                        352                             ; SOURCE LINE # 36
00001F 750000     F     353             MOV     flag,#00H
000022 750001     F     354             MOV     flag+01H,#01H
                        355     ;               EA = 0;
                        356                             ; SOURCE LINE # 37
000025 C2AF             357             CLR     EA
                        358     ;       }       
                        359                             ; SOURCE LINE # 38
                        360     ;       
                        361     ; }
                        362                             ; SOURCE LINE # 40
000027                  363     ?C0003:
000027 D0D0             364             POP     PSW
000029 D0E0             365             POP     ACC
00002B 32               366             RETI    
                        367     ; END OF timer0
                        368     
                        369     ; int log_2(int x)
                        370     
------                  371             RSEG  ?PR?_log_2?MAIN
000000                  372     _log_2:
                        373             USING   0
                        374                             ; SOURCE LINE # 41
000000 8E00       F     375             MOV     x?140,R6
000002 8F00       F     376             MOV     x?140+01H,R7
                        377     ; {
                        378                             ; SOURCE LINE # 42
                        379     ;     //EA = 0;   
                        380     ;     if( x > 0)
                        381                             ; SOURCE LINE # 44
000004 D3               382             SETB    C
000005 E500       F     383             MOV     A,x?140+01H
000007 9400             384             SUBB    A,#00H
000009 E500       F     385             MOV     A,x?140
00000B 6480             386             XRL     A,#080H
AX51 MACRO ASSEMBLER  MAIN                                                                  05/03/09 23:05:28 PAGE     7

00000D 9480             387             SUBB    A,#080H
00000F 4020             388             JC      ?C0004
                        389     ;     {   
                        390                             ; SOURCE LINE # 45
                        391     ;               if (x < 0) log10(x);
                        392                             ; SOURCE LINE # 46
000011 E500       F     393             MOV     A,x?140
000013 6480             394             XRL     A,#080H
000015 9480             395             SUBB    A,#080H
000017 500B             396             JNC     ?C0006
000019 AC00       F     397             MOV     R4,x?140
00001B AD00       F     398             MOV     R5,x?140+01H
00001D EC               399             MOV     A,R4
00001E 120000     E     400             LCALL   ?C?FCASTI
000021 120000     E     401             LCALL   _log10
000024                  402     ?C0006:
                        403     ;         while(x--)
                        404                             ; SOURCE LINE # 47
000024 E500       F     405             MOV     A,x?140+01H
000026 1500       F     406             DEC     x?140+01H
000028 AE00       F     407             MOV     R6,x?140
00002A 7002             408             JNZ     ?C0027
00002C 1500       F     409             DEC     x?140
00002E                  410     ?C0027:
00002E 4E               411             ORL     A,R6
00002F 70F3             412             JNZ     ?C0006
                        413     ;         ;
                        414     ;               return ;
                        415     ;     }   
                        416                             ; SOURCE LINE # 50
000031                  417     ?C0004:
                        418     ;     else if(x == 0)
                        419                             ; SOURCE LINE # 51
                        420     ;     {   
                        421                             ; SOURCE LINE # 52
                        422     ;         return ;
                        423     ;     }   
                        424                             ; SOURCE LINE # 54
                        425     ;     else
                        426     ;     {   
                        427                             ; SOURCE LINE # 56
                        428     ;         return ;    
                        429     ;     }
                        430                             ; SOURCE LINE # 58
                        431     ; }
                        432                             ; SOURCE LINE # 59
000031                  433     ?C0008:
000031 22               434             RET     
                        435     ; END OF _log_2
                        436     
                        437     ; 
                        438     ; void delta_compress()
                        439     
------                  440             RSEG  ?PR?delta_compress?MAIN
000000                  441     delta_compress:
                        442             USING   0
                        443                             ; SOURCE LINE # 61
                        444     ; {
                        445                             ; SOURCE LINE # 62
                        446     ;     int i,j;
                        447     ;     float idata delta;
                        448     ;     int now,prev;
                        449     ;     test_counter++;
                        450                             ; SOURCE LINE # 66
000000 0500       F     451             INC     test_counter+01H
000002 E500       F     452             MOV     A,test_counter+01H
AX51 MACRO ASSEMBLER  MAIN                                                                  05/03/09 23:05:28 PAGE     8

000004 7002             453             JNZ     ?C0028
000006 0500       F     454             INC     test_counter
000008                  455     ?C0028:
                        456     ;     now = prev = (msg[0]<<8) + msg[1];
                        457                             ; SOURCE LINE # 67
000008 7800       F     458             MOV     R0,#LOW (msg)
00000A E6               459             MOV     A,@R0
00000B FF               460             MOV     R7,A
00000C 33               461             RLC     A
00000D 95E0             462             SUBB    A,ACC
00000F EF               463             MOV     A,R7
000010 FE               464             MOV     R6,A
000011 08               465             INC     R0
000012 E6               466             MOV     A,@R0
000013 FD               467             MOV     R5,A
000014 33               468             RLC     A
000015 95E0             469             SUBB    A,ACC
000017 FC               470             MOV     R4,A
000018 E4               471             CLR     A
000019 2D               472             ADD     A,R5
00001A FF               473             MOV     R7,A
00001B EE               474             MOV     A,R6
00001C 3C               475             ADDC    A,R4
00001D F500       F     476             MOV     prev?245,A
00001F 8F00       F     477             MOV     prev?245+01H,R7
000021 F500       F     478             MOV     now?244,A
000023 8F00       F     479             MOV     now?244+01H,R7
                        480     
000025 85B300     E     481             MOV ECO_PAGE_SPI_CONN,SPI_CTRL
000028 750000     F     482         MOV ECO_PAGE_ADDR,#HIGH (delta_compress_2)
00002B 750000     F     483         MOV ECO_PAGE_ADDR+01H,#LOW (delta_compress_2)
00002E 120000     E     484         LCALL   eco_page_manager
000031 22               485         RET
                        486     
------                  487         RSEG  ?PR?delta_compress_2?MAIN
000000                  488     delta_compress_2:
                        489         USING   0
                        490     ; 
                        491     ;     for(i=2,j=2;i<54;i+=2,j++)
                        492                             ; SOURCE LINE # 69
000000 750000     F     493             MOV     i?241,#00H
000003 750002     F     494             MOV     i?241+01H,#02H
000006 750000     F     495             MOV     j?242,#00H
000009 750002     F     496             MOV     j?242+01H,#02H
00000C                  497     ?C0012:
00000C C3               498             CLR     C
00000D E500       F     499             MOV     A,i?241+01H
00000F 9436             500             SUBB    A,#036H
000011 E500       F     501             MOV     A,i?241
000013 6480             502             XRL     A,#080H
000015 9480             503             SUBB    A,#080H
000017 505C             504             JNC     ?C0015
                        505     ;     {
                        506                             ; SOURCE LINE # 70
                        507     ;         prev = now;
                        508                             ; SOURCE LINE # 71
000019 850000     F     509             MOV     prev?245,now?244
00001C 850000     F     510             MOV     prev?245+01H,now?244+01H
                        511     ;         now = (msg[i]<<8) + msg[i+1];
                        512                             ; SOURCE LINE # 72
00001F AD00       F     513             MOV     R5,i?241+01H
000021 7400       F     514             MOV     A,#LOW (msg)
000023 2D               515             ADD     A,R5
000024 F8               516             MOV     R0,A
000025 E6               517             MOV     A,@R0
000026 FF               518             MOV     R7,A
AX51 MACRO ASSEMBLER  MAIN                                                                  05/03/09 23:05:28 PAGE     9

000027 EF               519             MOV     A,R7
000028 FE               520             MOV     R6,A
000029 7400       F     521             MOV     A,#LOW (msg+01H)
00002B 2D               522             ADD     A,R5
00002C F8               523             MOV     R0,A
00002D E6               524             MOV     A,@R0
00002E FD               525             MOV     R5,A
00002F 33               526             RLC     A
000030 95E0             527             SUBB    A,ACC
000032 FC               528             MOV     R4,A
000033 E4               529             CLR     A
000034 2D               530             ADD     A,R5
000035 F500       F     531             MOV     now?244+01H,A
000037 EE               532             MOV     A,R6
000038 3C               533             ADDC    A,R4
000039 F500       F     534             MOV     now?244,A
                        535     ;         delta = now - prev;
                        536                             ; SOURCE LINE # 73
00003B C3               537             CLR     C
00003C E500       F     538             MOV     A,now?244+01H
00003E 9500       F     539             SUBB    A,prev?245+01H
000040 FD               540             MOV     R5,A
000041 E500       F     541             MOV     A,now?244
000043 9500       F     542             SUBB    A,prev?245
000045 FC               543             MOV     R4,A
000046 120000     E     544             LCALL   ?C?FCASTI
000049 7800       F     545             MOV     R0,#LOW (delta?243)
00004B 120000     E     546             LCALL   ?C?LSTIDATA
                        547     ;         log_2(delta);
                        548                             ; SOURCE LINE # 74
00004E 7800       F     549             MOV     R0,#LOW (delta?243)
000050 120000     E     550             LCALL   ?C?LLDIDATA
000053 120000     E     551             LCALL   ?C?CASTF
000056 120000     F     552             LCALL   _log_2
                        553         ;MOV     ECO_PAGE_SPI_CONN,SPI_CTRL
                        554         ;MOV ECO_PAGE_ADDR,#HIGH (_log_2)
                        555         ;MOV ECO_PAGE_ADDR+01H,#LOW (_log_2)
                        556         ;LCALL   eco_page_manager
                        557     ;         msg[j] = now;
                        558                             ; SOURCE LINE # 75
000059 7400       F     559             MOV     A,#LOW (msg)
00005B 2500       F     560             ADD     A,j?242+01H
00005D F8               561             MOV     R0,A
00005E A600       F     562             MOV     @R0,now?244+01H
                        563     ;     }
                        564                             ; SOURCE LINE # 76
000060 7402             565             MOV     A,#02H
000062 2500       F     566             ADD     A,i?241+01H
000064 F500       F     567             MOV     i?241+01H,A
000066 E4               568             CLR     A
000067 3500       F     569             ADDC    A,i?241
000069 F500       F     570             MOV     i?241,A
00006B 0500       F     571             INC     j?242+01H
00006D E500       F     572             MOV     A,j?242+01H
00006F 709B             573             JNZ     ?C0012
000071 0500       F     574             INC     j?242
000073                  575     ?C0029:
000073 8097             576             SJMP    ?C0012
                        577     ; }
                        578                             ; SOURCE LINE # 77
000075                  579     ?C0015:
000075 22               580             RET     
                        581     ; END OF delta_compress
                        582     
                        583     ; 
                        584     ; 
AX51 MACRO ASSEMBLER  MAIN                                                                  05/03/09 23:05:28 PAGE    10

                        585     ; int main()
                        586     
------                  587             RSEG  ?PR?main?MAIN
000000                  588     main:
                        589             USING   0
                        590                             ; SOURCE LINE # 80
                        591     ; {
                        592                             ; SOURCE LINE # 81
                        593     ; 
                        594     ;       int i;
                        595     ;       int accx;
                        596     ;       store_cpu_rate(16);
                        597                             ; SOURCE LINE # 85
000000 7F10             598             MOV     R7,#010H
000002 7E00             599             MOV     R6,#00H
000004 120000     E     600             LCALL   _store_cpu_rate
                        601         ;MOV     R0,#LOW (ECO_PAGE_REGISTER7)
                        602         ;MOV     @R0,#010H
                        603             ;
                        604         ;MOV     R0,#LOW (ECO_PAGE_REGISTER6)
                        605         ;MOV     @R0,#00H
                        606     
                        607             ;MOV ECO_PAGE_SPI_CONN,SPI_CTRL
                        608         ;MOV ECO_PAGE_ADDR,#HIGH (_store_cpu_rate)
                        609         ;MOV ECO_PAGE_ADDR+01H,#LOW (_store_cpu_rate)
                        610         ;LCALL   eco_page_manager
                        611     
                        612     ;       /* init led */
                        613     ;       P0_DIR &= ~0x28;
                        614                             ; SOURCE LINE # 87
000007 5394D7           615             ANL     P0_DIR,#0D7H
                        616     ;       P0_ALT &= ~0x28;
                        617                             ; SOURCE LINE # 88
00000A 5395D7           618             ANL     P0_ALT,#0D7H
                        619     ; 
                        620     ;       //eco_page_init();
                        621     ; 
                        622     ;       serial_init(19200);
                        623                             ; SOURCE LINE # 92
00000D 7F00             624             MOV     R7,#00H
00000F 7E4B             625             MOV     R6,#04BH
000011 120000     E     626             LCALL   _serial_init
                        627     
                        628         ;MOV     R0,#LOW (ECO_PAGE_REGISTER7)
                        629         ;MOV     @R0,#00H
                        630             ;
                        631         ;MOV     R0,#LOW (ECO_PAGE_REGISTER6)
                        632         ;MOV     @R0,#04BH
                        633     
                        634     
                        635             ;MOV ECO_PAGE_SPI_CONN,SPI_CTRL
                        636         ;MOV ECO_PAGE_ADDR,#HIGH (_serial_init)
                        637         ;MOV ECO_PAGE_ADDR+01H,#LOW (_serial_init)
                        638         ;LCALL   eco_page_manager
                        639     
                        640     
                        641     ;       puts("test:");
                        642                             ; SOURCE LINE # 93
000014 7BFF             643             MOV     R3,#0FFH
000016 7A00       F     644             MOV     R2,#HIGH (?SC_0)
000018 7900       F     645             MOV     R1,#LOW (?SC_0)
00001A 120000     E     646             LCALL   _puts
                        647     ;       int_print(test_counter);
                        648                             ; SOURCE LINE # 94
00001D AE00       F     649             MOV     R6,test_counter
00001F AF00       F     650             MOV     R7,test_counter+01H
AX51 MACRO ASSEMBLER  MAIN                                                                  05/03/09 23:05:28 PAGE    11

000021 120000     E     651             LCALL   _?int_print
                        652     ;       puts("\r\n");
                        653                             ; SOURCE LINE # 95
000024 7BFF             654             MOV     R3,#0FFH
000026 7A00       F     655             MOV     R2,#HIGH (?SC_6)
000028 7900       F     656             MOV     R1,#LOW (?SC_6)
00002A 120000     E     657             LCALL   _puts
                        658     ; 
                        659     ;       for (i = 0; i < 6; i++) {
                        660                             ; SOURCE LINE # 97
00002D E4               661             CLR     A
00002E F500       F     662             MOV     i?346,A
000030 F500       F     663             MOV     i?346+01H,A
000032                  664     ?C0016:
                        665     ;               blink_led();
                        666                             ; SOURCE LINE # 98
000032 638020           667             XRL     P0,#020H
                        668     ;               mdelay(400);
                        669                             ; SOURCE LINE # 99
000035 7F90             670             MOV     R7,#090H
000037 7E01             671             MOV     R6,#01H
000039 120000     E     672             LCALL   _mdelay
                        673     ;       }
                        674                             ; SOURCE LINE # 100
00003C 0500       F     675             INC     i?346+01H
00003E E500       F     676             MOV     A,i?346+01H
000040 7002             677             JNZ     ?C0030
000042 0500       F     678             INC     i?346
000044                  679     ?C0030:
000044 C3               680             CLR     C
000045 9406             681             SUBB    A,#06H
000047 E500       F     682             MOV     A,i?346
000049 6480             683             XRL     A,#080H
00004B 9480             684             SUBB    A,#080H
00004D 40E3             685             JC      ?C0016
00004F                  686     ?C0017:
                        687     ;       /* init adc */
                        688     ;       adc_init(ADC_CLK_D8, ADC_RES_12, EXTREF);
                        689                             ; SOURCE LINE # 102
00004F 7B10             690             MOV     R3,#010H
000051 7D03             691             MOV     R5,#03H
000053 7F20             692             MOV     R7,#020H
000055 120000     E     693             LCALL   _adc_init
                        694     ; 
                        695     ;       /* rf */
                        696     ;       rf_init();
                        697                             ; SOURCE LINE # 105
000058 120000     E     698             LCALL   rf_init
                        699     
                        700     
                        701             ;MOV ECO_PAGE_SPI_CONN,SPI_CTRL
                        702         ;MOV ECO_PAGE_ADDR,#HIGH (rf_init)
                        703         ;MOV ECO_PAGE_ADDR+01H,#LOW (rf_init)
                        704         ;LCALL   eco_page_manager
                        705     
                        706     
                        707     
                        708     ;       rf_configure(&rf_data);
                        709                             ; SOURCE LINE # 106
00005B 7B00             710             MOV     R3,#00H
00005D 7A00       F     711             MOV     R2,#HIGH (rf_data)
00005F 7900       F     712             MOV     R1,#LOW (rf_data)
000061 120000     E     713             LCALL   _rf_configure
                        714     ; 
                        715     ;       //volatile value for calculating 
                        716     ;       test_counter = 0;
AX51 MACRO ASSEMBLER  MAIN                                                                  05/03/09 23:05:28 PAGE    12

                        717                             ; SOURCE LINE # 109
000064 E4               718             CLR     A
000065 F500       F     719             MOV     test_counter,A
000067 F500       F     720             MOV     test_counter+01H,A
                        721     ;       timer_counter = 0;
                        722                             ; SOURCE LINE # 110
000069 F500       F     723             MOV     timer_counter,A
00006B F500       F     724             MOV     timer_counter+01H,A
                        725     ;       flag = 0;
                        726                             ; SOURCE LINE # 111
00006D F500       F     727             MOV     flag,A
00006F F500       F     728             MOV     flag+01H,A
                        729     ;       /* init timer */
                        730     ;       // TMOD.1 TMOD.2 [1 0] 8-bit counter with auto-reload
                        731     ;       TMOD = 0x02;
                        732                             ; SOURCE LINE # 114
000071 758902           733             MOV     TMOD,#02H
                        734     ;       TH0 = 0x00;
                        735                             ; SOURCE LINE # 115
000074 F58C             736             MOV     TH0,A
                        737     ;       //enable interrupt
                        738     ;       EA = 1;
                        739                             ; SOURCE LINE # 117
000076 D2AF             740             SETB    EA
                        741     ;       //enable timer interrupt
                        742     ;       ET0 = 1;
                        743                             ; SOURCE LINE # 119
000078 D2A9             744             SETB    ET0
                        745     ;       //set to 1 to enable counting on Timer 0.               
                        746     ;       TR0 = 1;        
                        747                             ; SOURCE LINE # 121
00007A D28C             748             SETB    TR0
00007C                  749     ?C0019:
                        750     ; 
                        751     ;       while(1)
                        752                             ; SOURCE LINE # 123
                        753     ;       {
                        754                             ; SOURCE LINE # 124
                        755     ;               for(i=0;i<LEN*2;i+=2)
                        756                             ; SOURCE LINE # 125
00007C E4               757             CLR     A
00007D F500       F     758             MOV     i?346,A
00007F F500       F     759             MOV     i?346+01H,A
000081                  760     ?C0021:
000081 C3               761             CLR     C
000082 E500       F     762             MOV     A,i?346+01H
000084 9436             763             SUBB    A,#036H
000086 E500       F     764             MOV     A,i?346
000088 6480             765             XRL     A,#080H
00008A 9480             766             SUBB    A,#080H
00008C 5028             767             JNC     ?C0022
                        768     ;               {
                        769                             ; SOURCE LINE # 126
                        770     ;                       accx = adc_read(X_AXIS);
                        771                             ; SOURCE LINE # 127
00008E 7F03             772             MOV     R7,#03H
000090 120000     E     773             LCALL   _adc_read
                        774     ;---- Variable 'accx?347' assigned to Register 'R4/R5' ----
000093 AD07             775             MOV     R5,AR7
000095 AC06             776             MOV     R4,AR6
                        777     ;                       msg[i] = (accx >> 8);
                        778                             ; SOURCE LINE # 128
000097 EC               779             MOV     A,R4
000098 FF               780             MOV     R7,A
000099 AE00       F     781             MOV     R6,i?346+01H
00009B 7400       F     782             MOV     A,#LOW (msg)
AX51 MACRO ASSEMBLER  MAIN                                                                  05/03/09 23:05:28 PAGE    13

00009D 2E               783             ADD     A,R6
00009E F8               784             MOV     R0,A
00009F A607             785             MOV     @R0,AR7
                        786     ;                       msg[i+1] = accx & 0xff;
                        787                             ; SOURCE LINE # 129
0000A1 AF05             788             MOV     R7,AR5
0000A3 7400       F     789             MOV     A,#LOW (msg+01H)
0000A5 2E               790             ADD     A,R6
0000A6 F8               791             MOV     R0,A
0000A7 A607             792             MOV     @R0,AR7
                        793     ;               }
                        794                             ; SOURCE LINE # 130
0000A9 7402             795             MOV     A,#02H
0000AB 2500       F     796             ADD     A,i?346+01H
0000AD F500       F     797             MOV     i?346+01H,A
0000AF E4               798             CLR     A
0000B0 3500       F     799             ADDC    A,i?346
0000B2 F500       F     800             MOV     i?346,A
0000B4 80CB             801             SJMP    ?C0021
0000B6                  802     ?C0022:
                        803     ; 
                        804     ;               delta_compress();
                        805                             ; SOURCE LINE # 132
0000B6 120000     F     806             LCALL   delta_compress
                        807             
                        808         ;MOV     ECO_PAGE_SPI_CONN,SPI_CTRL
                        809         ;MOV ECO_PAGE_ADDR,#HIGH (delta_compress)
                        810         ;MOV ECO_PAGE_ADDR+01H,#LOW (delta_compress)
                        811         ;LCALL   eco_page_manager
                        812     ;               
                        813     ;               if(flag == 1)
                        814                             ; SOURCE LINE # 134
0000B9 E500       F     815             MOV     A,flag+01H
0000BB 6401             816             XRL     A,#01H
0000BD 4500       F     817             ORL     A,flag
0000BF 7019             818             JNZ     ?C0024
                        819     ;               {
                        820                             ; SOURCE LINE # 135
                        821     ;                       flag = 0;
                        822                             ; SOURCE LINE # 136
0000C1 F500       F     823             MOV     flag,A
0000C3 F500       F     824             MOV     flag+01H,A
                        825     ;                       blink_led();
                        826                             ; SOURCE LINE # 137
0000C5 638020           827             XRL     P0,#020H
                        828     ;                       int_print(test_counter);
                        829                             ; SOURCE LINE # 138
0000C8 AE00       F     830             MOV     R6,test_counter
0000CA AF00       F     831             MOV     R7,test_counter+01H
0000CC 120000     E     832             LCALL   _?int_print
                        833     ;                       puts("\r\n");
                        834                             ; SOURCE LINE # 139
0000CF 7BFF             835             MOV     R3,#0FFH
0000D1 7A00       F     836             MOV     R2,#HIGH (?SC_6)
0000D3 7900       F     837             MOV     R1,#LOW (?SC_6)
0000D5 120000     E     838             LCALL   _puts
                        839     ;                       EA = 1;
                        840                             ; SOURCE LINE # 140
0000D8 D2AF             841             SETB    EA
                        842     ;               }
                        843                             ; SOURCE LINE # 141
0000DA                  844     ?C0024:
                        845     ;               
                        846     ;               rf_send(dst_addr, 3, msg, 20);
                        847                             ; SOURCE LINE # 143
0000DA 750000     E     848             MOV     ?_rf_send?BYTE+04H,#00H
AX51 MACRO ASSEMBLER  MAIN                                                                  05/03/09 23:05:28 PAGE    14

0000DD 750000     F     849             MOV     ?_rf_send?BYTE+05H,#HIGH (msg)
0000E0 750000     F     850             MOV     ?_rf_send?BYTE+06H,#LOW (msg)
0000E3 750014     E     851             MOV     ?_rf_send?BYTE+07H,#014H
                        852             ;MOV    R3,#00H
                        853             ;MOV    R2,#HIGH (dst_addr)
                        854             ;MOV    R1,#LOW (dst_addr)
                        855             ;MOV    R5,#03H
                        856             ;LCALL  _rf_send
0000E6 7800       E     857             MOV     R0,#LOW (ECO_PAGE_REGISTER3)
0000E8 7600             858         MOV     @R0,#00H
                        859     
0000EA 7800       E     860         MOV     R0,#LOW (ECO_PAGE_REGISTER2)
0000EC 7600       F     861         MOV     @R0,#HIGH (dst_addr)
                        862     
0000EE 7800       E     863         MOV     R0,#LOW (ECO_PAGE_REGISTER1)
0000F0 7600       F     864         MOV     @R0,#LOW (dst_addr)
                        865     
0000F2 7800       E     866         MOV     R0,#LOW (ECO_PAGE_REGISTER5)
0000F4 7603             867         MOV     @R0,#03H
                        868     
                        869         ;---------  LCALL   _rf_send start
0000F6 85B300     E     870         MOV     ECO_PAGE_SPI_CONN,SPI_CTRL
0000F9 750000     E     871         MOV ECO_PAGE_ADDR,#HIGH (_rf_send)
0000FC 750000     E     872         MOV ECO_PAGE_ADDR+01H,#LOW (_rf_send)
0000FF 120000     E     873         LCALL   eco_page_manager
                        874     ;       }
                        875                             ; SOURCE LINE # 144
000102 020000     F     876             LJMP    ?C0019
                        877     ; END OF main
                        878     
                        879             END
AX51 MACRO ASSEMBLER  MAIN                                                                  05/03/09 23:05:28 PAGE    15

SYMBOL TABLE LISTING
------ ----- -------


N A M E                                    T Y P E  V A L U E     ATTRIBUTES

?_LOG_2?BYTE. . . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?_LOG_2?MAIN
?_RF_SEND?BYTE. . . . . . . . . . . . .    D  ADDR  -------       EXT
?C0001. . . . . . . . . . . . . . . . .    C  ADDR  0019H     R   SEG=?PR?TIMER0?MAIN
?C0003. . . . . . . . . . . . . . . . .    C  ADDR  0027H     R   SEG=?PR?TIMER0?MAIN
?C0004. . . . . . . . . . . . . . . . .    C  ADDR  0031H     R   SEG=?PR?_LOG_2?MAIN
?C0006. . . . . . . . . . . . . . . . .    C  ADDR  0024H     R   SEG=?PR?_LOG_2?MAIN
?C0008. . . . . . . . . . . . . . . . .    C  ADDR  0031H     R   SEG=?PR?_LOG_2?MAIN
?C0012. . . . . . . . . . . . . . . . .    C  ADDR  000CH     R   SEG=?PR?DELTA_COMPRESS_2?MAIN
?C0015. . . . . . . . . . . . . . . . .    C  ADDR  0075H     R   SEG=?PR?DELTA_COMPRESS_2?MAIN
?C0016. . . . . . . . . . . . . . . . .    C  ADDR  0032H     R   SEG=?PR?MAIN?MAIN
?C0017. . . . . . . . . . . . . . . . .    C  ADDR  004FH     R   SEG=?PR?MAIN?MAIN
?C0019. . . . . . . . . . . . . . . . .    C  ADDR  007CH     R   SEG=?PR?MAIN?MAIN
?C0021. . . . . . . . . . . . . . . . .    C  ADDR  0081H     R   SEG=?PR?MAIN?MAIN
?C0022. . . . . . . . . . . . . . . . .    C  ADDR  00B6H     R   SEG=?PR?MAIN?MAIN
?C0024. . . . . . . . . . . . . . . . .    C  ADDR  00DAH     R   SEG=?PR?MAIN?MAIN
?C0026. . . . . . . . . . . . . . . . .    C  ADDR  0017H     R   SEG=?PR?TIMER0?MAIN
?C0027. . . . . . . . . . . . . . . . .    C  ADDR  002EH     R   SEG=?PR?_LOG_2?MAIN
?C0028. . . . . . . . . . . . . . . . .    C  ADDR  0008H     R   SEG=?PR?DELTA_COMPRESS?MAIN
?C0029. . . . . . . . . . . . . . . . .    C  ADDR  0073H     R   SEG=?PR?DELTA_COMPRESS_2?MAIN
?C0030. . . . . . . . . . . . . . . . .    C  ADDR  0044H     R   SEG=?PR?MAIN?MAIN
?C?CASTF. . . . . . . . . . . . . . . .    C  ADDR  -------       EXT
?C?FCASTI . . . . . . . . . . . . . . .    C  ADDR  -------       EXT
?C?LLDIDATA . . . . . . . . . . . . . .    C  ADDR  -------       EXT
?C?LSTIDATA . . . . . . . . . . . . . .    C  ADDR  -------       EXT
?C_INITSEG. . . . . . . . . . . . . . .    C  SEG   000016H       REL=UNIT, ALN=BYTE
?C_STARTUP. . . . . . . . . . . . . . .    C  ADDR  -------       EXT
?CO?MAIN. . . . . . . . . . . . . . . .    C  SEG   000009H       REL=UNIT, ALN=BYTE
?DELTA_COMPRESS?BYTE. . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?DELTA_COMPRESS?MAIN
?DT?_LOG_2?MAIN . . . . . . . . . . . .    D  SEG   000002H       REL=UNIT, ALN=BYTE
?DT?DELTA_COMPRESS?MAIN . . . . . . . .    D  SEG   000008H       REL=UNIT, ALN=BYTE
?DT?MAIN. . . . . . . . . . . . . . . .    D  SEG   000018H       REL=UNIT, ALN=BYTE
?DT?MAIN?MAIN . . . . . . . . . . . . .    D  SEG   000002H       REL=UNIT, ALN=BYTE
?ID?DELTA_COMPRESS?MAIN . . . . . . . .    I  SEG   000004H       REL=UNIT, ALN=BYTE
?ID?MAIN. . . . . . . . . . . . . . . .    I  SEG   000036H       REL=UNIT, ALN=BYTE
?MAIN?BYTE. . . . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?MAIN?MAIN
?PR?_LOG_2?MAIN . . . . . . . . . . . .    C  SEG   000032H       REL=UNIT, ALN=BYTE
?PR?DELTA_COMPRESS?MAIN . . . . . . . .    C  SEG   000032H       REL=UNIT, ALN=BYTE
?PR?DELTA_COMPRESS_2?MAIN . . . . . . .    C  SEG   000076H       REL=UNIT, ALN=BYTE
?PR?MAIN?MAIN . . . . . . . . . . . . .    C  SEG   000105H       REL=UNIT, ALN=BYTE
?PR?TIMER0?MAIN . . . . . . . . . . . .    C  SEG   00002CH       REL=UNIT, ALN=BYTE
?SC_0 . . . . . . . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?CO?MAIN
?SC_6 . . . . . . . . . . . . . . . . .    C  ADDR  0006H     R   SEG=?CO?MAIN
_?INT_PRINT . . . . . . . . . . . . . .    C  ADDR  -------       EXT
_ADC_INIT . . . . . . . . . . . . . . .    C  ADDR  -------       EXT
_ADC_READ . . . . . . . . . . . . . . .    C  ADDR  -------       EXT
_LOG10. . . . . . . . . . . . . . . . .    C  ADDR  -------       EXT
_LOG_2. . . . . . . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?_LOG_2?MAIN
_MDELAY . . . . . . . . . . . . . . . .    C  ADDR  -------       EXT
_PUTS . . . . . . . . . . . . . . . . .    C  ADDR  -------       EXT
_RF_CONFIGURE . . . . . . . . . . . . .    C  ADDR  -------       EXT
_RF_SEND. . . . . . . . . . . . . . . .    C  ADDR  -------       EXT
_SERIAL_INIT. . . . . . . . . . . . . .    C  ADDR  -------       EXT
_STORE_CPU_RATE . . . . . . . . . . . .    C  ADDR  -------       EXT
AC. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.6   A   
ACC . . . . . . . . . . . . . . . . . .    D  ADDR  00E0H     A   
ADCCON. . . . . . . . . . . . . . . . .    D  ADDR  00A1H     A   
ADCDATAH. . . . . . . . . . . . . . . .    D  ADDR  00A2H     A   
ADCDATAL. . . . . . . . . . . . . . . .    D  ADDR  00A3H     A   
ADCSTATIC . . . . . . . . . . . . . . .    D  ADDR  00A4H     A   
AR5 . . . . . . . . . . . . . . . . . .    D  ADDR  0005H     A   
AX51 MACRO ASSEMBLER  MAIN                                                                  05/03/09 23:05:28 PAGE    16

AR6 . . . . . . . . . . . . . . . . . .    D  ADDR  0006H     A   
AR7 . . . . . . . . . . . . . . . . . .    D  ADDR  0007H     A   
B . . . . . . . . . . . . . . . . . . .    D  ADDR  00F0H     A   
C_T2. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.1   A   
CE. . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.6   A   
CK_CTRL . . . . . . . . . . . . . . . .    D  ADDR  00B6H     A   
CKCON . . . . . . . . . . . . . . . . .    D  ADDR  008EH     A   
CLK1. . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.1   A   
CLK2. . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.5   A   
CP_RL2. . . . . . . . . . . . . . . . .    B  ADDR  00C8H.0   A   
CPRL2 . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.0   A   
CS. . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.3   A   
CT2 . . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.1   A   
CY. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.7   A   
DATA? . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.0   A   
DELTA?243 . . . . . . . . . . . . . . .    I  ADDR  0000H     R   SEG=?ID?DELTA_COMPRESS?MAIN
DELTA_COMPRESS. . . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?DELTA_COMPRESS?MAIN
DELTA_COMPRESS_2. . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?DELTA_COMPRESS_2?MAIN
DEV_OFFSET. . . . . . . . . . . . . . .    D  ADDR  00BEH     A   
DIN0. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.2   A   
DIO0. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.0   A   
DIO1. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.1   A   
DIO2. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.0   A   
DIO3. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.1   A   
DIO4. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.2   A   
DIO5. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.3   A   
DIO6. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.4   A   
DIO7. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.5   A   
DIO8. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.6   A   
DIO9. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.7   A   
DOUT2 . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.4   A   
DPH . . . . . . . . . . . . . . . . . .    D  ADDR  0083H     A   
DPH0. . . . . . . . . . . . . . . . . .    D  ADDR  0083H     A   
DPH1. . . . . . . . . . . . . . . . . .    D  ADDR  0085H     A   
DPL . . . . . . . . . . . . . . . . . .    D  ADDR  0082H     A   
DPL0. . . . . . . . . . . . . . . . . .    D  ADDR  0082H     A   
DPL1. . . . . . . . . . . . . . . . . .    D  ADDR  0084H     A   
DPS . . . . . . . . . . . . . . . . . .    D  ADDR  0086H     A   
DR1 . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.2   A   
DR2 . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.6   A   
DR2_CE. . . . . . . . . . . . . . . . .    B  ADDR  00A0H.6   A   
DST_ADDR. . . . . . . . . . . . . . . .    D  ADDR  0006H     R   SEG=?DT?MAIN
EA. . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.7   A   
ECO_PAGE_ADDR . . . . . . . . . . . . .    D  ADDR  -------       EXT
ECO_PAGE_MANAGER. . . . . . . . . . . .    C  ADDR  -------       EXT
ECO_PAGE_REGISTER1. . . . . . . . . . .    I  ADDR  -------       EXT
ECO_PAGE_REGISTER2. . . . . . . . . . .    I  ADDR  -------       EXT
ECO_PAGE_REGISTER3. . . . . . . . . . .    I  ADDR  -------       EXT
ECO_PAGE_REGISTER4. . . . . . . . . . .    I  ADDR  -------       EXT
ECO_PAGE_REGISTER5. . . . . . . . . . .    I  ADDR  -------       EXT
ECO_PAGE_REGISTER6. . . . . . . . . . .    I  ADDR  -------       EXT
ECO_PAGE_REGISTER7. . . . . . . . . . .    I  ADDR  -------       EXT
ECO_PAGE_SPI_CONN . . . . . . . . . . .    D  ADDR  -------       EXT
EICON . . . . . . . . . . . . . . . . .    D  ADDR  00D8H     A   
EIE . . . . . . . . . . . . . . . . . .    D  ADDR  00E8H     A   
EIP . . . . . . . . . . . . . . . . . .    D  ADDR  00F8H     A   
ES. . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.4   A   
ET0 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.1   A   
ET1 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.3   A   
ET2 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.5   A   
EWDI. . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.4   A   
EX0 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.0   A   
EX1 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.2   A   
EX2 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.0   A   
EX3 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.1   A   
EX4 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.2   A   
AX51 MACRO ASSEMBLER  MAIN                                                                  05/03/09 23:05:28 PAGE    17

EX5 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.3   A   
EXEN2 . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.3   A   
EXF2. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.6   A   
EXIF. . . . . . . . . . . . . . . . . .    D  ADDR  0091H     A   
F0. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.5   A   
F1. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.1   A   
FLAG. . . . . . . . . . . . . . . . . .    D  ADDR  0002H     R   SEG=?DT?MAIN
I?241 . . . . . . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?DELTA_COMPRESS?MAIN
I?346 . . . . . . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?MAIN?MAIN
IE. . . . . . . . . . . . . . . . . . .    D  ADDR  00A8H     A   
IE0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.1   A   
IE1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.3   A   
INT0_N. . . . . . . . . . . . . . . . .    B  ADDR  0080H.3   A   
INT1_N. . . . . . . . . . . . . . . . .    B  ADDR  0080H.4   A   
IP. . . . . . . . . . . . . . . . . . .    D  ADDR  00B8H     A   
IT0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.0   A   
IT1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.2   A   
J?242 . . . . . . . . . . . . . . . . .    D  ADDR  0002H     R   SEG=?DT?DELTA_COMPRESS?MAIN
MAIN. . . . . . . . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?MAIN?MAIN
MPAGE . . . . . . . . . . . . . . . . .    D  ADDR  0092H     A   
MSG . . . . . . . . . . . . . . . . . .    I  ADDR  0000H     R   SEG=?ID?MAIN
NOW?244 . . . . . . . . . . . . . . . .    D  ADDR  0004H     R   SEG=?DT?DELTA_COMPRESS?MAIN
OV. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.2   A   
P . . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.0   A   
P0. . . . . . . . . . . . . . . . . . .    D  ADDR  0080H     A   
P0_0. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.0   A   
P0_1. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.1   A   
P0_2. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.2   A   
P0_3. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.3   A   
P0_4. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.4   A   
P0_5. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.5   A   
P0_6. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.6   A   
P0_7. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.7   A   
P0_ALT. . . . . . . . . . . . . . . . .    D  ADDR  0095H     A   
P0_DIR. . . . . . . . . . . . . . . . .    D  ADDR  0094H     A   
P1. . . . . . . . . . . . . . . . . . .    D  ADDR  0090H     A   
P1_0. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.0   A   
P1_1. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.1   A   
P1_2. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.2   A   
P1_ALT. . . . . . . . . . . . . . . . .    D  ADDR  0097H     A   
P1_DIR. . . . . . . . . . . . . . . . .    D  ADDR  0096H     A   
PCON. . . . . . . . . . . . . . . . . .    D  ADDR  0087H     A   
PREV?245. . . . . . . . . . . . . . . .    D  ADDR  0006H     R   SEG=?DT?DELTA_COMPRESS?MAIN
PS. . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.4   A   
PSW . . . . . . . . . . . . . . . . . .    D  ADDR  00D0H     A   
PT0 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.1   A   
PT1 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.3   A   
PT2 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.5   A   
PWDI. . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.4   A   
PWM . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.7   A   
PWMCON. . . . . . . . . . . . . . . . .    D  ADDR  00A9H     A   
PWMDUTY . . . . . . . . . . . . . . . .    D  ADDR  00AAH     A   
PWR_UP. . . . . . . . . . . . . . . . .    B  ADDR  00A0H.7   A   
PX0 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.0   A   
PX1 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.2   A   
PX2 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.0   A   
PX3 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.1   A   
PX4 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.2   A   
PX5 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.3   A   
RADIO . . . . . . . . . . . . . . . . .    D  ADDR  00A0H     A   
RB8 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.2   A   
RCAP2H. . . . . . . . . . . . . . . . .    D  ADDR  00CBH     A   
RCAP2L. . . . . . . . . . . . . . . . .    D  ADDR  00CAH     A   
RCLK. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.5   A   
REGX_CTRL . . . . . . . . . . . . . . .    D  ADDR  00ADH     A   
REGX_LSB. . . . . . . . . . . . . . . .    D  ADDR  00ACH     A   
AX51 MACRO ASSEMBLER  MAIN                                                                  05/03/09 23:05:28 PAGE    18

REGX_MSB. . . . . . . . . . . . . . . .    D  ADDR  00ABH     A   
REN . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.4   A   
RF_DATA . . . . . . . . . . . . . . . .    D  ADDR  0009H     R   SEG=?DT?MAIN
RF_INIT . . . . . . . . . . . . . . . .    C  ADDR  -------       EXT
RI. . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.0   A   
RS0 . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.3   A   
RS1 . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.4   A   
RSTREAS . . . . . . . . . . . . . . . .    D  ADDR  00B1H     A   
RXD . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.1   A   
SBUF. . . . . . . . . . . . . . . . . .    D  ADDR  0099H     A   
SCON. . . . . . . . . . . . . . . . . .    D  ADDR  0098H     A   
SM0 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.7   A   
SM1 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.6   A   
SM2 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.5   A   
SP. . . . . . . . . . . . . . . . . . .    D  ADDR  0081H     A   
SPC_FNC . . . . . . . . . . . . . . . .    D  ADDR  008FH     A   
SPI_CTRL. . . . . . . . . . . . . . . .    D  ADDR  00B3H     A   
SPI_DATA. . . . . . . . . . . . . . . .    D  ADDR  00B2H     A   
SPICLK. . . . . . . . . . . . . . . . .    D  ADDR  00B4H     A   
T0. . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.5   A   
T1. . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.6   A   
T1_1V2. . . . . . . . . . . . . . . . .    D  ADDR  00BCH     A   
T2. . . . . . . . . . . . . . . . . . .    B  ADDR  0090H.0   A   
T2_1V2. . . . . . . . . . . . . . . . .    D  ADDR  00BDH     A   
T2CON . . . . . . . . . . . . . . . . .    D  ADDR  00C8H     A   
TB8 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.3   A   
TCLK. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.4   A   
TCON. . . . . . . . . . . . . . . . . .    D  ADDR  0088H     A   
TEST_COUNTER. . . . . . . . . . . . . .    D  ADDR  0004H     R   SEG=?DT?MAIN
TEST_MODE . . . . . . . . . . . . . . .    D  ADDR  00B7H     A   
TF0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.5   A   
TF1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.7   A   
TF2 . . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.7   A   
TH0 . . . . . . . . . . . . . . . . . .    D  ADDR  008CH     A   
TH1 . . . . . . . . . . . . . . . . . .    D  ADDR  008DH     A   
TH2 . . . . . . . . . . . . . . . . . .    D  ADDR  00CDH     A   
TI. . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.1   A   
TICK_DV . . . . . . . . . . . . . . . .    D  ADDR  00B5H     A   
TIMER0. . . . . . . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?TIMER0?MAIN
TIMER_COUNTER . . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?MAIN
TL0 . . . . . . . . . . . . . . . . . .    D  ADDR  008AH     A   
TL1 . . . . . . . . . . . . . . . . . .    D  ADDR  008BH     A   
TL2 . . . . . . . . . . . . . . . . . .    D  ADDR  00CCH     A   
TMOD. . . . . . . . . . . . . . . . . .    D  ADDR  0089H     A   
TR0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.4   A   
TR1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.6   A   
TR2 . . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.2   A   
TXD . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.2   A   
WDTI. . . . . . . . . . . . . . . . . .    B  ADDR  00D8H.3   A   
X?140 . . . . . . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?_LOG_2?MAIN


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S).
