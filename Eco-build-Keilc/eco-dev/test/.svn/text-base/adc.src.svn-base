; ./adc.src generated from: ../../include/adc/adc.c
; COMPILER INVOKED BY:
;        c:\Keil\C51\BIN\C51.exe ../../include/adc/adc.c BROWSE DEBUG CODE LISTINCLUDE SYMBOLS PREPRINT INCDIR(../../Include) PRINT(./adc.lst) PREPRINT(./adc.i) SRC(./adc.src)

$NOMOD51

NAME	______INCLUDE_ADC_ADC

PWR_UP	BIT	0A0H.7
P0	DATA	080H
P1	DATA	090H
AC	BIT	0D0H.6
T0	BIT	080H.5
SPI_CTRL	DATA	0B3H
T1	BIT	080H.6
EA	BIT	0A8H.7
T2	BIT	090H.0
CE	BIT	0A0H.6
DEV_OFFSET	DATA	0BEH
CLK1	BIT	0A0H.1
DIN0	BIT	090H.2
CLK2	BIT	0A0H.5
DIO0	BIT	090H.0
DPH0	DATA	083H
DIO1	BIT	090H.1
IE	DATA	0A8H
DPH1	DATA	085H
DIO2	BIT	080H.0
DIO3	BIT	080H.1
P0_0	BIT	080H.0
P1_0	BIT	090H.0
DIO4	BIT	080H.2
P0_1	BIT	080H.1
DPL0	DATA	082H
P1_1	BIT	090H.1
DIO5	BIT	080H.3
P0_2	BIT	080H.2
DPL1	DATA	084H
P1_2	BIT	090H.2
DIO6	BIT	080H.4
P0_3	BIT	080H.3
DIO7	BIT	080H.5
P0_4	BIT	080H.4
ADCSTATIC	DATA	0A4H
DIO8	BIT	080H.6
P0_5	BIT	080H.5
EXF2	BIT	0C8H.6
CS	BIT	0A0H.3
DIO9	BIT	080H.7
P0_6	BIT	080H.6
P0_7	BIT	080H.7
ES	BIT	0A8H.4
IP	DATA	0B8H
DATA?	BIT	0A0H.0
RI	BIT	098H.0
CY	BIT	0D0H.7
TI	BIT	098H.1
T1_1V2	DATA	0BCH
SPC_FNC	DATA	08FH
T2_1V2	DATA	0BDH
RCAP2H	DATA	0CBH
PS	BIT	0B8H.4
SP	DATA	081H
OV	BIT	0D0H.2
CK_CTRL	DATA	0B6H
RCAP2L	DATA	0CAH
TICK_DV	DATA	0B5H
RSTREAS	DATA	0B1H
C_T2	BIT	0C8H.1
EWDI	BIT	0E8H.4
ADCCON	DATA	0A1H
RCLK	BIT	0C8H.5
ADCDATAH	DATA	0A2H
EXIF	DATA	091H
TCLK	BIT	0C8H.4
DR2_CE	BIT	0A0H.6
ADCDATAL	DATA	0A3H
SBUF	DATA	099H
PCON	DATA	087H
SCON	DATA	098H
PWDI	BIT	0F8H.4
TMOD	DATA	089H
TCON	DATA	088H
WDTI	BIT	0D8H.3
PWMDUTY	DATA	0AAH
IE0	BIT	088H.1
IE1	BIT	088H.3
P0_DIR	DATA	094H
B	DATA	0F0H
P1_DIR	DATA	096H
P0_ALT	DATA	095H
P1_ALT	DATA	097H
CP_RL2	BIT	0C8H.0
DR1	BIT	0A0H.2
ACC	DATA	0E0H
DR2	BIT	0A0H.6
TEST_MODE	DATA	0B7H
SPICLK	DATA	0B4H
CT2	BIT	0C8H.1
ET0	BIT	0A8H.1
ET1	BIT	0A8H.3
TF0	BIT	088H.5
INT0_N	BIT	080H.3
ET2	BIT	0A8H.5
TF1	BIT	088H.7
INT1_N	BIT	080H.4
TF2	BIT	0C8H.7
RB8	BIT	098H.2
TH0	DATA	08CH
EX0	BIT	0A8H.0
IT0	BIT	088H.0
TH1	DATA	08DH
EX1	BIT	0A8H.2
TB8	BIT	098H.3
IT1	BIT	088H.2
TH2	DATA	0CDH
REGX_CTRL	DATA	0ADH
EX2	BIT	0E8H.0
P	BIT	0D0H.0
EX3	BIT	0E8H.1
SM0	BIT	098H.7
TL0	DATA	08AH
EX4	BIT	0E8H.2
SM1	BIT	098H.6
TL1	DATA	08BH
EX5	BIT	0E8H.3
SM2	BIT	098H.5
TL2	DATA	0CCH
EIE	DATA	0E8H
PT0	BIT	0B8H.1
RS0	BIT	0D0H.3
PT1	BIT	0B8H.3
RS1	BIT	0D0H.4
PT2	BIT	0B8H.5
TR0	BIT	088H.4
PWMCON	DATA	0A9H
TR1	BIT	088H.6
TR2	BIT	0C8H.2
PX0	BIT	0B8H.0
PX1	BIT	0B8H.2
PX2	BIT	0F8H.0
PX3	BIT	0F8H.1
PX4	BIT	0F8H.2
DPH	DATA	083H
PX5	BIT	0F8H.3
EIP	DATA	0F8H
DPL	DATA	082H
EXEN2	BIT	0C8H.3
CPRL2	BIT	0C8H.0
REN	BIT	098H.4
T2CON	DATA	0C8H
DPS	DATA	086H
SPI_DATA	DATA	0B2H
MPAGE	DATA	092H
RXD	BIT	080H.1
DOUT2	BIT	0A0H.4
EICON	DATA	0D8H
CKCON	DATA	08EH
TXD	BIT	080H.2
RADIO	DATA	0A0H
PWM	BIT	080H.7
F0	BIT	0D0H.5
F1	BIT	0D0H.1
REGX_LSB	DATA	0ACH
PSW	DATA	0D0H
REGX_MSB	DATA	0ABH
?PR?adc_init?______INCLUDE_ADC_ADC       SEGMENT CODE 
?PR?_adc_read?______INCLUDE_ADC_ADC      SEGMENT CODE 
	PUBLIC	_adc_read
	PUBLIC	adc_init
; /*
;  * (C) 2006 The Regents of the University of California. All Rights Reserved.
;  * Created by Seung-mok Yoo, Department of Electrical Engineering & Computer
;  * Science
;  *
;  * Copyright (C) 2006 The Regents of the University of California. All Rights
;  * Reserved. Permission to use, copy, modify, and distribute this software and
;  * its documentation for educational, research and non-profit purposes, without
;  * fee, and without a written agreement is hereby granted, provided that the
;  * above copyright notice, this paragraph and the following two paragraphs
;  * appear in all copies. This software program and documentation are
;  * copyrighted by The Regents of the University of California ("The University
;  * of California").
;  *
;  * THE SOFTWARE PROGRAM AND DOCUMENTATION ARE SUPPLIED "AS IS," WITHOUT ANY
;  * ACCOMPANYING SERVICES FROM THE UNIVERSITY OF CALFORNIA. FURTHERMORE, THE
;  * UNIVERSITY OF CALIFORNIA DOES NOT WARRANT THAT THE OPERATION OF THE PROGRAM
;  * WILL BE UNINTERRUPTED OR ERROR-FREE. THE END-USER UNDERSTANDS THAT THE
;  * PROGRAM WAS DEVELOPED FOR RESEARCH PURPOSES AND IS ADVISED NOT TO RELY
;  * EXCLUSIVELY ON THE PROGRAM FOR ANY REASON.
;  *
;  * IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY FOR
;  * DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES, INCLUDING
;  * LOST PROFITS, ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION,
;  * EVEN IF THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
;  * SUCH DAMAGES. THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY
;  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
;  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE PROVIDED
;  * HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF CALIFORNIA HAS NO
;  * OBLIGATIONS TO PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR
;  * MODIFICATIONS. 
;  */
; #include "Eco/reg24e1.h"
; 
; 
; void adc_init(void)

	RSEG  ?PR?adc_init?______INCLUDE_ADC_ADC
adc_init:
			; SOURCE LINE # 36
; {
			; SOURCE LINE # 37
; 	ADCCON = 0x30;  // modified by jangyie!! change reference voltage!                // Channel 0, NPD=1, ADCRUN=0, EXTREF=0
			; SOURCE LINE # 38
	MOV  	ADCCON,#030H
; 	ADCSTATIC &= 0x1c;
			; SOURCE LINE # 39
	ANL  	ADCSTATIC,#01CH
; 	ADCSTATIC |= 0x03;              // 12bit
			; SOURCE LINE # 40
	ORL  	ADCSTATIC,#03H
; } // adc_init
			; SOURCE LINE # 41
	RET  	
; END OF adc_init

; 
; int adc_read(char pin)

	RSEG  ?PR?_adc_read?______INCLUDE_ADC_ADC
_adc_read:
	USING	0
			; SOURCE LINE # 43
;---- Variable 'pin?140' assigned to Register 'R7' ----
; {
			; SOURCE LINE # 44
; 	char	tmp;
; 	int		value;
; 
; 	tmp = ADCCON & 0xf0;
			; SOURCE LINE # 48
	MOV  	A,ADCCON
	ANL  	A,#0F0H
	MOV  	R6,A
;---- Variable 'tmp?141' assigned to Register 'R6' ----
; 	ADCCON = tmp | (pin & 0x0f);
			; SOURCE LINE # 49
	MOV  	A,R7
	ANL  	A,#0FH
	ORL  	A,R6
	MOV  	ADCCON,A
; 	ADCCON &= ~0x80;				// Start
			; SOURCE LINE # 50
	ANL  	ADCCON,#07FH
; 	ADCCON |= 0x80;					// new conversion
			; SOURCE LINE # 51
	ORL  	ADCCON,#080H
?C0002:
; 
; 	while((EXIF & 0x10) == 0);		// Wait until ADC conversion complete
			; SOURCE LINE # 53
	MOV  	A,EXIF
	JNB  	ACC.4,?C0002
?C0003:
; 	EXIF &= ~0x10;					// Clear ADC completion bit
			; SOURCE LINE # 54
	ANL  	EXIF,#0EFH
; 	value = ADCDATAH;				// Read ADC data
			; SOURCE LINE # 55
	MOV  	R7,ADCDATAH
	MOV  	R6,#00H
;---- Variable 'value?142' assigned to Register 'R6/R7' ----
; 	value <<= 4;
			; SOURCE LINE # 56
	MOV  	A,R7
	SWAP 	A
	MOV  	R0,A
	ANL  	A,#0FH
	XCH  	A,R0
	XRL  	A,R0
	MOV  	R7,A
	MOV  	A,R6
	SWAP 	A
	ANL  	A,#0F0H
	ORL  	A,R0
	MOV  	R6,A
; 	value |= (ADCDATAL >> 4) & 0xf;
			; SOURCE LINE # 57
	MOV  	A,ADCDATAL
	SWAP 	A
	ANL  	A,#0FH
	ORL  	AR7,A
; 
; 	return value;
			; SOURCE LINE # 59
; } // adc_read
			; SOURCE LINE # 60
?C0004:
	RET  	
; END OF _adc_read

	END
