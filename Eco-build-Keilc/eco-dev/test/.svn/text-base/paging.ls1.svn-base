AX51 MACRO ASSEMBLER  PAGING                                                                01/06/09 16:31:51 PAGE     1


MACRO ASSEMBLER AX51 V3.06a
OBJECT MODULE PLACED IN .\paging.obj
ASSEMBLER INVOKED BY: c:\Keil\C51\BIN\AX51.exe ./paging.src EP DEBUG SYMBOLS OJ(.\paging.obj) PR(.\paging.ls1) 

LOC    OBJ             LINE     SOURCE

                          1     ; ./paging.src generated from: ./paging.c
                          2     ; COMPILER INVOKED BY:
                          3     ;        c:\Keil\C51\BIN\C51.exe ./paging.c BROWSE DEBUG CODE LISTINCLUDE SYMBOLS PREPRI
                               NT INCDIR(../../Include) SRC(./paging.src)
                          4     
                          5     $nomod51 
                          6     
                          7     NAME    __PAGING
                          8     
 00A0.7                   9     PWR_UP  BIT     0A0H.7
 0080                    10     P0      DATA    080H
 0090                    11     P1      DATA    090H
 00D0.6                  12     AC      BIT     0D0H.6
 0080.5                  13     T0      BIT     080H.5
 00B3                    14     SPI_CTRL        DATA    0B3H
 0080.6                  15     T1      BIT     080H.6
 00A8.7                  16     EA      BIT     0A8H.7
 0090.0                  17     T2      BIT     090H.0
 00A0.6                  18     CE      BIT     0A0H.6
 00BE                    19     DEV_OFFSET      DATA    0BEH
 00A0.1                  20     CLK1    BIT     0A0H.1
 0090.2                  21     DIN0    BIT     090H.2
 00A0.5                  22     CLK2    BIT     0A0H.5
 0090.0                  23     DIO0    BIT     090H.0
 0083                    24     DPH0    DATA    083H
 0090.1                  25     DIO1    BIT     090H.1
 00A8                    26     IE      DATA    0A8H
 0085                    27     DPH1    DATA    085H
 0080.0                  28     DIO2    BIT     080H.0
 0080.1                  29     DIO3    BIT     080H.1
 0080.0                  30     P0_0    BIT     080H.0
 0090.0                  31     P1_0    BIT     090H.0
 0080.2                  32     DIO4    BIT     080H.2
 0080.1                  33     P0_1    BIT     080H.1
 0082                    34     DPL0    DATA    082H
 0090.1                  35     P1_1    BIT     090H.1
 0080.3                  36     DIO5    BIT     080H.3
 0080.2                  37     P0_2    BIT     080H.2
 0084                    38     DPL1    DATA    084H
 0090.2                  39     P1_2    BIT     090H.2
 0080.4                  40     DIO6    BIT     080H.4
 0080.3                  41     P0_3    BIT     080H.3
 0080.5                  42     DIO7    BIT     080H.5
 0080.4                  43     P0_4    BIT     080H.4
 00A4                    44     ADCSTATIC       DATA    0A4H
 0080.6                  45     DIO8    BIT     080H.6
 0080.5                  46     P0_5    BIT     080H.5
 00C8.6                  47     EXF2    BIT     0C8H.6
 00A0.3                  48     CS      BIT     0A0H.3
 0080.7                  49     DIO9    BIT     080H.7
 0080.6                  50     P0_6    BIT     080H.6
 0080.7                  51     P0_7    BIT     080H.7
 00A8.4                  52     ES      BIT     0A8H.4
 00B8                    53     IP      DATA    0B8H
 00A0.0                  54     DATA?   BIT     0A0H.0
 0098.0                  55     RI      BIT     098H.0
 00D0.7                  56     CY      BIT     0D0H.7
 0098.1                  57     TI      BIT     098H.1
AX51 MACRO ASSEMBLER  PAGING                                                                01/06/09 16:31:51 PAGE     2

 00BC                    58     T1_1V2  DATA    0BCH
 008F                    59     SPC_FNC DATA    08FH
 00BD                    60     T2_1V2  DATA    0BDH
 00CB                    61     RCAP2H  DATA    0CBH
 00B8.4                  62     PS      BIT     0B8H.4
 0081                    63     SP      DATA    081H
 00D0.2                  64     OV      BIT     0D0H.2
 00B6                    65     CK_CTRL DATA    0B6H
 00CA                    66     RCAP2L  DATA    0CAH
 00B5                    67     TICK_DV DATA    0B5H
 00B1                    68     RSTREAS DATA    0B1H
 00C8.1                  69     C_T2    BIT     0C8H.1
 00E8.4                  70     EWDI    BIT     0E8H.4
 00A1                    71     ADCCON  DATA    0A1H
 00C8.5                  72     RCLK    BIT     0C8H.5
 00A2                    73     ADCDATAH        DATA    0A2H
 0091                    74     EXIF    DATA    091H
 00C8.4                  75     TCLK    BIT     0C8H.4
 00A0.6                  76     DR2_CE  BIT     0A0H.6
 00A3                    77     ADCDATAL        DATA    0A3H
 0099                    78     SBUF    DATA    099H
 0087                    79     PCON    DATA    087H
 0098                    80     SCON    DATA    098H
 00F8.4                  81     PWDI    BIT     0F8H.4
 0089                    82     TMOD    DATA    089H
 0088                    83     TCON    DATA    088H
 00D8.3                  84     WDTI    BIT     0D8H.3
 00AA                    85     PWMDUTY DATA    0AAH
 0088.1                  86     IE0     BIT     088H.1
 0088.3                  87     IE1     BIT     088H.3
 0094                    88     P0_DIR  DATA    094H
 00F0                    89     B       DATA    0F0H
 0096                    90     P1_DIR  DATA    096H
 0095                    91     P0_ALT  DATA    095H
 0097                    92     P1_ALT  DATA    097H
 00C8.0                  93     CP_RL2  BIT     0C8H.0
 00A0.2                  94     DR1     BIT     0A0H.2
 00E0                    95     ACC     DATA    0E0H
 00A0.6                  96     DR2     BIT     0A0H.6
 00B7                    97     TEST_MODE       DATA    0B7H
 00B4                    98     SPICLK  DATA    0B4H
 00C8.1                  99     CT2     BIT     0C8H.1
 00A8.1                 100     ET0     BIT     0A8H.1
 00A8.3                 101     ET1     BIT     0A8H.3
 0088.5                 102     TF0     BIT     088H.5
 0080.3                 103     INT0_N  BIT     080H.3
 00A8.5                 104     ET2     BIT     0A8H.5
 0088.7                 105     TF1     BIT     088H.7
 0080.4                 106     INT1_N  BIT     080H.4
 00C8.7                 107     TF2     BIT     0C8H.7
 0098.2                 108     RB8     BIT     098H.2
 008C                   109     TH0     DATA    08CH
 00A8.0                 110     EX0     BIT     0A8H.0
 0088.0                 111     IT0     BIT     088H.0
 008D                   112     TH1     DATA    08DH
 00A8.2                 113     EX1     BIT     0A8H.2
 0098.3                 114     TB8     BIT     098H.3
 0088.2                 115     IT1     BIT     088H.2
 00CD                   116     TH2     DATA    0CDH
 00AD                   117     REGX_CTRL       DATA    0ADH
 00E8.0                 118     EX2     BIT     0E8H.0
 00D0.0                 119     P       BIT     0D0H.0
 00E8.1                 120     EX3     BIT     0E8H.1
 0098.7                 121     SM0     BIT     098H.7
 008A                   122     TL0     DATA    08AH
 00E8.2                 123     EX4     BIT     0E8H.2
AX51 MACRO ASSEMBLER  PAGING                                                                01/06/09 16:31:51 PAGE     3

 0098.6                 124     SM1     BIT     098H.6
 008B                   125     TL1     DATA    08BH
 00E8.3                 126     EX5     BIT     0E8H.3
 0098.5                 127     SM2     BIT     098H.5
 00CC                   128     TL2     DATA    0CCH
 00E8                   129     EIE     DATA    0E8H
 00B8.1                 130     PT0     BIT     0B8H.1
 00D0.3                 131     RS0     BIT     0D0H.3
 00B8.3                 132     PT1     BIT     0B8H.3
 00D0.4                 133     RS1     BIT     0D0H.4
 00B8.5                 134     PT2     BIT     0B8H.5
 0088.4                 135     TR0     BIT     088H.4
 00A9                   136     PWMCON  DATA    0A9H
 0088.6                 137     TR1     BIT     088H.6
 00C8.2                 138     TR2     BIT     0C8H.2
 00B8.0                 139     PX0     BIT     0B8H.0
 00B8.2                 140     PX1     BIT     0B8H.2
 00F8.0                 141     PX2     BIT     0F8H.0
 00F8.1                 142     PX3     BIT     0F8H.1
 00F8.2                 143     PX4     BIT     0F8H.2
 0083                   144     DPH     DATA    083H
 00F8.3                 145     PX5     BIT     0F8H.3
 00F8                   146     EIP     DATA    0F8H
 0082                   147     DPL     DATA    082H
 00C8.3                 148     EXEN2   BIT     0C8H.3
 00C8.0                 149     CPRL2   BIT     0C8H.0
 0098.4                 150     REN     BIT     098H.4
 00C8                   151     T2CON   DATA    0C8H
 0086                   152     DPS     DATA    086H
 00B2                   153     SPI_DATA        DATA    0B2H
 0092                   154     MPAGE   DATA    092H
 0080.1                 155     RXD     BIT     080H.1
 00A0.4                 156     DOUT2   BIT     0A0H.4
 00D8                   157     EICON   DATA    0D8H
 008E                   158     CKCON   DATA    08EH
 0080.2                 159     TXD     BIT     080H.2
 00A0                   160     RADIO   DATA    0A0H
 0080.7                 161     PWM     BIT     080H.7
 00D0.5                 162     F0      BIT     0D0H.5
 00D0.1                 163     F1      BIT     0D0H.1
 00AC                   164     REGX_LSB        DATA    0ACH
 00D0                   165     PSW     DATA    0D0H
 00AB                   166     REGX_MSB        DATA    0ABH
------                  167     ?PR?ECO_PAGE_MANAGER?__PAGING            SEGMENT CODE 
------                  168     ?DT?ECO_PAGE_MANAGER?__PAGING            SEGMENT DATA OVERLAYABLE 
------                  169     ?PR?blink_fast?__PAGING                  SEGMENT CODE 
------                  170     ?DT?blink_fast?__PAGING                  SEGMENT DATA OVERLAYABLE 
------                  171     ?PR?main?__PAGING    SEGMENT CODE 
------                  172     ?DT?main?__PAGING    SEGMENT DATA OVERLAYABLE 
------                  173     ?DT?__PAGING         SEGMENT DATA 
                        174             EXTRN   CODE (_mdelay)
                        175             EXTRN   CODE (_eeprom_read)
                        176             EXTRN   CODE (eeprom_init)
                        177             EXTRN   CODE (_store_cpu_rate)
                        178             EXTRN   CODE (?C_STARTUP)
                        179             PUBLIC  main
                        180             PUBLIC  blink_fast
                        181             PUBLIC  ECO_PAGE_MANAGER
                        182     
------                  183             RSEG  ?DT?blink_fast?__PAGING
000000                  184     ?blink_fast?BYTE:
000000                  185               i?141:   DS   2
                        186     
------                  187             RSEG  ?DT?main?__PAGING
000000                  188     ?main?BYTE:
000000                  189               i?242:   DS   2
AX51 MACRO ASSEMBLER  PAGING                                                                01/06/09 16:31:51 PAGE     4

000002                  190             ORG  2
000002                  191             seg?243:   DS   2
                        192     
------                  193             RSEG  ?DT?ECO_PAGE_MANAGER?__PAGING
000000                  194     ?ECO_PAGE_MANAGER?BYTE:
000000                  195               i?040:   DS   2
                        196     
------                  197             RSEG  ?DT?__PAGING
000000                  198      ECO_PAGE_TABLE:   DS   10
00000A                  199           JUMP_ADDR:   DS   2
00000C                  200         PAGE_ADDR_H:   DS   2
00000E                  201         PAGE_ADDR_L:   DS   2
000010                  202           SP_ADDR_H:   DS   2
000012                  203           SP_ADDR_L:   DS   2
000014                  204       ECO_PAGE_ADDR:   DS   1
000015                  205     ECO_PAGE_TABLE_INDEX:   DS   2
                        206     ; #include "Eco/reg24e1.h"
                        207     ; #include "Eco/eco_sys.h"
                        208     ; #include "utils/utils.h"
                        209     ; #include "eeprom/eeprom.h"
                        210     ; 
                        211     ; #include "eco_page.h"
                        212     ; #define EEPROM_HEADER 3
                        213     ; #define ECO_ADDR_SHIFT(x)     ((unsigned int)(x) + 3)
                        214     ; 
                        215     ; static unsigned int PAGE_ADDR_L,PAGE_ADDR_H;
                        216     ; static unsigned int SP_ADDR_L,SP_ADDR_H;
                        217     ; static unsigned char ECO_PAGE_TABLE[10];
                        218     ; static unsigned int JUMP_ADDR;
                        219     ; 
                        220     ; void ECO_PAGE_MANAGER()
                        221     
------                  222             RSEG  ?PR?ECO_PAGE_MANAGER?__PAGING
000000                  223     ECO_PAGE_MANAGER:
                        224             USING   0
                        225                             ; SOURCE LINE # 15
                        226     ; {
                        227                             ; SOURCE LINE # 16
                        228     ;       unsigned int i; 
                        229     ; 
                        230     ;       #pragma asm
                        231     ;               ;POP LCALL ADDR_HIGHT
                        232               ;POP LCALL ADDR_HIGHT
                        233     ;               POP     SP_ADDR_H+01H
000000 D000       F     234               POP   SP_ADDR_H+01H
                        235     ;               MOV     SP_ADDR_H,#00H
000002 750000     F     236               MOV   SP_ADDR_H,#00H
                        237     ; 
                        238               
                        239     ;               ;POP LCALL ADDR_LOW     
                        240               ;POP LCALL ADDR_LOW   
                        241     ;               POP     SP_ADDR_L+01H
000005 D000       F     242               POP   SP_ADDR_L+01H
                        243     ;               MOV     SP_ADDR_L,#00H
000007 750000     F     244               MOV   SP_ADDR_L,#00H
                        245     ;               
                        246               
                        247     ;               ;POP Function Address
                        248               ;POP Function Address
                        249     ;               POP     PAGE_ADDR_H+01H
00000A D000       F     250               POP   PAGE_ADDR_H+01H
                        251     ;               MOV     PAGE_ADDR_H,#00H
00000C 750000     F     252               MOV   PAGE_ADDR_H,#00H
                        253     ; 
                        254               
                        255     ;               POP     PAGE_ADDR_L+01H
AX51 MACRO ASSEMBLER  PAGING                                                                01/06/09 16:31:51 PAGE     5

00000F D000       F     256               POP   PAGE_ADDR_L+01H
                        257     ;               MOV     PAGE_ADDR_L,#00H
000011 750000     F     258               MOV   PAGE_ADDR_L,#00H
                        259     ; 
                        260               
                        261     ;       #pragma endasm  
                        262     ;       
                        263     ;       //Check POP instruction 
                        264     ;       for(i=0;i<PAGE_ADDR_H;i++)
                        265                             ; SOURCE LINE # 38
000014 E4               266             CLR     A
000015 F500       F     267             MOV     i?040,A
000017 F500       F     268             MOV     i?040+01H,A
000019                  269     ?C0001:
000019 C3               270             CLR     C
00001A E500       F     271             MOV     A,i?040+01H
00001C 9500       F     272             SUBB    A,PAGE_ADDR_H+01H
00001E E500       F     273             MOV     A,i?040
000020 9500       F     274             SUBB    A,PAGE_ADDR_H
000022 5014             275             JNC     ?C0002
                        276     ;       {       
                        277                             ; SOURCE LINE # 39
                        278     ;               blink_led();
                        279                             ; SOURCE LINE # 40
000024 638020           280             XRL     P0,#020H
                        281     ;               mdelay(400);
                        282                             ; SOURCE LINE # 41
000027 7F90             283             MOV     R7,#090H
000029 7E01             284             MOV     R6,#01H
00002B 120000     E     285             LCALL   _mdelay
                        286     ;       }       
                        287                             ; SOURCE LINE # 42
00002E 0500       F     288             INC     i?040+01H
000030 E500       F     289             MOV     A,i?040+01H
000032 70E5             290             JNZ     ?C0001
000034 0500       F     291             INC     i?040
000036                  292     ?C0019:
000036 80E1             293             SJMP    ?C0001
000038                  294     ?C0002:
                        295     ;       
                        296     ;       //Check Table   
                        297     ;               
                        298     ; 
                        299     ;       
                        300     ;       //Set Return Address Back
                        301     ;       #pragma asm
                        302     ; 
                        303               
                        304     ;               CLR     A
000038 E4               305               CLR   A
                        306     ;               MOV     A,SP_ADDR_L     
000039 E500       F     307               MOV   A,SP_ADDR_L     
                        308     ;               PUSH    ACC     
00003B C0E0             309               PUSH  ACC     
                        310     ; 
                        311               
                        312     ;               CLR     A
00003D E4               313               CLR   A
                        314     ;               MOV     A,SP_ADDR_H
00003E E500       F     315               MOV   A,SP_ADDR_H
                        316     ;               PUSH    ACC
000040 C0E0             317               PUSH  ACC
                        318     ; 
                        319               
                        320     ;               RET     
000042 22               321               RET   
AX51 MACRO ASSEMBLER  PAGING                                                                01/06/09 16:31:51 PAGE     6

                        322     ;       #pragma endasm
                        323     ;       
                        324     ; }
                        325                             ; SOURCE LINE # 62
000043 22               326             RET     
                        327     ; END OF ECO_PAGE_MANAGER
                        328     
                        329     ; 
                        330     ; void blink_fast()
                        331     
------                  332             RSEG  ?PR?blink_fast?__PAGING
000000                  333     blink_fast:
                        334             USING   0
                        335                             ; SOURCE LINE # 64
                        336     ; {
                        337                             ; SOURCE LINE # 65
                        338     ;       int i;
                        339     ;       mdelay(400);
                        340                             ; SOURCE LINE # 67
000000 7F90             341             MOV     R7,#090H
000002 7E01             342             MOV     R6,#01H
000004 120000     E     343             LCALL   _mdelay
                        344     ;       for(i=0;i<12;i++)       
                        345                             ; SOURCE LINE # 68
000007 E4               346             CLR     A
000008 F500       F     347             MOV     i?141,A
00000A F500       F     348             MOV     i?141+01H,A
00000C                  349     ?C0005:
                        350     ;       {
                        351                             ; SOURCE LINE # 69
                        352     ;               blink_led();    
                        353                             ; SOURCE LINE # 70
00000C 638020           354             XRL     P0,#020H
                        355     ;               mdelay(400);
                        356                             ; SOURCE LINE # 71
00000F 7F90             357             MOV     R7,#090H
000011 7E01             358             MOV     R6,#01H
000013 120000     E     359             LCALL   _mdelay
                        360     ;       }
                        361                             ; SOURCE LINE # 72
000016 0500       F     362             INC     i?141+01H
000018 E500       F     363             MOV     A,i?141+01H
00001A 7002             364             JNZ     ?C0020
00001C 0500       F     365             INC     i?141
00001E                  366     ?C0020:
00001E C3               367             CLR     C
00001F 940C             368             SUBB    A,#0CH
000021 E500       F     369             MOV     A,i?141
000023 6480             370             XRL     A,#080H
000025 9480             371             SUBB    A,#080H
000027 40E3             372             JC      ?C0005
                        373     ; }
                        374                             ; SOURCE LINE # 73
000029                  375     ?C0008:
000029 22               376             RET     
                        377     ; END OF blink_fast
                        378     
                        379     ; 
                        380     ; 
                        381     ; 
                        382     ; void main(void)
                        383     
------                  384             RSEG  ?PR?main?__PAGING
000000                  385     main:
                        386             USING   0
                        387                             ; SOURCE LINE # 77
AX51 MACRO ASSEMBLER  PAGING                                                                01/06/09 16:31:51 PAGE     7

                        388     ; {
                        389                             ; SOURCE LINE # 78
                        390     ;       int i;
                        391     ;       unsigned char xdata *seg = (unsigned char xdata *)(0x500);
                        392                             ; SOURCE LINE # 80
000000 750005     F     393             MOV     seg?243,#05H
000003 750000     F     394             MOV     seg?243+01H,#00H
                        395     ;       
                        396     ;       //unsigned char xdata *jump_fp;
                        397     ; 
                        398     ;       //void(code *fp)();
                        399     ; 
                        400     ;       ECO_PAGE_TABLE[0] = 2; 
                        401                             ; SOURCE LINE # 86
000006 750002     F     402             MOV     ECO_PAGE_TABLE,#02H
                        403     ;       
                        404     ;       
                        405     ;       PAGE_ADDR_L = 10;
                        406                             ; SOURCE LINE # 89
000009 750000     F     407             MOV     PAGE_ADDR_L,#00H
00000C 75000A     F     408             MOV     PAGE_ADDR_L+01H,#0AH
                        409     ;       PAGE_ADDR_H = 11;
                        410                             ; SOURCE LINE # 90
00000F 750000     F     411             MOV     PAGE_ADDR_H,#00H
000012 75000B     F     412             MOV     PAGE_ADDR_H+01H,#0BH
                        413     ;       
                        414     ;       //init LED
                        415     ;       P0_DIR &= ~0x28;
                        416                             ; SOURCE LINE # 93
000015 5394D7           417             ANL     P0_DIR,#0D7H
                        418     ;       P0_ALT &= ~0x28;
                        419                             ; SOURCE LINE # 94
000018 5395D7           420             ANL     P0_ALT,#0D7H
                        421     ; 
                        422     ;       store_cpu_rate(16);
                        423                             ; SOURCE LINE # 96
00001B 7F10             424             MOV     R7,#010H
00001D 7E00             425             MOV     R6,#00H
00001F 120000     E     426             LCALL   _store_cpu_rate
                        427     ; 
                        428     ;       for(i=0;i<6;i++)
                        429                             ; SOURCE LINE # 98
000022 E4               430             CLR     A
000023 F500       F     431             MOV     i?242,A
000025 F500       F     432             MOV     i?242+01H,A
000027                  433     ?C0009:
                        434     ;       {
                        435                             ; SOURCE LINE # 99
                        436     ;               //LED blink
                        437     ;               blink_led();
                        438                             ; SOURCE LINE # 101
000027 638020           439             XRL     P0,#020H
                        440     ;               mdelay(200);
                        441                             ; SOURCE LINE # 102
00002A 7FC8             442             MOV     R7,#0C8H
00002C 7E00             443             MOV     R6,#00H
00002E 120000     E     444             LCALL   _mdelay
                        445     ;       }
                        446                             ; SOURCE LINE # 103
000031 0500       F     447             INC     i?242+01H
000033 E500       F     448             MOV     A,i?242+01H
000035 7002             449             JNZ     ?C0021
000037 0500       F     450             INC     i?242
000039                  451     ?C0021:
000039 C3               452             CLR     C
00003A 9406             453             SUBB    A,#06H
AX51 MACRO ASSEMBLER  PAGING                                                                01/06/09 16:31:51 PAGE     8

00003C E500       F     454             MOV     A,i?242
00003E 6480             455             XRL     A,#080H
000040 9480             456             SUBB    A,#080H
000042 40E3             457             JC      ?C0009
000044                  458     ?C0010:
                        459     ; 
                        460     ;       mdelay(800);    
                        461                             ; SOURCE LINE # 105
000044 7F20             462             MOV     R7,#020H
000046 7E03             463             MOV     R6,#03H
000048 120000     E     464             LCALL   _mdelay
                        465     ;               
                        466     ;       eeprom_init();
                        467                             ; SOURCE LINE # 107
00004B 120000     E     468             LCALL   eeprom_init
                        469     ;       
                        470     ;       //Get data from 0x1000 address
                        471     ;       for(i=0;i<64;i++)
                        472                             ; SOURCE LINE # 110
00004E E4               473             CLR     A
00004F F500       F     474             MOV     i?242,A
000051 F500       F     475             MOV     i?242+01H,A
000053                  476     ?C0012:
                        477     ;       {
                        478                             ; SOURCE LINE # 111
                        479     ;               *(seg+i) = eeprom_read(ECO_ADDR_SHIFT(4096) +i);
                        480                             ; SOURCE LINE # 112
000053 E500       F     481             MOV     A,i?242+01H
000055 2403             482             ADD     A,#03H
000057 FF               483             MOV     R7,A
000058 E500       F     484             MOV     A,i?242
00005A 3410             485             ADDC    A,#010H
00005C FE               486             MOV     R6,A
00005D 120000     E     487             LCALL   _eeprom_read
000060 E500       F     488             MOV     A,seg?243+01H
000062 2500       F     489             ADD     A,i?242+01H
000064 F582             490             MOV     DPL,A
000066 E500       F     491             MOV     A,seg?243
000068 3500       F     492             ADDC    A,i?242
00006A F583             493             MOV     DPH,A
00006C EF               494             MOV     A,R7
00006D F0               495             MOVX    @DPTR,A
                        496     ;       }       
                        497                             ; SOURCE LINE # 113
00006E 0500       F     498             INC     i?242+01H
000070 E500       F     499             MOV     A,i?242+01H
000072 7002             500             JNZ     ?C0022
000074 0500       F     501             INC     i?242
000076                  502     ?C0022:
000076 C3               503             CLR     C
000077 9440             504             SUBB    A,#040H
000079 E500       F     505             MOV     A,i?242
00007B 6480             506             XRL     A,#080H
00007D 9480             507             SUBB    A,#080H
00007F 40D2             508             JC      ?C0012
000081                  509     ?C0013:
                        510     ;       mdelay(400);
                        511                             ; SOURCE LINE # 114
000081 7F90             512             MOV     R7,#090H
000083 7E01             513             MOV     R6,#01H
000085 120000     E     514             LCALL   _mdelay
                        515     ; 
                        516     ; 
                        517     ;       //function pointer to blink_fast() 
                        518     ;       //jump_fp = (unsigned char xdata *)((1280));    
                        519     ;       //((void (code *)(void))jump_fp)();     
AX51 MACRO ASSEMBLER  PAGING                                                                01/06/09 16:31:51 PAGE     9

                        520     ;       JUMP_ADDR = 0x500;
                        521                             ; SOURCE LINE # 120
000088 750005     F     522             MOV     JUMP_ADDR,#05H
00008B 750000     F     523             MOV     JUMP_ADDR+01H,#00H
                        524     ;       #pragma asm
                        525     ;               MOV     A,JUMP_ADDR
00008E E500       F     526               MOV   A,JUMP_ADDR
                        527     ;               MOV     DPH,A
000090 F583             528               MOV   DPH,A
                        529     ;               MOV     A,JUMP_ADDR+01H
000092 E500       F     530               MOV   A,JUMP_ADDR+01H
                        531     ;               MOV     DPL,A
000094 F582             532               MOV   DPL,A
                        533     ;               CLR     A
000096 E4               534               CLR   A
                        535     ;               JMP     @A+DPTR 
000097 73               536               JMP   @A+DPTR 
                        537     ;       #pragma endasm  
                        538     ;       
                        539     ;       /*for(i=0;i<8;i++)
                        540     ;       {
                        541     ;               blink_led();
                        542     ;               mdelay(200);
                        543     ;       }
                        544     ;       mdelay(800);    
                        545     ;       */
                        546     ;       
                        547     ; 
                        548     ;       //blink_fast(); 
                        549     ;       
                        550     ;       /*      
                        551     ;       #pragma asm
                        552     ;               //LCALL 0x500
                        553     ; 
                        554     ;               CLR     A       
                        555     ;               ;ADDR_LOW
                        556     ;               MOV     A,#0CH
                        557     ;               PUSH    ACC     
                        558     ;       
                        559     ;               CLR     A
                        560     ;               ;ADDR_HIGH      
                        561     ;               MOV     A,#0AH
                        562     ;               PUSH    ACC
                        563     ;       
                        564     ;       #pragma endasm
                        565     ;       */
                        566     ; 
                        567     ;       //ECO_PAGE_MANAGER();
                        568     ;       
                        569     ;       mdelay(800);
                        570                             ; SOURCE LINE # 160
000098 7F20             571             MOV     R7,#020H
00009A 7E03             572             MOV     R6,#03H
00009C 120000     E     573             LCALL   _mdelay
                        574     ;       for(i=0;i<10;i++)
                        575                             ; SOURCE LINE # 161
00009F E4               576             CLR     A
0000A0 F500       F     577             MOV     i?242,A
0000A2 F500       F     578             MOV     i?242+01H,A
0000A4                  579     ?C0015:
                        580     ;       {
                        581                             ; SOURCE LINE # 162
                        582     ;               blink_led();
                        583                             ; SOURCE LINE # 163
0000A4 638020           584             XRL     P0,#020H
                        585     ;               mdelay(200);
AX51 MACRO ASSEMBLER  PAGING                                                                01/06/09 16:31:51 PAGE    10

                        586                             ; SOURCE LINE # 164
0000A7 7FC8             587             MOV     R7,#0C8H
0000A9 7E00             588             MOV     R6,#00H
0000AB 120000     E     589             LCALL   _mdelay
                        590     ;       }
                        591                             ; SOURCE LINE # 165
0000AE 0500       F     592             INC     i?242+01H
0000B0 E500       F     593             MOV     A,i?242+01H
0000B2 7002             594             JNZ     ?C0023
0000B4 0500       F     595             INC     i?242
0000B6                  596     ?C0023:
0000B6 C3               597             CLR     C
0000B7 940A             598             SUBB    A,#0AH
0000B9 E500       F     599             MOV     A,i?242
0000BB 6480             600             XRL     A,#080H
0000BD 9480             601             SUBB    A,#080H
0000BF 40E3             602             JC      ?C0015
0000C1                  603     ?C0016:
                        604     ;       mdelay(400);
                        605                             ; SOURCE LINE # 166
0000C1 7F90             606             MOV     R7,#090H
0000C3 7E01             607             MOV     R6,#01H
0000C5 020000     E     608             LJMP    _mdelay
                        609     ; END OF main
                        610     
                        611             END
AX51 MACRO ASSEMBLER  PAGING                                                                01/06/09 16:31:51 PAGE    11

SYMBOL TABLE LISTING
------ ----- -------


N A M E                                    T Y P E  V A L U E     ATTRIBUTES

?BLINK_FAST?BYTE. . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?BLINK_FAST?__PAGING
?C0001. . . . . . . . . . . . . . . . .    C  ADDR  0019H     R   SEG=?PR?ECO_PAGE_MANAGER?__PAGING
?C0002. . . . . . . . . . . . . . . . .    C  ADDR  0038H     R   SEG=?PR?ECO_PAGE_MANAGER?__PAGING
?C0005. . . . . . . . . . . . . . . . .    C  ADDR  000CH     R   SEG=?PR?BLINK_FAST?__PAGING
?C0008. . . . . . . . . . . . . . . . .    C  ADDR  0029H     R   SEG=?PR?BLINK_FAST?__PAGING
?C0009. . . . . . . . . . . . . . . . .    C  ADDR  0027H     R   SEG=?PR?MAIN?__PAGING
?C0010. . . . . . . . . . . . . . . . .    C  ADDR  0044H     R   SEG=?PR?MAIN?__PAGING
?C0012. . . . . . . . . . . . . . . . .    C  ADDR  0053H     R   SEG=?PR?MAIN?__PAGING
?C0013. . . . . . . . . . . . . . . . .    C  ADDR  0081H     R   SEG=?PR?MAIN?__PAGING
?C0015. . . . . . . . . . . . . . . . .    C  ADDR  00A4H     R   SEG=?PR?MAIN?__PAGING
?C0016. . . . . . . . . . . . . . . . .    C  ADDR  00C1H     R   SEG=?PR?MAIN?__PAGING
?C0019. . . . . . . . . . . . . . . . .    C  ADDR  0036H     R   SEG=?PR?ECO_PAGE_MANAGER?__PAGING
?C0020. . . . . . . . . . . . . . . . .    C  ADDR  001EH     R   SEG=?PR?BLINK_FAST?__PAGING
?C0021. . . . . . . . . . . . . . . . .    C  ADDR  0039H     R   SEG=?PR?MAIN?__PAGING
?C0022. . . . . . . . . . . . . . . . .    C  ADDR  0076H     R   SEG=?PR?MAIN?__PAGING
?C0023. . . . . . . . . . . . . . . . .    C  ADDR  00B6H     R   SEG=?PR?MAIN?__PAGING
?C_STARTUP. . . . . . . . . . . . . . .    C  ADDR  -------       EXT
?DT?__PAGING. . . . . . . . . . . . . .    D  SEG   000017H       REL=UNIT, ALN=BYTE
?DT?BLINK_FAST?__PAGING . . . . . . . .    D  SEG   000002H       REL=UNIT, ALN=BYTE
?DT?ECO_PAGE_MANAGER?__PAGING . . . . .    D  SEG   000002H       REL=UNIT, ALN=BYTE
?DT?MAIN?__PAGING . . . . . . . . . . .    D  SEG   000004H       REL=UNIT, ALN=BYTE
?ECO_PAGE_MANAGER?BYTE. . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?ECO_PAGE_MANAGER?__PAGING
?MAIN?BYTE. . . . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?MAIN?__PAGING
?PR?BLINK_FAST?__PAGING . . . . . . . .    C  SEG   00002AH       REL=UNIT, ALN=BYTE
?PR?ECO_PAGE_MANAGER?__PAGING . . . . .    C  SEG   000044H       REL=UNIT, ALN=BYTE
?PR?MAIN?__PAGING . . . . . . . . . . .    C  SEG   0000C8H       REL=UNIT, ALN=BYTE
__PAGING. . . . . . . . . . . . . . . .    -- ----  -------       
_EEPROM_READ. . . . . . . . . . . . . .    C  ADDR  -------       EXT
_MDELAY . . . . . . . . . . . . . . . .    C  ADDR  -------       EXT
_STORE_CPU_RATE . . . . . . . . . . . .    C  ADDR  -------       EXT
AC. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.6   A   
ACC . . . . . . . . . . . . . . . . . .    D  ADDR  00E0H     A   
ADCCON. . . . . . . . . . . . . . . . .    D  ADDR  00A1H     A   
ADCDATAH. . . . . . . . . . . . . . . .    D  ADDR  00A2H     A   
ADCDATAL. . . . . . . . . . . . . . . .    D  ADDR  00A3H     A   
ADCSTATIC . . . . . . . . . . . . . . .    D  ADDR  00A4H     A   
B . . . . . . . . . . . . . . . . . . .    D  ADDR  00F0H     A   
BLINK_FAST. . . . . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?BLINK_FAST?__PAGING
C_T2. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.1   A   
CE. . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.6   A   
CK_CTRL . . . . . . . . . . . . . . . .    D  ADDR  00B6H     A   
CKCON . . . . . . . . . . . . . . . . .    D  ADDR  008EH     A   
CLK1. . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.1   A   
CLK2. . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.5   A   
CP_RL2. . . . . . . . . . . . . . . . .    B  ADDR  00C8H.0   A   
CPRL2 . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.0   A   
CS. . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.3   A   
CT2 . . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.1   A   
CY. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.7   A   
DATA? . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.0   A   
DEV_OFFSET. . . . . . . . . . . . . . .    D  ADDR  00BEH     A   
DIN0. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.2   A   
DIO0. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.0   A   
DIO1. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.1   A   
DIO2. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.0   A   
DIO3. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.1   A   
DIO4. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.2   A   
DIO5. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.3   A   
DIO6. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.4   A   
DIO7. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.5   A   
AX51 MACRO ASSEMBLER  PAGING                                                                01/06/09 16:31:51 PAGE    12

DIO8. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.6   A   
DIO9. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.7   A   
DOUT2 . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.4   A   
DPH . . . . . . . . . . . . . . . . . .    D  ADDR  0083H     A   
DPH0. . . . . . . . . . . . . . . . . .    D  ADDR  0083H     A   
DPH1. . . . . . . . . . . . . . . . . .    D  ADDR  0085H     A   
DPL . . . . . . . . . . . . . . . . . .    D  ADDR  0082H     A   
DPL0. . . . . . . . . . . . . . . . . .    D  ADDR  0082H     A   
DPL1. . . . . . . . . . . . . . . . . .    D  ADDR  0084H     A   
DPS . . . . . . . . . . . . . . . . . .    D  ADDR  0086H     A   
DR1 . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.2   A   
DR2 . . . . . . . . . . . . . . . . . .    B  ADDR  00A0H.6   A   
DR2_CE. . . . . . . . . . . . . . . . .    B  ADDR  00A0H.6   A   
EA. . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.7   A   
ECO_PAGE_ADDR . . . . . . . . . . . . .    D  ADDR  0014H     R   SEG=?DT?__PAGING
ECO_PAGE_MANAGER. . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?ECO_PAGE_MANAGER?__PAGING
ECO_PAGE_TABLE. . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?__PAGING
ECO_PAGE_TABLE_INDEX. . . . . . . . . .    D  ADDR  0015H     R   SEG=?DT?__PAGING
EEPROM_INIT . . . . . . . . . . . . . .    C  ADDR  -------       EXT
EICON . . . . . . . . . . . . . . . . .    D  ADDR  00D8H     A   
EIE . . . . . . . . . . . . . . . . . .    D  ADDR  00E8H     A   
EIP . . . . . . . . . . . . . . . . . .    D  ADDR  00F8H     A   
ES. . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.4   A   
ET0 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.1   A   
ET1 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.3   A   
ET2 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.5   A   
EWDI. . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.4   A   
EX0 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.0   A   
EX1 . . . . . . . . . . . . . . . . . .    B  ADDR  00A8H.2   A   
EX2 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.0   A   
EX3 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.1   A   
EX4 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.2   A   
EX5 . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.3   A   
EXEN2 . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.3   A   
EXF2. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.6   A   
EXIF. . . . . . . . . . . . . . . . . .    D  ADDR  0091H     A   
F0. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.5   A   
F1. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.1   A   
I?040 . . . . . . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?ECO_PAGE_MANAGER?__PAGING
I?141 . . . . . . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?BLINK_FAST?__PAGING
I?242 . . . . . . . . . . . . . . . . .    D  ADDR  0000H     R   SEG=?DT?MAIN?__PAGING
IE. . . . . . . . . . . . . . . . . . .    D  ADDR  00A8H     A   
IE0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.1   A   
IE1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.3   A   
INT0_N. . . . . . . . . . . . . . . . .    B  ADDR  0080H.3   A   
INT1_N. . . . . . . . . . . . . . . . .    B  ADDR  0080H.4   A   
IP. . . . . . . . . . . . . . . . . . .    D  ADDR  00B8H     A   
IT0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.0   A   
IT1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.2   A   
JUMP_ADDR . . . . . . . . . . . . . . .    D  ADDR  000AH     R   SEG=?DT?__PAGING
MAIN. . . . . . . . . . . . . . . . . .    C  ADDR  0000H     R   SEG=?PR?MAIN?__PAGING
MPAGE . . . . . . . . . . . . . . . . .    D  ADDR  0092H     A   
OV. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.2   A   
P . . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.0   A   
P0. . . . . . . . . . . . . . . . . . .    D  ADDR  0080H     A   
P0_0. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.0   A   
P0_1. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.1   A   
P0_2. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.2   A   
P0_3. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.3   A   
P0_4. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.4   A   
P0_5. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.5   A   
P0_6. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.6   A   
P0_7. . . . . . . . . . . . . . . . . .    B  ADDR  0080H.7   A   
P0_ALT. . . . . . . . . . . . . . . . .    D  ADDR  0095H     A   
P0_DIR. . . . . . . . . . . . . . . . .    D  ADDR  0094H     A   
P1. . . . . . . . . . . . . . . . . . .    D  ADDR  0090H     A   
AX51 MACRO ASSEMBLER  PAGING                                                                01/06/09 16:31:51 PAGE    13

P1_0. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.0   A   
P1_1. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.1   A   
P1_2. . . . . . . . . . . . . . . . . .    B  ADDR  0090H.2   A   
P1_ALT. . . . . . . . . . . . . . . . .    D  ADDR  0097H     A   
P1_DIR. . . . . . . . . . . . . . . . .    D  ADDR  0096H     A   
PAGE_ADDR_H . . . . . . . . . . . . . .    D  ADDR  000CH     R   SEG=?DT?__PAGING
PAGE_ADDR_L . . . . . . . . . . . . . .    D  ADDR  000EH     R   SEG=?DT?__PAGING
PCON. . . . . . . . . . . . . . . . . .    D  ADDR  0087H     A   
PS. . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.4   A   
PSW . . . . . . . . . . . . . . . . . .    D  ADDR  00D0H     A   
PT0 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.1   A   
PT1 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.3   A   
PT2 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.5   A   
PWDI. . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.4   A   
PWM . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.7   A   
PWMCON. . . . . . . . . . . . . . . . .    D  ADDR  00A9H     A   
PWMDUTY . . . . . . . . . . . . . . . .    D  ADDR  00AAH     A   
PWR_UP. . . . . . . . . . . . . . . . .    B  ADDR  00A0H.7   A   
PX0 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.0   A   
PX1 . . . . . . . . . . . . . . . . . .    B  ADDR  00B8H.2   A   
PX2 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.0   A   
PX3 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.1   A   
PX4 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.2   A   
PX5 . . . . . . . . . . . . . . . . . .    B  ADDR  00F8H.3   A   
RADIO . . . . . . . . . . . . . . . . .    D  ADDR  00A0H     A   
RB8 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.2   A   
RCAP2H. . . . . . . . . . . . . . . . .    D  ADDR  00CBH     A   
RCAP2L. . . . . . . . . . . . . . . . .    D  ADDR  00CAH     A   
RCLK. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.5   A   
REGX_CTRL . . . . . . . . . . . . . . .    D  ADDR  00ADH     A   
REGX_LSB. . . . . . . . . . . . . . . .    D  ADDR  00ACH     A   
REGX_MSB. . . . . . . . . . . . . . . .    D  ADDR  00ABH     A   
REN . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.4   A   
RI. . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.0   A   
RS0 . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.3   A   
RS1 . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.4   A   
RSTREAS . . . . . . . . . . . . . . . .    D  ADDR  00B1H     A   
RXD . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.1   A   
SBUF. . . . . . . . . . . . . . . . . .    D  ADDR  0099H     A   
SCON. . . . . . . . . . . . . . . . . .    D  ADDR  0098H     A   
SEG?243 . . . . . . . . . . . . . . . .    D  ADDR  0002H     R   SEG=?DT?MAIN?__PAGING
SM0 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.7   A   
SM1 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.6   A   
SM2 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.5   A   
SP. . . . . . . . . . . . . . . . . . .    D  ADDR  0081H     A   
SP_ADDR_H . . . . . . . . . . . . . . .    D  ADDR  0010H     R   SEG=?DT?__PAGING
SP_ADDR_L . . . . . . . . . . . . . . .    D  ADDR  0012H     R   SEG=?DT?__PAGING
SPC_FNC . . . . . . . . . . . . . . . .    D  ADDR  008FH     A   
SPI_CTRL. . . . . . . . . . . . . . . .    D  ADDR  00B3H     A   
SPI_DATA. . . . . . . . . . . . . . . .    D  ADDR  00B2H     A   
SPICLK. . . . . . . . . . . . . . . . .    D  ADDR  00B4H     A   
T0. . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.5   A   
T1. . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.6   A   
T1_1V2. . . . . . . . . . . . . . . . .    D  ADDR  00BCH     A   
T2. . . . . . . . . . . . . . . . . . .    B  ADDR  0090H.0   A   
T2_1V2. . . . . . . . . . . . . . . . .    D  ADDR  00BDH     A   
T2CON . . . . . . . . . . . . . . . . .    D  ADDR  00C8H     A   
TB8 . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.3   A   
TCLK. . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.4   A   
TCON. . . . . . . . . . . . . . . . . .    D  ADDR  0088H     A   
TEST_MODE . . . . . . . . . . . . . . .    D  ADDR  00B7H     A   
TF0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.5   A   
TF1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.7   A   
TF2 . . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.7   A   
TH0 . . . . . . . . . . . . . . . . . .    D  ADDR  008CH     A   
TH1 . . . . . . . . . . . . . . . . . .    D  ADDR  008DH     A   
AX51 MACRO ASSEMBLER  PAGING                                                                01/06/09 16:31:51 PAGE    14

TH2 . . . . . . . . . . . . . . . . . .    D  ADDR  00CDH     A   
TI. . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.1   A   
TICK_DV . . . . . . . . . . . . . . . .    D  ADDR  00B5H     A   
TL0 . . . . . . . . . . . . . . . . . .    D  ADDR  008AH     A   
TL1 . . . . . . . . . . . . . . . . . .    D  ADDR  008BH     A   
TL2 . . . . . . . . . . . . . . . . . .    D  ADDR  00CCH     A   
TMOD. . . . . . . . . . . . . . . . . .    D  ADDR  0089H     A   
TR0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.4   A   
TR1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.6   A   
TR2 . . . . . . . . . . . . . . . . . .    B  ADDR  00C8H.2   A   
TXD . . . . . . . . . . . . . . . . . .    B  ADDR  0080H.2   A   
WDTI. . . . . . . . . . . . . . . . . .    B  ADDR  00D8H.3   A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S).
